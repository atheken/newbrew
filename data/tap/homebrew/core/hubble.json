{
  "name": "hubble",
  "full_name": "hubble",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Network, Service & Security Observability for Kubernetes using eBPF",
  "license": "Apache-2.0",
  "homepage": "https://github.com/cilium/hubble",
  "versions": {
    "stable": "0.12.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/cilium/hubble/archive/refs/tags/v0.12.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "309a19c8b4bde3576797a23b8ea797c008111c99e5cdacb0cb40692348f76d53"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hubble/blobs/sha256:28aa511eeb1e616ab6219f656e9be876269adf51d1304d4c4b2883e474be4b12",
          "sha256": "28aa511eeb1e616ab6219f656e9be876269adf51d1304d4c4b2883e474be4b12"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hubble/blobs/sha256:6dbf576377f9f97878969f7ceea9bf012403a3ebcf2992b7254d6f5b35b64a4a",
          "sha256": "6dbf576377f9f97878969f7ceea9bf012403a3ebcf2992b7254d6f5b35b64a4a"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hubble/blobs/sha256:4a74c75b48d54287454aa9dd69914bc5af43445bc99519e816482d221ba83ac4",
          "sha256": "4a74c75b48d54287454aa9dd69914bc5af43445bc99519e816482d221ba83ac4"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hubble/blobs/sha256:1f599f82b778231c19cb80f92d94efb2bbf306ff0fbf248e13c34469b6b1404a",
          "sha256": "1f599f82b778231c19cb80f92d94efb2bbf306ff0fbf248e13c34469b6b1404a"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hubble/blobs/sha256:e4cf2b984e8227e311a54faeb44ed4758e98474a2a8632cb32e28e5a9ef742f0",
          "sha256": "e4cf2b984e8227e311a54faeb44ed4758e98474a2a8632cb32e28e5a9ef742f0"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hubble/blobs/sha256:98cc89eab078ec9fcb74f6275c8a4dd600aa37ed800a5017a714a61161a32537",
          "sha256": "98cc89eab078ec9fcb74f6275c8a4dd600aa37ed800a5017a714a61161a32537"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hubble/blobs/sha256:86570303a0835fbe606fbe44a266f2cfe00fde514328774e4807353f6d4cf522",
          "sha256": "86570303a0835fbe606fbe44a266f2cfe00fde514328774e4807353f6d4cf522"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/hubble.rb",
  "ruby_source_checksum": {
    "sha256": "630e4272ba4d138b53713ce82807c08c6242f4f4284ba94d96faa97810cda16c"
  },
  "date_added": "2021-07-26T13:02:13+00:00",
  "readme": " <picture>\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://cdn.jsdelivr.net/gh/cilium/hubble@main/Documentation/images/hubble_logo.png\" width=\"350\" alt=\"Hubble Logo\">\n   <img src=\"https://cdn.jsdelivr.net/gh/cilium/hubble@main/Documentation/images/hubble_logo-dark.png\" width=\"350\" alt=\"Hubble Logo\">\n</picture>\n\n[![License](https://img.shields.io/badge/License-Apache_2.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n----\n\n# Network, Service & Security Observability for Kubernetes\n\n- [What is Hubble?](#what-is-hubble)\n- [Getting Started](#getting-started)\n- [Features](#features)\n  - [Service Dependency Graph](#service-dependency-graph)\n  - [Metrics & Monitoring](#metrics--monitoring)\n  - [Flow Visibility](#flow-visibility)\n- [Get in touch / Community](#community)\n- [Authors](#authors)\n# What is Hubble?\n\nHubble is a fully distributed networking and security observability platform\nfor cloud native workloads. It is built on top of [Cilium] and [eBPF] to enable\ndeep visibility into the communication and behavior of services as well as the\nnetworking infrastructure in a completely transparent manner.\n\nHubble can answer questions such as:\n\n**Service dependencies & communication map:**\n * What services are communicating with each other? How frequently? What does\n   the service dependency graph look like?\n * What HTTP calls are being made? What Kafka topics does a service consume\n   from or produce to?\n\n**Operational monitoring & alerting:**\n * Is any network communication failing? Why is communication failing? Is it\n   DNS? Is it an application or network problem? Is the communication broken on\n   layer 4 (TCP) or layer 7 (HTTP)?\n * Which services have experienced a DNS resolution problems in the last 5\n   minutes? Which services have experienced an interrupted TCP connection\n   recently or have seen connections timing out? What is the rate of unanswered\n   TCP SYN requests?\n\n**Application monitoring:**\n * What is the rate of 5xx or 4xx HTTP response codes for a particular service\n   or across all clusters?\n * What is the 95th and 99th percentile latency between HTTP requests and\n   responses in my cluster? Which services are performing the worst? What is\n   the latency between two services?\n\n**Security observability:**\n * Which services had connections blocked due to network policy? What services\n   have been accessed from outside the cluster? Which services have resolved a\n   particular DNS name?\n\n## Why Hubble?\n\nThe Linux kernel technology [eBPF] is enabling visibility into systems and\napplications at a granularity and efficiency that was not possible before. It\ndoes so in a completely transparent way, without requiring the application to\nchange or for the application to hide information. By building on top of\n[Cilium], Hubble can leverage [eBPF] for visibility. By leveraging [eBPF], all\nvisibility is programmable and allows for a dynamic approach that minimizes\noverhead while providing deep and detailed insight where required. Hubble has\nbeen created and specifically designed to make best use of these new [eBPF]\npowers.\n\n## Releases\n\nThe Hubble CLI is backward compatible with all supported Cilium releases. For\nthis reason, only the latest Hubble CLI version is maintained.\n\n| Version                                              | Release Date         | Maintained | Supported Cilium Version | Artifacts                                                               |\n|------------------------------------------------------|----------------------|------------|--------------------------|-------------------------------------------------------------------------|\n| [v0.12](https://github.com/cilium/hubble/tree/v0.12) | 2023-07-10 (v0.12.0) | Yes        | Cilium 1.14 and older    | [GitHub Release](https://github.com/cilium/hubble/releases/tag/v0.12.0) |\n| [v0.11](https://github.com/cilium/hubble/tree/v0.11) | 2023-06-07 (v0.11.6) | No         | Cilium 1.13 and older    | [GitHub Release](https://github.com/cilium/hubble/releases/tag/v0.11.6) |\n| [v0.10](https://github.com/cilium/hubble/tree/v0.10) | 2022-06-22 (v0.10.0) | No         | Cilium 1.12 and older    | [GitHub Release](https://github.com/cilium/hubble/releases/tag/v0.10.0) |\n| [v0.9](https://github.com/cilium/hubble/tree/v0.9)   | 2021-11-30 (v0.9.0)  | No         | Cilium 1.11 and older    | [GitHub Release](https://github.com/cilium/hubble/releases/tag/v0.9.0)  |\n\n## Component Stability\n\nHubble project consists of several components (see Architecture section).\n\nWhile the core Hubble components have been running in production in multiple\nenvironments, new components continue to emerge as the project grows and\nexpands in scope.\n\nSome components, due to their relatively young age, are still considered beta\nand have to be used with caution in critical production workloads.\n\n| Component      | Area      | State  |\n|----------------|-----------|--------|\n| Hubble CLI     | Core      | Stable |\n| Hubble Server  | Core      | Stable |\n| Hubble Metrics | Core      | Stable |\n| Hubble Relay   | Multinode | Stable |\n| Hubble UI      | UI        | Beta   |\n\n## Architecture\n\n![Hubble Architecture](Documentation/images/hubble_arch.png)\n\n# Getting Started\n\n* [Introduction to Cilium & Hubble](https://docs.cilium.io/en/stable/overview/intro/)\n* [Networking and Security Observability with Hubble](https://docs.cilium.io/en/stable/gettingstarted/hubble/)\n\n# Features\n\n## Service Dependency Graph\n\nTroubleshooting microservices application connectivity is a challenging task.\nSimply looking at \"kubectl get pods\" does not indicate dependencies between\neach service or external APIs or databases.\n\nHubble enables zero-effort automatic discovery of the service dependency graph\nfor Kubernetes Clusters at L3/L4 and even L7, allowing user-friendly\nvisualization and filtering of those dataflows as a Service Map.\n\nSee [Hubble Service Map Tutorial](https://docs.cilium.io/en/stable/gettingstarted/hubble/)\nfor more examples.\n\n![Service Map](Documentation/images/servicemap.png)\n\n## Metrics & Monitoring\n\nThe metrics and monitoring functionality provides an overview of the state of\nsystems and allow to recognize patterns indicating failure and other scenarios\nthat require action. The following is a short list of example metrics, for a\nmore detailed list of examples, see the\n[Metrics Documentation](https://docs.cilium.io/en/stable/observability/metrics/).\n\n### Networking Behavior\n\n![Networking](Documentation/images/network_and_tcp.png)\n\n### Network Policy Observation\n\n![Network Policy](Documentation/images/network_policy_pod.png)\n\n### HTTP Request/Response Rate & Latency\n\n![HTTP](Documentation/images/http.png)\n\n### DNS Request/Response Monitoring\n\n![DNS](Documentation/images/dns.png)\n\n## Flow Visibility\n\nFlow visibility provides visibility into flow information on the network and\napplication protocol level. This enables visibility into individual TCP\nconnections, DNS queries, HTTP requests, Kafka communication, and much more.\n\n### DNS Resolution\n\nIdentifying pods which have received DNS response indicating failure:\n\n    hubble observe --since=1m -t l7 -j \\\n       | jq 'select(.l7.dns.rcode==3) | .destination.namespace + \"/\" + .destination.pod_name' \\\n       | sort | uniq -c | sort -r\n      42 \"starwars/jar-jar-binks-6f5847c97c-qmggv\"\n\n*Successful query & response:*\n\n    starwars/x-wing-bd86d75c5-njv8k            kube-system/coredns-5c98db65d4-twwdg      DNS Query deathstar.starwars.svc.cluster.local. A\n    kube-system/coredns-5c98db65d4-twwdg       starwars/x-wing-bd86d75c5-njv8k           DNS Answer \"10.110.126.213\" TTL: 3 (Query deathstar.starwars.svc.cluster.local. A)\n\n*Non-existent domain:*\n\n    starwars/jar-jar-binks-789c4b695d-ltrzm    kube-system/coredns-5c98db65d4-f4m8n      DNS Query unknown-galaxy.svc.cluster.local. A\n    starwars/jar-jar-binks-789c4b695d-ltrzm    kube-system/coredns-5c98db65d4-f4m8n      DNS Query unknown-galaxy.svc.cluster.local. AAAA\n    kube-system/coredns-5c98db65d4-twwdg       starwars/jar-jar-binks-789c4b695d-ltrzm   DNS Answer RCode: Non-Existent Domain TTL: 4294967295 (Query unknown-galaxy.starwars.svc.cluster.local. A)\n    kube-system/coredns-5c98db65d4-twwdg       starwars/jar-jar-binks-789c4b695d-ltrzm   DNS Answer RCode: Non-Existent Domain TTL: 4294967295 (Query unknown-galaxy.starwars.svc.cluster.local. AAAA)\n\n### HTTP Protocol\n\n*Successful request & response with latency information:*\n\n    starwars/x-wing-bd86d75c5-njv8k:53410      starwars/deathstar-695d8f7ddc-lvj84:80    HTTP/1.1 GET http://deathstar/\n    starwars/deathstar-695d8f7ddc-lvj84:80     starwars/x-wing-bd86d75c5-njv8k:53410     HTTP/1.1 200 1ms (GET http://deathstar/)\n\n### TCP/UDP Packets\n\n*Successful TCP connection:*\n\n    starwars/x-wing-bd86d75c5-njv8k:53410      starwars/deathstar-695d8f7ddc-lvj84:80    TCP Flags: SYN\n    deathstar.starwars.svc.cluster.local:80    starwars/x-wing-bd86d75c5-njv8k:53410     TCP Flags: SYN, ACK\n    starwars/x-wing-bd86d75c5-njv8k:53410      starwars/deathstar-695d8f7ddc-lvj84:80    TCP Flags: ACK, FIN\n    deathstar.starwars.svc.cluster.local:80    starwars/x-wing-bd86d75c5-njv8k:53410     TCP Flags: ACK, FIN\n\n*Connection timeout:*\n\n    starwars/r2d2-6694d57947-xwhtz:60948   deathstar.starwars.svc.cluster.local:8080     TCP Flags: SYN\n    starwars/r2d2-6694d57947-xwhtz:60948   deathstar.starwars.svc.cluster.local:8080     TCP Flags: SYN\n    starwars/r2d2-6694d57947-xwhtz:60948   deathstar.starwars.svc.cluster.local:8080     TCP Flags: SYN\n\n### Network Policy Behavior\n\n*Denied connection attempt:*\n\n    starwars/enterprise-5775b56c4b-thtwl:37800   starwars/deathstar-695d8f7ddc-lvj84:80(http)   Policy denied (L3)   TCP Flags: SYN\n    starwars/enterprise-5775b56c4b-thtwl:37800   starwars/deathstar-695d8f7ddc-lvj84:80(http)   Policy denied (L3)   TCP Flags: SYN\n    starwars/enterprise-5775b56c4b-thtwl:37800   starwars/deathstar-695d8f7ddc-lvj84:80(http)   Policy denied (L3)   TCP Flags: SYN\n\n### Specifying Raw Flow Filters\n\nHubble supports extensive set of filtering options that can be specified as a combination of\nallowlist and denylist. Hubble applies these filters as follows:\n\n    for each flow:\n      if flow does not match any of the allowlist filters:\n        continue\n      if flow matches any of the denylist filters:\n        continue\n      send flow to client\n\nYou can pass these filters to `hubble observe` command as\n[JSON-encoded](https://developers.google.com/protocol-buffers/docs/proto3#json)\n[FlowFilters](https://github.com/cilium/cilium/blob/v1.10.5/api/v1/flow/flow.proto#L348). For\nexample, to observe flows that match the following conditions:\n\n- Either the source or destination identity contains `k8s:io.kubernetes.pod.namespace=kube-system`\n  or `reserved:host` label, AND\n- Neither the source nor destination identity contains `k8s:k8s-app=kube-dns` label:\n\n      hubble observe \\\n        --allowlist '{\"source_label\":[\"k8s:io.kubernetes.pod.namespace=kube-system\",\"reserved:host\"]}' \\\n        --allowlist '{\"destination_label\":[\"k8s:io.kubernetes.pod.namespace=kube-system\",\"reserved:host\"]}' \\\n        --denylist '{\"source_label\":[\"k8s:k8s-app=kube-dns\"]}' \\\n        --denylist '{\"destination_label\":[\"k8s:k8s-app=kube-dns\"]}'\n\nAlternatively, you can also specify these flags as `HUBBLE_{ALLOWLIST,DENYLIST}` environment variables:\n\n    cat > allowlist.txt <<EOF\n    {\"source_label\":[\"k8s:io.kubernetes.pod.namespace=kube-system\",\"reserved:host\"]}\n    {\"destination_label\":[\"k8s:io.kubernetes.pod.namespace=kube-system\",\"reserved:host\"]}\n    EOF\n\n    cat > denylist.txt <<EOF\n    {\"source_label\":[\"k8s:k8s-app=kube-dns\"]}\n    {\"destination_label\":[\"k8s:k8s-app=kube-dns\"]}\n    EOF\n\n    HUBBLE_ALLOWLIST=$(cat allowlist.txt)\n    HUBBLE_DENYLIST=$(cat denylist.txt)\n    export HUBBLE_ALLOWLIST\n    export HUBBLE_DENYLIST\n\n    hubble observe\n\nNote that `--allowlist` and `--denylist` filters get included in the request **in addition to**\nregular flow filters like `--label` or `--namespace`. Use `--print-raw-filters` flag to verify\nthe exact filters that the Hubble CLI generates. For example:\n\n    % hubble observe --print-raw-filters \\\n        -t drop \\\n        -n kube-system \\\n        --not --label \"k8s:k8s-app=kube-dns\" \\\n        --allowlist '{\"source_label\":[\"k8s:k8s-app=my-app\"]}'\n    allowlist:\n    - '{\"source_pod\":[\"kube-system/\"],\"event_type\":[{\"type\":1}]}'\n    - '{\"destination_pod\":[\"kube-system/\"],\"event_type\":[{\"type\":1}]}'\n    - '{\"source_label\":[\"k8s:k8s-app=my-app\"]}'\n    denylist:\n    - '{\"source_label\":[\"k8s:k8s-app=kube-dns\"]}'\n    - '{\"destination_label\":[\"k8s:k8s-app=kube-dns\"]}'\n\nThe output YAML can be saved to a file and passed to `hubble observe` command with `--config`\nflag. For example:\n\n    % hubble observe --print-raw-filters --allowlist '{\"source_label\":[\"k8s:k8s-app=my-app\"]}' > filters.yaml\n    % hubble observe --config ./filters.yaml\n\n# Community\n\nJoin the [Cilium Slack #hubble channel](https://cilium.herokuapp.com/) to chat\nwith Cilium Hubble developers and other Cilium / Hubble users. This is a good\nplace to learn about Hubble and Cilium, ask questions, and share your\nexperiences.\n\nLearn more about [Cilium].\n\n# Authors\n\nHubble is an open source project licensed under the [Apache License]. Everybody\nis welcome to contribute. The project is following the [Governance Rules] of\nthe [Cilium] project. See [CONTRIBUTING] for instructions on how to contribute\nand details of the Code of Conduct.\n\n\n[Cilium]: https://github.com/cilium/cilium\n[eBPF]: https://ebpf.io\n[Apache License]: https://www.apache.org/licenses/LICENSE-2.0\n[Governance Rules]: https://docs.cilium.io/en/stable/contributing/development/contributing_guide/\n[CONTRIBUTING]: CONTRIBUTING.md"
}
