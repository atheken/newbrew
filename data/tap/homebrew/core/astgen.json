{
  "name": "astgen",
  "full_name": "astgen",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Generate AST in json format for JS/TS",
  "license": "Apache-2.0",
  "homepage": "https://github.com/joernio/astgen",
  "versions": {
    "stable": "3.2.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/joernio/astgen/archive/refs/tags/v3.2.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "414afa102fb62ef8d4b2085e53e3b466c1e330188c392fbd616fba900b3548ea"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/astgen/blobs/sha256:745ca1dfe7840ace17f24165c652376b9097428c4e6f9c3a535c4eb195478da4",
          "sha256": "745ca1dfe7840ace17f24165c652376b9097428c4e6f9c3a535c4eb195478da4"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/astgen/blobs/sha256:745ca1dfe7840ace17f24165c652376b9097428c4e6f9c3a535c4eb195478da4",
          "sha256": "745ca1dfe7840ace17f24165c652376b9097428c4e6f9c3a535c4eb195478da4"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/astgen/blobs/sha256:745ca1dfe7840ace17f24165c652376b9097428c4e6f9c3a535c4eb195478da4",
          "sha256": "745ca1dfe7840ace17f24165c652376b9097428c4e6f9c3a535c4eb195478da4"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/astgen/blobs/sha256:745ca1dfe7840ace17f24165c652376b9097428c4e6f9c3a535c4eb195478da4",
          "sha256": "745ca1dfe7840ace17f24165c652376b9097428c4e6f9c3a535c4eb195478da4"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/astgen/blobs/sha256:745ca1dfe7840ace17f24165c652376b9097428c4e6f9c3a535c4eb195478da4",
          "sha256": "745ca1dfe7840ace17f24165c652376b9097428c4e6f9c3a535c4eb195478da4"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/astgen/blobs/sha256:745ca1dfe7840ace17f24165c652376b9097428c4e6f9c3a535c4eb195478da4",
          "sha256": "745ca1dfe7840ace17f24165c652376b9097428c4e6f9c3a535c4eb195478da4"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/astgen/blobs/sha256:dd60603fc6d722fe83e7e6658d8bdbc1902fd286df5b136ce3278607995c76c5",
          "sha256": "dd60603fc6d722fe83e7e6658d8bdbc1902fd286df5b136ce3278607995c76c5"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "node"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/astgen.rb",
  "ruby_source_checksum": {
    "sha256": "87643450cb3c864ed84400ae3bdd6160008f0a007c0f55268f430e27e8ff0706"
  },
  "date_added": "2023-02-11T12:07:39+00:00",
  "readme": "# AST generator\n\nThis script creates Abstract Syntax Tree (AST) of all JS/TS files in JSON format.\nThe AST is created by using the bundled babel parser (for JavaScript, TypeScript).\nType maps are generated using the Typescript compiler / type checker API.\n\n## Supported languages\n\n| Language   | Tool used                   | Notes         |\n| ---------- | --------------------------- | ------------- |\n| JavaScript | babel                       | types via tsc |\n| TypeScript | babel                       | types via tsc |\n| Vue        | babel                       |               |\n| JSX        | babel                       |               |\n| TSX        | babel                       |               |\n\n## Usage\n\n## Building\n\n```bash\nyarn install\n```\n\nThis will invoke `pgk` after `yarn install` and generates a native binary for Windows, MacOS, and Linux.\n\n## Getting Help\n\n```bash\nbin/astgen -h\nOptions:\n  -v, --version  Print version number                                  [boolean]\n  -i, --src      Source directory                                 [default: \".\"]\n  -o, --output   Output directory for generated AST json files\n                                                            [default: \"ast_out\"]\n  -t, --type     Project type. Default auto-detect\n  -r, --recurse  Recurse mode suitable for mono-repos  [boolean] [default: true]\n  -h             Show help                                             [boolean]\n```\n\n## Example\n\nNavigate to the project and run `astgen` command.\n\n```bash\ncd <path to project>\nastgen\n```\n\nTo specify the project type and the path to the project.\n\n```bash\nastgen -t js -i <path to project>\nastgen -t vue -i <path containing .vue files>\n```"
}
