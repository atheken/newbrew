{
  "name": "termbox",
  "full_name": "termbox",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Library for writing text-based user interfaces",
  "license": "MIT",
  "homepage": "https://github.com/termbox/termbox",
  "versions": {
    "stable": "1.1.4",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/termbox/termbox/archive/refs/tags/v1.1.4.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "402fa1b353882d18e8ddd48f9f37346bbb6f5277993d3b36f1fc7a8d6097ee8a"
    },
    "head": {
      "url": "https://github.com/termbox/termbox.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/termbox/blobs/sha256:1c91ef6f8297e7e77925b8810b50c495ee1fa90907aeafb540993c83421534a1",
          "sha256": "1c91ef6f8297e7e77925b8810b50c495ee1fa90907aeafb540993c83421534a1"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/termbox/blobs/sha256:a1371f4a993d30d381ab3bf5ea2fda669e23f0ea982c3de4c6bf8b01a2ec1747",
          "sha256": "a1371f4a993d30d381ab3bf5ea2fda669e23f0ea982c3de4c6bf8b01a2ec1747"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/termbox/blobs/sha256:ed78a6e1ccf8220eea8b25a1d836c72eb3c505f01d1886e367dd4563316f7ac3",
          "sha256": "ed78a6e1ccf8220eea8b25a1d836c72eb3c505f01d1886e367dd4563316f7ac3"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/termbox/blobs/sha256:1fa6ac18b01cd55874c1cb9e1d0cdc2e83a017a0888dfed8a1417327fc6c5faf",
          "sha256": "1fa6ac18b01cd55874c1cb9e1d0cdc2e83a017a0888dfed8a1417327fc6c5faf"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/termbox/blobs/sha256:b1f84d69e57749e830ca1b95c627a8a0eae4f743c5fda140f6c73df685cecd57",
          "sha256": "b1f84d69e57749e830ca1b95c627a8a0eae4f743c5fda140f6c73df685cecd57"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/termbox/blobs/sha256:31e50d5d18789baf3012c36fc3230e7268b044db64c7466e9c1b2ac5e0d62eb0",
          "sha256": "31e50d5d18789baf3012c36fc3230e7268b044db64c7466e9c1b2ac5e0d62eb0"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/termbox/blobs/sha256:1366318342e7c939466f699a6d5116b8d5581af33bddc0724d4c9a622e1f0d75",
          "sha256": "1366318342e7c939466f699a6d5116b8d5581af33bddc0724d4c9a622e1f0d75"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/termbox/blobs/sha256:96b1a190d17aaf736b5a592ef9a594458d58871360af83cfea7823881d4a1a1d",
          "sha256": "96b1a190d17aaf736b5a592ef9a594458d58871360af83cfea7823881d4a1a1d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/termbox.rb",
  "ruby_source_checksum": {
    "sha256": "97fd69baf0ef4994bb04ee915b2032598678edd6d9d41f01cce17622aab64983"
  },
  "date_added": "2016-10-03T23:35:00+02:00",
  "readme": "# termbox\n\n*New projects should consider using [termbox2][0], a rewrite of termbox with\nstricter error checking and some additional features.*\n\ntermbox is a minimal, legacy-free alternative to ncurses, suitable for building\ntext-based user interfaces.\n\nThis repo represents an effort to recentralize termbox development as the\noriginal repo is no longer maintained.\n\n### Building\n\nUse `make` to build and `make install` to install.\n\nThe `install` target supports `prefix` and `DESTDIR` if needed.\n\n### Usage\n\nThe termbox API consists of the following functions.\n\n```\ntb_init() // initialization\ntb_shutdown() // shutdown\n\ntb_width() // width of the terminal screen\ntb_height() // height of the terminal screen\n\ntb_clear() // clear buffer\ntb_present() // sync internal buffer with terminal\n\ntb_put_cell()\ntb_change_cell()\ntb_blit() // drawing functions\n\ntb_select_input_mode() // change input mode\ntb_peek_event() // peek a keyboard event\ntb_poll_event() // wait for a keyboard event\n```\n\nSee termbox.h for more details.\n\n### Links\n\nMake a pull request if you would like your termbox project listed here.\n\n##### Language bindings\n\n- https://github.com/nsf/termbox - Python\n- https://github.com/adsr/termbox-php - PHP\n- https://github.com/gchp/rustbox - Rust\n- https://github.com/cl-fui/cl-termbox - Common Lisp\n- https://github.com/zyedidia/termbox-d - D\n- https://github.com/dduan/Termbox - Swift\n- https://github.com/andrewsuzuki/termbox-crystal - Crystal\n- https://github.com/jgoldfar/Termbox.jl - Julia\n- https://github.com/termbox/termbox-haskell - Haskell\n- https://github.com/dom96/nimbox - Nim\n- https://github.com/ndreynolds/ex_termbox - Elixir\n- https://github.com/bmsauer/termbox-ada - Ada\n- https://github.com/luxint/termbox - newLISP\n- https://github.com/sanko/Termbox.pm - Perl\n\n##### Other implementations\n\n- https://github.com/nsf/termbox-go - Go pure termbox implementation\n\n##### Applications\n\n- https://github.com/adsr/mle - a small, flexible terminal-based text editor\n- https://github.com/colinta/Ashen - framework for building terminal applications based on the Elm architecture\n- https://github.com/afify/sfm - simple file manager for unix-like systems\n\n### Changes\n\nv1.1.3:\n\n- Tagging master as v1.1.3 before forking\n\nv1.1.2:\n\n- Properly include changelog into the tagged version commit. I.e. I messed up\n  by tagging v1.1.1 and describing it in changelog after tagged commit. This\n  commit marked as v1.1.2 includes changelog for both v1.1.1 and v1.1.2. There\n  are no code changes in this minor release.\n\nv1.1.1:\n\n- Ncurses 6.1 compatibility fix. See https://github.com/nsf/termbox-go/issues/185.\n\nv1.1.0:\n\n- API: tb_width() and tb_height() are guaranteed to be negative if the termbox\n  wasn't initialized.\n- API: Output mode switching is now possible, adds 256-color and grayscale color\n  modes.\n- API: Better tb_blit() function. Thanks, Gunnar ZÃ¶tl <gz@tset.de>.\n- API: New tb_cell_buffer() function for direct back buffer access.\n- API: Add new init function variants which allow using arbitrary file\n  descriptor as a terminal.\n- Improvements in input handling code.\n- Calling tb_shutdown() twice is detected and results in abort() to discourage\n  doing so.\n- Mouse event handling is ported from termbox-go.\n- Paint demo port from termbox-go to demonstrate mouse handling capabilities.\n- Bug fixes in code and documentation.\n\nv1.0.0:\n\n- Remove the Go directory. People generally know about termbox-go and where\n  to look for it.\n- Remove old terminfo-related python scripts and backport the new one from\n  termbox-go.\n- Remove cmake/make-based build scripts, use waf.\n- Add a simple terminfo database parser. Now termbox prefers using the\n  terminfo database if it can be found. Otherwise it still has a fallback\n  built-in database for most popular terminals.\n- Some internal code cleanups and refactorings. The most important change is\n  that termbox doesn't leak meaningless exported symbols like 'keys' and\n  'funcs' now. Only the ones that have 'tb_' as a prefix are being exported.\n- API: Remove unsigned ints, use plain ints instead.\n- API: Rename UTF-8 functions 'utf8_*' -> 'tb_utf8_*'.\n- API: TB_DEFAULT equals 0 now, it means you can use attributes alones\n  assuming the default color.\n- API: Add TB_REVERSE.\n- API: Add TB_INPUT_CURRENT.\n- Move python module to its own directory and update it due to changes in the\n  termbox library.\n\n\n[0]: https://github.com/termbox/termbox2"
}
