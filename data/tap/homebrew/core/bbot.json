{
  "name": "bbot",
  "full_name": "bbot",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "OSINT automation tool",
  "license": "GPL-3.0-or-later",
  "homepage": "https://github.com/blacklanternsecurity/bbot",
  "versions": {
    "stable": "1.0.5.1665",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/0b/df/4afd9aeca87c7f7c1ad2a15368b9fa27c3892e3923f8c3ea4614e6cb8956/bbot-1.0.5.1665.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "5ec660a711afbafb4a1626b1a28ecc1b05bad9e40c1c997e76cb511cd9da1fb7"
    }
  },
  "revision": 2,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/bbot/blobs/sha256:1289cfda2128547292dec52f91cb22a5ce2b1f2985d54725d1b59085b899858f",
          "sha256": "1289cfda2128547292dec52f91cb22a5ce2b1f2985d54725d1b59085b899858f"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/bbot/blobs/sha256:7575bc78977c5d8900a6c6f9218f88176a2b29800a6127c2f8236075298cafdb",
          "sha256": "7575bc78977c5d8900a6c6f9218f88176a2b29800a6127c2f8236075298cafdb"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/bbot/blobs/sha256:f28d5a7e4773375d17b91ac5c62818a20794e218821a12cf0afa2f0cf83582c7",
          "sha256": "f28d5a7e4773375d17b91ac5c62818a20794e218821a12cf0afa2f0cf83582c7"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/bbot/blobs/sha256:3f0b47df3ec20cbc6ce8b4b33c15453780402f855263e9c1b7c80cd10c62d24c",
          "sha256": "3f0b47df3ec20cbc6ce8b4b33c15453780402f855263e9c1b7c80cd10c62d24c"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/bbot/blobs/sha256:e4c1d0675bef9ed028d1a29a4173a8daf8ecf5bf204173f18a728184bf64592e",
          "sha256": "e4c1d0675bef9ed028d1a29a4173a8daf8ecf5bf204173f18a728184bf64592e"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/bbot/blobs/sha256:e74608037042ecabcb8c49182ffe57510a6858135f76fb8dc8b1e33564bbc130",
          "sha256": "e74608037042ecabcb8c49182ffe57510a6858135f76fb8dc8b1e33564bbc130"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bbot/blobs/sha256:76a2faf4096ccaf6321f26a591b0ac23f0eeb5d6842b1d0922be6bb89e132de6",
          "sha256": "76a2faf4096ccaf6321f26a591b0ac23f0eeb5d6842b1d0922be6bb89e132de6"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake",
    "openjdk",
    "pkg-config",
    "rust"
  ],
  "dependencies": [
    "cffi",
    "docutils",
    "openssl@3",
    "pycparser",
    "python-typing-extensions",
    "python@3.11",
    "pyyaml",
    "six"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/bbot.rb",
  "ruby_source_checksum": {
    "sha256": "accf82774bd7e2d03aca3b38ba8d342cf23230a0a8e39be93bf2b8b58c04f139"
  },
  "date_added": "2023-06-30T16:31:02-07:00",
  "readme": "[![bbot_banner](https://user-images.githubusercontent.com/20261699/158000235-6c1ace81-a267-4f8e-90a1-f4c16884ebac.png)](https://github.com/blacklanternsecurity/bbot)\n\n# BEEÂ·bot\n\n### OSINT automation for hackers.\n\n[![Python Version](https://img.shields.io/badge/python-3.9+-FF8400)](https://www.python.org) [![Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) [![License](https://img.shields.io/badge/license-GPLv3-FF8400.svg)](https://github.com/blacklanternsecurity/bbot/blob/dev/LICENSE) [![DEF CON Demo Labs 2023](https://img.shields.io/badge/DEF%20CON%20Demo%20Labs-2023-FF8400.svg)](https://forum.defcon.org/node/246338) [![Tests](https://github.com/blacklanternsecurity/bbot/actions/workflows/tests.yml/badge.svg?branch=stable)](https://github.com/blacklanternsecurity/bbot/actions?query=workflow%3A\"tests\") [![Codecov](https://codecov.io/gh/blacklanternsecurity/bbot/branch/dev/graph/badge.svg?token=IR5AZBDM5K)](https://codecov.io/gh/blacklanternsecurity/bbot) [![Pypi Downloads](https://img.shields.io/pypi/dm/bbot)](https://pypi.org/project/bbot) [![Discord](https://img.shields.io/discord/859164869970362439)](https://discord.com/invite/PZqkgxu5SA)\n\nBBOT (Bighuge BLS OSINT Tool) is a modular, recursive OSINT framework that can execute the entire OSINT workflow in a single command.\n\nBBOT is inspired by [Spiderfoot](https://github.com/smicallef/spiderfoot) but takes it to the next level with features like multi-target scans, lightning-fast asyncio performance, and NLP-powered subdomain mutations. It offers a wide range of functionality, including subdomain enumeration, port scanning, web screenshots, vulnerability scanning, and much more. \n\n![subdomain-stats-boeing](https://github.com/blacklanternsecurity/bbot/assets/20261699/de0154c1-476e-4337-9599-45a1c5e0e78b)\n\nBBOT typically outperforms other subdomain enumeration tools by 20-25%. To learn how this is possible, see [How It Works](https://www.blacklanternsecurity.com/bbot/how_it_works/).\n\n## Full Documentation [Here](https://www.blacklanternsecurity.com/bbot/).\n\n## Installation ([pip](https://pypi.org/project/bbot/))\n\nFor more installation methods including [Docker](https://hub.docker.com/r/blacklanternsecurity/bbot), see [Installation](https://www.blacklanternsecurity.com/bbot/#installation).\n\n```bash\n# Prerequisites:\n# - Linux (Windows and macOS are *not* supported)\n# - Python 3.9 or newer\n\n# stable version\npipx install bbot\n\n# bleeding edge (dev branch)\npipx install --pip-args '\\--pre' bbot\n\nbbot --help\n```\n\n## Example Commands\n\nScan output, logs, etc. are saved to `~/.bbot`. For more detailed examples and explanations, see [Scanning](https://www.blacklanternsecurity.com/bbot/scanning).\n\n<!-- BBOT EXAMPLE COMMANDS -->\n**Subdomains:**\n\n```bash\n# Perform a full subdomain enumeration on evilcorp.com\nbbot -t evilcorp.com -f subdomain-enum\n```\n\n**Subdomains (passive only):**\n\n```bash\n# Perform a passive-only subdomain enumeration on evilcorp.com\nbbot -t evilcorp.com -f subdomain-enum -rf passive\n```\n\n**Subdomains + port scan + web screenshots:**\n\n```bash\n# Port-scan every subdomain, screenshot every webpage, output to current directory\nbbot -t evilcorp.com -f subdomain-enum -m nmap gowitness -n my_scan -o .\n```\n\n**Subdomains + basic web scan:**\n\n```bash\n# A basic web scan includes wappalyzer, robots.txt, and other non-intrusive web modules\nbbot -t evilcorp.com -f subdomain-enum web-basic\n```\n\n**Web spider:**\n\n```bash\n# Crawl www.evilcorp.com up to a max depth of 2, automatically extracting emails, secrets, etc.\nbbot -t www.evilcorp.com -m httpx robots badsecrets secretsdb -c web_spider_distance=2 web_spider_depth=2\n```\n\n**Everything everywhere all at once:**\n\n```bash\n# Subdomains, emails, cloud buckets, port scan, basic web, web screenshots, nuclei\nbbot -t evilcorp.com -f subdomain-enum email-enum cloud-enum web-basic -m nmap gowitness nuclei --allow-deadly\n```\n<!-- END BBOT EXAMPLE COMMANDS -->\n\n## Targets\n\nBBOT accepts an unlimited number of targets. You can specify targets either directly on the command line or in files (or both!). Targets can be any of the following:\n\n- `DNS_NAME` (`evilcorp.com`)\n- `IP_ADDRESS` (`1.2.3.4`)\n- `IP_RANGE` (`1.2.3.0/24`)\n- `OPEN_TCP_PORT` (`192.168.0.1:80`)\n- `URL` (`https://www.evilcorp.com`)\n\nFor more information, see [Targets](https://www.blacklanternsecurity.com/bbot/scanning/#targets-t). To learn how BBOT handles scope, see [Scope](https://www.blacklanternsecurity.com/bbot/scanning/#scope).\n\n## BBOT as a Python library\n\n**Synchronous**\n\n```python\nfrom bbot.scanner import Scanner\n\n# any number of targets can be specified\nscan = Scanner(\"example.com\", \"scanme.nmap.org\", modules=[\"nmap\", \"sslcert\"])\nfor event in scan.start():\n    print(event.json())\n```\n\n**Asynchronous**\n\n```python\nfrom bbot.scanner import Scanner\n\nasync def main():\n    scan = Scanner(\"example.com\", \"scanme.nmap.org\", modules=[\"nmap\", \"sslcert\"])\n    async for event in scan.async_start():\n        print(event.json())\n\nimport asyncio\nasyncio.run(main())\n```\n\n## Documentation\n\n<!-- BBOT DOCS TOC -->\n- **Basics**\n    - [Getting Started](https://www.blacklanternsecurity.com/bbot/)\n    - [How it Works](https://www.blacklanternsecurity.com/bbot/how_it_works)\n    - [Comparison to Other Tools](https://www.blacklanternsecurity.com/bbot/comparison)\n- **Scanning**\n    - [Scanning Overview](https://www.blacklanternsecurity.com/bbot/scanning/)\n    - [Events](https://www.blacklanternsecurity.com/bbot/scanning/events)\n    - [Output](https://www.blacklanternsecurity.com/bbot/scanning/output)\n    - [Tips and Tricks](https://www.blacklanternsecurity.com/bbot/scanning/tips_and_tricks)\n    - [Advanced Usage](https://www.blacklanternsecurity.com/bbot/scanning/advanced)\n    - [Configuration](https://www.blacklanternsecurity.com/bbot/scanning/configuration)\n- **Modules**\n    - [List of Modules](https://www.blacklanternsecurity.com/bbot/modules/list_of_modules)\n    - [Nuclei](https://www.blacklanternsecurity.com/bbot/modules/nuclei)\n- **Contribution**\n    - [How to Write a Module](https://www.blacklanternsecurity.com/bbot/contribution)\n- **Misc**\n    - [Release History](https://www.blacklanternsecurity.com/bbot/release_history)\n    - [Troubleshooting](https://www.blacklanternsecurity.com/bbot/troubleshooting)\n<!-- END BBOT DOCS TOC -->\n\n## Acknowledgements\n\nThanks to these amazing people for contributing to BBOT! :heart:\n\nIf you're interested in contributing to BBOT, or just curious how it works under the hood, see [Contribution](https://www.blacklanternsecurity.com/bbot/contribution/).\n\n<p align=\"center\">\n<a href=\"https://github.com/blacklanternsecurity/bbot/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=blacklanternsecurity/bbot&max=500\">\n</a>\n</p>\n\nSpecial thanks to the following people who made BBOT possible:\n\n- @TheTechromancer for creating [BBOT](https://github.com/blacklanternsecurity/bbot)\n- @liquidsec for his extensive work on BBOT's web hacking features, including [badsecrets](https://github.com/blacklanternsecurity/badsecrets)\n- Steve Micallef (@smicallef) for creating Spiderfoot\n- @kerrymilan for his Neo4j and Ansible expertise\n- Aleksei Kornev (@alekseiko) for allowing us ownership of the bbot Pypi repository <3"
}
