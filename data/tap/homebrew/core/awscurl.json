{
  "name": "awscurl",
  "full_name": "awscurl",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Curl like simplicity to access AWS resources",
  "license": "MIT",
  "homepage": "https://github.com/okigan/awscurl",
  "versions": {
    "stable": "0.29",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/80/f4/95935ad7041ba008221ce81b698963c8be0c5c97e6fcfd86e0e2009ebacd/awscurl-0.29.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "5e1ecd0ab7b014de697a1e161fa483c2263d16c3e156a81bdc8b9a9c2d0ba3f3"
    },
    "head": {
      "url": "https://github.com/okigan/awscurl.git",
      "branch": "master"
    }
  },
  "revision": 3,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/awscurl/blobs/sha256:4d1d694e26747172d960c7dcdd70f11b16a78f48af37ac6055567fb9cd5b8649",
          "sha256": "4d1d694e26747172d960c7dcdd70f11b16a78f48af37ac6055567fb9cd5b8649"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/awscurl/blobs/sha256:e5cbc9cee943004aa5d1239da928f78397ce7a9068c189e356fc6aaa21afa04e",
          "sha256": "e5cbc9cee943004aa5d1239da928f78397ce7a9068c189e356fc6aaa21afa04e"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/awscurl/blobs/sha256:0de5ee295ae8963a7244040e95ed8a80d25e64396ce87d7994006b6ab8701128",
          "sha256": "0de5ee295ae8963a7244040e95ed8a80d25e64396ce87d7994006b6ab8701128"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/awscurl/blobs/sha256:2d8e161b893d7c93666068811b6ead7f30063f44a0d408641f8d45c39fe87aef",
          "sha256": "2d8e161b893d7c93666068811b6ead7f30063f44a0d408641f8d45c39fe87aef"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/awscurl/blobs/sha256:3dd6b6b6dc1e6a4428cc2c43d65349aadafb59950698ddeb1486369ed84b7402",
          "sha256": "3dd6b6b6dc1e6a4428cc2c43d65349aadafb59950698ddeb1486369ed84b7402"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/awscurl/blobs/sha256:be0885f4f32669db15079e36599f7cf31a320d9bac46ea063382e9e54ea255d1",
          "sha256": "be0885f4f32669db15079e36599f7cf31a320d9bac46ea063382e9e54ea255d1"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/awscurl/blobs/sha256:05cf509dd968dc35944290953897b7999eee59dfeb35549e88b40ae5cf5de7f2",
          "sha256": "05cf509dd968dc35944290953897b7999eee59dfeb35549e88b40ae5cf5de7f2"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "pkg-config",
    "rust"
  ],
  "dependencies": [
    "cffi",
    "openssl@3",
    "pycparser",
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "libffi"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/awscurl.rb",
  "ruby_source_checksum": {
    "sha256": "ca8f832ffc4b65a3e900e51f4477e2751cc50c282cd1ec191e702a915604a628"
  },
  "date_added": "2020-01-12T12:12:25+01:00",
  "readme": "# awscurl [![Donate](https://img.shields.io/badge/donate-github-orange.svg?style=flat-square)](https://github.com/sponsors/okigan) [![Donate](https://img.shields.io/badge/donate-paypal-orange.svg?style=flat-square)](https://www.paypal.com/donate/?business=UDN4FL55J34QC&amount=25) [![Donate](https://img.shields.io/badge/donate-buy_me_a_coffee-orange.svg?style=flat-square)](https://www.buymeacoffee.com/okigan)\n\n[![PyPI](https://img.shields.io/pypi/v/awscurl.svg)](https://pypi.python.org/pypi/awscurl)\n[![Build Status](https://github.com/okigan/awscurl/actions/workflows/pythonapp.yml/badge.svg)](https://github.com/okigan/awscurl)\n[![Docker Hub](https://img.shields.io/docker/pulls/okigan/awscurl.svg)](https://hub.docker.com/r/okigan/awscurl)\n![CI badge](https://github.com/okigan/awscurl/workflows/CI/badge.svg?branch=master)\n\n[![Edit with gitpod](https://img.shields.io/badge/edit--with-gitpod-blue.svg?style=flat-square)](https://gitpod.io/#https://github.com/okigan/awscurl)\n[![Edit with vscode](https://img.shields.io/badge/edit--with-vscode-blue.svg?style=flat-square)](https://vscode.dev/github/okigan/awscurl)\n[![Edit with github codespaces](https://img.shields.io/badge/edit--with-codespaces-blue.svg?style=flat-square)](https://github.dev/okigan/awscurl)\n\ncurl-like tool with AWS Signature Version 4 request signing.\n\n## Features\n\n* performs requests to AWS services with request signing using curl interface\n* supports IAM profile credentials\n\n## Overview\n\nRequests to AWS API must be signed (see [Signing AWS API Requests](http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html))\nautomates the process of signing and makes requests to AWS as simple as a standard curl command.\n\n## Installation\n\n```sh\npip install awscurl\n```\n  \n### Installation from source (bleeding edge)\n\n```sh\npip install git+https://github.com/okigan/awscurl\n```\n\n### Installation via Homebrew for MacOS\n\n```sh\nbrew install awscurl\n```\n\n#### Running via Docker\n\n```sh\ndocker pull okigan/awscurl # or via docker pull ghcr.io/okigan/awscurl \n```\n\n  or via Github docker registry\n\n```sh\ndocker pull ghcr.io/okigan/awscurl \n```\n\n  then\n\n  ```sh\n  $ docker run --rm -it okigan/awscurl --access_key ACCESS_KEY  --secret_key SECRET_KEY --service s3 s3://...\n\n  # or allow access to local credentials as following\n  $ docker run --rm -it -v \"$HOME/.aws:/root/.aws\" okigan/awscurl --service s3 s3://...\n  ```\n\n  To shorten the length of docker commands use the following alias:\n\n  ```sh\n  alias awscurl='docker run --rm -ti -v \"$HOME/.aws:/root/.aws\" -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_SECURITY_TOKEN -e AWS_PROFILE okigan/awscurl'\n  ```\n\n  This will allow you to run awscurl from within a Docker container as if it was installed on the host system:\n\n  ```sh\n  awscurl\n  ```\n\n## Examples\n\n* Call S3: List bucket content\n\n  ```sh\n  $ awscurl --service s3 'https://awscurl-sample-bucket.s3.amazonaws.com' | tidy -xml -iq\n  <?xml version=\"1.0\" encoding=\"utf-8\"?>\n  <ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">\n    <Name>awscurl-sample-bucket</Name>\n    <Prefix></Prefix>\n    <Marker></Marker>\n    <MaxKeys>1000</MaxKeys>\n    <IsTruncated>false</IsTruncated>\n    <Contents>\n      <Key>awscurl-sample-file.txt</Key>\n      <LastModified>2017-07-25T21:27:38.000Z</LastModified>\n      <ETag>\"d41d8cd98f00b204e9800998ecf8427e\"</ETag>\n      <Size>0</Size>\n      <StorageClass>STANDARD</StorageClass>\n    </Contents>\n  </ListBucketResult>\n  ```\n\n* Call EC2:\n\n  ```sh\n  $ awscurl --service ec2 'https://ec2.amazonaws.com?Action=DescribeRegions&Version=2013-10-15' | tidy -xml -iq \n  <?xml version=\"1.0\" encoding=\"utf-8\"?>\n  <DescribeRegionsResponse xmlns=\"http://ec2.amazonaws.com/doc/2013-10-15/\">\n\n    <requestId>96511ccd-2d6d-4d63-ad9b-6be6f2c9874d</requestId>\n    <regionInfo>\n      <item>\n        <regionName>eu-north-1</regionName>\n        <regionEndpoint>ec2.eu-north-1.amazonaws.com</regionEndpoint>\n      </item>\n      <item>\n        <regionName>ap-south-1</regionName>\n        <regionEndpoint>ec2.ap-south-1.amazonaws.com</regionEndpoint>\n      </item>\n    </regionInfo>\n  </DescribeRegionsResponse>\n  ```\n\n* Call API Gateway:\n\n  ```sh\n  $ awscurl --service execute-api -X POST -d @request.json \\\n    https://<prefix>.execute-api.us-east-1.amazonaws.com/<resource>\n  ```\n\n## Options\n\n```sh\nusage: awscurl [-h] [-v] [-i] [-X REQUEST] [-d DATA] [-H HEADER]\n                  [--region REGION] [--service SERVICE]\n                  [--profile AWS_PROFILE]\n                  [--access_key ACCESS_KEY] [--secret_key SECRET_KEY]\n                  [--security_token SECURITY_TOKEN]\n                  uri\n\nCurl AWS request signing If an arg is specified in more than one place, then\ncommand-line values override environment variables which override defaults.\n\npositional arguments:\n  uri\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         verbose flag (default: False)\n  -i, --include         include headers in response (default: False)\n  -X REQUEST, --request REQUEST\n                        Specify request command to use (default: GET)\n  -d DATA, --data DATA  HTTP POST data (default: )\n  -H HEADER, --header HEADER\n                        HTTP POST data (default: None)\n  --region REGION       AWS region (default: us-east-1)\n  --profile PROFILE     [env var: AWS_PROFILE] (default: default)\n  --service SERVICE     AWS service (default: execute-api)\n  --access_key ACCESS_KEY\n                        [env var: AWS_ACCESS_KEY_ID] (default: None)\n  --secret_key SECRET_KEY\n                        [env var: AWS_SECRET_ACCESS_KEY] (default: None)\n  --security_token SECURITY_TOKEN\n                        [env var: AWS_SECURITY_TOKEN] (default: None)\n\n```\n\nIf you do not specify the `--access_key` or `--secret_key`\n(or environment variables), `awscurl` will attempt to use\nthe credentials you set in `~/.aws/credentials`. If you\ndo not specify a `--profile` or `AWS_PROFILE`, `awscurl`\nuses `default`.\n\n## Who uses awscurl\n\n* [AWS Documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html)\n* [Onica blog](https://onica.com/blog/how-to/how-to-kibana-default-index-pattern/)\n* QnA on [StackOverflow](https://stackoverflow.com/search?q=awscurl)\n* QnA on [DevOps StackExchange](https://devops.stackexchange.com/search?q=awscurl)\n* Examples on [Golfbert](https://golfbert.com/api/samples)\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=okigan/awscurl)](https://star-history.com/#okigan/awscurl&Date)\n\n## Related projects\n\n* awscurl in Go:\n  * <https://github.com/allthings/awscurl>\n  * <https://github.com/legal90/awscurl>\n* awscurl in Lisp: <https://github.com/aw/picolisp-awscurl>\n* awscurl on DockerHub: <https://hub.docker.com/r/okigan/awscurl>\n* [aws-signature-proxy](https://github.com/sverch/aws-signature-proxy) and related [blog post](https://shaunverch.com/butter/open-source/2019/09/27/butter-days-6.html)\n* [aws-sigv4-proxy](https://github.com/awslabs/aws-sigv4-proxy) on awslabs\n\n## Last but not least\n\n* [Sponsor awscurl](https://github.com/sponsors/okigan)"
}
