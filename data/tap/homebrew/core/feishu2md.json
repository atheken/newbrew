{
  "name": "feishu2md",
  "full_name": "feishu2md",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Convert feishu/larksuite documents to markdown",
  "license": "MIT",
  "homepage": "https://github.com/Wsine/feishu2md",
  "versions": {
    "stable": "2.0.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/Wsine/feishu2md/archive/refs/tags/v2.0.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "75f7af31916f5594c0cab11b83c27d3d76a2793c7a8c3f8b161946b515b626d6"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/feishu2md/blobs/sha256:5c43560d1c51189e1b25f3d1c95a4985ee74615ed641bca383d4f3f3c67c791a",
          "sha256": "5c43560d1c51189e1b25f3d1c95a4985ee74615ed641bca383d4f3f3c67c791a"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/feishu2md/blobs/sha256:5c43560d1c51189e1b25f3d1c95a4985ee74615ed641bca383d4f3f3c67c791a",
          "sha256": "5c43560d1c51189e1b25f3d1c95a4985ee74615ed641bca383d4f3f3c67c791a"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/feishu2md/blobs/sha256:5c43560d1c51189e1b25f3d1c95a4985ee74615ed641bca383d4f3f3c67c791a",
          "sha256": "5c43560d1c51189e1b25f3d1c95a4985ee74615ed641bca383d4f3f3c67c791a"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/feishu2md/blobs/sha256:f5f071e46875ce80111eec6c4fb4b2cff75d93d339046b98646de6a1712fe33c",
          "sha256": "f5f071e46875ce80111eec6c4fb4b2cff75d93d339046b98646de6a1712fe33c"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/feishu2md/blobs/sha256:f5f071e46875ce80111eec6c4fb4b2cff75d93d339046b98646de6a1712fe33c",
          "sha256": "f5f071e46875ce80111eec6c4fb4b2cff75d93d339046b98646de6a1712fe33c"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/feishu2md/blobs/sha256:f5f071e46875ce80111eec6c4fb4b2cff75d93d339046b98646de6a1712fe33c",
          "sha256": "f5f071e46875ce80111eec6c4fb4b2cff75d93d339046b98646de6a1712fe33c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/feishu2md/blobs/sha256:9995813ebd0136f20e81f30c9d73788cecb4344024f9f3498d99f997ff0c0948",
          "sha256": "9995813ebd0136f20e81f30c9d73788cecb4344024f9f3498d99f997ff0c0948"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/feishu2md.rb",
  "ruby_source_checksum": {
    "sha256": "5f7707cd288480ab860879acba6a5dd07a21f271ab5d45525d0092452fe1434e"
  },
  "date_added": "2023-07-29T01:20:01-04:00",
  "readme": "# Feishu2Md\n\n[![Golang - feishu2md](https://img.shields.io/github/go-mod/go-version/wsine/feishu2md?color=%2376e1fe&logo=go)](https://go.dev/)\n[![Unittest](https://github.com/Wsine/feishu2md/actions/workflows/unittest.yaml/badge.svg)](https://github.com/Wsine/feishu2md/actions/workflows/unittest.yaml)\n[![Release](https://img.shields.io/github/v/release/wsine/feishu2md?color=orange&logo=github)](https://github.com/Wsine/feishu2md/releases)\n[![Docker - feishu2md](https://img.shields.io/badge/Docker-feishu2md-2496ed?logo=docker&logoColor=white)](https://hub.docker.com/r/wwwsine/feishu2md)\n[![Render - feishu2md](https://img.shields.io/badge/Render-feishu2md-4cfac9?logo=render&logoColor=white)](https://feishu2md.onrender.com)\n![Last Review](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fbadge-last-review.wsine.workers.dev%2FWsine%2Ffeishu2md&query=%24.reviewed_at&label=last%20review)\n\n这是一个下载飞书文档为 Markdown 文件的工具，使用 Go 语言实现。\n\n**请看这里：招募有需求和有兴趣的开发者，共同探讨开发维护，有兴趣请联系。**\n\n## 动机\n\n[《一日一技 | 我开发的这款小工具，轻松助你将飞书文档转为 Markdown》](https://sspai.com/post/73386)\n\n## 获取 API Token\n\n配置文件需要填写 APP ID 和 APP SECRET 信息，请参考 [飞书官方文档](https://open.feishu.cn/document/ukTMukTMukTM/ukDNz4SO0MjL5QzM/get-) 获取。推荐设置为\n\n- 进入飞书[开发者后台](https://open.feishu.cn/app)\n- 创建企业自建应用，信息随意填写\n- 选择测试企业和人员，创建测试企业，绑定应用，切换至测试版本\n- （重要）打开权限管理，云文档，开通所有只读权限\n  - 「查看、评论和导出文档」权限 `docs:doc:readonly`\n  - 「查看 DocX 文档」权限 `docx:document:readonly`\n  - 「查看、评论和下载云空间中所有文件」权限 `drive:drive:readonly`\n  - 「查看和下载云空间中的文件」权限 `drive:file:readonly`\n- 打开凭证与基础信息，获取 App ID 和 App Secret\n\n## 如何使用\n\n注意：飞书旧版文档的下载工具已决定不再维护，但分支 [v1_support](https://github.com/Wsine/feishu2md/tree/v1_support) 仍可使用，对应的归档为 [v1.4.0](https://github.com/Wsine/feishu2md/releases/tag/v1.4.0)，请知悉。\n\n<details>\n  <summary>命令行版本</summary>\n\n  借助 Go 语言跨平台的特性，已编译好了主要平台的可执行文件，可以在 [Release](https://github.com/Wsine/feishu2md/releases) 中下载，并将相应平台的 feishu2md 可执行文件放置在 PATH 路径中即可。\n\n   **查阅帮助文档**\n\n   ```bash\n   $ feishu2md -h\n   NAME:\n      feishu2md - download feishu/larksuite document to markdown file\n\n   USAGE:\n      feishu2md [global options] command [command options] [arguments...]\n\n   VERSION:\n      v2-1f5416e\n\n   COMMANDS:\n      config   Read config file or set field(s) if provided\n      dump     Dump json response of the OPEN API\n      help, h  Shows a list of commands or help for one command\n\n   GLOBAL OPTIONS:\n      --help, -h     show help (default: false)\n      --version, -v  print the version (default: false)\n\n   $ feishu2md config -h\n   NAME:\n      feishu2md config - Read config file or set field(s) if provided\n\n   USAGE:\n      feishu2md config [command options] [arguments...]\n\n   OPTIONS:\n      --appId value      Set app id for the OPEN API\n      --appSecret value  Set app secret for the OPEN API\n      --help, -h         show help (default: false)\n   ```\n\n   **生成配置文件**\n\n   通过 `feishu2md config --appId <your_id> --appSecret <your_secret>` 命令即可生成该工具的配置文件。\n\n   通过 `feishu2md config` 命令可以查看配置文件路径以及是否成功配置。\n\n   更多的配置选项请手动打开配置文件更改。\n\n   **下载为 Markdown**\n\n   通过 `feishu2md <your feishu docx url>` 直接下载，文档链接可以通过 **分享 > 开启链接分享 > 复制链接** 获得。\n\n   示例：\n\n   ```bash\n   $ feishu2md https://domain.feishu.cn/docx/docxtoken\n   ```\n</details>\n\n<details>\n  <summary>Docker版本</summary>\n\n  Docker 镜像：https://hub.docker.com/r/wwwsine/feishu2md\n\n   Docker 命令：`docker run -it --rm -p 8080:8080 -e FEISHU_APP_ID=<your id> -e FEISHU_APP_SECRET=<your secret> -e GIN_MODE=release wwwsine/feishu2md`\n\n   Docker Compose:\n\n   ```yml\n   # docker-compose.yml\n   version: '3'\n   services:\n     feishu2md:\n       image: wwwsine/feishu2md\n       environment:\n         FEISHU_APP_ID: <your id>\n         FEISHU_APP_SECRET: <your secret>\n         GIN_MODE: release\n       ports:\n         - \"8080:8080\"\n   ```\n\n   启动服务 `docker compose up -d`\n\n   然后访问 https://127.0.0.1:8080 粘贴文档链接即可，文档链接可以通过 **分享 > 开启链接分享 > 复制链接** 获得。\n</details>\n\n<details>\n  <summary>在线版本</summary>\n\n  我使用个人的测试 API Token 部署了一个 Unstable 版本在 Render 平台上，该版本不会保存任何的文档资料和图片在容器中，直接通过 HTTP 从内存中返回压缩包文件，但是 Render 平台的 Log 可能会记录一些 HTTP 信息。\n\n  在版本仅供不在意隐私或懒于配置的用户临时使用，Render 平台使用免费配额，不保证高可用性，信任链全靠开源代码，请自行斟酌。\n\n  访问 https://feishu2md.onrender.com/ 粘贴文档链接即可，文档链接可以通过 **分享 > 开启链接分享 > 复制链接** 获得。\n</details>\n\n## 感谢\n\n- [chyroc/lark](https://github.com/chyroc/lark)\n- [chyroc/lark_docs_md](https://github.com/chyroc/lark_docs_md)"
}
