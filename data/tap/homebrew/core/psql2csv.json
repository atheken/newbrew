{
  "name": "psql2csv",
  "full_name": "psql2csv",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Run a query in psql and output the result as CSV",
  "license": "MIT",
  "homepage": "https://github.com/fphilipe/psql2csv",
  "versions": {
    "stable": "0.12",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/fphilipe/psql2csv/archive/v0.12.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "bd99442ee5b6892589986cb93f928ec9e823d17d06f10c8e74e7522bf021ca28"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/psql2csv/blobs/sha256:7b159e3b53c7d0b6bd568e504e918a1c96cff36007bcd009550c21e18c3cd269",
          "sha256": "7b159e3b53c7d0b6bd568e504e918a1c96cff36007bcd009550c21e18c3cd269"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "libpq"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/psql2csv.rb",
  "ruby_source_checksum": {
    "sha256": "190896e69460bc7667458d7eea5383c743d295f23af18d88c3b4726f230be119"
  },
  "date_added": "2015-11-16T20:38:11+00:00",
  "readme": "# psql2csv\n\n**Run a query in psql and output the result as CSV.**\n\n## Installation\n\n### Mac OS X\n\npsql2csv is available on [Homebrew](http://brew.sh/).\n\n    $ brew install psql2csv\n\n### Manual\n\nGrab the file `psql2csv`, put in somewhere in your `$PATH`, and make it\nexecutable:\n\n    $ curl https://raw.githubusercontent.com/fphilipe/psql2csv/master/psql2csv > /usr/local/bin/psql2csv && chmod +x /usr/local/bin/psql2csv\n\n## Usage\n\n    psql2csv [OPTIONS] < QUERY\n    psql2csv [OPTIONS] QUERY\n\n## Options\n\nThe query is assumed to be the contents of STDIN, if present, or the last\nargument. All other arguments are forwarded to psql except for these:\n\n    -?, --help                 show this help, then exit\n    --delimiter=DELIMITER      set the field delimiter (default: ,)\n    --quote=QUOTE              set the quote delimiter (default: \")\n    --escape=ESCAPE            set the escape character (default: QUOTE)\n    --null=NULL                set the string representing NULL; printed without quotes (default: empty string)\n    --force-quote=FORCE_QUOTE  set the columns to be force quoted; comma separated list of columns or * for all (default: none)\n    --encoding=ENCODING        set the output encoding; Excel likes latin1 (default: UTF8)\n    --no-header                do not output a header\n    --timezone=TIMEZONE        set the timezone config before running the query\n    --search-path=SEARCH_PATH  set the search_path config before running the query\n    --dry-run                  print the COPY statement that would be run without actually running it\n\n## Example Usage\n\n    $ psql2csv dbname \"select * from table\" > data.csv\n\n    $ psql2csv dbname < query.sql > data.csv\n\n    $ psql2csv --no-header --delimiter=$'\\t' --encoding=latin1 dbname <<sql\n    > SELECT *\n    > FROM some_table\n    > WHERE some_condition\n    > LIMIT 10\n    > sql\n\n## Advanced Usage\n\nLet's assume you have a script `monthly_report.sql` that you run every month.\nThis script has a `WHERE` that limits the report to a certain month:\n\n    WHERE date_trunc('month', created_at) = '2019-01-01'\n\nEvery time you run it you have to edit the script to change the month you want\nto run it for. Wouldn't it be nice to be able to specify a variable instead?\n\nTurns out psql does have support for [variables] which you can pass to psql (and\nthus to psql2csv) via `-v`, `--variable`, or `--set`. To interpolate the\nvariable into the query you can use `:VAR` for the literal value, `:'VAR'` for\nthe value as a string, or `:\"VAR\"` for the value as an identifier.\n\nLet's change the `WHERE` clause in `monthly_report.sql` file to use a variable\ninstead:\n\n    WHERE date_trunc('month', created_at) = (:'MONTH' || '-01')::timestamptz\n\nWith this change we can now run the query for any desired month as follows:\n\n    $ psql2csv -v MONTH=2019-02 < monthly_report.sql > data.csv\n\n[variables]: https://www.postgresql.org/docs/current/app-psql.html#APP-PSQL-VARIABLES\n\n## Further Help\n\n- [PostgreSQL COPY documentation](http://www.postgresql.org/docs/current/static/sql-copy.html)\n- [psql variables](https://www.postgresql.org/docs/current/app-psql.html#APP-PSQL-VARIABLES)\n\n## Author\n\nPhilipe Fatio ([@fphilipe](https://github.com/fphilipe))"
}
