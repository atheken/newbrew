{
  "name": "ydiff",
  "full_name": "ydiff",
  "tap": "homebrew/core",
  "oldname": "cdiff",
  "oldnames": [
    "cdiff"
  ],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "View colored diff with side by side and auto pager support",
  "license": "BSD-3-Clause",
  "homepage": "https://github.com/ymattw/ydiff",
  "versions": {
    "stable": "1.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/ymattw/ydiff/archive/1.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0a0acf326b1471b257f51d63136f3534a41c0f9a405a1bbbd410457cebfdd6a1"
    }
  },
  "revision": 2,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 2,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ydiff/blobs/sha256:7716b4d96423f5e20605b126217b6b9778848b6a141caa85250b646fadf66a84",
          "sha256": "7716b4d96423f5e20605b126217b6b9778848b6a141caa85250b646fadf66a84"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ydiff/blobs/sha256:7716b4d96423f5e20605b126217b6b9778848b6a141caa85250b646fadf66a84",
          "sha256": "7716b4d96423f5e20605b126217b6b9778848b6a141caa85250b646fadf66a84"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ydiff/blobs/sha256:7716b4d96423f5e20605b126217b6b9778848b6a141caa85250b646fadf66a84",
          "sha256": "7716b4d96423f5e20605b126217b6b9778848b6a141caa85250b646fadf66a84"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ydiff/blobs/sha256:0192ef7a7b3f397d92ba05728af96356869e24fb4de784128b6864e75f891c97",
          "sha256": "0192ef7a7b3f397d92ba05728af96356869e24fb4de784128b6864e75f891c97"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ydiff/blobs/sha256:0192ef7a7b3f397d92ba05728af96356869e24fb4de784128b6864e75f891c97",
          "sha256": "0192ef7a7b3f397d92ba05728af96356869e24fb4de784128b6864e75f891c97"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ydiff/blobs/sha256:0192ef7a7b3f397d92ba05728af96356869e24fb4de784128b6864e75f891c97",
          "sha256": "0192ef7a7b3f397d92ba05728af96356869e24fb4de784128b6864e75f891c97"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ydiff/blobs/sha256:0192ef7a7b3f397d92ba05728af96356869e24fb4de784128b6864e75f891c97",
          "sha256": "0192ef7a7b3f397d92ba05728af96356869e24fb4de784128b6864e75f891c97"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ydiff/blobs/sha256:07c4e2ad3135cbcc5ac2478cd0a83d570e2f0d9e0921f2f0fff89d854c25c5a2",
          "sha256": "07c4e2ad3135cbcc5ac2478cd0a83d570e2f0d9e0921f2f0fff89d854c25c5a2"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/ydiff.rb",
  "ruby_source_checksum": {
    "sha256": "99f28edfb04e3f4a69adc08ec6042ee93091256d4b6c94483aa96ea8ccd5086f"
  },
  "date_added": "2018-06-27T16:18:02-07:00",
  "readme": "Ydiff\n=====\n\n.. image:: https://github.com/ymattw/ydiff/actions/workflows/test.yml/badge.svg\n   :alt: Tests status\n   :target: https://github.com/ymattw/ydiff/actions\n\nTerm based tool to view *colored*, *incremental* diff in a version controlled\nworkspace (supports Git, Mercurial, Perforce and Svn so far) or from stdin,\nwith *side by side* (similar to ``diff -y``) and *auto pager* support. Requires\npython (>= 2.5.0) and ``less``.\n\n.. image:: https://raw.github.com/ymattw/ydiff/gh-pages/img/default.png\n   :alt: default\n   :align: center\n\n.. image:: https://raw.github.com/ymattw/ydiff/gh-pages/img/side-by-side.png\n   :alt: side by side\n   :align: center\n   :width: 900 px\n\nYdiff only supports diff in `Unified Format`_. This is default in most version\ncontrol system except Perforce, which needs an environment variable\n``P4DIFF=\"diff -u\"`` to output unified diff.\n\n.. _`Unified Format`: https://en.wikipedia.org/wiki/Diff#Unified_format\n\nInstallation\n------------\n\nYdiff only depends on Python built-in libraries, so you can just download the\nsource and run without worrying about any installation.\n\nGit tagged `releases`_ will be packaged and uploaded to PyPI timely, however,\npackages hosted elsewhere are not (please note they are not managed by the\nauthor `@ymattw`_).\n\n.. _`@ymattw`: https://github.com/ymattw\n.. _`releases`: https://github.com/ymattw/ydiff/releases\n\nDownload directly\n~~~~~~~~~~~~~~~~~\n\nJust save `ydiff.py`_ to whatever directory which is in your ``$PATH``, for\nexample, ``$HOME/bin`` is in my ``$PATH``, so I save the script there and name\nas ``ydiff``.\n\n.. _`ydiff.py`: https://raw.github.com/ymattw/ydiff/master/ydiff.py\n\n.. code-block:: bash\n\n    curl -ksSL https://raw.github.com/ymattw/ydiff/master/ydiff.py > ~/bin/ydiff\n    chmod +x ~/bin/ydiff\n\nInstall with pip\n~~~~~~~~~~~~~~~~\n\nYdiff is already listed on `PyPI`_, you can install with ``pip`` if you have\nthe tool.\n\n.. _PyPI: http://pypi.python.org/pypi/ydiff\n\n.. code-block:: bash\n\n    pip install --upgrade ydiff\n\nInstall with setup.py\n~~~~~~~~~~~~~~~~~~~~~\n\nYou can also run the setup.py from the source if you don't have ``pip``.\n\n.. code-block:: bash\n\n    git clone https://github.com/ymattw/ydiff.git\n    cd ydiff\n    ./setup.py install\n\nInstall with Homebrew\n~~~~~~~~~~~~~~~~~~~~~\n\nYou can also install with Homebrew on Mac. (Thanks to `@josa42`_,\n`@bfontaine`_, `@hivehand`_ and `@nijikon`_ for contributing to the Homebrew\n`Formula`_).\n\n.. _`@josa42`: https://github.com/josa42\n.. _`@bfontaine`: https://github.com/bfontaine\n.. _`@hivehand`: https://github.com/hivehand\n.. _`@nijikon`: https://github.com/nijikon\n.. _`Formula`: https://github.com/Homebrew/homebrew-core/blob/master/Formula/ydiff.rb\n\n.. code-block:: bash\n\n    brew install ydiff\n\n\nInstall on Fedora\n~~~~~~~~~~~~~~~~~\n\nOn Fedora, you can install ydiff with dnf.\n\n.. code-block:: bash\n\n    dnf install ydiff\n\nInstall on FreeBSD\n~~~~~~~~~~~~~~~~~~\n\nOn FreeBSD, you can install ydiff with pkg.\n\n.. code-block:: bash\n\n    pkg install ydiff\n\nUsage\n-----\n\nType ``ydiff -h`` to show usage::\n\n    $ ydiff -h\n    Usage: ydiff [options] [file|dir ...]\n\n    View colored, incremental diff in a workspace or from stdin, with side by side\n    and auto pager support\n\n    Options:\n      --version            show program's version number and exit\n      -h, --help           show this help message and exit\n      -s, --side-by-side   enable side-by-side mode\n      -w N, --width=N      set text width for side-by-side mode, 0 for auto\n                           detection, default is 80\n      -l, --log            show log with changes from revision control\n      -c M, --color=M      colorize mode 'auto' (default), 'always', or 'never'\n      -t N, --tab-width=N  convert tab characters to this many spaces (default: 8)\n      --wrap               wrap long lines in side-by-side view\n      -p M, --pager=M      pager application, suggested values are 'less' or 'cat'\n      -o M, --pager-options=M\n                           options to supply to pager application\n\n      Note:\n        Option parser will stop on first unknown option and pass them down to\n        underneath revision control. Environment variable YDIFF_OPTIONS may be\n        used to specify default options that will be placed at the beginning\n        of the argument list.\n\nRead diff from local modification in a *Git/Mercurial/Perforce/Svn* workspace\n(output from e.g. ``git diff``, ``svn diff``):\n\n.. code-block:: bash\n\n    cd proj-workspace\n    ydiff                         # view colored incremental diff\n    ydiff -s                      # view side by side, use default text width 80\n    ydiff -s -w 90                # use text width 90 other than default 80\n    ydiff -s -w 0                 # auto set text width based on terminal size\n    ydiff -s -w 0 --wrap          # same as before, but also wrap long lines\n    ydiff -s file1 dir2           # view modification of given files/dirs only\n    ydiff -s -w90 --wrap -- -U10  # pass '-U10' to underneath revision diff tool\n    ydiff -s -w90 --wrap -U10     # '--' is optional as it's unknown to ydiff\n    ydiff -s --cached             # show git staged diff (git diff --cached)\n    ydiff -s -r1234               # show svn diff to revision 1234\n\nRead log with changes in a *Git/Mercurial/Svn* workspace (output from e.g.\n``git log -p``, ``svn log --diff``), note *--diff* option is new in svn 1.7.0:\n\n.. code-block:: bash\n\n    cd proj-workspace\n    ydiff -l                    # read log along with changes\n    ydiff -ls                   # equivalent to ydiff -l -s, view side by side\n    ydiff -ls -w90 --wrap       # set text width 90 and enable wrapping as well\n    ydiff -ls file1 dir2        # see log with changes of given files/dirs only\n\nUtilize a specific pager application:\n\n.. code-block:: bash\n\n    ydiff                           # default pager - less\n    LESS_OPTS='-FRSX --shift 1'\n    ydiff -p less -o \"${LESS_OPTS}\" # emulate default pager\n    ydiff -p /usr/bin/less          # custom pager\n    ydiff -p cat                    # non-paging ANSI processor for colorizing\n\nPipe in a diff:\n\n.. code-block:: bash\n\n    git log -p -2 | ydiff       # view git log with changes of last 2 commits\n    git show 15bfa | ydiff -s   # view a given git commit, side by side\n    svn diff -r1234 | ydiff -s  # view svn diff comparing to given revision\n    diff -u file1 file2 | ydiff # view diff between two files (note the '-u')\n    diff -ur dir1 dir2 | ydiff  # view diff between two dirs\n\n    # View diff in a GitHub pull request, side by side\n    curl https://github.com/ymattw/ydiff/pull/11.diff | ydiff -s\n\n    # View a patch file in unified format.\n    ydiff -s < foo.patch\n\nRedirect output to another patch file is safe:\n\n.. code-block:: bash\n\n    svn diff -r PREV | ydiff -s > my.patch\n\nEnvironment variable\n--------------------\n\nEnvironment variable ``YDIFF_OPTIONS`` may be used to specify default options\nthat will be placed at the beginning of the argument list, for example:\n\n.. code-block:: bash\n\n    export YDIFF_OPTIONS='-s -w0 --wrap'\n    ydiff foo                   # equivalent to \"ydiff -s -w0 --wrap foo\"\n\nNote the default pager ``less`` takes options from the environment variable\n``LESS``.\n\nNotes\n-----\n\nIf you feel more comfortable with a command such as ``git ydiff`` to trigger\nthe ydiff command, you may symlink the executable to one named ``git-ydiff``\nas follows:\n\n.. code-block:: bash\n\n    ydiff_dir=$(dirname $(which ydiff))\n    ln -s \"${ydiff_dir}/ydiff\" \"${ydiff_dir}/git-ydiff\"\n\nKnown issues\n------------\n\nYdiff has following known issues:\n\n- Side by side mode has alignment problem for wide chars\n- Terminal might be in a mess on exception (type ``reset`` can fix it)\n\nPull requests are very welcome, please make sure your changes can pass unit\ntests and regression tests by run ``make docker-test`` (it runs tests with both\npython2 and python3).\n\n.. vim:set ft=rst et sw=4 sts=4 tw=79:"
}
