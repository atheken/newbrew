{
  "name": "glyr",
  "full_name": "glyr",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Music related metadata search engine with command-line interface and C API",
  "license": "LGPL-3.0-or-later",
  "homepage": "https://github.com/sahib/glyr",
  "versions": {
    "stable": "1.0.10",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/sahib/glyr/archive/1.0.10.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "77e8da60221c8d27612e4a36482069f26f8ed74a1b2768ebc373c8144ca806e8"
    }
  },
  "revision": 2,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/glyr/blobs/sha256:0b11085d86604b659fe43f99e91838695ff2c6bb4a1e5f2790e6af6fc90246da",
          "sha256": "0b11085d86604b659fe43f99e91838695ff2c6bb4a1e5f2790e6af6fc90246da"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/glyr/blobs/sha256:800ed9d047c06e8490f6318b36c88c34feb4dac7dbe60a539edd752f4568a08e",
          "sha256": "800ed9d047c06e8490f6318b36c88c34feb4dac7dbe60a539edd752f4568a08e"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/glyr/blobs/sha256:498252c79958a96c42f3bea2936366f692d5c25cf12d6b3ee3c8ac1a5747f4b8",
          "sha256": "498252c79958a96c42f3bea2936366f692d5c25cf12d6b3ee3c8ac1a5747f4b8"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/glyr/blobs/sha256:5c2a9dbf3b8f41d091f36b78e8c5597fe3ec3f5153eb5d60577b911b92d6a68b",
          "sha256": "5c2a9dbf3b8f41d091f36b78e8c5597fe3ec3f5153eb5d60577b911b92d6a68b"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/glyr/blobs/sha256:ff357ecf355067543f989182c6dc6a113d0aa64dca00aa3df67a080d68ba2ca5",
          "sha256": "ff357ecf355067543f989182c6dc6a113d0aa64dca00aa3df67a080d68ba2ca5"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/glyr/blobs/sha256:86ce9cf96d67fdbe9b174f4bc302f9c31abffcfb7790ec07fef5294f66beca17",
          "sha256": "86ce9cf96d67fdbe9b174f4bc302f9c31abffcfb7790ec07fef5294f66beca17"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/glyr/blobs/sha256:9ef809e699349c1fa1bb8e83f23aee567d1de60af6ddd7bef19409ecd58f8cf6",
          "sha256": "9ef809e699349c1fa1bb8e83f23aee567d1de60af6ddd7bef19409ecd58f8cf6"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/glyr/blobs/sha256:f147edbece71a6cac950c74f75b974da8d821139fbe1db95faeb0e08b67182af",
          "sha256": "f147edbece71a6cac950c74f75b974da8d821139fbe1db95faeb0e08b67182af"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake",
    "pkg-config"
  ],
  "dependencies": [
    "gettext",
    "glib"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "curl",
    "sqlite"
  ],
  "uses_from_macos_bounds": [
    {},
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/glyr.rb",
  "ruby_source_checksum": {
    "sha256": "48e1298ed92b2e61f08136c33d11df2539fb421583914151caaa16c5e9d9ceb0"
  },
  "date_added": "2015-10-02T21:53:47-07:00",
  "readme": "h1. Glyr is a search engine for music related metadata\n\nThe finest search you can buy for no money ^TM^\n\n!https://github.com/sahib/glyr/blob/master/doc/screenshot.png([screenshot])!\n\nIt comes both in a command-line interface tool and as a C library, both with an easy to use interface.\nThe sort of metadata glyr is searching (and downloading) is usually the data you see in your musicplayer.\nAnd indeed, originally it was written to serve as internally library for a musicplayer, but has been extended to \nwork as a standalone program which is able to download:\n<p>\n<table border=\"1\">\n<tr>\n<th>Getter</th><th>Description</th>\n</tr>\n<tr><td>cover</td><td>Coverart (front images supported only)</td></tr>\n<tr><td>lyrics</td><td>Songtext</td></tr>\n<tr><td>artistphotos</td><td>Photos of a certain band (press or live)</td></tr>\n<tr><td>artistbio</td><td>Artist biography from various sites</td></tr>\n<tr><td>review</td><td>album reviews from various sites</td></tr>\n<tr><td>albumlist</td><td>A list of albums from a specific artist.</td></tr>\n<tr><td>tags</td><td>Tags, either related to artist, album or title</td></tr>\n<tr><td>relations</td><td>links to wikipedia, myspace, musicbrainz ...</td></tr>\n<tr><td>similarartists</td><td>similar artists</td></tr>\n<tr><td>similarsongs</td><td>similar songs</td></tr>\n<tr><td>tracklist</td><td>tracklists of an album</td></tr>\n<tr><td>guitartabs</td><td>guitartabs in textual form</td></tr>\n<tr><td>backdrops</td><td> Large artist photos, suitable for backgrounds</td></tr>\n</table>\n</p>\n\n*Terminology*:\nTo prevent disambiguation the following terms are used below: \t\n* _glyrc_ is the command-line interface to libglyr.\n* _libglyr_ is the library behind, which may be used by your program.\n* a _getter_ is a type of metadata to download, e.g. @cover@, sometimes also called _fetcher_\n* a _provider_ is a source libglyr queries in order to find the data.\n* _glyros_ is the ruby wrapper for this lib. Currently it is not maintained.\n\nh2. FEATURES\n\n* Many built-in providers (46 at time of writing, ~30 distinct sites), high success-rate (the longer the search, the higher the risk :))\n* Portable: Windows and Linux are supported (Developement on Linux) see ~[1]~ for Mac OSX, \n* Fuzzy matching: Search providers with Levenshtein algorithm to eliminate typos and enhance search results.\n* Decent Unicode support: All sort of valid UTF8 is taken, and UTf8 output can be forced.\n* Fast Download: libcurl is used internally, and sources are searched in parallel, unneeded data is not downloaded if possible.\n* Lightweight dependencies: libcurl, glib and sqlite (for caching) - typical linux systems have those installed.\n* Download of a user defined amount of items, @glyrc cover -a Foo -b Bar -n 30@ tries to load 30 covers of album 'Bar' by artist 'Foo'.\n* Grouped download: Query providers by descending Accuray / Speed; controllable by the user over the @qsratio@\n* Optional download of images, URL is returned otherwise - so it can act a bit like a search-engine.\n* Free Software licensed under the terms of the LGPLv3\n* libglyr is portable, easy, threadsafe and lowlevel enough for everyone.\n* ...lots of other options like min/max size for images.\n* A built-in cache to store the metadata (using SQLite)\n\nh2. GETTING STARTED\n\nh3. Compiling\n\nSee the \"compile page\":https://github.com/sahib/glyr/wiki/Compiling.\n\nh3. libglyr:\n\nSee the \"examples in src/examples\":https://github.com/sahib/glyr/wiki for a quickstart.\nThere's also a more \"gentle (and brief) introduction.\":https://github.com/sahib/glyr/wiki/Introduction-to-libglyr\nAlso see the \"API Reference\":http://sahib.github.com/glyr/doc/html/index.html\n*Please note:* Since version 1.0.0 the API will be stable, and will only be open for extensions.\n\nh3. glyrc:\n\nPlease refer to @glyrc -h@ which gives you a brief introduction to the arguments you can pass,\nSee the \"wiki\":https://github.com/sahib/glyr/wiki/Commandline-arguments for more detailed information about the options.\n\nh2. FAQ\n\nh3. Anyone using it already?\n\n* \"GMPC\":http://gmpc.wikia.com/wiki/Gnome_Music_Player_Client\n* \"Pragha\":http://pragha.wikispaces.com/\n* \"Freya\":https://github.com/studentkittens/Freya\n* \"lyvi\":http://ok100.github.com/lyvi/\n\nh3. Glyr.. such a silly name! Why? \n\nIndeed. Should have named it 'Glyros' (too late, damnit).\n\nh3. Is it hard to write something with it?\n\nSome knowledge of C might be required, but the code is straight forward most of the time.\n\nBash scripts are pretty straight-forward:\n@glyrc cover --artist Equilibrium --album Sagas --write '/tmp/:artist:_:album:.:format:' --callback 'sxiv \":path:\"'@\n\nAdditionally there are bindings to Python and Ruby:\n\n* \"plyr\":https://github.com/sahib/python-glyr by me (complete API).\n* \"ruby-glyr\":https://github.com/meh/ruby-glyr by meh (complete API).\n\n\nh3. How..how am I supposed to use it?\n\nWell, as normal user you could use @glyrc@ to retrieve some metadata in a batchlike fashion.\nAs developers you have lots of option, you could write glyr-plugins for musicplayers (gmpc!), set up a webserver with this,\nhack up little scripts showing covers on the desktop.. everything related to musicmetadat is possible here.\nYou could also extend libglyr itself but that's a little harder.\n\nh3. Isn't there musicbrainz already?\n\n# The kind of metadata downloaded by glyr differs heavily from musicbrainz.\ni.e. glyr finds metadata for musicplayers while musicbrainz finds data for CD Rippers and taggers.\n# Musicbrainz runs remotely on some server and uses a large database which is searched through lucene.\nGlyr is a client program which hops over several sites and does not cache anything, unless you do it yourself.\nYou could of course let glyr run on a (remote) server, and cache all results to do something similiar.\n# There is \"coverarchive.org\":www.coverartarchive.org , but it does not seem to fully work yet. But it will be accessible once it does.\n\nh2. AUTHOR\n\nSee the AUTHORS file that comes in glyr's distribution.\nSee also COPYING to know about your rights.\n\nh2. I CAN HAZ HELP?\n\nh3. BUGS\n\nIf you found one: _Meh. Sorry for that._\nIf you file a bugreport: _Hey, thank you!_\n\nUse the \"Issue Tracker\":https://github.com/sahib/glyr/issues to share your find.\nAlternatively you may drop me a mail at <sahib@online.de>\n\nh3. PATCHES\n\nIf you hacked one: Excellent! Send it to me via mail or see below.\nIf you want to add new providers you should look at the existing provider plugins to get an idea how to write one.\nStarting with lib/cover/lastfm.c isn't a bad idea either, because it is one of the very simple ones.\n\n__Take the usual Git(Hub) approach:__\n# Fork this project\n# Make your changes\n# Make a Pull request\n\nIf you're not familiar with git, or just don't like it,\nyou can also send me the patch via mail: <sahib@online.de>\n\nThanks for any help in advance!\n\nh3. WRITE SOFTWARE THAT USES GLYR\n\nMay sound strange, but you're giving me a reason to maintain it, write new providers etc.\nAlso bugreports (well, there are no bugs, just in case) are appreciated, or just questions.\nThose help to make the documentation more clear.\n\nh3. DONATE\n\nYou also might consider a small (CS-Students are already motivated by 1 Cent <img src=\"http://www.blendpolis.de/images/smilies/icon_wink.gif\"/>) donation if you use feel like it:<a class=\"FlattrButton\" style=\"display:none;\" rev=\"flattr;button:compact;\" href=\"https://github.com/sahib/glyr\"></a>\n<noscript><a href=\"http://flattr.com/thing/302682/libglyr\" target=\"_blank\">\n<img src=\"http://api.flattr.com/button/flattr-badge-large.png\" alt=\"Flattr this\" title=\"Flattr this\" border=\"0\" /></a></noscript>\n(For now only possible via Flattr or \"Paypal\":http://sahib.github.com/donate.html , you gonna need an account there - Sorry)\n\nh2. DISCLAIMER\n\nAs usual, no warranty is granted that this software works like expected.\nRefer to the LGPLv3 copy you got with libglyr. It is \"here.\":https://github.com/sahib/glyr/blob/master/COPYING\nGlyr is just a way to find the data, it does not own any rights on the data it found.\n\n**All retrieved items are copyrighted by their respective copyright owners.**\n\nRefer to the provider's terms of use. Every item you get from libglyr contains the name and a url to the provider, so lookup there terms of use there.\n\n<br>\n<br>\n\nh3. \n\n[1] Glyr has not been tested on Mac OSX yet. If you own a Mac, any help with 'porting' glyr is highly appreciated. My guess would be that no to almost no changes need to be done though."
}
