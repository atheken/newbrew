{
  "name": "ly",
  "full_name": "ly",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Parse, manipulate or create documents in LilyPond format",
  "license": "GPL-2.0-or-later",
  "homepage": "https://github.com/frescobaldi/python-ly",
  "versions": {
    "stable": "0.9.7",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/9b/ed/e277509bb9f9376efe391f2f5a27da9840366d12a62bef30f44e5a24e0d9/python-ly-0.9.7.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d4d2b68eb0ef8073200154247cc9bd91ed7fb2671ac966ef3d2853281c15d7a8"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ly/blobs/sha256:038b39a72ba2a8eb2a1ac853e8c7e26228c3dfc97e4d639bd0b9a19507bdb11a",
          "sha256": "038b39a72ba2a8eb2a1ac853e8c7e26228c3dfc97e4d639bd0b9a19507bdb11a"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ly/blobs/sha256:038b39a72ba2a8eb2a1ac853e8c7e26228c3dfc97e4d639bd0b9a19507bdb11a",
          "sha256": "038b39a72ba2a8eb2a1ac853e8c7e26228c3dfc97e4d639bd0b9a19507bdb11a"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ly/blobs/sha256:038b39a72ba2a8eb2a1ac853e8c7e26228c3dfc97e4d639bd0b9a19507bdb11a",
          "sha256": "038b39a72ba2a8eb2a1ac853e8c7e26228c3dfc97e4d639bd0b9a19507bdb11a"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ly/blobs/sha256:83799e7be92015501c6b041cc121a9ffff202b46d995e618b5bf131dc571bd5b",
          "sha256": "83799e7be92015501c6b041cc121a9ffff202b46d995e618b5bf131dc571bd5b"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ly/blobs/sha256:83799e7be92015501c6b041cc121a9ffff202b46d995e618b5bf131dc571bd5b",
          "sha256": "83799e7be92015501c6b041cc121a9ffff202b46d995e618b5bf131dc571bd5b"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ly/blobs/sha256:83799e7be92015501c6b041cc121a9ffff202b46d995e618b5bf131dc571bd5b",
          "sha256": "83799e7be92015501c6b041cc121a9ffff202b46d995e618b5bf131dc571bd5b"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ly/blobs/sha256:83799e7be92015501c6b041cc121a9ffff202b46d995e618b5bf131dc571bd5b",
          "sha256": "83799e7be92015501c6b041cc121a9ffff202b46d995e618b5bf131dc571bd5b"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ly/blobs/sha256:9dd0337b0b409bba2cc68d2639d74de072eba648a12dfd212f4813b479dd0ddb",
          "sha256": "9dd0337b0b409bba2cc68d2639d74de072eba648a12dfd212f4813b479dd0ddb"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/ly.rb",
  "ruby_source_checksum": {
    "sha256": "1110e6279edfd5655df9a1d586db5e6876f33ca0739ba5589908a5139f96b114"
  },
  "date_added": "2021-10-13T15:29:09+00:00",
  "readme": "====================\nREADME for python-ly\n====================\n\n\nThis package provides a Python library `ly` containing various Python\nmodules to parse, manipulate or create documents in LilyPond format.\nA command line program `ly` is also provided that can be used to do various\nmanipulations with LilyPond files.\n\nThe LilyPond format is a plain text input format that is used by the \nGNU music typesetter LilyPond (www.lilypond.org).\n\nThe python-ly package is Free Software, licensed under the GPL. This package \nis written by the Frescobaldi developers and is used extensively by the\nFrescobaldi project. The main author is Wilbert Berendsen.\n\n| Download from: https://pypi.org/project/python-ly\n| Development homepage: https://github.com/frescobaldi/python-ly\n\n\nThe `ly` command line tool\n--------------------------\n\nWith `ly` you can reformat, or re-indent LilyPond files, transpose music,\ntranslate pitch names, convert LilyPond to syntax-colored HTML, etc.\n\nThere is also experimental support for converting LilyPond to MusicXML.\n\nUse::\n\n    ly -h\n\nto get a full list of the features of the `ly` command.\n\nHere is an example to re-indent and transpose a LilyPond file::\n\n    ly \"indent; transpose c d\" -o output.ly file.ly\n\nTo test the `ly` module from the current directory without installing, use::\n\n    python -m ly <args...>\n\nThis will behave like running the `ly` command when the package is installed.\n\n\nThe `ly` Python module\n----------------------\n\nThe `ly` module supports both Python2 and Python3. This is a short description\nof some modules:\n  \n* ``ly.slexer``: generic tools to build parsers using regular expressions\n* ``ly.node``: a generic list-like node object to build tree structures with\n* ``ly.document``: a tokenized text document (LilyPond file)\n* ``ly.lex``: a parser for LilyPond, Scheme, and other formats, using `slexer`\n* ``ly.music``: a tree structure of the contents of a document\n* ``ly.pitch``: functions for translating, transposing etc\n* ``ly.indent``: indent LilyPond text\n* ``ly.reformat``: format LilyPond text\n* ``ly.dom``: (deprecated) tree structure to build LilyPond text from\n* ``ly.words``: words for highlighting and autocompletion\n* ``ly.data``: layout objects, properties, interfaces, font glyphs etc extracted\n  from LilyPond\n\nDocumentation\n-------------\n\nThe documentation is built using Sphinx and located in the doc directory.\nIf you have Sphinx installed, you can build nicely formatted HTML documentation\nby typing ``make html`` in the doc directory.\n\nYou can also read the docs online at http://python-ly.readthedocs.org/."
}
