{
  "name": "goto",
  "full_name": "goto",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Bash tool for navigation to aliased directories with auto-completion",
  "license": "MIT",
  "homepage": "https://github.com/iridakos/goto",
  "versions": {
    "stable": "2.0.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/iridakos/goto/archive/v2.0.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "460fe3994455501b50b2f771f999ace77ade295122e90e959084047dbfb1f0dc"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/goto/blobs/sha256:151a459ba41105325842a700dfca388a6df6512ca3b0b50173cae906cfc78509",
          "sha256": "151a459ba41105325842a700dfca388a6df6512ca3b0b50173cae906cfc78509"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/goto.rb",
  "ruby_source_checksum": {
    "sha256": "6f97e73e83441bd260ed76d1d87d71302b1d64274163e3364670c2fe5a41d8a9"
  },
  "date_added": "2018-03-24T15:15:58+01:00",
  "readme": "# goto\n\nA shell utility allowing users to navigate to aliased directories supporting auto-completion :feet:\n\n![Generic badge](https://img.shields.io/badge/version-2.0.0-green.svg)\n\n## How does it work?\n\nUser registers directory aliases, for example:\n```bash\ngoto -r dev /home/iridakos/development\n```\nand then `cd`s to that directory with:\n```bash\ngoto dev\n```\n\n![goto demo gif](https://github.com/iridakos/goto/raw/master/doc/goto.gif)\n\n## goto completion\n\n`goto` comes with a nice auto-completion script so that whenever you press the `tab` key after the `goto` command, bash or zsh prompts with suggestions of the available aliases:\n\n```bash\n$ goto <tab>\nbc /etc/bash_completion.d                     \ndev /home/iridakos/development\nrubies /home/iridakos/.rvm/rubies\n```\n\n## Installation\n\n### Via script\nClone the repository and run the install script as super user or root:\n```bash\ngit clone https://github.com/iridakos/goto.git\ncd goto\nsudo ./install\n```\n\n### Manually\nCopy the file `goto.sh` somewhere in your filesystem and add a line in your `.zshrc` or `.bashrc` to source it.\n\nFor example, if you placed the file in your home folder, all you have to do is add the following line to your `.zshrc` or `.bashrc` file:\n\n```bash\nsource ~/goto.sh\n```\n\n### macOS - Homebrew\n\nA formula named `goto` is available for the bash shell in macOS.\n```bash\nbrew install goto\n```\n\n### Add colored <tab> output\n\n```bash\necho -e \"\\$include /etc/inputrc\\nset colored-completion-prefix on\" >> ~/.inputrc\n```\n\n**Note:**\n- you need to restart your shell after installation\n- you need to have the bash completion feature enabled for bash in macOS (see this [issue](https://github.com/iridakos/goto/issues/36)):\n  - you can install it with `brew install bash-completion` in case you don't have it already\n\n## Usage\n\n* [Change to an aliased directory](#change-to-an-aliased-directory)\n* [Register an alias](#register-an-alias)\n* [Unregister an alias](#unregister-an-alias)\n* [List aliases](#list-aliases)\n* [Expand an alias](#expand-an-alias)\n* [Cleanup](#cleanup)\n* [Help](#help)\n* [Version](#version)\n* [Extras](#extras)\n  * [Push before changing directories](#push-before-changing-directories)\n  * [Revert to a pushed directory](#revert-to-a-pushed-directory)\n* [Troubleshooting](#troubleshooting)\n  * [Updating from 1.x to 2.x](#updating-from-1x-to-2x)\n  * [zsh](#zsh)\n    * [command not found compdef](#command-not-found-compdef)\n\n### Change to an aliased directory\nTo change to an aliased directory, type:\n```bash\ngoto <alias>\n```\n\n#### Example:\n```bash\ngoto dev\n```\n\n### Register an alias\nTo register a directory alias, type:\n```bash\ngoto -r <alias> <directory>\n```\nor\n```bash\ngoto --register <alias> <directory>\n```\n\n#### Example:\n```bash\ngoto -r blog /mnt/external/projects/html/blog\n```\nor\n```bash\ngoto --register blog /mnt/external/projects/html/blog\n```\n\n#### Notes\n\n* `goto` **expands** the directories hence you can easily alias your current directory with:\n```bash\ngoto -r last_release .\n```\nand it will automatically be aliased to the whole path.\n* Pressing the `tab` key after the alias name, you have the default directory suggestions by the shell.\n\n### Unregister an alias\n\nTo unregister an alias, use:\n```bash\ngoto -u <alias>\n```\nor\n```bash\ngoto --unregister <alias>\n```\n#### Example\n```\ngoto -u last_release\n```\nor\n```\ngoto --unregister last_release\n```\n\n#### Notes\n\nPressing the `tab` key after the command (`-u` or `--unregister`), the completion script will prompt you with the list of registered aliases for your convenience.\n\n### List aliases\n\nTo get the list of your currently registered aliases, use:\n```bash\ngoto -l\n```\nor\n```bash\ngoto --list\n```\n\n### Expand an alias\n\nTo expand an alias to its value, use:\n```bash\ngoto -x <alias>\n```\nor\n```bash\ngoto --expand <alias>\n```\n\n#### Example\n```bash\ngoto -x last_release\n```\nor\n```bash\ngoto --expand last_release\n```\n\n### Cleanup\n\nTo cleanup the aliases from directories that are no longer accessible in your filesystem, use:\n\n```bash\ngoto -c\n```\nor\n```bash\ngoto --cleanup\n```\n\n### Help\n\nTo view the tool's help information, use:\n```bash\ngoto -h\n```\nor\n```bash\ngoto --help\n```\n\n### Version\n\nTo view the tool's version, use:\n```bash\ngoto -v\n```\nor\n```bash\ngoto --version\n```\n\n## Extras\n\n### Push before changing directories\n\nTo first push the current directory onto the directory stack before changing directories, type:\n```bash\ngoto -p <alias>\n```\nor\n```bash\ngoto --push <alias>\n```\n\n### Revert to a pushed directory\nTo return to a pushed directory, type:\n```bash\ngoto -o\n```\nor\n```bash\ngoto --pop\n```\n\n#### Notes\n\nThis command is equivalent to `popd`, but within the `goto` command.\n\n## Troubleshooting\n\n### Updating from 1.x to 2.x\n\nFrom version **2.x and after**, the `goto` DB file is located in the `$XDG_CONFIG_HOME` or in the `~/.config` directory under the name `goto`.\n\nIf you updated from version **1.x** to **2.x or newer**, you need to move this file which was previously located at `~/.goto`.\n\n*Note that the new file is not hidden, it does not start with a dot `.`*\n\n### zsh\n\n#### command not found: compdef\n\nIn case you get such an error, you need to load the `bashcompinit`. Append this to your `.zshrc` file:\n```bash\nautoload bashcompinit\nbashcompinit\n```\n\n## TODO\n\n* ~~Test on macOS~~ extensively\n* Write [tests](https://github.com/iridakos/goto/issues/2)\n\n## Contributing\n\n1. Fork it ( https://github.com/iridakos/goto/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Make sure that the script does not have errors or warning on [ShellCheck](https://www.shellcheck.net/)\n6. Create a new Pull Request\n\n## License\n\nThis tool is open source under the [MIT License](https://opensource.org/licenses/MIT) terms.\n\n[[Back To Top]](#goto)"
}
