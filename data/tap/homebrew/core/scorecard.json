{
  "name": "scorecard",
  "full_name": "scorecard",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Security health metrics for Open Source",
  "license": "Apache-2.0",
  "homepage": "https://github.com/ossf/scorecard",
  "versions": {
    "stable": "4.11.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/ossf/scorecard.git",
      "tag": "v4.11.0",
      "revision": "4edb07802fdad892fa8d10f8fd47666b6ccc27c9",
      "checksum": null
    },
    "head": {
      "url": "https://github.com/ossf/scorecard.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scorecard/blobs/sha256:cb944a7610a3b88b84c4053e4f6f62d316ffedb64d0d7f0eef92187af02c42ca",
          "sha256": "cb944a7610a3b88b84c4053e4f6f62d316ffedb64d0d7f0eef92187af02c42ca"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scorecard/blobs/sha256:cb944a7610a3b88b84c4053e4f6f62d316ffedb64d0d7f0eef92187af02c42ca",
          "sha256": "cb944a7610a3b88b84c4053e4f6f62d316ffedb64d0d7f0eef92187af02c42ca"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scorecard/blobs/sha256:cb944a7610a3b88b84c4053e4f6f62d316ffedb64d0d7f0eef92187af02c42ca",
          "sha256": "cb944a7610a3b88b84c4053e4f6f62d316ffedb64d0d7f0eef92187af02c42ca"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scorecard/blobs/sha256:ffdb4b64589f8b2a035afba3e2e3f6778bdbde814380f5696ab0b3f74602f061",
          "sha256": "ffdb4b64589f8b2a035afba3e2e3f6778bdbde814380f5696ab0b3f74602f061"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scorecard/blobs/sha256:ffdb4b64589f8b2a035afba3e2e3f6778bdbde814380f5696ab0b3f74602f061",
          "sha256": "ffdb4b64589f8b2a035afba3e2e3f6778bdbde814380f5696ab0b3f74602f061"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scorecard/blobs/sha256:ffdb4b64589f8b2a035afba3e2e3f6778bdbde814380f5696ab0b3f74602f061",
          "sha256": "ffdb4b64589f8b2a035afba3e2e3f6778bdbde814380f5696ab0b3f74602f061"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scorecard/blobs/sha256:c25d27653f6a49e95551e7518eb0e1d31a026ddb413304dc2dd9bc4184c0192b",
          "sha256": "c25d27653f6a49e95551e7518eb0e1d31a026ddb413304dc2dd9bc4184c0192b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/scorecard.rb",
  "ruby_source_checksum": {
    "sha256": "3e4be95f21ba4d4bc1cc3b0872534db3914a3fe7e8a6df116ab02ebe3ca163fe"
  },
  "date_added": "2021-07-12T07:49:23+00:00",
  "readme": "# OpenSSF Scorecard\n\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/ossf/scorecard/badge)](https://securityscorecards.dev/viewer/?uri=github.com/ossf/scorecard)\n[![OpenSSF Best Practices](https://bestpractices.coreinfrastructure.org/projects/5621/badge)](https://bestpractices.coreinfrastructure.org/projects/5621)\n![build](https://github.com/ossf/scorecard/workflows/build/badge.svg?branch=main)\n![CodeQL](https://github.com/ossf/scorecard/workflows/CodeQL/badge.svg?branch=main)\n[![Go Reference](https://pkg.go.dev/badge/github.com/ossf/scorecard/v4.svg)](https://pkg.go.dev/github.com/ossf/scorecard/v4)\n[![Go Report Card](https://goreportcard.com/badge/github.com/ossf/scorecard/v4)](https://goreportcard.com/report/github.com/ossf/scorecard/v4)\n[![codecov](https://codecov.io/gh/ossf/scorecard/branch/main/graph/badge.svg?token=PMJ6NAN9J3)](https://codecov.io/gh/ossf/scorecard)\n[![SLSA 3](https://slsa.dev/images/gh-badge-level3.svg)](https://slsa.dev)\n[![Slack](https://img.shields.io/badge/slack-openssf/security_scorecards-white.svg?logo=slack)](https://slack.openssf.org/#security_scorecards)\n\n<img align=\"right\" src=\"artwork/openssf_security_compressed.png\" width=\"200\" height=\"400\">\n\n## Overview\n\n-   [What Is Scorecard?](#what-is-scorecard)\n-   [Prominent Scorecard Users](#prominent-scorecard-users)\n-   [Scorecard's Public Data](#public-data)\n\n## Using Scorecard\n\n-   [Scorecard GitHub Action](#scorecard-github-action)\n-   [Scorecard REST API](#scorecard-rest-api)\n-   [Scorecard Badges](#scorecard-badges)\n-   [Scorecard Command Line Interface](#scorecard-command-line-interface)\n    -   [Prerequisites](#prerequisites)\n    -   [Installation](#installation)\n    -   [Authentication](#authentication)\n    -   [Basic Usage](#basic-usage)\n\n## Checks\n\n-   [Default Scorecard Checks](#scorecard-checks)\n-   [Detailed Check Documentation](docs/checks.md) (Scoring Criteria, Risks, and\n    Remediation)\n\n## Other Important Recommendations\n-   [Two-factor Authentication (2FA)](#two-factor-authentication-2fa)\n\n## Scoring\n-   [Aggregate Score](#aggregate-score)\n\n## Contribute\n\n-   [Report Problems](#report-problems)\n-   [Code of Conduct](CODE_OF_CONDUCT.md)\n-   [Contribute to Scorecard ](CONTRIBUTING.md)\n-   [Add a New Check](checks/write.md)\n-   [Connect with the Scorecard Community](#connect-with-the-scorecard-community)\n-   [Report a Security Issue](SECURITY.md)\n\n## FAQ\n\n- [FAQ](docs/faq.md)\n\n## Overview\n\n### What is Scorecard?\nWe created Scorecard to help open source maintainers improve their security\nbest practices and to help open source consumers judge whether their dependencies\nare safe.\n\nScorecard is an automated tool that assesses a number of important heuristics\n[(\"checks\")](#scorecard-checks) associated with software security and assigns\neach check a score of 0-10. You can use these scores to understand specific\nareas to improve in order to strengthen the security posture of your project.\nYou can also assess the risks that dependencies introduce, and make informed\ndecisions about accepting these risks, evaluating alternative solutions, or\nworking with the maintainers to make improvements.\n\nThe inspiration for Scorecard’s logo:\n[\"You passed! All D's ... and an A!\"](https://youtu.be/rDMMYT3vkTk)\n\n#### Project Goals\n\n1.  Automate analysis and trust decisions on the security posture of open source\n    projects.\n\n1.  Use this data to proactively improve the security posture of the critical\n    projects the world depends on.\n\n### Prominent Scorecard Users\n\nScorecard has been run on thousands of projects to monitor and track security\nmetrics. Prominent projects that use Scorecard include:\n\n-   [Tensorflow](https://github.com/tensorflow/tensorflow)\n-   [Angular](https://github.com/angular/angular)\n-   [Flutter](https://github.com/flutter/flutter)\n-   [sos.dev](https://sos.dev)\n-   [deps.dev](https://deps.dev)\n\n### Public Data\n\nWe run a weekly Scorecard scan of the 1 million most critical open source\nprojects judged by their direct dependencies and publish the results in a\n[BigQuery public dataset](https://cloud.google.com/bigquery/public-data).\n\nThis data is available in the public BigQuery dataset\n`openssf:scorecardcron.scorecard-v2`. The latest results are available in the\nBigQuery view `openssf:scorecardcron.scorecard-v2_latest`.\n\nYou can query the data using [BigQuery Explorer](http://console.cloud.google.com/bigquery) by navigating to Add Data > Star a project by name > 'openssf'.\nFor example, you may be interested in how a project's score has changed over time:\n\n```sql\nSELECT date, score FROM `openssf.scorecardcron.scorecard-v2` WHERE repo.name=\"github.com/ossf/scorecard\" ORDER BY date ASC\n```\n\nYou can extract the latest results to Google Cloud storage in JSON format using\nthe [`bq`](https://cloud.google.com/bigquery/docs/bq-command-line-tool) tool:\n\n```\n# Get the latest PARTITION_ID\nbq query --nouse_legacy_sql 'SELECT partition_id FROM\nopenssf.scorecardcron.INFORMATION_SCHEMA.PARTITIONS WHERE table_name=\"scorecard-v2\"\nAND partition_id!=\"__NULL__\" ORDER BY partition_id DESC\nLIMIT 1'\n\n# Extract to GCS\nbq extract --destination_format=NEWLINE_DELIMITED_JSON\n'openssf:scorecardcron.scorecard-v2$<partition_id>' gs://bucket-name/filename-*.json\n\n```\n\nThe list of projects that are checked is available in the\n[`cron/internal/data/projects.csv`](https://github.com/ossf/scorecard/blob/main/cron/internal/data/projects.csv)\nfile in this repository. If you would like us to track more, please feel free to\nsend a Pull Request with others. Currently, this list is derived from **projects\nhosted on GitHub ONLY**. We do plan to expand them in near future to account for\nprojects hosted on other source control systems.\n\n## Using Scorecard\n\n### Scorecard GitHub Action\n\nThe easiest way to use Scorecard on GitHub projects you own is with the\n[Scorecard GitHub Action](https://github.com/ossf/scorecard-action). The Action\nruns on any repository change and issues alerts that maintainers can view in the\nrepository’s Security tab. For more information, see the Scorecard GitHub\nAction\n[installation instructions](https://github.com/ossf/scorecard-action#installation).\n\n### Scorecard REST API\n\nTo query pre-calculated scores of OSS projects, use the [REST API](https://api.securityscorecards.dev).\n\nTo enable your project to be available on the REST API, set\n[`publish_results: true`](https://github.com/ossf/scorecard-action/blob/dd5015aaf9688596b0e6d11e7f24fff566aa366b/action.yaml#L35)\nin the Scorecard GitHub Action setting.\n\n### Scorecard Badges\n\nEnabling [`publish_results: true`](https://github.com/ossf/scorecard-action/blob/dd5015aaf9688596b0e6d11e7f24fff566aa366b/action.yaml#L35)\nin Scorecard GitHub Actions also allows maintainers to display a Scorecard badge on their repository to show off their\nhard work. This badge also auto-updates for every change made to the repository. See more details on [this OSSF blogpost](https://openssf.org/blog/2022/09/08/show-off-your-security-score-announcing-scorecards-badges/).\n\nTo include a badge on your project's repository, simply add the following markdown to your README:\n\n```\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/{owner}/{repo}/badge)](https://securityscorecards.dev/viewer/?uri=github.com/{owner}/{repo})\n```\n\n### Scorecard Command Line Interface\n\nTo run a Scorecard scan on projects you do not own, use the command line\ninterface installation option.\n\n#### Prerequisites\n\nPlatforms: Currently, Scorecard supports OSX and Linux platforms. If you are\nusing a Windows OS you may experience issues. Contributions towards supporting\nWindows are welcome.\n\nLanguage: You must have GoLang installed to run Scorecard\n(https://golang.org/doc/install)\n\n#### Installation\n\n##### Docker\n\n`scorecard` is available as a Docker container:\n\n```shell\ndocker pull gcr.io/openssf/scorecard:stable\n```\n\nTo use a specific scorecard version (e.g., v3.2.1), run:\n\n```shell\ndocker pull gcr.io/openssf/scorecard:v3.2.1\n```\n\n##### Standalone\n\nTo install Scorecard as a standalone:\n\nVisit our latest [release page](https://github.com/ossf/scorecard/releases/latest) and\ndownload the correct zip file for your operating system.\n\nAdd the binary to your `GOPATH/bin` directory (use `go env GOPATH` to identify your directory if necessary).\n\n###### Verifying SLSA provenance for downloaded releases\n\nWe generate [SLSA3 signatures](https://slsa.dev) using the OpenSSF's [slsa-framework/slsa-github-generator](https://github.com/slsa-framework/slsa-github-generator) during the release process. To verify a release binary:\n1. Install the verification tool from [slsa-framework/slsa-verifier#installation](https://github.com/slsa-framework/slsa-verifier#installation).\n2. Download the signature file `attestation.intoto.jsonl` from the [GitHub releases page](https://github.com/GoogleContainerTools/jib/releases/latest).\n3. Run the verifier:\n\n```shell\nslsa-verifier -artifact-path <the-zip> -provenance attestation.intoto.jsonl -source github.com/ossf/scorecard -tag <the-tag>\n```\n\n##### Using package managers\n\nPackage Manager                                            | Supported Distribution | Command\n---------------------------------------------------------- | ---------------------- | -------\nNix                                                        | NixOS                  | `nix-shell -p nixpkgs.scorecard`\n[AUR helper](https://wiki.archlinux.org/title/AUR_helpers) | Arch Linux             | Use your AUR helper to install `scorecard`\n[Homebrew](https://brew.sh/)                               | macOS or Linux         | `brew install scorecard`\n\n#### Authentication\n\nGitHub imposes [api rate limits](https://developer.github.com/v3/#rate-limiting)\non unauthenticated requests. To avoid these limits, you must authenticate your\nrequests before running Scorecard. There are two ways to authenticate your\nrequests: either create a GitHub personal access token, or create a GitHub App\nInstallation.\n\n-   [Create a classic GitHub personal access token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token#creating-a-personal-access-token-classic).\n    When creating the personal access token, we suggest you choose the\n    `public_repo` scope. Set the token in an environment variable called\n    `GITHUB_AUTH_TOKEN`, `GITHUB_TOKEN`, `GH_AUTH_TOKEN` or `GH_TOKEN` using the\n    commands below according to your platform.\n\n```shell\n# For posix platforms, e.g. linux, mac:\nexport GITHUB_AUTH_TOKEN=<your access token>\n# Multiple tokens can be provided separated by comma to be utilized\n# in a round robin fashion.\nexport GITHUB_AUTH_TOKEN=<your access token1>,<your access token2>\n\n# For windows:\nset GITHUB_AUTH_TOKEN=<your access token>\nset GITHUB_AUTH_TOKEN=<your access token1>,<your access token2>\n```\n\nOR\n\n-   [Create a GitHub App Installation](https://docs.github.com/en/developers/apps/building-github-apps/creating-a-github-app)\n    for higher rate-limit quotas. If you have an installed GitHub App and key\n    file, you can use the three environment variables below, following the\n    commands (`set` or `export`) shown above for your platform.\n\n```\nGITHUB_APP_KEY_PATH=<path to the key file on disk>\nGITHUB_APP_INSTALLATION_ID=<installation id>\nGITHUB_APP_ID=<app id>\n```\n\nThese variables can be obtained from the GitHub\n[developer settings](https://github.com/settings/apps) page.\n\n#### Basic Usage\n\n##### Using repository URL\n\nScorecard can run using just one argument, the URL of the target repo:\n\n```shell\n$ scorecard --repo=github.com/ossf-tests/scorecard-check-branch-protection-e2e\nStarting [CII-Best-Practices]\nStarting [Fuzzing]\nStarting [Pinned-Dependencies]\nStarting [CI-Tests]\nStarting [Maintained]\nStarting [Packaging]\nStarting [SAST]\nStarting [Dependency-Update-Tool]\nStarting [Token-Permissions]\nStarting [Security-Policy]\nStarting [Signed-Releases]\nStarting [Binary-Artifacts]\nStarting [Branch-Protection]\nStarting [Code-Review]\nStarting [Contributors]\nStarting [Vulnerabilities]\nFinished [CI-Tests]\nFinished [Maintained]\nFinished [Packaging]\nFinished [SAST]\nFinished [Signed-Releases]\nFinished [Binary-Artifacts]\nFinished [Branch-Protection]\nFinished [Code-Review]\nFinished [Contributors]\nFinished [Dependency-Update-Tool]\nFinished [Token-Permissions]\nFinished [Security-Policy]\nFinished [Vulnerabilities]\nFinished [CII-Best-Practices]\nFinished [Fuzzing]\nFinished [Pinned-Dependencies]\n\nRESULTS\n-------\nAggregate score: 7.9 / 10\n\nCheck scores:\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n|  SCORE  |          NAME          |             REASON             |                         DOCUMENTATION/REMEDIATION                         |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 10 / 10 | Binary-Artifacts       | no binaries found in the repo  | github.com/ossf/scorecard/blob/main/docs/checks.md#binary-artifacts       |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 9 / 10  | Branch-Protection      | branch protection is not       | github.com/ossf/scorecard/blob/main/docs/checks.md#branch-protection      |\n|         |                        | maximal on development and all |                                                                           |\n|         |                        | release branches               |                                                                           |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| ?       | CI-Tests               | no pull request found          | github.com/ossf/scorecard/blob/main/docs/checks.md#ci-tests               |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 0 / 10  | CII-Best-Practices     | no badge found                 | github.com/ossf/scorecard/blob/main/docs/checks.md#cii-best-practices     |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 10 / 10 | Code-Review            | branch protection for default  | github.com/ossf/scorecard/blob/main/docs/checks.md#code-review            |\n|         |                        | branch is enabled              |                                                                           |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 0 / 10  | Contributors           | 0 different companies found -- | github.com/ossf/scorecard/blob/main/docs/checks.md#contributors           |\n|         |                        | score normalized to 0          |                                                                           |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 0 / 10  | Dependency-Update-Tool | no update tool detected        | github.com/ossf/scorecard/blob/main/docs/checks.md#dependency-update-tool |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 0 / 10  | Fuzzing                | project is not fuzzed in       | github.com/ossf/scorecard/blob/main/docs/checks.md#fuzzing                |\n|         |                        | OSS-Fuzz                       |                                                                           |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 1 / 10  | Maintained             | 2 commit(s) found in the last  | github.com/ossf/scorecard/blob/main/docs/checks.md#maintained             |\n|         |                        | 90 days -- score normalized to |                                                                           |\n|         |                        | 1                              |                                                                           |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| ?       | Packaging              | no published package detected  | github.com/ossf/scorecard/blob/main/docs/checks.md#packaging              |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 8 / 10  | Pinned-Dependencies    | unpinned dependencies detected | github.com/ossf/scorecard/blob/main/docs/checks.md#pinned-dependencies    |\n|         |                        | -- score normalized to 8       |                                                                           |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 0 / 10  | SAST                   | no SAST tool detected          | github.com/ossf/scorecard/blob/main/docs/checks.md#sast                   |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 0 / 10  | Security-Policy        | security policy file not       | github.com/ossf/scorecard/blob/main/docs/checks.md#security-policy        |\n|         |                        | detected                       |                                                                           |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| ?       | Signed-Releases        | no releases found              | github.com/ossf/scorecard/blob/main/docs/checks.md#signed-releases        |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 10 / 10 | Token-Permissions      | tokens are read-only in GitHub | github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions      |\n|         |                        | workflows                      |                                                                           |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 10 / 10 | Vulnerabilities        | no vulnerabilities detected    | github.com/ossf/scorecard/blob/main/docs/checks.md#vulnerabilities        |\n|---------|------------------------|--------------------------------|---------------------------------------------------------------------------|\n```\n\n###### Docker\n\nThe `GITHUB_AUTH_TOKEN` has to be set to a valid [token](#Authentication)\n\n```shell\ndocker run -e GITHUB_AUTH_TOKEN=token gcr.io/openssf/scorecard:stable --show-details --repo=https://github.com/ossf/scorecard\n```\n\nTo use a specific scorecard version (e.g., v3.2.1), run:\n\n```shell\ndocker run -e GITHUB_AUTH_TOKEN=token gcr.io/openssf/scorecard:v3.2.1 --show-details --repo=https://github.com/ossf/scorecard\n```\n\n##### Showing Detailed Results\n\nFor more details about why a check fails, use the `--show-details` option:\n\n```\n./scorecard --repo=github.com/ossf-tests/scorecard-check-branch-protection-e2e --checks Branch-Protection --show-details\nStarting [Pinned-Dependencies]\nFinished [Pinned-Dependencies]\n\nRESULTS\n-------\n|---------|------------------------|--------------------------------|--------------------------------|---------------------------------------------------------------------------|\n|  SCORE  |          NAME          |             REASON             |            DETAILS             |                         DOCUMENTATION/REMEDIATION                         |\n|---------|------------------------|--------------------------------|--------------------------------|---------------------------------------------------------------------------|\n| 9 / 10  | Branch-Protection      | branch protection is not       | Info: 'force pushes' disabled  | github.com/ossf/scorecard/blob/main/docs/checks.md#branch-protection      |\n|         |                        | maximal on development and all | on branch 'main' Info: 'allow  |                                                                           |\n|         |                        | release branches               | deletion' disabled on branch   |                                                                           |\n|         |                        |                                | 'main' Info: linear history    |                                                                           |\n|         |                        |                                | enabled on branch 'main' Info: |                                                                           |\n|         |                        |                                | strict status check enabled    |                                                                           |\n|         |                        |                                | on branch 'main' Warn: status  |                                                                           |\n|         |                        |                                | checks for merging have no     |                                                                           |\n|         |                        |                                | specific status to check on    |                                                                           |\n|         |                        |                                | branch 'main' Info: number     |                                                                           |\n|         |                        |                                | of required reviewers is 2     |                                                                           |\n|         |                        |                                | on branch 'main' Info: Stale   |                                                                           |\n|         |                        |                                | review dismissal enabled on    |                                                                           |\n|         |                        |                                | branch 'main' Info: Owner      |                                                                           |\n|         |                        |                                | review required on branch      |                                                                           |\n|         |                        |                                | 'main' Info: 'admininistrator' |                                                                           |\n|         |                        |                                | PRs need reviews before being  |                                                                           |\n|         |                        |                                | merged on branch 'main'        |                                                                           |\n|---------|------------------------|--------------------------------|--------------------------------|---------------------------------------------------------------------------|\n```\n\n##### Using a GitLab Repository\n\nTo run Scorecard on a GitLab repository, you must create a [GitLab Access Token](https://gitlab.com/-/profile/personal_access_tokens) with the following permissions:\n\n- `read_api`\n- `read_user`\n- `read_repository`\n\nYou can run Scorecard on a GitLab repository by setting the `GITLAB_AUTH_TOKEN` environment variable:\n\n```bash\nexport GITLAB_AUTH_TOKEN=glpat-xxxx\n\nscorecard --repo gitlab.com/<org>/<project>/<subproject>\n```\n\nFor an example of using Scorecard in GitLab CI/CD, see [here](https://gitlab.com/ossf-test/scorecard-pipeline-example).\n\n##### Using GitHub Enterprise Server (GHES) based Repository\n\nTo use a GitHub Enterprise host `github.corp.com`, use the `GH_HOST` environment variable.\n\n```shell\n# Set the GitHub Enterprise host without https prefix or slash with relevant authentication token\nexport GH_HOST=github.corp.com\nexport GITHUB_AUTH_TOKEN=token\n\nscorecard --repo=github.corp.com/org/repo\n# OR without github host url\nscorecard --repo=org/repo\n```\n\n##### Using a Package manager\n\nFor projects in the `--npm`, `--pypi`, `--rubygems`, or `--nuget` ecosystems, you have the\noption to run Scorecard using a package manager. Provide the package name to\nrun the checks on the corresponding GitHub source code.\n\nFor example, `--npm=angular`.\n\n##### Running specific checks\n\nTo run only specific check(s), add the `--checks` argument with a list of check\nnames.\n\nFor example, `--checks=CI-Tests,Code-Review`.\n\n##### Formatting Results\n\nThe currently supported formats are `default` (text) and `json`.\n\nThese may be specified with the `--format` flag. For example, `--format=json`.\n\n\n\n## Checks\n\n### Scorecard Checks\n\nThe following checks are all run against the target project by default:\n\nName        | Description                               | Risk Level | Token Required  | GitLab Support | Note\n----------- | ----------------------------------------- | ---------- | --------------- | -------------- | --- |\n[Binary-Artifacts](docs/checks.md#binary-artifacts)             | Is the project free of checked-in binaries?     | High               | PAT, GITHUB_TOKEN   | Supported |\n[Branch-Protection](docs/checks.md#branch-protection)           | Does the project use [Branch Protection](https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/about-protected-branches) ?                                                                                                                                                                       | High | PAT (`repo` or `repo> public_repo`), GITHUB_TOKEN    | Supported (see notes) | certain settings are only supported with a maintainer PAT\n[CI-Tests](docs/checks.md#ci-tests)                             | Does the project run tests in CI, e.g. [GitHub Actions](https://docs.github.com/en/free-pro-team@latest/actions), [Prow](https://github.com/kubernetes/test-infra/tree/master/prow)?                                                                                                                                         | Low | PAT, GITHUB_TOKEN   | Supported\n[CII-Best-Practices](docs/checks.md#cii-best-practices)         | Has the project earned an [OpenSSF (formerly CII) Best Practices Badge](https://bestpractices.coreinfrastructure.org) at the passing, silver, or gold level?                                                                                                                                                                 | Low  | PAT, GITHUB_TOKEN   | Validating |\n[Code-Review](docs/checks.md#code-review)                       | Does the project practice code review before code is merged?                                                                                                                                                                                                                                                                 | High | PAT, GITHUB_TOKEN   | Validating |\n[Contributors](docs/checks.md#contributors)                     | Does the project have contributors from at least two different organizations?                                                                                                                                                                                                                                                | Low | PAT, GITHUB_TOKEN   | Validating |\n[Dangerous-Workflow](docs/checks.md#dangerous-workflow)         | Does the project avoid dangerous coding patterns in GitHub Action workflows?                                                                                                                                                                                                                                                 | Critical | PAT, GITHUB_TOKEN   | Unsupported |\n[Dependency-Update-Tool](docs/checks.md#dependency-update-tool) | Does the project use tools to help update its dependencies?                                                                                                                                                                                                                                                                  | High | PAT, GITHUB_TOKEN   | Unsupported |\n[Fuzzing](docs/checks.md#fuzzing)                               | Does the project use fuzzing tools, e.g. [OSS-Fuzz](https://github.com/google/oss-fuzz), [QuickCheck](https://hackage.haskell.org/package/QuickCheck) or [fast-check](https://fast-check.dev/)?                                                                                                                                                                                                                                     | Medium | PAT, GITHUB_TOKEN   | Validating\n[License](docs/checks.md#license)                               | Does the project declare a license?                                                                                                                                                                                                                                                                                          | Low | PAT, GITHUB_TOKEN   | Validating |\n[Maintained](docs/checks.md#maintained)                         | Is the project at least 90 days old, and maintained?                                                                                                                                                                                                                                                                                                   | High | PAT, GITHUB_TOKEN   | Validating |\n[Pinned-Dependencies](docs/checks.md#pinned-dependencies)       | Does the project declare and pin [dependencies](https://docs.github.com/en/free-pro-team@latest/github/visualizing-repository-data-with-graphs/about-the-dependency-graph#supported-package-ecosystems)?                                                                                                                     | Medium | PAT, GITHUB_TOKEN   | Validating |\n[Packaging](docs/checks.md#packaging)                           | Does the project build and publish official packages from CI/CD, e.g. [GitHub Publishing](https://docs.github.com/en/free-pro-team@latest/actions/guides/about-packaging-with-github-actions#workflows-for-publishing-packages) ?                                                                                            | Medium | PAT, GITHUB_TOKEN   | Validating |\n[SAST](docs/checks.md#sast)                                     | Does the project use static code analysis tools, e.g. [CodeQL](https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/enabling-code-scanning-for-a-repository#enabling-code-scanning-using-actions), [LGTM (deprecated)](https://lgtm.com), [SonarCloud](https://sonarcloud.io)? | Medium | PAT, GITHUB_TOKEN   | Unsupported |\n[Security-Policy](docs/checks.md#security-policy)               | Does the project contain a [security policy](https://docs.github.com/en/free-pro-team@latest/github/managing-security-vulnerabilities/adding-a-security-policy-to-your-repository)?                                                                                                                                          | Medium | PAT, GITHUB_TOKEN   | Validating |\n[Signed-Releases](docs/checks.md#signed-releases)               | Does the project cryptographically [sign releases](https://wiki.debian.org/Creating%20signed%20GitHub%20releases)?                                                                                                                                                                                                           | High | PAT, GITHUB_TOKEN   | Validating |\n[Token-Permissions](docs/checks.md#token-permissions)           | Does the project declare GitHub workflow tokens as [read only](https://docs.github.com/en/actions/reference/authentication-in-a-workflow)?                                                                                                                                                                                   | High | PAT, GITHUB_TOKEN   | Unsupported |\n[Vulnerabilities](docs/checks.md#vulnerabilities)               | Does the project have unfixed vulnerabilities? Uses the [OSV service](https://osv.dev).                                                                                                                                                                                                                                      | High | PAT, GITHUB_TOKEN   | Validating |\n[Webhooks](docs/checks.md#webhooks)                             | Does the webhook defined in the repository have a token configured to authenticate the origins of requests?                                                                                                                                                                                                                                      | Critical | maintainer PAT (`admin: repo_hook` or `admin> read:repo_hook` [doc](https://docs.github.com/en/rest/webhooks/repo-config#get-a-webhook-configuration-for-a-repository)  |  | EXPERIMENTAL\n\n### Detailed Checks Documentation\n\nTo see detailed information about each check, its scoring criteria, and\nremediation steps, check out the [checks documentation page](docs/checks.md).\n\n## Other Important Recommendations\n\n### Two-factor Authentication (2FA)\n\n[Two-factor Authentication (2FA)](https://docs.github.com/en/authentication/securing-your-account-with-two-factor-authentication-2fa/about-two-factor-authentication) adds an extra layer of security when logging into websites or apps. 2FA protects your account if your password is compromised by requiring a second form of authentication, such as codes sent via SMS or authentication app, or touching a physical security key.\n\nWe strongly recommend that you enable 2FA on GitHub and any important account where it is available. 2FA is not a Scorecard check because GitHub does not make that data about user accounts public. Arguably, this data should always remain private, since accounts without 2FA are so vulnerable to attack.\n\nThough it is not an official check, we urge all project maintainers to enable 2FA to protect their projects from compromise.\n\n#### Enabling 2FA\n\n##### For users\n\nFollow the steps described at [Configuring two-factor authentication](https://docs.github.com/en/authentication/securing-your-account-with-two-factor-authentication-2fa/configuring-two-factor-authentication)\n\nIf possible, use either:\n\n- physical security key (preferred), such as Titan or Yubikey\n- recovery codes, stored in an access protected and encrypted vault\n\nAs a last option, use SMS. Beware: 2FA using SMS is vulnerable to [SIM swap attack](https://en.wikipedia.org/wiki/SIM_swap_scam).\n\n##### For an organization\n\n1. [Prepare to require 2FA in your organization](https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-two-factor-authentication-for-your-organization/preparing-to-require-two-factor-authentication-in-your-organization)\n2. [Require 2FA in your organization](https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-two-factor-authentication-for-your-organization/requiring-two-factor-authentication-in-your-organization)\n\n## Scoring\n\n### Aggregate Score\nEach individual check returns a score of 0 to 10, with 10 representing the best\npossible score. Scorecard also produces an aggregate score, which is a\nweight-based average of the individual checks weighted by risk.\n\n*   “Critical” risk checks are weighted at 10\n*   “High” risk checks are weighted at 7.5\n*   “Medium” risk checks are weighted at 5\n*   “Low” risk checks are weighted at 2.5\n\nSee the [list of current Scorecard checks](#scorecard-checks) for each check's\nrisk level.\n\n## Contribute\n\n### Report Problems\n\nIf you have what looks like a bug, please use the\n[Github issue tracking system.](https://github.com/ossf/scorecard/issues) Before\nyou file an issue, please search existing issues to see if your issue is already\ncovered.\n\n### Contribute to Scorecard\n\nBefore contributing, please follow our [Code of Conduct](CODE_OF_CONDUCT.md).\n\nSee the [Contributing](CONTRIBUTING.md) documentation for guidance on how to\ncontribute to the project.\n\n### Adding a Scorecard Check\n\nIf you'd like to add a check, please see guidance [here](checks/write.md).\n\n### Connect with the Scorecard Community\n\nIf you want to get involved in the Scorecard community or have ideas you'd like\nto chat about, we discuss this project in the\n[OSSF Best Practices Working Group](https://github.com/ossf/wg-best-practices-os-developers)\nmeetings.\n\nArtifact                      | Link\n----------------------------- | ----\nScorecard Dev Forum           | [ossf-scorecard-dev@](https://groups.google.com/g/ossf-scorecard-dev)\nScorecard Announcements Forum | [ossf-scorecard-announce@](https://groups.google.com/g/ossf-scorecard-announce)\nCommunity Meeting VC          | [Link to z o o m meeting](https://zoom.us/j/98835923979)\nCommunity Meeting Calendar    | Biweekly Thursdays, 1:00pm-2:00pm PST <br>[Calendar](https://calendar.google.com/calendar?cid=czYzdm9lZmhwNWk5cGZsdGI1cTY3bmdwZXNAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ)\nMeeting Notes                 | [Notes](https://docs.google.com/document/d/1dB2U7_qZpNW96vtuoG7ShmgKXzIg6R5XT5Tc-0yz6kE/edit#heading=h.4k8ml0qkh7tl)\nSlack Channel                 | [#security_scorecards](https://slack.openssf.org/#security_scorecards)\n\n__Maintainers__ are listed in the [CODEOWNERS file](.github/CODEOWNERS).\n\n### Report a Security Issue\n\nTo report a security issue, please follow instructions [here](SECURITY.md).\n\n### Join the Scorecards Project Meeting\n\n#### Zoom \n\nWe meet every other Thursday - 4p ET on this [zoom link](https://zoom.us/j/98835923979?pwd=RG5JZ3czZEtmRDlGdms0ZktmMFQvUT09). \n\n#### Agenda\n\nYou can see the [agenda and meeting notes here](https://docs.google.com/document/d/1b6d3CVJLsl7YnTE7ZaZQHdkdYIvuOQ8rzAmvVdypOWM/edit?usp=sharing). \n\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/ossf/scorecard.svg)](https://starchart.cc/ossf/scorecard)\n\n\n## FAQ\n\n### FAQ\n\nSee the [FAQ](docs/faq.md) for answers to Frequently Asked Questions about Scorecard."
}
