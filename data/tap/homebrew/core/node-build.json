{
  "name": "node-build",
  "full_name": "node-build",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Install NodeJS versions",
  "license": "MIT",
  "homepage": "https://github.com/nodenv/node-build",
  "versions": {
    "stable": "4.9.119",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/nodenv/node-build/archive/v4.9.119.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "fe319aa93412c3f41ebc4acfbaffe19b0cd8417d94c3c52bb3cba58cfcac5cb3"
    },
    "head": {
      "url": "https://github.com/nodenv/node-build.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/node-build/blobs/sha256:e81bcf30ecbdaf63aca5a428104167d506bcb670c3251454eee825f82d3e33a6",
          "sha256": "e81bcf30ecbdaf63aca5a428104167d506bcb670c3251454eee825f82d3e33a6"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/node-build/blobs/sha256:e81bcf30ecbdaf63aca5a428104167d506bcb670c3251454eee825f82d3e33a6",
          "sha256": "e81bcf30ecbdaf63aca5a428104167d506bcb670c3251454eee825f82d3e33a6"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/node-build/blobs/sha256:e81bcf30ecbdaf63aca5a428104167d506bcb670c3251454eee825f82d3e33a6",
          "sha256": "e81bcf30ecbdaf63aca5a428104167d506bcb670c3251454eee825f82d3e33a6"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/node-build/blobs/sha256:e81bcf30ecbdaf63aca5a428104167d506bcb670c3251454eee825f82d3e33a6",
          "sha256": "e81bcf30ecbdaf63aca5a428104167d506bcb670c3251454eee825f82d3e33a6"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/node-build/blobs/sha256:e81bcf30ecbdaf63aca5a428104167d506bcb670c3251454eee825f82d3e33a6",
          "sha256": "e81bcf30ecbdaf63aca5a428104167d506bcb670c3251454eee825f82d3e33a6"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/node-build/blobs/sha256:e81bcf30ecbdaf63aca5a428104167d506bcb670c3251454eee825f82d3e33a6",
          "sha256": "e81bcf30ecbdaf63aca5a428104167d506bcb670c3251454eee825f82d3e33a6"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/node-build/blobs/sha256:d4f460b87c0762e26dbf0f74ce87091f5a7264e25847a3251e50fe4114d365a0",
          "sha256": "d4f460b87c0762e26dbf0f74ce87091f5a7264e25847a3251e50fe4114d365a0"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "autoconf",
    "openssl@3",
    "pkg-config"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/node-build.rb",
  "ruby_source_checksum": {
    "sha256": "50b6d976a04cd740ee3aef1aa6f15551533ff9df08ebfd88d6e0613d165781af"
  },
  "date_added": "2015-11-02T21:16:53-08:00",
  "readme": "# node-build\n\n[![Test](https://github.com/nodenv/node-build/workflows/Test/badge.svg)](https://github.com/nodenv/node-build/actions?query=workflow%3ATest)\n\nnode-build is a command-line utility that makes it easy to install virtually any\nversion of Node, from source or precompiled binary.\n\nIt is available as a plugin for [nodenv][] that\nprovides the `nodenv install` command, or as a standalone program.\n\n<!-- toc -->\n\n- [Installation](#installation)\n  * [Upgrading](#upgrading)\n    + [Updating available build versions](#updating-available-build-versions)\n- [Usage](#usage)\n  * [Basic Usage](#basic-usage)\n  * [Advanced Usage](#advanced-usage)\n    + [Binaries](#binaries)\n    + [Custom Build Definitions](#custom-build-definitions)\n    + [Custom Build Configuration](#custom-build-configuration)\n    + [Applying Patches](#applying-patches)\n    + [Checksum Verification](#checksum-verification)\n    + [Package Mirrors](#package-mirrors)\n    + [Keeping the build directory after installation](#keeping-the-build-directory-after-installation)\n    + [Retry installation without v/node-/node-v prefix](#retry-installation-without-vnode-node-v-prefix)\n- [Getting Help](#getting-help)\n- [Credits](#credits)\n\n<!-- tocstop -->\n\n## Installation\n\n```sh\n# Using Homebrew on macOS\n$ brew install node-build\n\n# As a nodenv plugin\n$ mkdir -p \"$(nodenv root)\"/plugins\n$ git clone https://github.com/nodenv/node-build.git \"$(nodenv root)\"/plugins/node-build\n\n# As a standalone program\n$ git clone https://github.com/nodenv/node-build.git\n$ PREFIX=/usr/local ./node-build/install.sh\n```\n\n### Upgrading\n\n```sh\n# Via Homebrew\n$ brew update && brew upgrade node-build\n\n# As a nodenv plugin\n$ git -C \"$(nodenv root)\"/plugins/node-build pull\n```\n\n#### Updating available build versions\n\nTo grab the latest versions from nodejs.org and generate definition files for\nnode-build to use, check out the [node-build-update-defs][] plugin.\nOnce installed:\n\n``` shell\nnodenv update-version-defs\n```\n\nNo need to wait for node-build to provide the latest definitions!\n\n## Usage\n\n### Basic Usage\n\n```sh\n# As a nodenv plugin\n$ nodenv install --list                    # lists all available versions of Node\n$ nodenv install 10.13.0                   # installs Node 10.13.0 to ~/.nodenv/versions\n\n# As a standalone program\n$ node-build --definitions                 # lists all available versions of Node\n$ node-build 10.13.0 ~/local/node-10.13.0  # installs Node 10.13.0 to ~/local/node-10.13.0\n```\n\nnode-build does not check for system dependencies before downloading and\nattempting to compile the Node source. Please ensure that [all requisite\nlibraries][build-env] are available on your system.\n\n### Advanced Usage\n\n#### Binaries\n\nBy default, node-build will attempt to match one of the precompiled binaries\nto your platform. If there is a binary for your platform, it will install it\ninstead of compiling from source. To force compilation, pass the `-c` or\n`--compile` flag.\n\n#### Custom Build Definitions\n\nIf you wish to develop and install a version of Node that is not yet supported\nby node-build, you may specify the path to a custom “build definition file” in\nplace of a Node version number.\n\nUse the [default build definitions][definitions] as a template for your custom\ndefinitions.\n\n#### Custom Build Configuration\n\nThe build process may be configured through the following environment variables:\n\n| Variable                 | Function                                                                                           |\n| ------------------------ | -------------------------------------------------------------------------------------------------- |\n| `TMPDIR`                 | Where temporary files are stored.                                                                  |\n| `NODE_BUILD_BUILD_PATH`  | Where sources are downloaded and built. (Default: a timestamped subdirectory of `TMPDIR`)          |\n| `NODE_BUILD_CACHE_PATH`  | Where to cache downloaded package files. (Default: `~/.nodenv/cache` if invoked as nodenv plugin)  |\n| `NODE_BUILD_HTTP_CLIENT` | One of `aria2c`, `curl`, or `wget` to use for downloading. (Default: first one found in PATH)      |\n| `NODE_BUILD_ARIA2_OPTS`  | Additional options to pass to `aria2c` for downloading.                                            |\n| `NODE_BUILD_CURL_OPTS`   | Additional options to pass to `curl` for downloading.                                              |\n| `NODE_BUILD_WGET_OPTS`   | Additional options to pass to `wget` for downloading.                                              |\n| `NODE_BUILD_MIRROR_CMD`  | A command to construct the package mirror URL.                                                     |\n| `NODE_BUILD_MIRROR_URL`  | Custom mirror URL root.                                                                            |\n| `NODE_BUILD_SKIP_MIRROR` | Bypass the download mirror and fetch all package files from their original URLs.                   |\n| `NODE_BUILD_ROOT`        | Custom build definition directory. (Default: `share/node-build`)                                   |\n| `NODE_BUILD_DEFINITIONS` | Additional paths to search for build definitions. (Colon-separated list)                           |\n| `CC`                     | Path to the C compiler.                                                                            |\n| `NODE_CFLAGS`            | Additional `CFLAGS` options (_e.g.,_ to override `-O3`).                                           |\n| `CONFIGURE_OPTS`         | Additional `./configure` options.                                                                  |\n| `MAKE`                   | Custom `make` command (_e.g.,_ `gmake`).                                                           |\n| `MAKE_OPTS` / `MAKEOPTS` | Additional `make` options.                                                                         |\n| `MAKE_INSTALL_OPTS`      | Additional `make install` options.                                                                 |\n| `NODE_CONFIGURE_OPTS`    | Additional `./configure` options (applies only to Node source).                                    |\n| `NODE_MAKE_OPTS`         | Additional `make` options (applies only to Node source).                                           |\n| `NODE_MAKE_INSTALL_OPTS` | Additional `make install` options (applies only to Node source).                                   |\n\n#### Applying Patches\n\nBoth `nodenv install` and `node-build` support the `--patch` (`-p`) flag to apply\na patch to the Node (/iojs/chakracore) source code before building.\nPatches are read from `STDIN`:\n\n```sh\n# applying a single patch\n$ nodenv install --patch 11.1.0 < /path/to/node.patch\n\n# applying a patch from HTTP\n$ nodenv install --patch 11.1.0 < <(curl -sSL http://git.io/node.patch)\n\n# applying multiple patches\n$ cat fix1.patch fix2.patch | nodenv install --patch 11.1.0\n```\n\n#### Checksum Verification\n\nIf you have the `shasum`, `openssl`, or `sha256sum` tool installed, node-build will\nautomatically verify the SHA2 checksum of each downloaded package before\ninstalling it.\n\nChecksums are optional and specified as anchors on the package URL in each\ndefinition. All definitions bundled with node-build include checksums.\n\n#### Package Mirrors\n\nBy default, node-build downloads package files from the official URL specified in the definition file.\n\n```sh\n # example:\n install_package \"node-v12.0.0\" \"https://nodejs.org/dist/v12.0.0/node-v12.0.0.tar.gz#<SHA2>\"\n```\n\nnode-build will attempt to construct a mirror url by invoking `NODE_BUILD_MIRROR_CMD` with two arguments: `package_url` and `checksum`.\nThe provided command should print the desired mirror's complete package URL.\nIf `NODE_BUILD_MIRROR_CMD` is unset, package mirror URL construction defaults to replacing `https://nodejs.org/dist` with `NODE_BUILD_MIRROR_URL`.\n\nnode-build will first try to fetch this package from `$NODE_BUILD_MIRROR_URL/<SHA2>`\n(note: this is the complete URL), where `<SHA2>` is the checksum for the file.\n\nIt will fall back to downloading the package from the original location if:\n- the package was not found on the mirror;\n- the mirror is down;\n- the download is corrupt, i.e. the file's checksum doesn't match;\n- no tool is available to calculate the checksum; or\n- `NODE_BUILD_SKIP_MIRROR` is enabled.\n\nYou may specify a custom mirror by setting `NODE_BUILD_MIRROR_URL`.\n\n#### Keeping the build directory after installation\n\nBoth `node-build` and `nodenv install` accept the `-k` or `--keep` flag, which\ntells node-build to keep the downloaded source after installation. This can be\nuseful if you need to use `gdb` and `memprof` with Node.\n\nSource code will be kept in a parallel directory tree `$(nodenv root)/sources`\nwhen using `--keep` with the `nodenv install` command. You should specify the\nlocation of the source code with the `NODE_BUILD_BUILD_PATH` environment\nvariable when using `--keep` with `node-build`.\n\n#### Retry installation without v/node-/node-v prefix\n\nThe nodenv-install plugin can attempt a retry if the installation failed due\nto a missing definition file. If the given node version name begins with\n'v', 'node', or 'node-v', the retry will drop the prefix and try again. For\ninstance, if `nodenv install node-v11.0.0` fails because a definition file\ndoes not exist by the name \"node-v11.0.0\", it will retry as \"11.0.0\".\nFor this retry to be attempted, the environment variable `NODENV_PREFIX_RETRY`\nmust be non-empty.\n\n## Getting Help\n\nPlease see the [node-build wiki][wiki] for solutions to common problems.\nAlso, check out the [ruby-build wiki][].\n\nIf you can't find an answer on the wiki, open an issue on the [issue tracker][].\nBe sure to include the full build log for build failures.\n\n## Credits\n\nForked from [Sam Stephenson][]'s [ruby-build][] by [Will McKenzie][]\nand modified for node.\n\n[nodenv]: https://github.com/nodenv/nodenv\n[ruby-build]: https://github.com/rbenv/ruby-build\n[definitions]: https://github.com/nodenv/node-build/tree/master/share/node-build\n[wiki]: https://github.com/nodenv/node-build/wiki\n[ruby-build wiki]: https://github.com/rbenv/ruby-build/wiki\n[build-env]: https://github.com/nodenv/node-build/wiki#suggested-build-environment\n[issue tracker]: https://github.com/nodenv/node-build/issues\n[node-build-update-defs]: https://github.com/nodenv/node-build-update-defs\n[Sam Stephenson]: https://github.com/sstephenson\n[Will McKenzie]: https://github.com/oinutter"
}
