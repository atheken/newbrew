{
  "name": "cxgo",
  "full_name": "cxgo",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Transpiling C to Go",
  "license": "MIT",
  "homepage": "https://github.com/gotranspile/cxgo",
  "versions": {
    "stable": "0.3.7",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/gotranspile/cxgo.git",
      "tag": "v0.3.7",
      "revision": "cfc1ca865f59182eea902a45ce96b4cdda0f2b8c",
      "checksum": null
    },
    "head": {
      "url": "https://github.com/gotranspile/cxgo.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cxgo/blobs/sha256:01d2976616ed7156938f6162585a3c948d95cc949d49b97abc29bed8c381b136",
          "sha256": "01d2976616ed7156938f6162585a3c948d95cc949d49b97abc29bed8c381b136"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cxgo/blobs/sha256:0b5a70797d3f41c27dcb860fb1e35578a9f2d09cc50504f0bf04cde5797ed2f3",
          "sha256": "0b5a70797d3f41c27dcb860fb1e35578a9f2d09cc50504f0bf04cde5797ed2f3"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cxgo/blobs/sha256:800b736a7731fda17e15de197a00562e70c863b62bd00afd9d216996efef6ecf",
          "sha256": "800b736a7731fda17e15de197a00562e70c863b62bd00afd9d216996efef6ecf"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cxgo/blobs/sha256:af5a140675ba61902c305c2be1ba5fbe7e83d12ec2d1cfb3648ea471af7f3cbb",
          "sha256": "af5a140675ba61902c305c2be1ba5fbe7e83d12ec2d1cfb3648ea471af7f3cbb"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cxgo/blobs/sha256:eef11759db93aaeba729c7f76ccc73940f321c010446194ab42527fbce73ad2b",
          "sha256": "eef11759db93aaeba729c7f76ccc73940f321c010446194ab42527fbce73ad2b"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cxgo/blobs/sha256:5db55c7ab63bdd7771b87c55a0e9ce64c6e60f9d588d1620a113451ee15554f0",
          "sha256": "5db55c7ab63bdd7771b87c55a0e9ce64c6e60f9d588d1620a113451ee15554f0"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cxgo/blobs/sha256:6287342a8d7a37d461611a3382cfe09d6509c5e692ba5f1de4f54e19a569d01c",
          "sha256": "6287342a8d7a37d461611a3382cfe09d6509c5e692ba5f1de4f54e19a569d01c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cxgo/blobs/sha256:7a8fb8c61c95813b7a8315c01c28265835583f15f6df4253bc117751b87d3a34",
          "sha256": "7a8fb8c61c95813b7a8315c01c28265835583f15f6df4253bc117751b87d3a34"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/cxgo.rb",
  "ruby_source_checksum": {
    "sha256": "85b2bf3ff33dcb6a7820113ca50a74ad56da2d13894f34396dcdb27e009b6b8c"
  },
  "date_added": "2022-05-23T17:03:37+00:00",
  "readme": "# C to Go translator\n\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/gotranspile/cxgo/master/LICENSE)\n[![Gitter](https://badges.gitter.im/gotranspile/community.svg)](https://gitter.im/gotranspile/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![GoDoc](https://godoc.org/github.com/gotranspile/cxgo?status.svg)](https://godoc.org/github.com/gotranspile/cxgo)\n\nCxGo is a tool for translating C source code to Go (aka transpiler, source-to-source compiler).\n\nIt uses [cc](https://modernc.org/cc/v3) for preprocessing and parsing C (no clang/gcc dependencies!) and\na custom type-checker and AST translation layer to make the best output possible.\n\nThe only requirement is: C code **must compile** with `cxgo`, including headers.\n\nHaving said that, `cxgo` uses a few tricks to make this process easier.\n\n**TL;DR for the [project goals](CONTRIBUTING.md#project-goals-and-principles):**\n\n1. Implement a practical C to Go translator ([no C++](https://github.com/gotranspile/cxgo/issues/1) for now).\n2. Keep the output program code correct.\n3. Make the generated code human-readable and as idiomatic as possible.\n4. Make it easy to use and customize.\n\nCheck the [FAQ](FAQ.md) for more common question about the project.\n\n## Status\n\nThe project is **experimental**! Do not rely on it in production and other sensitive environments!\n\nAlthough it was successfully tested on multiple projects, it might _change the behavior_ of the code due to yet unknown bugs.\n\n**Compiler test results:**\n- TCC: 62/89 (70%)\n- GCC: 783/1236 (63%)\n\n**Transpiled projects:**\n- [Potrace](./examples/potrace) (image vectorization library)\n- [PortableGL](https://github.com/TotallyGamerJet/pgl) (OpenGL 3.x implementation)\n- [Physac](https://github.com/koteyur/physac-go) (2D physics engine)\n\n## Installation\n\n```bash\ngo get -u github.com/gotranspile/cxgo/cmd/cxgo\n```\n\nor download the [latest release](https://github.com/gotranspile/cxgo/releases/latest) from Github.\n\n## How to use\n\nThe fastest way to try it is:\n\n```bash\ncxgo file main.c\n```\n\nFor more details, check our [examples](./examples/README.md) section.\n\nIt will guide you through basic usage patterns as well as a more advanced ones (on real-world projects).\n\nYou may also check [FAQ](FAQ.md) if you have any issues.\n\n## Caveats\n\nThe following C features are currently accepted by `cxgo`, but may be implemented partially or not implemented at all:\n\n- preserving comments from C code ([#2](https://github.com/gotranspile/cxgo/issues/2))\n- `static` ([#4](https://github.com/gotranspile/cxgo/issues/4))\n- `auto` ([#5](https://github.com/gotranspile/cxgo/issues/5))\n- bitfields ([#6](https://github.com/gotranspile/cxgo/issues/6))\n- `union` with C-identical data layout ([#7](https://github.com/gotranspile/cxgo/issues/7))\n- `packed` structs ([#8](https://github.com/gotranspile/cxgo/issues/8))\n- `asm`\n- `case` in weird places ([#9](https://github.com/gotranspile/cxgo/issues/9))\n- `goto` forbidden by Go (there is a [workaround](docs/config.md#identsflatten), though, see [#10](https://github.com/gotranspile/cxgo/issues/10))\n- label variables ([#11](https://github.com/gotranspile/cxgo/issues/11))\n- thread local storage ([#12](https://github.com/gotranspile/cxgo/issues/12))\n- `setjmp` (will compile, but panics at runtime)\n- some stdlib functions and types are missing ([good first issue!](CONTRIBUTING.md#adding-a-new-known-header))\n- deep type inference (when converting to Go string/slices)\n- considering multiple `#ifdef` paths for different OS/envs\n\n## Community\n\nJoin our [community](COMMUNITY.md)! We'd like to hear back from you!\n\n## Contributing\n\nSee [CONTRIBUTING](CONTRIBUTING.md).\n\n## License\n\n[MIT](LICENSE)"
}
