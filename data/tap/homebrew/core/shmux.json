{
  "name": "shmux",
  "full_name": "shmux",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Execute the same command on many hosts in parallel",
  "license": "BSD-3-Clause",
  "homepage": "https://github.com/shmux/shmux",
  "versions": {
    "stable": "1.0.3",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/shmux/shmux/archive/v1.0.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "c9f8863e2550e23e633cf5fc7a9c4c52d287059f424ef78aba6ecd98390fb9ab"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shmux/blobs/sha256:b4629c31e6233a8e7d7c4caf6491c3e585f8b7eaa5964f426ceab66562cb4fb7",
          "sha256": "b4629c31e6233a8e7d7c4caf6491c3e585f8b7eaa5964f426ceab66562cb4fb7"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shmux/blobs/sha256:e32cab0e2063d5b3d43f9e796e5b00b89f7ac2bae966efe236b1e69d8ae6e8bc",
          "sha256": "e32cab0e2063d5b3d43f9e796e5b00b89f7ac2bae966efe236b1e69d8ae6e8bc"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shmux/blobs/sha256:341ede51de6b3dbb5b0f6acc554a2dfc7c9543cb3800e06a992f8b40a58b3657",
          "sha256": "341ede51de6b3dbb5b0f6acc554a2dfc7c9543cb3800e06a992f8b40a58b3657"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shmux/blobs/sha256:252d01294232eadb06c95e9fcd0dd73438a2871dfab43210481df95ad30df586",
          "sha256": "252d01294232eadb06c95e9fcd0dd73438a2871dfab43210481df95ad30df586"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shmux/blobs/sha256:2ddc25900fb3603227d9ede578fffc8c96c414b8487f6a0d710ac0e39f6a52de",
          "sha256": "2ddc25900fb3603227d9ede578fffc8c96c414b8487f6a0d710ac0e39f6a52de"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shmux/blobs/sha256:6f8ae1c07788268ee86531da66940e7648dce1dc63a6ed118a2bacc0899beac9",
          "sha256": "6f8ae1c07788268ee86531da66940e7648dce1dc63a6ed118a2bacc0899beac9"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shmux/blobs/sha256:6781e9876911d4d44080b069dd3295c86520699ae24b3385980d51a53bc4d2f3",
          "sha256": "6781e9876911d4d44080b069dd3295c86520699ae24b3385980d51a53bc4d2f3"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shmux/blobs/sha256:e433bd14622d3f77a35042649d0d73e888b164ab4f04431864fb68c9ec64b62c",
          "sha256": "e433bd14622d3f77a35042649d0d73e888b164ab4f04431864fb68c9ec64b62c"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shmux/blobs/sha256:bc38ad3a6feddd116edd9d3ab00ac18bc6663d08b9d111414975bdd1543d1b79",
          "sha256": "bc38ad3a6feddd116edd9d3ab00ac18bc6663d08b9d111414975bdd1543d1b79"
        },
        "sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shmux/blobs/sha256:13f8831248e646784dd3cefd82707c45966ea05528e0c836156dea98b9c8c870",
          "sha256": "13f8831248e646784dd3cefd82707c45966ea05528e0c836156dea98b9c8c870"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shmux/blobs/sha256:c1e347248987cfaeb250cff852feeab54fe709da0f69d9c560170f46c05feaf4",
          "sha256": "c1e347248987cfaeb250cff852feeab54fe709da0f69d9c560170f46c05feaf4"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "ncurses"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/shmux.rb",
  "ruby_source_checksum": {
    "sha256": "14755e0b32c29cc5c0543d789fd80dde7b902e84c14ae8b1cec37415fa810931"
  },
  "date_added": "2011-08-13T12:00:48-07:00",
  "readme": "[![Build Status](https://travis-ci.org/shmux/shmux.svg?branch=master)](https://travis-ci.org/shmux/shmux)\n\n> The most likely way for the world to be destroyed, most experts\n> agree, is by accident.  That's where we come in.  We're computer\n> professionals.  We cause accidents.\n\n## What is shmux?\n\n*shmux* is program for executing the same command on many hosts in\nparallel.  For each target, a child process is spawned by *shmux*, and\na shell on the target obtained one of the supported methods: rsh, ssh,\nor sh.  The output produced by the children is received by *shmux* and\neither (optionally) output in turn to the user using an easy to read\nformat, or written to files for later processing making it well suited\nfor use in scripts.\n\nFor more details, check out the\n[shmux(1)](https://github.com/shmux/shmux/wiki/shmux) manual page.\nThe example shown below is also a good illustration of some of\n*shmux*'s capabilities and is dissected [frame by\nframe](https://github.com/shmux/shmux/wiki/Example) for your\nconvenience.\n\n![Sample shmux output](https://github.com/shmux/shmux/wiki/shmux.gif)\n\n## Features\n\n*shmux* solves a fairly simple problem that can be addressed with a\nfew lines of shell or Perl.  This may lead you to think that using\n*shmux* is total overkill, but *shmux* is a powerful tool that offers\nmany time and life saving features, so read on!\n\n* **When used in a script**\n  * Ability to define what is and what is not an error for the command\n    being run (based on exit code and output content)\n  * Output and exit codes are saved into files to facilitate use from\n    a script.\n* **When used interactively** (directly on the command line, or from\nwithin a script/wrapper):\n  * Well formatted output\n  * Standard error output displayed in bold\n  * Real-time status shown\n  * Ability to pause, resume, quit cleanly\n  * Automatically pause on error, allowing the user to cleanly stop\n    before more goes wrong\n  * Ability to hide output of successful targets\n  * Mixed or un-mixed target outputs\n\n##  Related Work\n\nNow..\n\nWhere were all these when i wrote *shmux*?\nwhy do people keep reinventing the wheel?\n\n* [dsh](http://www.netfort.gr.jp/~dancer/software/dsh.html)\n* [dssh](http://dssh.subverted.net/)\n* [fanout](http://www.stearns.org/fanout/)\n* [Kees Cook's gsh](http://outflux.net/unix/software/gsh/)\n* [Mr. Shell](http://www.voltar-confed.org/mrsh/)\n* [multi-rsh](http://hea-www.harvard.edu/~fine/Tech/multi-rsh.html)\n* [multixterm](http://expect.nist.gov/example/multixterm.man.html)\n* [mussh](http://sourceforge.net/projects/mussh/)\n* [pdsh](https://computing.llnl.gov/linux/pdsh.html)\n* [pssh](http://www.theether.org/pssh/)\n* [p-run](http://www.tuxrocks.com/Projects/p-run/)\n* [PyDsh](http://sourceforge.net/projects/pydsh/)\n* [remote_update.pl](http://store.z-kat.com/~valankar/)\n* [RGANG](http://fermitools.fnal.gov/abstracts/rgang/abstract.html)\n* [rshall](http://www.occam.com/tools/)\n* [tentakel](http://tentakel.biskalar.de/)\n* [vxargs](http://dharma.cis.upenn.edu/planetlab/vxargs/)"
}
