{
  "name": "jose",
  "full_name": "jose",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "C-language implementation of Javascript Object Signing and Encryption",
  "license": "Apache-2.0",
  "homepage": "https://github.com/latchset/jose",
  "versions": {
    "stable": "11",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/latchset/jose/releases/download/v11/jose-11.tar.xz",
      "tag": null,
      "revision": null,
      "checksum": "e272afe7717e22790c383f3164480627a567c714ccb80c1ee96f62c9929d8225"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jose/blobs/sha256:21f4ddb24fe7718c027343713fb09aab4cbcf6d4c096f6e3fe8e09bd2e459344",
          "sha256": "21f4ddb24fe7718c027343713fb09aab4cbcf6d4c096f6e3fe8e09bd2e459344"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jose/blobs/sha256:551e1333f5bac04c13a4a2cf957ea2da84fb8c9d34a6ea18f8a661b9307bbb08",
          "sha256": "551e1333f5bac04c13a4a2cf957ea2da84fb8c9d34a6ea18f8a661b9307bbb08"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jose/blobs/sha256:16e0db736b62521077a5ab096d43f0fd2aec7ea89a3f4839f71814582c268308",
          "sha256": "16e0db736b62521077a5ab096d43f0fd2aec7ea89a3f4839f71814582c268308"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jose/blobs/sha256:f0ac20b30d42d9ddd0ef62458059475c50b236ce8d163d7ff26ad33eeffa8ee9",
          "sha256": "f0ac20b30d42d9ddd0ef62458059475c50b236ce8d163d7ff26ad33eeffa8ee9"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jose/blobs/sha256:7ef2c4173e81fbc601be37ac515d41b5240fa69ad2a252c67c9fe13d22530f51",
          "sha256": "7ef2c4173e81fbc601be37ac515d41b5240fa69ad2a252c67c9fe13d22530f51"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jose/blobs/sha256:3dac5c9fd2153330aebae3f18438eb9833ab8b524ca1e524828c5ef398d252a0",
          "sha256": "3dac5c9fd2153330aebae3f18438eb9833ab8b524ca1e524828c5ef398d252a0"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jose/blobs/sha256:29a910cbfe5af5c12b8f007e1fe7abacc167eb6875f76e67260de54fb3911825",
          "sha256": "29a910cbfe5af5c12b8f007e1fe7abacc167eb6875f76e67260de54fb3911825"
        },
        "x86_64_linux": {
          "cellar": "/home/linuxbrew/.linuxbrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/jose/blobs/sha256:dbfb98cddbd5634d5a96d6a036949fd7f664d1cd5a84ee33bf9ee934a0f88597",
          "sha256": "dbfb98cddbd5634d5a96d6a036949fd7f664d1cd5a84ee33bf9ee934a0f88597"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "meson",
    "ninja",
    "pkg-config"
  ],
  "dependencies": [
    "jansson",
    "openssl@3"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "zlib"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/jose.rb",
  "ruby_source_checksum": {
    "sha256": "f5fa2d41dfaebef85b37bc1b513530b00c9cef6c815bcaa578ff9501b1838899"
  },
  "date_added": "2017-06-17T00:38:18-07:00",
  "readme": "[![build](https://github.com/latchset/jose/workflows/build/badge.svg)](https://github.com/latchset/jose/actions)\n\n# Welcome to José!\n\nJosé is a C-language implementation of the Javascript Object Signing and\nEncryption standards. Specifically, José aims towards implementing the\nfollowing standards:\n\n  * RFC 7515 - JSON Web Signature (JWS)\n  * RFC 7516 - JSON Web Encryption (JWE)\n  * RFC 7517 - JSON Web Key (JWK)\n  * RFC 7518 - JSON Web Algorithms (JWA)\n  * RFC 7519 - JSON Web Token (JWT)\n  * RFC 7520 - Examples of ... JOSE\n  * RFC 7638 - JSON Web Key (JWK) Thumbprint\n\nJosé is extensively tested against the RFC test vectors.\n\n# Supported Algorithms\n\n| Algorithm          | Supported | Algorithm Type | JWK Type |\n|--------------------|:---------:|:--------------:|:--------:|\n| HS256              |    YES    |   Signature    |    oct   |\n| HS384              |    YES    |   Signature    |    oct   |\n| HS512              |    YES    |   Signature    |    oct   |\n| RS256              |    YES    |   Signature    |    RSA   |\n| RS384              |    YES    |   Signature    |    RSA   |\n| RS512              |    YES    |   Signature    |    RSA   |\n| ES256              |    YES    |   Signature    |     EC   |\n| ES384              |    YES    |   Signature    |     EC   |\n| ES512              |    YES    |   Signature    |     EC   |\n| PS256              |    YES    |   Signature    |    RSA   |\n| PS384              |    YES    |   Signature    |    RSA   |\n| PS512              |    YES    |   Signature    |    RSA   |\n| none               |     NO    |   Signature    |    N/A   |\n| RSA1_5             |    YES    |   Key Wrap     |    RSA   |\n| RSA-OAEP           |    YES    |   Key Wrap     |    RSA   |\n| RSA-OAEP-256       |    YES    |   Key Wrap     |    RSA   |\n| A128KW             |    YES    |   Key Wrap     |    oct   |\n| A192KW             |    YES    |   Key Wrap     |    oct   |\n| A256KW             |    YES    |   Key Wrap     |    oct   |\n| dir                |    YES    |   Key Wrap     |    oct   |\n| ECDH-ES            |    YES    |   Key Wrap     |     EC   |\n| ECDH-ES+A128KW     |    YES    |   Key Wrap     |     EC   |\n| ECDH-ES+A192KW     |    YES    |   Key Wrap     |     EC   |\n| ECDH-ES+A256KW     |    YES    |   Key Wrap     |     EC   |\n| A128GCMKW          |    YES    |   Key Wrap     |    oct   |\n| A192GCMKW          |    YES    |   Key Wrap     |    oct   |\n| A256GCMKW          |    YES    |   Key Wrap     |    oct   |\n| PBES2-HS256+A128KW |    YES    |   Key Wrap     |    N/A   |\n| PBES2-HS384+A192KW |    YES    |   Key Wrap     |    N/A   |\n| PBES2-HS512+A256KW |    YES    |   Key Wrap     |    N/A   |\n| A128CBC-HS256      |    YES    |   Encryption   |    oct   |\n| A192CBC-HS384      |    YES    |   Encryption   |    oct   |\n| A256CBC-HS512      |    YES    |   Encryption   |    oct   |\n| A128GCM            |    YES    |   Encryption   |    oct   |\n| A192GCM            |    YES    |   Encryption   |    oct   |\n| A256GCM            |    YES    |   Encryption   |    oct   |\n\n# José Command-Line Utility\nJosé provides a command-line utility which encompasses most of the JOSE\nfeatures. This allows for easy integration into your project and one-off\nscripts. Below you will find examples of the common commands.\n\n### Key Management\n\nJosé can generate keys, remove private keys and show thumbprints. For example:\n\n```sh\n# Generate three different kinds of keys\n$ jose jwk gen -i '{\"alg\": \"A128GCM\"}' -o oct.jwk\n$ jose jwk gen -i '{\"alg\": \"RSA1_5\"}' -o rsa.jwk\n$ jose jwk gen -i '{\"alg\": \"ES256\"}' -o ec.jwk\n\n# Remove the private keys\n$ jose jwk pub -i oct.jwk -o oct.pub.jwk\n$ jose jwk pub -i rsa.jwk -o rsa.pub.jwk\n$ jose jwk pub -i ec.jwk -o ec.pub.jwk\n\n# Calculate thumbprints\n$ jose jwk thp -i oct.jwk\n9ipMcxQLsI56Mqr3yYS8hJguJ6Mc8Zh6fkufoiKokrM\n$ jose jwk thp -i rsa.jwk\nrS6Yno3oQYRIztC6np62nthbmdydhrWmK2Zn_Izmerw\n$ jose jwk thp -i ec.jwk\nTo8yMD92X82zvGoERAcDzlPP6awMYGM2HYDc1G5xOtc\n```\n\n### Signatures\nJosé can sign and verify data. For example:\n\n```sh\n$ echo hi | jose jws sig -i- -k ec.jwk -o msg.jws\n$ jose jws ver -i msg.jws -k ec.pub.jwk\nhi\n$ jose jws ver -i msg.jws -k oct.jwk\nNo signatures validated!\n```\n\n### Encryption\nJosé can encrypt and decrypt data. For example:\n\n```sh\n$ echo hi | jose jwe enc -i- -k rsa.pub.jwk -o msg.jwe\n$ jose jwe dec -i msg.jwe -k rsa.jwk\nhi\n$ jose jwe dec -i msg.jwe -k oct.jwk\nDecryption failed!\n```\n\n# Building and Installing from Source\nBuilding Jose is fairly straightforward:\n\n    $ mkdir build && cd build\n    $ meson .. --prefix=/usr\n    $ ninja\n    $ sudo ninja install\n\nYou can even run the tests if you'd like:\n\n    $ meson test\n\nTo build a FreeBSD, HardenedBSD or OPNsense package\nuse:\n\n    (as root) # pkg install meson pkgconf jansson openssl\n    $ mkdir build && cd build\n    $ meson .. --prefix=/usr/local\n    $ ninja\n    $ meson test\n    (as root) # ninja install\n\nOnce built it does not require meson and pkgconf,\nbut still requires jansson and openssl."
}
