{
  "name": "htmlq",
  "full_name": "htmlq",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Uses CSS selectors to extract bits content from HTML files",
  "license": "MIT",
  "homepage": "https://github.com/mgdm/htmlq",
  "versions": {
    "stable": "0.4.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/mgdm/htmlq/archive/refs/tags/v0.4.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "c2954c0fcb3ada664b14834646aa0a2c4268683cc51fd60d47a71a9f7e77d4b9"
    },
    "head": {
      "url": "https://github.com/mgdm/htmlq.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/htmlq/blobs/sha256:0b48cd78910d620c598a8102cc8801f0155b8aee452440b6f6d965e931488906",
          "sha256": "0b48cd78910d620c598a8102cc8801f0155b8aee452440b6f6d965e931488906"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/htmlq/blobs/sha256:2e03e8a2c059ad4ac3454ad2b4cc70fb77e7883d7141f6f10d8a9bfe9c421b53",
          "sha256": "2e03e8a2c059ad4ac3454ad2b4cc70fb77e7883d7141f6f10d8a9bfe9c421b53"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/htmlq/blobs/sha256:abf6473f80399fc7dd8252a2c35dff388c142ca028de0128b26defc46f6f107f",
          "sha256": "abf6473f80399fc7dd8252a2c35dff388c142ca028de0128b26defc46f6f107f"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/htmlq/blobs/sha256:dd3223cb5afa829c8519e42515d06f56d6d815794af40d8c7ff932aacb3d3634",
          "sha256": "dd3223cb5afa829c8519e42515d06f56d6d815794af40d8c7ff932aacb3d3634"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/htmlq/blobs/sha256:c2dc9b6cb1914175ee46979f7edcf7d6883b9234da5f85711fd7f58ebef11e44",
          "sha256": "c2dc9b6cb1914175ee46979f7edcf7d6883b9234da5f85711fd7f58ebef11e44"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/htmlq/blobs/sha256:f14e7cff6db455661e178db9d57b3b5cbc172c4bc3903d959ee1b5f38bf816a2",
          "sha256": "f14e7cff6db455661e178db9d57b3b5cbc172c4bc3903d959ee1b5f38bf816a2"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/htmlq/blobs/sha256:4a790da130fb9f4db4d43051df1fbcf409b6dbd49293d757411cd5118c9e18e9",
          "sha256": "4a790da130fb9f4db4d43051df1fbcf409b6dbd49293d757411cd5118c9e18e9"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/htmlq/blobs/sha256:b93418d06723d65a8da8cb3c34819f24f825a057efc7788bf45f0db3484abf13",
          "sha256": "b93418d06723d65a8da8cb3c34819f24f825a057efc7788bf45f0db3484abf13"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/htmlq.rb",
  "ruby_source_checksum": {
    "sha256": "4e6dd5383111b4e0a4a49bd06e1fa535ac73b2a438f3602eda99ae4c556c5f5d"
  },
  "date_added": "2021-09-08T10:01:11+00:00",
  "readme": "# htmlq\nLike [`jq`](https://stedolan.github.io/jq/), but for HTML. Uses [CSS selectors](https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Selectors) to extract bits of content from HTML files.\n\n## Installation\n\n### [Cargo](https://crates.io/crates/htmlq)\n\n```sh\ncargo install htmlq\n```\n\n### [FreeBSD pkg](https://www.freshports.org/textproc/htmlq)\n\n```sh\npkg install htmlq\n```\n\n### [Homebrew](https://formulae.brew.sh/formula/htmlq)\n\n```sh\nbrew install htmlq\n```\n\n### [Scoop](https://scoop.sh/)\n\n```sh\nscoop install htmlq\n```\n\n## Usage\n\n```console\n$ htmlq -h\nhtmlq 0.4.0\nMichael Maclean <michael@mgdm.net>\nRuns CSS selectors on HTML\n\nUSAGE:\n    htmlq [FLAGS] [OPTIONS] [--] [selector]...\n\nFLAGS:\n    -B, --detect-base          Try to detect the base URL from the <base> tag in the document. If not found, default to\n                               the value of --base, if supplied\n    -h, --help                 Prints help information\n    -w, --ignore-whitespace    When printing text nodes, ignore those that consist entirely of whitespace\n    -p, --pretty               Pretty-print the serialised output\n    -t, --text                 Output only the contents of text nodes inside selected elements\n    -V, --version              Prints version information\n\nOPTIONS:\n    -a, --attribute <attribute>         Only return this attribute (if present) from selected elements\n    -b, --base <base>                   Use this URL as the base for links\n    -f, --filename <FILE>               The input file. Defaults to stdin\n    -o, --output <FILE>                 The output file. Defaults to stdout\n    -r, --remove-nodes <SELECTOR>...    Remove nodes matching this expression before output. May be specified multiple\n                                        times\n\nARGS:\n    <selector>...    The CSS expression to select [default: html]\n$\n```\n\n## Examples\n\n### Using with cURL to find part of a page by ID\n\n```console\n$ curl --silent https://www.rust-lang.org/ | htmlq '#get-help'\n<div class=\"four columns mt3 mt0-l\" id=\"get-help\">\n        <h4>Get help!</h4>\n        <ul>\n          <li><a href=\"https://doc.rust-lang.org\">Documentation</a></li>\n          <li><a href=\"https://users.rust-lang.org\">Ask a Question on the Users Forum</a></li>\n          <li><a href=\"http://ping.rust-lang.org\">Check Website Status</a></li>\n        </ul>\n        <div class=\"languages\">\n            <label class=\"hidden\" for=\"language-footer\">Language</label>\n            <select id=\"language-footer\">\n                <option title=\"English (US)\" value=\"en-US\">English (en-US)</option>\n<option title=\"French\" value=\"fr\">Français (fr)</option>\n<option title=\"German\" value=\"de\">Deutsch (de)</option>\n\n            </select>\n        </div>\n      </div>\n```\n\n### Find all the links in a page\n\n```console\n$ curl --silent https://www.rust-lang.org/ | htmlq --attribute href a\n/\n/tools/install\n/learn\n/tools\n/governance\n/community\nhttps://blog.rust-lang.org/\n/learn/get-started\nhttps://blog.rust-lang.org/2019/04/25/Rust-1.34.1.html\nhttps://blog.rust-lang.org/2018/12/06/Rust-1.31-and-rust-2018.html\n[...]\n```\n\n### Get the text content of a post\n\n```console\n$ curl --silent https://nixos.org/nixos/about.html | htmlq  --text .main\n\n          About NixOS\n\nNixOS is a GNU/Linux distribution that aims to\nimprove the state of the art in system configuration management.  In\nexisting distributions, actions such as upgrades are dangerous:\nupgrading a package can cause other packages to break, upgrading an\nentire system is much less reliable than reinstalling from scratch,\nyou can’t safely test what the results of a configuration change will\nbe, you cannot easily undo changes to the system, and so on.  We want\nto change that.  NixOS has many innovative features:\n\n[...]\n```\n\n### Remove a node before output\n\nThere's a big SVG image in this page that I don't need, so here's how to remove it.\n\n```console\n$ curl --silent https://nixos.org/ | ./target/debug/htmlq '.whynix' --remove-nodes svg\n<ul class=\"whynix\">\n      <li>\n\n        <h2>Reproducible</h2>\n        <p>\n          Nix builds packages in isolation from each other. This ensures that they\n          are reproducible and don't have undeclared dependencies, so <strong>if a\n            package works on one machine, it will also work on another</strong>.\n        </p>\n      </li>\n      <li>\n\n        <h2>Declarative</h2>\n        <p>\n          Nix makes it <strong>trivial to share development and build\n            environments</strong> for your projects, regardless of what programming\n          languages and tools you’re using.\n        </p>\n      </li>\n      <li>\n\n        <h2>Reliable</h2>\n        <p>\n          Nix ensures that installing or upgrading one package <strong>cannot\n            break other packages</strong>. It allows you to <strong>roll back to\n            previous versions</strong>, and ensures that no package is in an\n          inconsistent state during an upgrade.\n        </p>\n      </li>\n    </ul>\n```\n\n### Pretty print HTML\n\n(This is a bit of a work in progress)\n\n```console\n$ curl --silent https://mgdm.net | htmlq --pretty '#posts'\n<section id=\"posts\">\n  <h2>I write about...\n  </h2>\n  <ul class=\"post-list\">\n    <li>\n      <time datetime=\"2019-04-29 00:%i:1556496000\" pubdate=\"\">\n        29/04/2019</time><a href=\"/weblog/nettop/\">\n        <h3>Debugging network connections on macOS with nettop\n        </h3></a>\n      <p>Using nettop to find out what network connections a program is trying to make.\n      </p>\n    </li>\n[...]\n```\n\n### Syntax highlighting with [`bat`](https://github.com/sharkdp/bat)\n\n```console\n$ curl --silent example.com | htmlq 'body' | bat --language html\n```\n\n> <img alt=\"Syntax highlighted output\" width=\"700\" src=\"https://user-images.githubusercontent.com/2346707/132808980-db8991ff-9177-4cb7-a018-39ad94282374.png\" />"
}
