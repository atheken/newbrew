{
  "name": "dmtx-utils",
  "full_name": "dmtx-utils",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Read and write data matrix barcodes",
  "license": "LGPL-2.1",
  "homepage": "https://github.com/dmtx/dmtx-utils",
  "versions": {
    "stable": "0.7.6",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/dmtx/dmtx-utils/archive/v0.7.6.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0d396ec14f32a8cf9e08369a4122a16aa2e5fa1675e02218f16f1ab777ea2a28"
    }
  },
  "revision": 6,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dmtx-utils/blobs/sha256:c147ab73dac9c03562cf06d561a923ba70e30ecb4607d755622d0156805a7892",
          "sha256": "c147ab73dac9c03562cf06d561a923ba70e30ecb4607d755622d0156805a7892"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dmtx-utils/blobs/sha256:81be259b08bd67f4dab389bb326b4adbdd01cd201d5b98c77f4cc72e0f5c669a",
          "sha256": "81be259b08bd67f4dab389bb326b4adbdd01cd201d5b98c77f4cc72e0f5c669a"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dmtx-utils/blobs/sha256:f7e90d8cd99bbedb06dffa5338d64e65307fcb4c98095d897a91466a8da86322",
          "sha256": "f7e90d8cd99bbedb06dffa5338d64e65307fcb4c98095d897a91466a8da86322"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dmtx-utils/blobs/sha256:161997f60768bb9798550757f0a01e2e27434934d9ec8a2b47153a52abe10cd7",
          "sha256": "161997f60768bb9798550757f0a01e2e27434934d9ec8a2b47153a52abe10cd7"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dmtx-utils/blobs/sha256:7a754c6517fc4a35d07c17a34b3bf98d62d85fa6015f11ecd38d92db4e1c0372",
          "sha256": "7a754c6517fc4a35d07c17a34b3bf98d62d85fa6015f11ecd38d92db4e1c0372"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dmtx-utils/blobs/sha256:fa4722a33d220d1f8cd8740c4b6d938e92f8d9b76ab555762cc8c84c72084573",
          "sha256": "fa4722a33d220d1f8cd8740c4b6d938e92f8d9b76ab555762cc8c84c72084573"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dmtx-utils/blobs/sha256:cc7f066604465fcaf850671368291a758eec7fa261d6bbdbde892b798fd0daa1",
          "sha256": "cc7f066604465fcaf850671368291a758eec7fa261d6bbdbde892b798fd0daa1"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "autoconf",
    "automake",
    "pkg-config"
  ],
  "dependencies": [
    "imagemagick",
    "libdmtx",
    "libtool"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/dmtx-utils.rb",
  "ruby_source_checksum": {
    "sha256": "ef81c4ad767f132ac2d3729d687ed8337bc5ce7d50bc77f0e804244abbe75c1d"
  },
  "date_added": "2012-12-16T23:02:33-08:00",
  "readme": "=================================================================\n            libdmtx - Open Source Data Matrix Software\n=================================================================\n\n             dmtx-utils README file (all platforms)\n\nThis summary of the dmtx-utils package applies generally to all\nplatforms. For instructions regarding your specific platform\nplease also read the README.xxx file in this directory that\nmatches your system (e.g., README.linux, README.cygwin,\nREADME.osx, etc...).\n\n\n1. Introduction\n-----------------------------------------------------------------\n\nlibdmtx is a software library that enables programs to read and\nwrite Data Matrix barcodes of the modern ECC200 variety. This\npackage, dmtx-utils, provides command line utilities that allow\nscripts and command line users to use libdmtx functionality.\n\n\n2. Installation\n-----------------------------------------------------------------\n\nIn theory the following 3 steps will compile and install libdmtx\non your system:\n\n  $ ./configure\n  $ make\n  $ sudo make install\n\nHowever, you may need to install additional software for these\nsteps to work properly. Details are provided below to handle\nerror messages or if you want to customize beyond the defaults.\n\nDetails on \"configure\" step\n----------------------------------------\nIf you obtained libdmtx from Git you may have received an error\nlike \"./configure: No such file or directory\". Run this command\nand try again:\n\n  $ ./autogen.sh\n\nThe autogen.sh command requires autoconf, automake, libtool, and\npkgconfig to be installed on your system.\n\nAlso, if you built and installed the libdmtx library from source\nit's like that configure gave you an error similar to this:\n\n  configure: error: dmtxread/dmtxwrite requires libdmtx >= 0.7.0\n\nYou can fix this by telling configure where to find libdmtx.pc:\n\n  $ ./configure PKG_CONFIG_PATH=/usr/local/lib/pkgconfig\n\nNote: This path may be different on your system.\n\nDetails on \"make\" step\n----------------------------------------\nErrors encountered during the \"make\" step are often a result of\nmissing software dependencies. Install any missing software and\ntry again.\n\nDetails on \"sudo make install\" step\n----------------------------------------\nIf the 'sudo' command is not configured on your system then\nalternatively you can yell \"Yeeehaww!\" as you log in as root and\nrun this instead:\n\n  $ make install\n\n\n3. Basic Usage\n-----------------------------------------------------------------\n\nNew users are encouraged to read the man pages for the library\nand command line utilities. However, here are a few simple cases\nto get you started:\n\nThe dmtxwrite utility turns a message into a barcode image. The\nmessage is passed to dmtxwrite via file or standard input, and\nthe output image is written to file or standard output. The\nfollowing examples all produce an equivalent result:\n\n  $ echo -n 123456 | dmtxwrite > image.png\n  $ echo -n 123456 | dmtxwrite -o image.png\n  $ echo -n 123456 > mesg.txt; dmtxwrite mesg.txt > image.png\n  $ dmtxwrite <(echo -n 123456) -o image.png\n\nConversely, the dmtxread utility turns barcode images back into\nmessages. Images are passed to dmtxread via standard input or\nfile, and the output is written to standard output. The following\nexamples will produce an equivalent result:\n\n  $ dmtxread -n image.png\n  $ cat image.png | dmtxread -n\n\nOther typical cases:\n\n  $ dmtxread -n -N1 image1.png image2.png image3.png\n  $ dmtxread -n -N1 -m500 image.png\n\nYou can even combine the utilities like this:\n\n  $ echo 'Hello, world!' | dmtxwrite | dmtxread\n  Hello, world!\n\n  $ dmtxread image1.png | dmtxwrite -o image2.png\n\nNote: In this example the barcode in image2.png might appear\ndifferent than the one in image1.png. Both barcodes will encode\nthe same message, but the overall barcode shape and its internal\nbit pattern might be different.\n\n\n4. Contact\n-----------------------------------------------------------------\n\nProject website:       http://www.libdmtx.org\nDocumentation wiki:    http://libdmtx.wikidot.com\nSourceForge.net page:  http://www.sourceforge.net/projects/libdmtx\nOhLoh.net page:        https://www.ohloh.net/projects/libdmtx\nOpen mailing list:     libdmtx-open_discussion@lists.sourceforge.net\nProfessional support:  www.dragonflylogic.com/products"
}
