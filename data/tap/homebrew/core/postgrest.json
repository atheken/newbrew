{
  "name": "postgrest",
  "full_name": "postgrest",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Serves a fully RESTful API from any existing PostgreSQL database",
  "license": "MIT",
  "homepage": "https://github.com/PostgREST/postgrest",
  "versions": {
    "stable": "11.1.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/PostgREST/postgrest/archive/v11.1.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "47cfeea8d64e2fc0c08bb741d83bddede0679ea7bcb91073b5eb515c8de6e363"
    },
    "head": {
      "url": "https://github.com/PostgREST/postgrest.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/postgrest/blobs/sha256:d86b346e846d864f45c465020465a7c24456878ca14bf5b3d1d7a9d80f56a0a0",
          "sha256": "d86b346e846d864f45c465020465a7c24456878ca14bf5b3d1d7a9d80f56a0a0"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/postgrest/blobs/sha256:399922e197a9a49ad6b30d94a66b8c8915814f07741b39c1dedc1644cd48b83a",
          "sha256": "399922e197a9a49ad6b30d94a66b8c8915814f07741b39c1dedc1644cd48b83a"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/postgrest/blobs/sha256:653675a6b067792b17688186fd948d5bac5bc21da88a8abfc46d8f7931280bbe",
          "sha256": "653675a6b067792b17688186fd948d5bac5bc21da88a8abfc46d8f7931280bbe"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/postgrest/blobs/sha256:b47ebc8fa96d359d1030ed490e2538ce8ec2c2a23eaa44710e6622168c9df1b1",
          "sha256": "b47ebc8fa96d359d1030ed490e2538ce8ec2c2a23eaa44710e6622168c9df1b1"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/postgrest/blobs/sha256:40a33b088db1e419bcb6e8419d714f451922c61c5bda66cf8813d34c57b289d7",
          "sha256": "40a33b088db1e419bcb6e8419d714f451922c61c5bda66cf8813d34c57b289d7"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/postgrest/blobs/sha256:d5249b83d94742a01b4fda1a173365974b8fe243e06706d0e71f1fd1f3db2c31",
          "sha256": "d5249b83d94742a01b4fda1a173365974b8fe243e06706d0e71f1fd1f3db2c31"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/postgrest/blobs/sha256:d0a4d42c63c55b35f30926973ee4573c7d54b4b384791e13f2a937448f7fbf7c",
          "sha256": "d0a4d42c63c55b35f30926973ee4573c7d54b4b384791e13f2a937448f7fbf7c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cabal-install",
    "ghc@9.2"
  ],
  "dependencies": [
    "libpq"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/postgrest.rb",
  "ruby_source_checksum": {
    "sha256": "d5f8ad7bc477c5572ea1bc9ff35c9e7266e209dfb105e4737fb3d535b73cb6be"
  },
  "date_added": "2015-11-05T14:53:29-08:00",
  "readme": "![Logo](static/bigger-logo.png \"Logo\")\n\n[![Donate](https://img.shields.io/badge/Donate-Patreon-orange.svg?colorB=F96854)](https://www.patreon.com/postgrest)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.me/postgrest)\n[![Join the chat at https://gitter.im/begriffs/postgrest](https://img.shields.io/badge/gitter-join%20chat%20%E2%86%92-brightgreen.svg)](https://gitter.im/begriffs/postgrest)\n[![Docs](https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat)](http://postgrest.org)\n[![Docker Stars](https://img.shields.io/docker/pulls/postgrest/postgrest.svg)](https://hub.docker.com/r/postgrest/postgrest/)\n[![Build Status](https://github.com/postgrest/postgrest/actions/workflows/ci.yaml/badge.svg?branch=main)](https://github.com/PostgREST/postgrest/actions?query=branch%3Amain)\n[![Coverage Status](https://img.shields.io/codecov/c/github/postgrest/postgrest/main)](https://app.codecov.io/gh/PostgREST/postgrest)\n[![Hackage docs](https://img.shields.io/hackage/v/postgrest.svg?label=hackage)](http://hackage.haskell.org/package/postgrest)\n\nPostgREST serves a fully RESTful API from any existing PostgreSQL\ndatabase. It provides a cleaner, more standards-compliant, faster\nAPI than you are likely to write from scratch.\n\n## Sponsors\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://www.cybertec-postgresql.com/en/?utm_source=postgrest.org&utm_medium=referral&utm_campaign=postgrest\" target=\"_blank\">\n          <img width=\"222px\" src=\"static/cybertec-new.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://www.2ndquadrant.com/en/?utm_campaign=External%20Websites&utm_source=PostgREST&utm_medium=Logo\" target=\"_blank\">\n          <img width=\"296px\" src=\"static/2ndquadrant.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://tryretool.com/?utm_source=sponsor&utm_campaign=postgrest\" target=\"_blank\">\n          <img width=\"296px\" src=\"static/retool.png\">\n        </a>\n      </td>\n    </tr>\n    <tr></tr>\n    <tr>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://gnuhost.eu/?utm_source=sponsor&utm_campaign=postgrest\" target=\"_blank\">\n          <img width=\"296px\" src=\"static/gnuhost.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://supabase.io?utm_source=postgrest%20backers&utm_medium=open%20source%20partner&utm_campaign=postgrest%20backers%20github&utm_term=homepage\" target=\"_blank\">\n          <img width=\"296px\" src=\"static/supabase.png\">\n        </a>\n      </td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https://oblivious.ai/?utm_source=sponsor&utm_campaign=postgrest\" target=\"_blank\">\n          <img width=\"296px\" src=\"static/oblivious.jpg\">\n        </a>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\nBig thanks to our sponsors! You can join them by supporting PostgREST on [Patreon](https://www.patreon.com/postgrest).\n\n## Usage\n\n1. Download the binary ([latest release](https://github.com/PostgREST/postgrest/releases/latest))\n   for your platform.\n2. Invoke for help:\n\n    ```bash\n    postgrest --help\n    ```\n## [Documentation](http://postgrest.org)\n\nLatest documentation is at [postgrest.org](http://postgrest.org). You can contribute to the docs in [PostgREST/postgrest-docs](https://github.com/PostgREST/postgrest-docs).\n\n## Performance\n\nTLDR; subsecond response times for up to 2000 requests/sec on Heroku\nfree tier. If you're used to servers written in interpreted languages,\nprepare to be pleasantly surprised by PostgREST performance.\n\nThree factors contribute to the speed. First the server is written\nin [Haskell](https://www.haskell.org/) using the\n[Warp](http://www.yesodweb.com/blog/2011/03/preliminary-warp-cross-language-benchmarks)\nHTTP server (aka a compiled language with lightweight threads).\nNext it delegates as much calculation as possible to the database\nincluding\n\n* Serializing JSON responses directly in SQL\n* Data validation\n* Authorization\n* Combined row counting and retrieval\n* Data post in single command (`returning *`)\n\nFinally it uses the database efficiently with the\n[Hasql](https://nikita-volkov.github.io/hasql-benchmarks/) library\nby\n\n* Keeping a pool of db connections\n* Using the PostgreSQL binary protocol\n* Being stateless to allow horizontal scaling\n\n## Security\n\nPostgREST [handles\nauthentication](http://postgrest.org/en/stable/auth.html) (via JSON Web\nTokens) and delegates authorization to the role information defined in\nthe database. This ensures there is a single declarative source of truth\nfor security.  When dealing with the database the server assumes the\nidentity of the currently authenticated user, and for the duration of\nthe connection cannot do anything the user themselves couldn't. Other\nforms of authentication can be built on top of the JWT primitive. See\nthe docs for more information.\n\n## Versioning\n\nA robust long-lived API needs the freedom to exist in multiple\nversions. PostgREST does versioning through database schemas. This\nallows you to expose tables and views without making the app brittle.\nUnderlying tables can be superseded and hidden behind public facing\nviews.\n\n## Self-documentation\n\nPostgREST uses the [OpenAPI](https://openapis.org/) standard to\ngenerate up-to-date documentation for APIs. You can use a tool like\n[Swagger-UI](https://github.com/swagger-api/swagger-ui) to render\ninteractive documentation for demo requests against the live API server.\n\nThis project uses HTTP to communicate other metadata as well.  For\ninstance the number of rows returned by an endpoint is reported by -\nand limited with - range headers. More about\n[that](http://begriffs.com/posts/2014-03-06-beyond-http-header-links.html).\n\n## Data Integrity\n\nRather than relying on an Object Relational Mapper and custom\nimperative coding, this system requires you put declarative constraints\ndirectly into your database. Hence no application can corrupt your\ndata (including your API server).\n\nThe PostgREST exposes HTTP interface with safeguards to prevent\nsurprises, such as enforcing idempotent PUT requests.\n\nSee examples of [PostgreSQL\nconstraints](http://www.tutorialspoint.com/postgresql/postgresql_constraints.htm)\nand the [API guide](http://postgrest.org/en/stable/api.html).\n\n## Supporting development\n\nYou can help PostgREST ongoing maintenance and development by:\n\n- Making a regular donation through Patreon https://www.patreon.com/postgrest\n\n- Alternatively, you can make a one-time donation via Paypal https://www.paypal.me/postgrest\n\nEvery donation will be spent on making PostgREST better for the whole community.\n\n## Thanks\n\nThe PostgREST organization is grateful to:\n\n- The project [sponsors and backers](https://github.com/PostgREST/postgrest/blob/main/BACKERS.md) who support PostgREST's development.\n- The project [contributors](https://github.com/PostgREST/postgrest/graphs/contributors) who have improved PostgREST immensely with their code\n  and good judgement. See more details in the [changelog](https://github.com/PostgREST/postgrest/blob/main/CHANGELOG.md).\n\nThe cool logo came from [Mikey Casalaina](https://github.com/casalaina)."
}
