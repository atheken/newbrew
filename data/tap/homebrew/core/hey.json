{
  "name": "hey",
  "full_name": "hey",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "HTTP load generator, ApacheBench (ab) replacement",
  "license": "Apache-2.0",
  "homepage": "https://github.com/rakyll/hey",
  "versions": {
    "stable": "0.1.4",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/rakyll/hey/archive/v0.1.4.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "944097e62dd0bd5012d3b355d9fe2e7b7afcf13cc0b2c06151e0f4c2babfc279"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hey/blobs/sha256:04967df199323ca6ba0df1731c05185bdba45fb9379369608e2ba43806f6bf40",
          "sha256": "04967df199323ca6ba0df1731c05185bdba45fb9379369608e2ba43806f6bf40"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hey/blobs/sha256:31facd23bb601b3b20819401fd535eb3415ae7849c3989923226e368897c3248",
          "sha256": "31facd23bb601b3b20819401fd535eb3415ae7849c3989923226e368897c3248"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hey/blobs/sha256:45175c81eb26b54fcf4b865e97a3a075ea12a85657884aaf78d2626ee07232fe",
          "sha256": "45175c81eb26b54fcf4b865e97a3a075ea12a85657884aaf78d2626ee07232fe"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hey/blobs/sha256:a4b5c5c6bfe7adc7c696feb4873346f2054ee268a04c483e2a29510d5b8c5d9a",
          "sha256": "a4b5c5c6bfe7adc7c696feb4873346f2054ee268a04c483e2a29510d5b8c5d9a"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hey/blobs/sha256:55e5e3fa15f75e97aae934d9e86319d54af49275eef765241b05415e608c2791",
          "sha256": "55e5e3fa15f75e97aae934d9e86319d54af49275eef765241b05415e608c2791"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hey/blobs/sha256:4a743f02a2abfd8fa424bb9ddc8b65ba3633f6b3b7b216da6763a5fe95c10501",
          "sha256": "4a743f02a2abfd8fa424bb9ddc8b65ba3633f6b3b7b216da6763a5fe95c10501"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hey/blobs/sha256:972cc3f6a520467db11ab9cef3aa5311c6813c203c23bb0173363a00a45cfc07",
          "sha256": "972cc3f6a520467db11ab9cef3aa5311c6813c203c23bb0173363a00a45cfc07"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hey/blobs/sha256:af9934ac04900c142879a97bcc9b376e25f4928239c0bb9bd68fdad0e4174ead",
          "sha256": "af9934ac04900c142879a97bcc9b376e25f4928239c0bb9bd68fdad0e4174ead"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hey/blobs/sha256:67fbe5a4b3574ea9025607e02b56c49572d4f184bcf1ae49fb5cb3eb05ede26c",
          "sha256": "67fbe5a4b3574ea9025607e02b56c49572d4f184bcf1ae49fb5cb3eb05ede26c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hey/blobs/sha256:e5454552b0eb8d412645a0a5211b0566a41d13fc238149177bfddea36ace56e4",
          "sha256": "e5454552b0eb8d412645a0a5211b0566a41d13fc238149177bfddea36ace56e4"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/hey.rb",
  "ruby_source_checksum": {
    "sha256": "cc974267615e1ebaaf2902b2fb50db8a29cfe7b604d2b34d7cd9cf0de086b122"
  },
  "date_added": "2019-06-07T13:47:08+02:00",
  "readme": "![hey](http://i.imgur.com/szzD9q0.png)\n\n[![Build Status](https://travis-ci.org/rakyll/hey.svg?branch=master)](https://travis-ci.org/rakyll/hey)\n\nhey is a tiny program that sends some load to a web application.\n\nhey was originally called boom and was influenced from Tarek Ziade's\ntool at [tarekziade/boom](https://github.com/tarekziade/boom). Using the same name was a mistake as it resulted in cases\nwhere binary name conflicts created confusion.\nTo preserve the name for its original owner, we renamed this project to hey.\n\n## Installation\n\n* Linux 64-bit: https://hey-release.s3.us-east-2.amazonaws.com/hey_linux_amd64\n* Mac 64-bit: https://hey-release.s3.us-east-2.amazonaws.com/hey_darwin_amd64\n* Windows 64-bit: https://hey-release.s3.us-east-2.amazonaws.com/hey_windows_amd64\n\n### Package Managers\n\nmacOS:\n-  [Homebrew](https://brew.sh/) users can use `brew install hey`.\n\n## Usage\n\nhey runs provided number of requests in the provided concurrency level and prints stats.\n\nIt also supports HTTP2 endpoints.\n\n```\nUsage: hey [options...] <url>\n\nOptions:\n  -n  Number of requests to run. Default is 200.\n  -c  Number of workers to run concurrently. Total number of requests cannot\n      be smaller than the concurrency level. Default is 50.\n  -q  Rate limit, in queries per second (QPS) per worker. Default is no rate limit.\n  -z  Duration of application to send requests. When duration is reached,\n      application stops and exits. If duration is specified, n is ignored.\n      Examples: -z 10s -z 3m.\n  -o  Output type. If none provided, a summary is printed.\n      \"csv\" is the only supported alternative. Dumps the response\n      metrics in comma-separated values format.\n\n  -m  HTTP method, one of GET, POST, PUT, DELETE, HEAD, OPTIONS.\n  -H  Custom HTTP header. You can specify as many as needed by repeating the flag.\n      For example, -H \"Accept: text/html\" -H \"Content-Type: application/xml\" .\n  -t  Timeout for each request in seconds. Default is 20, use 0 for infinite.\n  -A  HTTP Accept header.\n  -d  HTTP request body.\n  -D  HTTP request body from file. For example, /home/user/file.txt or ./file.txt.\n  -T  Content-type, defaults to \"text/html\".\n  -a  Basic authentication, username:password.\n  -x  HTTP Proxy address as host:port.\n  -h2 Enable HTTP/2.\n\n  -host\tHTTP Host header.\n\n  -disable-compression  Disable compression.\n  -disable-keepalive    Disable keep-alive, prevents re-use of TCP\n                        connections between different HTTP requests.\n  -disable-redirects    Disable following of HTTP redirects\n  -cpus                 Number of used cpu cores.\n                        (default for current machine is 8 cores)\n```\n\nPreviously known as [github.com/rakyll/boom](https://github.com/rakyll/boom)."
}
