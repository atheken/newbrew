{
  "name": "darksky-weather",
  "full_name": "darksky-weather",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Command-line weather from the darksky.net API",
  "license": "MIT",
  "homepage": "https://github.com/genuinetools/weather",
  "versions": {
    "stable": "0.15.7",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/genuinetools/weather/archive/v0.15.7.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "e5efd17d40d4246998293de6191e39954aee59c5a0f917f319b493a8dc335edb"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/darksky-weather/blobs/sha256:65acd7270545c3451f69c5fb5e3a6fc819c3f86f7ee6f687769ccdf8ce41a86d",
          "sha256": "65acd7270545c3451f69c5fb5e3a6fc819c3f86f7ee6f687769ccdf8ce41a86d"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/darksky-weather/blobs/sha256:3908f2bff7bb30a6c668211e255cdb4edfb073e90db2d4fd75addc316b061fc2",
          "sha256": "3908f2bff7bb30a6c668211e255cdb4edfb073e90db2d4fd75addc316b061fc2"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/darksky-weather/blobs/sha256:d21740455ddc5db0a56e33e5f96dd7248d46b680414f5cff834faf3fb670b618",
          "sha256": "d21740455ddc5db0a56e33e5f96dd7248d46b680414f5cff834faf3fb670b618"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/darksky-weather/blobs/sha256:07f1e787ff616626dcf0e4493d4b7453bf6cf283f8a226899ee67265cd81e4b3",
          "sha256": "07f1e787ff616626dcf0e4493d4b7453bf6cf283f8a226899ee67265cd81e4b3"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/darksky-weather/blobs/sha256:2d45683974e5fb879064182bfde515b4d85945e43916fc11763ae1059c59078d",
          "sha256": "2d45683974e5fb879064182bfde515b4d85945e43916fc11763ae1059c59078d"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/darksky-weather/blobs/sha256:af8fc6e9a4a4ed68bd19daabdce01d846f4e8d88028bccca8c9bec090cf53e29",
          "sha256": "af8fc6e9a4a4ed68bd19daabdce01d846f4e8d88028bccca8c9bec090cf53e29"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/darksky-weather/blobs/sha256:736015c107e06e6251e4007ebc838addfe37ad6fa32683c05fb89be3d1b800f6",
          "sha256": "736015c107e06e6251e4007ebc838addfe37ad6fa32683c05fb89be3d1b800f6"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/darksky-weather/blobs/sha256:a38cef91ca53c2d452353cf3a15198b9946b67e7b601627b5e414359d23fa559",
          "sha256": "a38cef91ca53c2d452353cf3a15198b9946b67e7b601627b5e414359d23fa559"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/darksky-weather/blobs/sha256:8f27ed1995e056157202f4785d0d4d28a8181d77cd0a971d6b778aafcbca7abc",
          "sha256": "8f27ed1995e056157202f4785d0d4d28a8181d77cd0a971d6b778aafcbca7abc"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/darksky-weather.rb",
  "ruby_source_checksum": {
    "sha256": "4a48b1efc57aac04c6215457a1009f9a06b6b86f2d80b4180b258bc2a49e9f58"
  },
  "date_added": "2018-01-07T00:09:07-08:00",
  "readme": "# weather\n\n[![make-all](https://github.com/genuinetools/weather/workflows/make%20all/badge.svg)](https://github.com/genuinetools/weather/actions?query=workflow%3A%22make+all%22)\n[![make-image](https://github.com/genuinetools/weather/workflows/make%20image/badge.svg)](https://github.com/genuinetools/weather/actions?query=workflow%3A%22make+image%22)\n[![GoDoc](https://img.shields.io/badge/godoc-reference-5272B4.svg?style=for-the-badge)](https://godoc.org/github.com/genuinetools/weather)\n[![Github All Releases](https://img.shields.io/github/downloads/genuinetools/weather/total.svg?style=for-the-badge)](https://github.com/genuinetools/weather/releases)\n\nWeather via the command line. Uses the [darksky.net](https://darksky.net) API so it's super accurate. Also includes any current weather alerts in the output.\n\n![Screenshot](screenshot.png)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**\n\n- [Installation](#installation)\n    - [Binaries](#binaries)\n    - [Via Go](#via-go)\n    - [Via Homebrew](#via-homebrew)\n- [Usage](#usage)\n  - [Examples](#examples)\n- [Running the Server](#running-the-server)\n    - [Usage](#usage-1)\n    - [Running with Docker](#running-with-docker)\n- [Contributing](#contributing)\n    - [Makefile Usage](#makefile-usage)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\n#### Binaries\n\nFor installation instructions from binaries please visit the [Releases Page](https://github.com/genuinetools/weather/releases).\n\n#### Via Go\n\n```console\n$ go get github.com/genuinetools/weather\n```\n\n#### Via Homebrew\n\n```console\n$ brew install darksky-weather\n```\n\n## Usage\n\n```console\n$ weather -h\nweather -  Weather forecast via the command line.\n\nUsage: weather <command>\n\nFlags:\n\n  -c              Get location for the ssh client (shorthand) (default: false)\n  -client         Get location for the ssh client (default: false)\n  -d              No. of days to get forecast (shorthand) (default: 0)\n  -days           No. of days to get forecast (default: 0)\n  -hide-icon      Hide the weather icons from being output (default: false)\n  -ignore-alerts  Ignore alerts in weather output (default: false)\n  -l              Location to get the weather (shorthand) (default: <none>)\n  -location       Location to get the weather (default: <none>)\n  -no-forecast    Hide the forecast for the next 16 hours (default: false)\n  -s              Weather API server uri (shorthand) (default: https://geocode.jessfraz.com)\n  -server         Weather API server uri (default: https://geocode.jessfraz.com)\n  -u              System of units (shorthand) (e.g. auto, us, si, ca, uk2) (default: auto)\n  -units          System of units (e.g. auto, us, si, ca, uk2) (default: auto)\n\nCommands:\n\n  version  Show the version information.\n```\n\n### Examples\n\n```bash\n# get the current weather in your current location\n$ weather\n\n# change the units to metric\n$ weather -l \"Paris, France\" -u si\n\n# it will auto guess the units though so changing\n# the location to paris will change the units to `si`\n$ weather -l \"Paris, France\"\n\n# get three days forecast for NY\n$ weather -l 10028 -d 3\n\n# or you can autolocate and get three days forecast\n$ weather -d 3\n\n# get the weather in Manhattan Beach, CA\n# even includes alerts\n$ weather -l \"Manhattan Beach, CA\"\n#                             .;odc\n#                           ;kXNNNO\n#                         .0NNO0NN:\n#                        'XNK; dNNl\n#                        KNX'  'XNK.\n#                       ,NNk    cXNK,\n#                       ,NNk     '0NNO:.\n#                     .'cXNXl;,.   ,xXNNKOxxxk0Xx\n#                 'lOXNNNNNNNNNNXOo'  ':oxkOXNNXc\n#               cKNNKd:'.    ..;d0NNKl    ,xXNK,\n#        .;:cclKNXd.              .oXNXxOXNNXl\n#    .cOXNNNNNNNO.                  .kNNNNNNNXOc.\n#   lXNXx;.    .                      .    .;dXNXo\n#  ONNd.                                       oXN0.\n# dNNo                                          cNNk\n# XNN.                                           NNX\n# 0NN'                                          .NNK\n# ;XN0.                                        .ONNc\n#  ;XNXo.                                    .lXNX:\n#   .oXNX0dlcclx0Xo.              .oXKxlccldOXNXd.\n#      ,lk0KXXK0xKNN0o;..    ..;o0NNKx0KXXX0ko,\n#                 'lOXNNNNNNNNNNXOo,\n#                     :x0XNNX0x:.\n#\n#\n# Current weather is Partly Cloudy in Manhattan Beach in California for July 14 at 4:14am EDT\n# The temperature is 69.2°F, but it feels like 69.2°F\n#\n# Special Weather Statement for Los Angeles, CA\n# ...THREAT OF MONSOONAL THUNDERSTORMS LATE TONIGHT THROUGH WEDNESDAY...\n# A STRONG UPPER LEVEL HIGH PRESSURE SYSTEM CURRENTLY CENTERED OVER NEVADA\n# WILL BRING INCREASING EAST TO SOUTHEAST FLOW OVER SOUTHERN\n# CALIFORNIA. AS A RESULT...A SIGNIFICANT SURGE OF MONSOONAL MOISTURE\n# WILL MOVE INTO SOUTHWEST CALIFORNIA LATE TONIGHT THROUGH WEDNESDAY.\n# THE GREATEST THREAT OF SHOWERS AND THUNDERSTORMS WILL BE ACROSS THE\n# MOUNTAINS AND ANTELOPE VALLEY LATE TONIGHT INTO TUESDAY. DUE TO THE\n# EASTERLY UPPER LEVEL FLOW ON MONDAY...THERE WILL ALSO BE A SLIGHT\n# CHANCE OF SHOWERS AND THUNDERSTORMS ACROSS MOST COASTAL AND VALLEY\n# AREAS.\n# THE DEEPER MONSOONAL MOISTURE WILL BRING THE POTENTIAL FOR BRIEF HEAVY\n# RAINFALL WITH STORMS THAT DEVELOP ON MONDAY AND TUESDAY...ESPECIALLY\n# ACROSS THE MOUNTAINS AND ANTELOPE VALLEY. WHILE STORMS ARE EXPECTED\n# TO BE FAST MOVING...THERE WILL BE THE POTENTIAL FOR LOCALIZED FLOODING\n# OF ROADWAYS AND ARROYOS. ON TUESDAY...THE THREAT OF THUNDERSTORMS IS\n# EXPECTED TO REMAIN CONFINED TO THE MOUNTAINS AND DESERTS. WITH WEAKER\n# UPPER LEVEL WINDS ON TUESDAY...STORMS WILL LIKELY MOVE SLOWER. AS A\n# RESULT...THERE WILL BE AN INCREASED THREAT OF FLASH FLOODING.\n# IT WILL NOT BE AS HOT ACROSS MUCH OF THE REGION TOMORROW DUE TO THE\n# INCREASED MOISTURE AND CLOUD COVERAGE...WITH INTERIOR SECTIONS\n# GENERALLY REMAINING IN THE 90S. HOWEVER...THERE WILL BE A\n# SIGNIFICANT INCREASE IN HUMIDITY ON MONDAY THAT WILL CONTINUE TO\n# BRING DISCOMFORT.\n# ANYONE PLANNING OUTDOOR ACTIVITIES IN THE MOUNTAINS AND DESERTS\n# DURING THE NEXT FEW DAYS SHOULD CAREFULLY MONITOR THE LATEST\n# NATIONAL WEATHER SERVICE FORECASTS AND STATEMENTS DUE TO THE\n# POTENTIAL HAZARDS ASSOCIATED WITH THUNDERSTORMS.\n#             Created: July 13 at 10:50pm EDT\n#             Expires: July 14 at 7:00pm EDT\n#\n# Ick! The humidity is 85%\n# The nearest storm is 18 miles NE away\n# The wind speed is 3.96 mph SE\n# The cloud coverage is 35%\n# The visibility is 9.58 miles\n# The pressure is 1012.99 mbar\n```\n\n## Running the Server\n\nAPI Server for `weather` command line tool. Connects to the [Google Geocode\nAPI](https://developers.google.com/maps/documentation/geocoding/intro)\nand [darksky.net API](https://darksky.net/dev/docs).\n\n#### Usage\n\n```bash\n$ weather server -h\nUsage: weather server [OPTIONS]\n\nRun a static UI server for a registry.\n\nFlags:\n\n  -cert            path to ssl cert (default: <none>)\n  -darksky-apikey  Key for darksky.net API (default: <none>)\n  -geocode-apikey  Key for Google Maps Geocode API (default: <none>)\n  -key             path to ssl key (default: <none>)\n  -port            port for server to run on (default: 1234)\n```\n\n#### Running with Docker\n\n```console\n$ docker run --restart always -d \\\n    --name weather-server \\\n    -p 1234:1234 \\\n    r.j3ss.co/weather server \\\n    --geocode-apikey \"YOUR_GOOGLE_GEOCODING_APIKEY\" \\\n    --darksky-apikey \"YOUR_DARKSKY.NET_APIKEY\"\n```\n\n## Contributing\n\nPlease do!\n\n#### Makefile Usage\n\n```console\n$ make help\nall                            Runs a clean, build, fmt, lint, test, staticcheck, vet and install\nbuild                          Builds a dynamic executable or package\nbump-version                   Bump the version in the version file. Set BUMP to [ patch | major | minor ]\nclean                          Cleanup any build binaries or packages\ncover                          Runs go test with coverage\ncross                          Builds the cross-compiled binaries, creating a clean directory structure (eg. GOOS/GOARCH/binary)\nfmt                            Verifies all files have been `gofmt`ed\ninstall                        Installs the executable or package\nlint                           Verifies `golint` passes\nrelease                        Builds the cross-compiled binaries, naming them in such a way for release (eg. binary-GOOS-GOARCH)\nstatic                         Builds a static executable\nstaticcheck                    Verifies `staticcheck` passes\ntag                            Create a new git tag to prepare to build a release\ntest                           Runs the go tests\nvet                            Verifies `go vet` passes\n```\n\n[![Analytics](https://ga-beacon.appspot.com/UA-29404280-16/weather/README.md)](https://github.com/genuinetools/weather)"
}
