{
  "name": "mqttui",
  "full_name": "mqttui",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Subscribe to a MQTT Topic or publish something quickly from the terminal",
  "license": "GPL-3.0-or-later",
  "homepage": "https://github.com/EdJoPaTo/mqttui",
  "versions": {
    "stable": "0.19.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/EdJoPaTo/mqttui/archive/refs/tags/v0.19.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "76d39f14920eb1cf1a65239f1e54c840f20b35c2be96f074819be5175427a7e7"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mqttui/blobs/sha256:e9fe6bb6a5753349aecc5cc9de4417502ac4a657eb4a97d3c1ca161ae1c7dfd3",
          "sha256": "e9fe6bb6a5753349aecc5cc9de4417502ac4a657eb4a97d3c1ca161ae1c7dfd3"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mqttui/blobs/sha256:992bd414eb11c5e87b9df377c7764b988f859635639274327f97a658196afbda",
          "sha256": "992bd414eb11c5e87b9df377c7764b988f859635639274327f97a658196afbda"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mqttui/blobs/sha256:549bee00ce591da8f9ffa26555f41edc109f542429c4fa33319a7049f1a51dd1",
          "sha256": "549bee00ce591da8f9ffa26555f41edc109f542429c4fa33319a7049f1a51dd1"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mqttui/blobs/sha256:e1b637bda078e18ab98ee9ab126d36908797370ddb6d2303c4e44084cbae0e41",
          "sha256": "e1b637bda078e18ab98ee9ab126d36908797370ddb6d2303c4e44084cbae0e41"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mqttui/blobs/sha256:415c21b31f21aa9373e0ce1ac136f77a94289209cf14e1a3f4565a2364dccec9",
          "sha256": "415c21b31f21aa9373e0ce1ac136f77a94289209cf14e1a3f4565a2364dccec9"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mqttui/blobs/sha256:e8ab86d2f5ddd55fcc8dff7b9b51e584859e43c78b10a8623f893aebec822e3a",
          "sha256": "e8ab86d2f5ddd55fcc8dff7b9b51e584859e43c78b10a8623f893aebec822e3a"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mqttui/blobs/sha256:89c18d14925c763052ce84b59f259a947856a73dfd70337c30f1cdfde8ae42dc",
          "sha256": "89c18d14925c763052ce84b59f259a947856a73dfd70337c30f1cdfde8ae42dc"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/mqttui.rb",
  "ruby_source_checksum": {
    "sha256": "42c3a9a059c72082eceba2e123de55b2190222454aa466795496dc2bb83bdc46"
  },
  "date_added": "2022-09-23T14:11:31+00:00",
  "readme": "# MQTT TUI\n\n> Subscribe to a MQTT Topic or publish something quickly from the terminal\n\nTaking a look into existing \"lets just view MQTT right now\" or \"quickly publish something\" projects they are always quite bulky and not that fast.\n\nBefore having `mqttui` I used [thomasnordquist/MQTT-Explorer](https://github.com/thomasnordquist/MQTT-Explorer) as it has a great overview of what's going on, a small topic based history and a sorted main view.\nBut having it running its eating up a lot of resources.\n\nPublish something quickly from command line is also not that fun.\nThe feature rich CLI alternative [hivemq/mqtt-cli](https://github.com/hivemq/mqtt-cli) takes some time to do its job and is not as easy to use as it has a lot of flags to specify.\nSubscribing to many topics also isn't as useful to watch at as I hoped for.\n\nThat's why I started building my own terminal based version to quickly watch or publish MQTT stuff.\nIt won't be as feature rich as something like the HiveMQ CLI approach, but it aims at being easy to use and fast.\n\n## Features\n\n### Terminal UI\n\n![Screenshot of the interactive terminal UI](media/tui.png)\n\n```bash\n# Subscribe to everything (#)\nmqttui\n\n# Subscribe to topic\nmqttui \"topic\"\n\n# Subscribe to topic with a specific host (default is mqtt://localhost)\nmqttui --broker \"mqtt://test.mosquitto.org\" \"hello/world\"\n\n# More arguments and details\nmqttui --help\n```\n\n### Publish\n\n```bash\nmqttui publish \"hello\" \"world\"\n\nmqttui publish --retain \"foo/bar\" \"Banana?\"\n\n# More arguments and details\nmqttui publish --help\n```\n\n### Log to stdout\n\n```plaintext\n$ mqttui log \"espHome-co2/sensor/#\" \"espHome-test/sensor/temperature/state\"\nRETAINED     espHome-co2/sensor/rssi/state                      QoS:AtMostOnce  Payload(  6): -80.09\nRETAINED     espHome-co2/sensor/co2/state                       QoS:AtMostOnce  Payload(  5): 450.8\nRETAINED     espHome-co2/sensor/temperature/state               QoS:AtMostOnce  Payload(  6): 22.129\nRETAINED     espHome-co2/sensor/humidity/state                  QoS:AtMostOnce  Payload(  5): 25.18\nRETAINED     espHome-test/sensor/temperature/state              QoS:AtMostOnce  Payload(  6): 10.339\n12:10:06.650 espHome-test/sensor/temperature/state              QoS:AtMostOnce  Payload(  6): 10.454\n12:10:39.606 espHome-co2/sensor/co2/state                       QoS:AtMostOnce  Payload(  5): 432.5\n12:10:53.860 espHome-co2/sensor/temperature/state               QoS:AtMostOnce  Payload(  6): 21.974\n12:12:06.644 espHome-test/sensor/temperature/state              QoS:AtMostOnce  Payload(  6): 10.536\n12:12:39.556 espHome-co2/sensor/co2/state                       QoS:AtMostOnce  Payload(  5): 404.3\n12:12:53.859 espHome-co2/sensor/temperature/state               QoS:AtMostOnce  Payload(  6): 21.921\n12:13:20.146 espHome-co2/sensor/humidity/state                  QoS:AtMostOnce  Payload(  5): 25.11\n12:13:27.906 espHome-co2/sensor/rssi/state                      QoS:AtMostOnce  Payload(  6): -79.81\n12:14:06.643 espHome-test/sensor/temperature/state              QoS:AtMostOnce  Payload(  6): 10.568\n```\n\n```bash\n# Subscribe to topic\nmqttui log \"topic\"\n\n# Multiple topics\nmqttui log \"topic1\" \"topic2\"\n\n# More arguments and details\nmqttui log --help\n```\n\n### Read a single payload to stdout\n\nIn scripts, it's helpful to get the current payload of a specific topic.\n\n```bash\n# Print the first received message to stdout and the topic to stderr\nmqttui read-one room/temp\n\n# Save the payload to a bash variable to use it\ntemp=$(mqttui read-one room/temp)\necho \"The temperature is $temp right now\"\n\n# Wait for a non retained message (default when there is none)\ntemp=$(mqttui read-one --ignore-retained room/temp)\necho \"Breaking news: We just received an updated temperature of $temp\"\n\n# More arguments and details\nmqttui read-one --help\n```\n\n### Clean retained topics\n\nUse the interactive TUI and press Delete or Backspace on a topic to clean the tree or use the subcommand.\n\n![Screenshot of the tui with the cleaning dialog open](media/clean-interactive.png)\n\n```plaintext\n$ mqttui publish --retain \"hello\" \"world\"\n\n$ mqttui clean-retained \"hello\"\nRETAINED     hello          QoS:AtLeastOnce Payload(  5): world\nCleaned 1 topics\n```\n\n```bash\n# Clean the topic\nmqttui clean-retained \"topic\"\n\n# Clean the topic tree below\nmqttui clean-retained \"topic/#\"\n\n# More arguments and details\nmqttui clean-arguments --help\n```\n\n### Configure via environment variables\n\nSee the `--help` command for environment variables to be set.\n\nPersonally I have set my default broker, so I don't have to use `--broker` all the time:\n\n```bash\nexport MQTTUI_BROKER=mqtt://pi-home.local\n\n# Use the command without specifying the broker every time\nmqttui \"topic\"\n```\n\n## Install\n\n### Prebuilt\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/mqttui.svg)](https://repology.org/project/mqttui/versions)\n\n#### Arch Linux (AUR)\n\n`paru -S mqttui-bin` or `yay -S mqttui-bin`\n\n#### Homebrew (Mac or Linux)\n\n```bash\nbrew install mqttui\n```\n\n#### Other\n\nCheck the [Releases](https://github.com/EdJoPaTo/mqttui/releases).\n\n### From Source\n\n- Clone this repository\n- `cargo install --path .`\n\n## Interesting Alternatives\n\n- [thomasnordquist/MQTT-Explorer](https://github.com/thomasnordquist/MQTT-Explorer)\n- [hivemq/mqtt-cli](https://github.com/hivemq/mqtt-cli)"
}
