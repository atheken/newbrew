{
  "name": "simde",
  "full_name": "simde",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Implementations of SIMD intrinsics for systems which don't natively support them",
  "license": "MIT",
  "homepage": "https://github.com/simd-everywhere/simde",
  "versions": {
    "stable": "0.7.6",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/simd-everywhere/simde/archive/v0.7.6.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "c63e6c61392e324728da1c7e5de308cb31410908993a769594f5e21ff8de962b"
    },
    "head": {
      "url": "https://github.com/simd-everywhere/simde.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/simde/blobs/sha256:e236c17b7eb174dbefb648865412d7b59263447f4161fb92fe13fa383b42fbab",
          "sha256": "e236c17b7eb174dbefb648865412d7b59263447f4161fb92fe13fa383b42fbab"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "meson",
    "ninja"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/simde.rb",
  "ruby_source_checksum": {
    "sha256": "d88d6aa7678ea601fceb2df8c2c048a9872a7b473404250a592632ed91775850"
  },
  "date_added": "2021-05-31T06:22:13+00:00",
  "readme": "# SIMD Everywhere\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n[![All Contributors](https://img.shields.io/badge/all_contributors-63-orange.svg?style=flat-square)](#contributors-)\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n[![Chat](https://badges.gitter.im/gitterHQ/gitter.png)](https://matrix.to/#/#simd-everywhere_community:gitter.im)\n[![codecov](https://codecov.io/gh/simd-everywhere/simde/branch/master/graph/badge.svg?token=jcMBoRk0ui)](https://codecov.io/gh/simd-everywhere/simde)\n\nThe SIMDe header-only library provides fast, portable implementations of\n[SIMD intrinsics](https://en.wikipedia.org/wiki/SIMD) on hardware which\ndoesn't natively support them, such as calling [SSE](https://en.wikipedia.org/wiki/Streaming_SIMD_Extensions)\nfunctions on ARM.  There is no performance penalty if the hardware\nsupports the native implementation (*e.g.*, SSE/[AVX](https://en.wikipedia.org/wiki/Advanced_Vector_Extensions)\nruns at full speed on [x86](https://en.wikipedia.org/wiki/X86),\n[NEON](https://en.wikipedia.org/wiki/ARM_architecture#Advanced_SIMD_(Neon)) on [ARM](https://en.wikipedia.org/wiki/ARM_architecture),\n*etc.*).\n\nThis makes porting code to other architectures much easier in a few\nkey ways:\n\nFirst, instead of forcing you to rewrite everything for each\narchitecture, SIMDe lets you get a port up and running almost\neffortlessly.  You can then start working on switching the most\nperformance-critical sections to native intrinsics, improving\nperformance gradually.  SIMDe lets (for example) SSE/AVX and NEON code\nexist side-by-side, in the same implementation.\n\nSecond, SIMDe makes it easier to write code targeting [ISA](https://en.wikipedia.org/wiki/Instruction_set_architecture)\nextensions you don't have convenient access to.  You can run NEON code on your\nx86 machine *without an emulator*.  Obviously you'll eventually want\nto test on the actual hardware you're targeting, but for most\ndevelopment, SIMDe can provide a much easier path.\n\nSIMDe takes a very different approach from most other SIMD abstraction\nlayers in that it aims to expose the entire functionality of the\nunderlying instruction set.  Instead of limiting functionality to the\nlowest common denominator, SIMDe tries to minimize the amount of\neffort required to port while still allowing you the space to optimize\nas needed.\n\nThe current focus is on writing complete portable implementations,\nthough a large number of functions already have accelerated\nimplementations using one (or more) of the following:\n\n * SIMD intrinsics from other ISA extensions (e.g., using NEON to\n   implement SSE).\n * Compiler-specific vector extensions and built-ins such as\n   [`__builtin_shufflevector`](http://clang.llvm.org/docs/LanguageExtensions.html#langext-builtin-shufflevector)\n   and\n   [`__builtin_convertvector`](http://clang.llvm.org/docs/LanguageExtensions.html#langext-builtin-convertvector)\n * Compiler auto-vectorization hints, using:\n   * [OpenMP 4 SIMD](http://www.openmp.org/)\n   * [Cilk Plus](https://www.cilkplus.org/)\n   * [GCC loop-specific pragmas](https://gcc.gnu.org/onlinedocs/gcc/Loop-Specific-Pragmas.html)\n   * [clang pragma loop hint directives](http://llvm.org/docs/Vectorizers.html#pragma-loop-hint-directives)\n\nYou can [try SIMDe online](https://simde.netlify.app/godbolt/demo)\nusing Compiler Explorer and an amalgamated SIMDe header.\n\nIf you have any questions, please feel free to use the\n[issue tracker](https://github.com/simd-everywhere/simde/issues) or the\n[mailing list](https://groups.google.com/forum/#!forum/simde).\n\n## Current Status\n\nThere are currently complete implementations of the following instruction\nset extensions:\n\n* x86 / x86_64\n  * [MMX](https://en.wikipedia.org/wiki/MMX_(instruction_set))\n  * [SSE](https://en.wikipedia.org/wiki/Streaming_SIMD_Extensions)\n  * [SSE2](https://en.wikipedia.org/wiki/SSE2)\n  * [SSE3](https://en.wikipedia.org/wiki/SSE3)\n  * [SSSE3](https://en.wikipedia.org/wiki/SSSE3)\n  * [SSE4.1](https://en.wikipedia.org/wiki/SSE4#SSE4.1)\n  * [AVX](https://en.wikipedia.org/wiki/Advanced_Vector_Extensions)\n  * [AVX2](https://en.wikipedia.org/wiki/Advanced_Vector_Extensions#Advanced_Vector_Extensions_2)\n  * [F16C](https://en.wikipedia.org/wiki/F16C)\n  * [FMA](https://en.wikipedia.org/wiki/FMA_instruction_set)\n  * [GFNI](https://en.wikipedia.org/wiki/AVX-512#GFNI)\n  * [CLMUL](https://en.wikipedia.org/wiki/CLMUL_instruction_set)\n  * [XOP](https://en.wikipedia.org/wiki/XOP_instruction_set)\n  * [SVML](https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top/compiler-reference/intrinsics/intrinsics-for-intel-advanced-vector-extensions-512-intel-avx-512-instructions/intrinsics-for-arithmetic-operations-1/intrinsics-for-short-vector-math-library-svml-operations.html)\n* WebAssembly\n  * [SIMD128](https://github.com/WebAssembly/simd)\n\nAs well as partial support for many others, including NEON and SVE in\naddition to several AVX-512 extensions.  See the\n[instruction-set-support](https://github.com/simd-everywhere/simde/issues?q=is%3Aissue+is%3Aopen+label%3Ainstruction-set-support+sort%3Aupdated-desc)\nlabel in the issue tracker for details on progress.  If you'd like to\nbe notified when an instruction set is available you may subscribe to\nthe relevant issue.\n\nIf you have a project you're interested in using with SIMDe but we\ndon't yet support all the functions you need, please file an issue\nwith a list of what's missing so we know what to prioritize.\n\nThe default branch is protected so commits never reach it unless\nthey have passed extensive CI checks.  Status badges don't really\nmake sense since they will always be green, but here are the links:\n\n* [GitHub Actions](https://github.com/simd-everywhere/simde/actions)\n* [Cirrus CI](https://cirrus-ci.com/github/simd-everywhere/simde)\n* [Semaphore CI](https://nemequ.semaphoreci.com/projects/simde)\n* [Circle CI](https://app.circleci.com/pipelines/github/simd-everywhere/simde)\n* [AppVeyor](https://ci.appveyor.com/project/nemequ/simde)\n* [Azure Pipelines](https://dev.azure.com/simd-everywhere/SIMDe/_build)\n* [Drone CI](https://cloud.drone.io/simd-everywhere/simde/)\n* [Travis CI](https://app.travis-ci.com/github/simd-everywhere/simde/)\n* [Packit CI](https://dashboard.packit.dev/pipelines)\n\nIf you're adding a new build I suggest Cirrus CI, which is where we\ncurrently have the most room given the number of builds currently on\nthe platform and the quotas for free/open-source usage.  Alternately,\nfeel free to set up another provider (such as\n[Codefresh](https://codefresh.io/),\n[Shippable](https://www.shippable.com/),\n[Bitrise](https://www.bitrise.io/),\n[Werkaer](https://app.wercker.com/), etc.).\n\n*Notice*: we plan on changing the name of the default branch from\n\"master\" to something else soon; we are just trying to wait to see what\nname git settles on so we can be consistent.\n\n## Contributing\n\nFirst off, if you're reading this: thank you! Even considering\ncontributing to SIMDe is very much appreciated!\n\nSIMDe is a fairly large undertaking; there are a *lot* of functions to\nget through and a lot of opportunities for optimization on different\nplatforms, so we're very happy for any help you can provide.\n\nProgrammers of all skill levels are welcome, there are lots of tasks\nwhich are pretty straightforward and don't require any special\nexpertise.\n\nIf you're not sure how you'd like to contribute, please consider taking\na look at [the issue tracker](https://github.com/simd-everywhere/simde/issues).\nThere is a [good first issue](https://github.com/simd-everywhere/simde/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22)\ntag if you want to ease into a your first contributions, but if you're\ninterested in something else please get in touch via the issue tracker;\nwe're happy to help you get a handle on whatever you are interested in.\n\nIf you're interested in implementing currently unimplemented functions,\nthere is [a\nguide](https://github.com/simd-everywhere/simde/wiki/Implementing-a-New-Function)\nexplaining how to add new functions and how to quickly and easily get\na test case in place.  It's a bit rough right now, but if anything is\nunclear please feel free to use the issue tracker to ask about\nanything you're not clear on.\n\n## Usage\n\nFirst, it is important to note that *you do not need two separate\nversions* (one using SIMDe, the other native).  If the native functions\nare available SIMDe will use them, and compilers easily optimize away\nany overhead from SIMDe; all they have to do is some basic inlining.\n`-O2` should be enough, but we strongly recommend `-O3` (or whatever\nflag instructs your compiler to aggressizely optimize) since many of\nthe portable fallbacks are substantially faster with aggressive\nauto-vectorization that isn't enabled at lower optimization levels.\n\nEach instruction set has a separate file; `x86/mmx.h` for MMX,\n`x86/sse.h` for SSE, `x86/sse2.h` for SSE2, and so on.  Just include\nthe header for whichever instruction set(s) you want *instead of the\nnative version* (if you include the native version after SIMDe it will\nresult in compile-time errors if native aliases are enabled).  SIMDe\nwill provide the fastest implementation it can given which extensions\nyou've enabled in your compiler (i.e., if you want to use NEON to\nimplement SSE, you may need to pass something like `-mfpu=neon`\nor `-march=armv8-a+simd`.  See\n[GCC ARM-Options](https://gcc.gnu.org/onlinedocs/gcc/ARM-Options.html)\nfor more information).\n\nIf you define `SIMDE_ENABLE_NATIVE_ALIASES` before including SIMDe\nyou can use the same names as the native functions.  Unfortunately,\nthis is somewhat error-prone due to portability issues in the APIs, so\nit's recommended to only do this for testing.  When\n`SIMDE_ENABLE_NATIVE_ALIASES` is undefined only the versions prefixed\nwith `simde_` will be available; for example, the MMX `_mm_add_pi8`\nintrinsic becomes `simde_mm_add_pi8`, and `__m64` becomes `simde__m64`.\n\nSince SIMDe is meant to be portable, many functions which assume types\nare of a specific size have been altered to use fixed-width types\ninstead.  For example, Intel's APIs use `char` for signed 8-bit\nintegers, but `char` on ARM is generally unsigned.  SIMDe uses `int8_t`\nto make the API portable, but that means your code may require some\nminor changes (such as using `int8_t` instead of `char`) to work on\nother platforms.\n\nThat said, the changes are usually quite minor.  It's often enough to\njust use search and replace, manual changes are required pretty\ninfrequently.\n\n### OpenMP 4 SIMD\n\nSIMDe makes extensive use of annotations to help the compiler vectorize\ncode.  By far the best annotations use the SIMD support built in to\nOpenMP 4, so if your compiler supports these annotations we strongly\nrecommend you enable them.\n\nIf you are already using OpenMP, SIMDe will automatically detect it\nusing the `_OPENMP` macro and no further action is required.\n\nSome compilers allow you to enable OpenMP SIMD *without* enabling the\nfull OpenMP.  In such cases there is no runtime dependency on OpenMP\nand no runtime overhead; SIMDe will just be faster.  Unfortunately,\nSIMDe has no way to detect such situations (the `_OPENMP` macro is not\ndefined), so after enabling it in your compiler you'll need to define\n`SIMDE_ENABLE_OPENMP` (e.g., by passing `-DSIMDE_ENABLE_OPENMP`) to get\nSIMDe to output the relevant pragmas.\n\nEnabling OpenMP SIMD support varies by compiler:\n\n * GCC 4.9+ and clang 6+ support a `-fopenmp-simd` command line flag.\n * ICC supports a `-qopenmp-simd` command line flag.\n * MCST's LCC enables OpenMP SIMD by default, so no flags are needed\n   (technically you don't even need to pass `-DSIMDE_ENABLE_OPENMP`).\n\nWe are not currently aware of any other compilers which allow you to\nenable OpenMP SIMD support without enabling full OpenMP (if you are\nplease file an issue to let us know).  You should determine whether you\nwish to enable full OpenMP support on a case-by-case basis, but it is\nlikely that the overhead of linking to (but not using) the OpenMP\nruntime library will be dwarfed by the performance improvements from\nusing the OpenMP SIMD annotations in SIMDe.\n\nIf you choose not to use OpenMP SIMD, SIMDe also supports\nusing [Cilk Plus](https://www.cilkplus.org/), [GCC loop-specific\npragmas](https://gcc.gnu.org/onlinedocs/gcc/Loop-Specific-Pragmas.html),\nor [clang pragma loop hint\ndirectives](http://llvm.org/docs/Vectorizers.html#pragma-loop-hint-directives),\nthough these are not nearly as effective as OpenMP SIMD and depending\non them will likely result in less efficient code.  All of these are\ndetected automatically by SIMDe, so if they are enabled in your\ncompiler nothing more is required.\n\nIf for some reason you do not wish to enable OpenMP 4 SIMD support even\nthough SIMDe detects it, you should define `SIMDE_DISABLE_OPENMP` prior\nto including SIMDe.\n\n## Portability\n\n### Compilers\n\nSIMDe does depend on some C99 features, though the subset supported by\nMSVC also works.  While we do our best to make sure we provide optimized\nimplementations where they are supported, SIMDe does contain portable\nfallbacks which are designed to work on any C99 compiler.\n\nEvery commit is tested in CI on multiple compilers, platforms, and\nconfigurations, and our test coverage is extremely extensive.\nCurrently tested compilers include:\n\n * GCC versions back to 4.8\n * Clang versions back to 3.8\n * Microsoft Visual Studio back to 12 (2013)\n * IBM XL C/C++\n * Intel C/C++ Compiler (ICC)\n\nI'm generally willing to accept patches to add support for other\ncompilers, as long as they're not too disruptive, *especially* if we\ncan get CI support going.  If using one of our existing CI providers\nisn't an option then other CI platforms can be added.\n\n### Hardware\n\nThe following architectures are tested in CI for every commit:\n\n * x86_64\n * x86\n * AArch64\n * ARMv8\n * ARMv7\n * PPC64\n * MIPS Loongson\n\nWe would love to add more, so patches are extremely welcome!\n\n## Related Projects\n\n * The \"builtins\" module in\n   [portable-snippets](https://github.com/nemequ/portable-snippets)\n   does much the same thing, but for compiler-specific intrinsics\n   (think `__builtin_clz` and `_BitScanForward`), **not** SIMD\n   intrinsics.\n * Intel offers an emulator, the [Intel® Software Development\n   Emulator](https://software.intel.com/en-us/articles/intel-software-development-emulator/)\n   which can be used to develop software which uses Intel intrinsics\n   without having to own hardware which supports them, though it\n   doesn't help for deployment.\n * [Iris](https://github.com/AlexYaruki/iris) is the only other project\n   I'm aware of which is attempting to create portable implementations\n   like SIMDe.  SIMDe is much further along on the Intel side, but Iris\n   looks to be in better shape on ARM.  C++-only, Apache 2.0 license.\n   AFAICT there are no accelerated fallbacks, nor is there a good way to\n   add them since it relies extensively on templates.\n * There are a few projects trying to implement one set with another:\n   * [ARM_NEON_2_x86_SSE](https://github.com/intel/ARM_NEON_2_x86_SSE)\n     — implementing NEON using SSE.  Quite extensive, Apache 2.0\n     license.\n   * [sse2neon](https://github.com/jratcliff63367/sse2neon) —\n     implementing SSE using NEON.  This code has already been merged\n     into SIMDe.\n   * [veclib](https://github.com/IvantheDugtrio/veclib) — implementing\n     SSE2 using AltiVec/VMX, using a non-free IBM library called\n     [powerveclib](https://www.ibm.com/developerworks/community/groups/community/powerveclib/)\n   * [SSE-to-NEON](https://github.com/otim/SSE-to-NEON) — implementing\n     SSE with NEON.  Non-free, C++.\n * [arm-neon-tests](https://github.com/christophe-lyon/arm-neon-tests)\n   contains tests to verify NEON implementations.\n\nIf you know of any other related projects, please [let us\nknow](https://github.com/simd-everywhere/simde/issues/new)!\n\n## Caveats\n\nSometime features can't be emulated.  If SIMDe is operating in native\nmode the functions will work as expected, but if there is no native\nsupport some caveats apply:\n\n * Many functions require <math.h> and/or <fenv.h>.  SIMDe will still\n   work without those headers, but the results of those functions are\n   undefined.\n * x86 / x86_64\n   * SSE\n     * `SIMDE_MM_SET_ROUNDING_MODE()` will use `fesetround()`, altering\n       the global rounding mode.\n     * `simde_mm_getcsr` and `simde_mm_setcsr` only implement bits 13\n       and 14 (rounding mode).\n   * AVX\n     * `simde_mm256_test*` do not set the CF/ZF registers as there is\n       no portable way to implement that functionality.\n     * `simde_mm256_zeroall` and `simde_mm256_zeroupper` are not\n       implemented as there is no portable way to implement that\n       functionality.\n\nAdditionally, there are some known limitations which apply when using\nnative aliases (`SIMDE_ENABLE_NATIVE_ALIASES`):\n\n* On Windows x86 (but not x86_64), some MMX functions and SSE/SSE2\n  functions which use MMX types (__m64) other than for pointers may\n  return incorrect results.\n\nAlso, as mentioned earlier, while some APIs make assumptions about\nbasic types (*e.g.*, `int` is 32 bits), SIMDe does not, so many types\nhave been altered to use portable fixed-width versions such as\n`int32_t`.\n\nIf you find any other differences, please file an issue so we can either fix\nit or add it to the list above.\n\n## Benefactors\n\nSIMDe uses resources provided for free by a number of organizations.\nWhile this shouldn't be taken to imply endorsement of SIMDe, we're\ntremendously grateful for their support:\n\n * [IntegriCloud](https://integricloud.com/) — provides access to a very\n   fast POWER9 server for developing AltiVec/VMX support.\n * [GCC Compile Farm](https://gcc.gnu.org/wiki/CompileFarm) — provides\n   access to a wide range of machines with different architectures for\n   developing support for various ISA extensions.\n * [CodeCov.io](https://codecov.io/) — provides code coverage analysis\n   for our test cases.\n * [Google](https://www.google.com/) ­— financing\n   [Summer of Code](https://summerofcode.withgoogle.com/), substantial\n   amounts of code (Sean Maher's contributions), and an [Open Source Peer\n   Bonus](https://opensource.google/docs/growing/peer-bonus/).\n\nWithout such organizations donating resources, SIMDe wouldn't be nearly\nas useful or usable as it is today.\n\nWe would also like to thank anyone who has helped develop the myriad\nof software on which SIMDe relies, including compilers and analysis\ntools.\n\nFinally, a special thank you to\n[anyone who has contributed](https://github.com/simd-everywhere/simde/graphs/contributors)\nto SIMDe, filed bugs, provided suggestions, or helped with SIMDe\ndevelopment in any way.\n\n## License\n\nSIMDe is distributed under an MIT-style license; see COPYING for\ndetails.\n\n## Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://nemequ.github.io/\"><img src=\"https://avatars0.githubusercontent.com/u/1151?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Evan Nemerson</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=nemequ\" title=\"Code\">💻</a> <a href=\"#content-nemequ\" title=\"Content\">🖋</a> <a href=\"https://github.com/nemequ/simde/commits?author=nemequ\" title=\"Documentation\">📖</a> <a href=\"#example-nemequ\" title=\"Examples\">💡</a> <a href=\"#ideas-nemequ\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#question-nemequ\" title=\"Answering Questions\">💬</a> <a href=\"https://github.com/nemequ/simde/pulls?q=is%3Apr+reviewed-by%3Anemequ\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"https://github.com/nemequ/simde/commits?author=nemequ\" title=\"Tests\">⚠️</a> <a href=\"#tutorial-nemequ\" title=\"Tutorials\">✅</a> <a href=\"#talk-nemequ\" title=\"Talks\">📢</a> <a href=\"https://github.com/nemequ/simde/issues?q=author%3Anemequ\" title=\"Bug reports\">🐛</a> <a href=\"#infra-nemequ\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"#maintenance-nemequ\" title=\"Maintenance\">🚧</a> <a href=\"#projectManagement-nemequ\" title=\"Project Management\">📆</a></td>\n    <td align=\"center\"><a href=\"https://orcid.org/0000-0002-2961-9670\"><img src=\"https://avatars3.githubusercontent.com/u/1330696?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Michael R. Crusoe</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/issues?q=author%3Amr-c\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/nemequ/simde/commits?author=mr-c\" title=\"Code\">💻</a> <a href=\"#eventOrganizing-mr-c\" title=\"Event Organizing\">📋</a> <a href=\"#fundingFinding-mr-c\" title=\"Funding Finding\">🔍</a> <a href=\"#ideas-mr-c\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#infra-mr-c\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"#platform-mr-c\" title=\"Packaging/porting to new platform\">📦</a> <a href=\"https://github.com/nemequ/simde/commits?author=mr-c\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/himanshi18037\"><img src=\"https://avatars1.githubusercontent.com/u/43923076?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>HIMANSHI MATHUR</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=himanshi18037\" title=\"Code\">💻</a> <a href=\"https://github.com/nemequ/simde/commits?author=himanshi18037\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/masterchef2209\"><img src=\"https://avatars0.githubusercontent.com/u/27916352?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Hidayat Khan</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=masterchef2209\" title=\"Code\">💻</a> <a href=\"https://github.com/nemequ/simde/commits?author=masterchef2209\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/rosbif\"><img src=\"https://avatars1.githubusercontent.com/u/553899?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>rosbif</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=rosbif\" title=\"Code\">💻</a> <a href=\"https://github.com/nemequ/simde/commits?author=rosbif\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/nemequ/simde/issues?q=author%3Arosbif\" title=\"Bug reports\">🐛</a> <a href=\"#ideas-rosbif\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"https://github.com/nemequ/simde/commits?author=rosbif\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"http://junaruga.hatenablog.com/\"><img src=\"https://avatars2.githubusercontent.com/u/121989?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jun Aruga</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=junaruga\" title=\"Code\">💻</a> <a href=\"#ideas-junaruga\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#platform-junaruga\" title=\"Packaging/porting to new platform\">📦</a> <a href=\"#infra-junaruga\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"#maintenance-junaruga\" title=\"Maintenance\">🚧</a> <a href=\"https://github.com/nemequ/simde/commits?author=junaruga\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/nemequ/simde/issues?q=author%3Ajunaruga\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://github.com/marmeladema\"><img src=\"https://avatars2.githubusercontent.com/u/1629419?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Élie ROUDNINSKI</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=marmeladema\" title=\"Code\">💻</a> <a href=\"https://github.com/nemequ/simde/commits?author=marmeladema\" title=\"Tests\">⚠️</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"http://www.bache.name\"><img src=\"https://avatars3.githubusercontent.com/u/7937081?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jesper Storm Bache</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=jsbache\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/jeffdaily\"><img src=\"https://avatars1.githubusercontent.com/u/904248?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jeff Daily</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=jeffdaily\" title=\"Code\">💻</a> <a href=\"#infra-jeffdaily\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a></td>\n    <td align=\"center\"><a href=\"https://github.com/yekm\"><img src=\"https://avatars2.githubusercontent.com/u/205196?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Pavel</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=yekm\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/sabarishbollapragada\"><img src=\"https://avatars3.githubusercontent.com/u/36379720?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sabarish Bollapragada</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=sabarishbollapragada\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"http://www.thegavinli.com/\"><img src=\"https://avatars2.githubusercontent.com/u/371529?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Gavin Li</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=gh2o\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"http://www.yiningkarlli.com\"><img src=\"https://avatars0.githubusercontent.com/u/1057198?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Yining Karl Li</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=betajippity\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://www.facebook.com/anirbandey303\"><img src=\"https://avatars1.githubusercontent.com/u/29774651?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Anirban Dey</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=anirbandey303\" title=\"Documentation\">📖</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/Un1Gfn\"><img src=\"https://avatars3.githubusercontent.com/u/28521292?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Darren Ng</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=Un1Gfn\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/FaresSalem\"><img src=\"https://avatars0.githubusercontent.com/u/7736245?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>FaresSalem</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=FaresSalem\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/GorePradnyesh\"><img src=\"https://avatars0.githubusercontent.com/u/843197?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Pradnyesh Gore</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=GorePradnyesh\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/seanptmaher\"><img src=\"https://avatars0.githubusercontent.com/u/39571964?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sean Maher</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=seanptmaher\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://zh.wikipedia.org/wiki/User:Artoria2e5\"><img src=\"https://avatars.githubusercontent.com/u/6459309?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Mingye Wang</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=Artoria2e5\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"http://www.ngzhian.com\"><img src=\"https://avatars.githubusercontent.com/u/1749303?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ng Zhi An</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=ngzhian\" title=\"Code\">💻</a> <a href=\"https://github.com/nemequ/simde/commits?author=ngzhian\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Glitch18\"><img src=\"https://avatars.githubusercontent.com/u/30515829?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Atharva Nimbalkar</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=Glitch18\" title=\"Code\">💻</a> <a href=\"https://github.com/nemequ/simde/commits?author=Glitch18\" title=\"Tests\">⚠️</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/simba611\"><img src=\"https://avatars.githubusercontent.com/u/59763921?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>simba611</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=simba611\" title=\"Code\">💻</a> <a href=\"https://github.com/nemequ/simde/commits?author=simba611\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://ashnewmanjones.com\"><img src=\"https://avatars.githubusercontent.com/u/29983014?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ashleigh Newman-Jones</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=ashnewmanjones\" title=\"Code\">💻</a> <a href=\"https://github.com/nemequ/simde/commits?author=ashnewmanjones\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://alum.mit.edu/www/wrv/\"><img src=\"https://avatars.githubusercontent.com/u/5039686?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Willy R. Vasquez</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=wrv\" title=\"Code\">💻</a> <a href=\"#maintenance-wrv\" title=\"Maintenance\">🚧</a> <a href=\"https://github.com/nemequ/simde/commits?author=wrv\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://cs.stanford.edu/~keithw\"><img src=\"https://avatars.githubusercontent.com/u/208955?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Keith Winstein</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=keithw\" title=\"Code\">💻</a> <a href=\"#maintenance-keithw\" title=\"Maintenance\">🚧</a> <a href=\"https://github.com/nemequ/simde/commits?author=keithw\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/SoapGentoo\"><img src=\"https://avatars.githubusercontent.com/u/16636962?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>David Seifert</b></sub></a><br /><a href=\"#maintenance-SoapGentoo\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://mirdita.de\"><img src=\"https://avatars.githubusercontent.com/u/63657?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Milot Mirdita</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=milot-mirdita\" title=\"Code\">💻</a> <a href=\"#maintenance-milot-mirdita\" title=\"Maintenance\">🚧</a> <a href=\"https://github.com/nemequ/simde/commits?author=milot-mirdita\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"http://bitpatch.com\"><img src=\"https://avatars.githubusercontent.com/u/4021602?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>aqrit</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=aqrit\" title=\"Code\">💻</a> <a href=\"#maintenance-aqrit\" title=\"Maintenance\">🚧</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/dgazzoni\"><img src=\"https://avatars.githubusercontent.com/u/17934171?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Décio Luiz Gazzoni Filho</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=dgazzoni\" title=\"Code\">💻</a> <a href=\"#maintenance-dgazzoni\" title=\"Maintenance\">🚧</a> <a href=\"https://github.com/nemequ/simde/commits?author=dgazzoni\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"http://vk.com/muzzdiez\"><img src=\"https://avatars.githubusercontent.com/u/16463967?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Igor Molchanov</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=makise-homura\" title=\"Code\">💻</a> <a href=\"#maintenance-makise-homura\" title=\"Maintenance\">🚧</a> <a href=\"#platform-makise-homura\" title=\"Packaging/porting to new platform\">📦</a></td>\n    <td align=\"center\"><a href=\"https://github.com/anrodrig\"><img src=\"https://avatars.githubusercontent.com/u/35815808?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Andrew Rodriguez</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=anrodrig\" title=\"Code\">💻</a> <a href=\"#maintenance-anrodrig\" title=\"Maintenance\">🚧</a> <a href=\"https://github.com/nemequ/simde/commits?author=anrodrig\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Changqing-JING\"><img src=\"https://avatars.githubusercontent.com/u/59640930?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Changqing  Jing</b></sub></a><br /><a href=\"#maintenance-Changqing-JING\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"http://jpcima.sdf1.org/\"><img src=\"https://avatars.githubusercontent.com/u/17614485?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>JP Cimalando</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=jpcima\" title=\"Code\">💻</a> <a href=\"#infra-jpcima\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a></td>\n    <td align=\"center\"><a href=\"https://flygoat.com/\"><img src=\"https://avatars.githubusercontent.com/u/5955297?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jiaxun Yang</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=FlyGoat\" title=\"Code\">💻</a> <a href=\"#platform-FlyGoat\" title=\"Packaging/porting to new platform\">📦</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ktgw0316\"><img src=\"https://avatars.githubusercontent.com/u/3116763?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Masahiro Kitagawa</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=ktgw0316\" title=\"Code\">💻</a> <a href=\"https://github.com/nemequ/simde/commits?author=ktgw0316\" title=\"Tests\">⚠️</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/operasfantom\"><img src=\"https://avatars.githubusercontent.com/u/31903947?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Pavel Iatchenii</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=operasfantom\" title=\"Code\">💻</a> <a href=\"https://github.com/nemequ/simde/commits?author=operasfantom\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://tommyvct.tk\"><img src=\"https://avatars.githubusercontent.com/u/7903172?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Tommy Vercetti</b></sub></a><br /><a href=\"#maintenance-tommyvct\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/rscohn2\"><img src=\"https://avatars.githubusercontent.com/u/1936730?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Robert Cohn</b></sub></a><br /><a href=\"#maintenance-rscohn2\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/adamnovak\"><img src=\"https://avatars.githubusercontent.com/u/5062495?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Adam Novak</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=adamnovak\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/boris-kuz\"><img src=\"https://avatars.githubusercontent.com/u/18011434?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>boris-kuz</b></sub></a><br /><a href=\"#maintenance-boris-kuz\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Epixu\"><img src=\"https://avatars.githubusercontent.com/u/1529601?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Dimo Markov</b></sub></a><br /><a href=\"#maintenance-Epixu\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://dhbloo.github.io/\"><img src=\"https://avatars.githubusercontent.com/u/32353216?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>dblue</b></sub></a><br /><a href=\"#maintenance-dhbloo\" title=\"Maintenance\">🚧</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/zekehul\"><img src=\"https://avatars.githubusercontent.com/u/8780526?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>zekehul</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=zekehul\" title=\"Code\">💻</a> <a href=\"#maintenance-zekehul\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://open-cells.com\"><img src=\"https://avatars.githubusercontent.com/u/40661368?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Laurent Thomas</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=LaurentThomas\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/maxbachmann\"><img src=\"https://avatars.githubusercontent.com/u/44199644?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Max Bachmann</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=maxbachmann\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/psaab\"><img src=\"https://avatars.githubusercontent.com/u/196946?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>psaab</b></sub></a><br /><a href=\"#maintenance-psaab\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"http://superduper.net/\"><img src=\"https://avatars.githubusercontent.com/u/515813?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sam Clegg</b></sub></a><br /><a href=\"#maintenance-sbc100\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/tlively52\"><img src=\"https://avatars.githubusercontent.com/u/7121787?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Thomas Lively</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/issues?q=author%3Atlively\" title=\"Bug reports\">🐛</a> <a href=\"#ideas-tlively\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#maintenance-tlively\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"http://blog.coderzh.com/\"><img src=\"https://avatars.githubusercontent.com/u/329164?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>coderzh</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=coderzh\" title=\"Code\">💻</a> <a href=\"https://github.com/nemequ/simde/commits?author=coderzh\" title=\"Tests\">⚠️</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/k-dominik\"><img src=\"https://avatars.githubusercontent.com/u/24434157?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Dominik Kutra</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/commits?author=k-dominik\" title=\"Code\">💻</a> <a href=\"https://github.com/nemequ/simde/commits?author=k-dominik\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Lithrein\"><img src=\"https://avatars.githubusercontent.com/u/207981?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Lithrein</b></sub></a><br /><a href=\"#maintenance-Lithrein\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/quyykk\"><img src=\"https://avatars.githubusercontent.com/u/85879619?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nick</b></sub></a><br /><a href=\"#maintenance-quyykk\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/thomasdwu\"><img src=\"https://avatars.githubusercontent.com/u/6819659?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>thomasdwu</b></sub></a><br /><a href=\"#maintenance-thomasdwu\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Remnant44\"><img src=\"https://avatars.githubusercontent.com/u/54461740?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Stephen</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/issues?q=author%3ARemnant44\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://github.com/johnplatts\"><img src=\"https://avatars.githubusercontent.com/u/28941113?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>John Platts</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/issues?q=author%3Ajohnplatts\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://github.com/tycho\"><img src=\"https://avatars.githubusercontent.com/u/29616?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Steven Noonan</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/issues?q=author%3Atycho\" title=\"Bug reports\">🐛</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/p0nce\"><img src=\"https://avatars.githubusercontent.com/u/1067485?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>p0nce </b></sub></a><br /><a href=\"https://github.com/nemequ/simde/issues?q=author%3Ap0nce\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://bonedaddy.net/pabs3/\"><img src=\"https://avatars.githubusercontent.com/u/328602?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Paul Wise</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/issues?q=author%3Apabs3\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://github.com/easyaspi314\"><img src=\"https://avatars.githubusercontent.com/u/6258309?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>easyaspi314 (Devin)</b></sub></a><br /><a href=\"https://github.com/nemequ/simde/issues?q=author%3Aeasyaspi314\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/nemequ/simde/commits?author=easyaspi314\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/JonLiu1993\"><img src=\"https://avatars.githubusercontent.com/u/63675417?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>JonLiu1993</b></sub></a><br /><a href=\"#platform-JonLiu1993\" title=\"Packaging/porting to new platform\">📦</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Cheney-W\"><img src=\"https://avatars.githubusercontent.com/u/38240633?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Cheney Wang</b></sub></a><br /><a href=\"#platform-Cheney-W\" title=\"Packaging/porting to new platform\">📦</a></td>\n    <td align=\"center\"><a href=\"http://myd7349.github.io/\"><img src=\"https://avatars.githubusercontent.com/u/5435649?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>myd7349 </b></sub></a><br /><a href=\"#platform-myd7349\" title=\"Packaging/porting to new platform\">📦</a></td>\n    <td align=\"center\"><a href=\"https://github.com/chausner\"><img src=\"https://avatars.githubusercontent.com/u/15180557?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>chausner</b></sub></a><br /><a href=\"#platform-chausner\" title=\"Packaging/porting to new platform\">📦</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind are welcome!"
}
