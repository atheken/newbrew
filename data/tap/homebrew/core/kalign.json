{
  "name": "kalign",
  "full_name": "kalign",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Fast multiple sequence alignment program for biological sequences",
  "license": "GPL-3.0-or-later",
  "homepage": "https://github.com/TimoLassmann/kalign",
  "versions": {
    "stable": "3.3.5",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/TimoLassmann/kalign/archive/v3.3.5.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "75f3a127d2a9eef1eafd931fb0785736eb3f82826be506e7edd00daf1ba26212"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/kalign/blobs/sha256:5635f39d21c03d166f1f2b603618772cfbf40b5ef868ff819992d25ffc0540be",
          "sha256": "5635f39d21c03d166f1f2b603618772cfbf40b5ef868ff819992d25ffc0540be"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/kalign/blobs/sha256:d2834f77050ed2916a4e52b62453c600db111bcf9f4dc5170ae0a0b7bf59ff2d",
          "sha256": "d2834f77050ed2916a4e52b62453c600db111bcf9f4dc5170ae0a0b7bf59ff2d"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/kalign/blobs/sha256:b34f64c5649ab5d5f72f8575f321444576e07012de69ce4d4c8d2f962c75189d",
          "sha256": "b34f64c5649ab5d5f72f8575f321444576e07012de69ce4d4c8d2f962c75189d"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/kalign/blobs/sha256:0f376ff405014200846681aeff10fbee9d65b00716cbc9cc7d655bd271b2a78d",
          "sha256": "0f376ff405014200846681aeff10fbee9d65b00716cbc9cc7d655bd271b2a78d"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/kalign/blobs/sha256:01494d9ee7590e523f0de5159c556ff10bd98c03694920d1097e1dc42caaf695",
          "sha256": "01494d9ee7590e523f0de5159c556ff10bd98c03694920d1097e1dc42caaf695"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/kalign/blobs/sha256:c71ad33602a96d843159ce93f7978a2cd274172eca84643a1ee35808e402c2c1",
          "sha256": "c71ad33602a96d843159ce93f7978a2cd274172eca84643a1ee35808e402c2c1"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kalign/blobs/sha256:4a5c4aa4f551894d47d61203c727d204bfc4d7c246cd1b050f6fb04d1e950906",
          "sha256": "4a5c4aa4f551894d47d61203c727d204bfc4d7c246cd1b050f6fb04d1e950906"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/kalign.rb",
  "ruby_source_checksum": {
    "sha256": "71c3f65563df6d3fed0e87dc434d440f91c7d316986ef27b49671aabffbcc2e9"
  },
  "date_added": "2022-08-28T16:05:41+00:00",
  "readme": "<!-- ![C/C++ CI](https://github.com/TimoLassmann/kalign/workflows/C/C++%20CI/badge.svg) -->\n[![CMake](https://github.com/TimoLassmann/kalign/actions/workflows/cmake.yml/badge.svg)](https://github.com/TimoLassmann/kalign/actions/workflows/cmake.yml)\n![CodeQL](https://github.com/TimoLassmann/kalign/workflows/CodeQL/badge.svg)\n\n# Kalign\n\nKalign is a fast multiple sequence alignment program for biological sequences.\n\n# Installation\n\n## Release Tarball\n\nDownload tarball from [releases](https://github.com/TimoLassmann/kalign/releases). Then:\n\n``` bash\ntar -zxvf kalign-<version>.tar.gz\ncd kalign-<version>\nmkdir build \ncd build\ncmake .. \nmake \nmake test \nmake install\n```\n\non macOS, install [brew](https://brew.sh/) then:\n\n``` bash\nbrew install cmake \ngit clone https://github.com/TimoLassmann/kalign.git\ncd kalign\nmkdir build\ncd build \ncmake ..\nmake \nmake test \nmake install\n```\n\n# Usage\n\nThe command line interface of Kalign accepts the following options:\n\n```bash\nUsage: kalign  -i <seq file> -o <out aln> \n\nOptions:\n\n   --format           : Output format. [Fasta]\n   --type             : Alignment type (rna, dna, internal). [rna]\n                        Options: protein, divergent (protein) \n                                 rna, dna, internal (nuc). \n   --gpo              : Gap open penalty. []\n   --gpe              : Gap extension penalty. []\n   --tgpe             : Terminal gap extension penalty. []\n   -n/--nthreads      : Number of threads. [4]\n   --version (-V/-v)  : Prints version. [NA]\n\n\n```\n\n\nKalign expects the input to be a set of unaligned sequences in fasta format or aligned sequences in aligned fasta, MSF or clustal format. If the sequences are already aligned, kalign will remove all gap characters and re-align the sequences. \n\nBy default, Kalign automatically detects whether the input sequences are protein or DNA and selects appropriate alignment parameters. \n\nThe `--type` option gives users more direct control over the alignment parameters. Currently there are five core options:\n\n- `protein`  : uses a the CorBLOSUM66_13plus substituion matrix (default for protein sequence)\n- `divergent`: uses the gonnet 250 substituion matrix \n- `dna`      : default DNA parameters\n  +  5 match score \n  + -4 mismatch score\n  + -8 gap open penalty\n  + -6 gap extension penalty \n  +  0 terminal gap extension penalty\n- `internal` : same as above but terminal gaps set to 8 to encourage gaps within the sequences. \n- `rna`      : parameters optimised for RNA alignments.\n\nThe `--gpo`, `--gpe` and `--tgpe` options can be used to further fine tune the parameters.\n\n# Examples\n\nPassing sequences via stdin:\n\n```bash\ncat input.fa | kalign -f fasta > out.afa\n```\n\nCombining multiple input files:\n\n```bash\nkalign seqsA.fa seqsB.fa seqsC.fa -f fasta > combined.afa\n```\n\nAlign sequences and output the alignment in MSF format:\n\n```bash\nkalign -i BB11001.tfa -f msf  -o out.msf\n```\n\nAlign sequences and output the alignment in clustal format:\n\n```bash\nkalign -i BB11001.tfa -f clu -o out.clu\n```\n\nRe-align sequences in an existing alignment:\n\n```bash\nkalign -i BB11001.msf  -o out.afa\n```\n\nReformat existing alignment:\n\n```bash\nkalign -i BB11001.msf -r afa -o out.afa\n```\n\n# Kalign library \n\nTo incorporate Kalign into your own projects you can link to the library like this: \n\n```cmake \nfind_package(kalign)\ntarget_link_libraries(<target> kalign::kalign)\n```\n\nAlternatively, you can include the kalign code directly in your project and link with:\n\n```cmake\nif (NOT TARGET kalign)\n  add_subdirectory(<path_to_kalign>/kalign EXCLUDE_FROM_ALL)\nendif ()\ntarget_link_libraries(<target> kalign::kalign)\n```\n# Benchmark results\n\nHere are some benchmark results. The code to reproduce these figures can be found at [here](scripts/benchmark.org).\n\n## Balibase\n\n![Balibase_scores](https://user-images.githubusercontent.com/8110320/198513840-0e08a634-bb41-4826-bd58-7fc66eae1054.jpeg)\n\n## Bralibase\n\n![Bralibase_scores](https://user-images.githubusercontent.com/8110320/198513850-00e5037f-355f-45ec-828f-ed8d47497272.jpeg)\n\n# Please cite:\n1. Lassmann, Timo. _Kalign 3: multiple sequence alignment of large data sets._ **Bioinformatics** (2019). [pdf](https://academic.oup.com/bioinformatics/advance-article-pdf/doi/10.1093/bioinformatics/btz795/30314127/btz795.pdf)\n\n# Other papers:\n1. Lassmann, Timo, Oliver Frings, and Erik LL Sonnhammer. _Kalign2: high-performance multiple alignment of protein and nucleotide sequences allowing external features._ **Nucleic acids research** 37.3 (2008): 858-865. [Pubmed](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2647288/)\n2. Lassmann, Timo, and Erik LL Sonnhammer. _Kalign: an accurate and fast multiple sequence alignment algorithm._ **BMC bioinformatics** 6.1 (2005): 298. [Pubmed](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1325270/)"
}
