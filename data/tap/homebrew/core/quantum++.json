{
  "name": "quantum++",
  "full_name": "quantum++",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Modern C++ quantum computing library",
  "license": "MIT",
  "homepage": "https://github.com/softwareQinc/qpp",
  "versions": {
    "stable": "4.3.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/softwareQinc/qpp/archive/v4.3.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "cbcc4e894ccb691d870b32255b4a35333f8dd57a1466045278ec6c4d73a5dbc4"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/quantumxx/blobs/sha256:b8b01ca37df6d5b8d071ddd2b91e8a5fd78d79d961e086115255de1ca926dfa8",
          "sha256": "b8b01ca37df6d5b8d071ddd2b91e8a5fd78d79d961e086115255de1ca926dfa8"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "eigen"
  ],
  "test_dependencies": [
    "cmake"
  ],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/quantum++.rb",
  "ruby_source_checksum": {
    "sha256": "303eed52352b54c9e1cde868026b559a9b5960ca1a90b2a35fb14607c1f792a7"
  },
  "date_added": "2023-05-11T19:42:22+00:00",
  "readme": "# Quantum++\n\n## Version 4.3.4 - 14 August 2023\n\n[![GitHub actions](https://github.com/softwareqinc/qpp/actions/workflows/cmake.yml/badge.svg)](https://github.com/softwareQinc/qpp/actions)\n\n---\n\n## About\n\nQuantum++ is a modern C++ general purpose quantum computing library, composed\nsolely of template header files. Quantum++ is written in standard C++17 and has\nvery low external dependencies, using only\nthe [Eigen 3](https://eigen.tuxfamily.org) linear algebra header-only template\nlibrary and, if available, the [OpenMP](https://www.openmp.org/) multiprocessing\nlibrary.\n\nQuantum++ is not restricted to qubit systems or specific quantum information\nprocessing tasks, being capable of simulating arbitrary quantum processes. The\nmain design factors taken in consideration were the ease of use, high\nportability, and high performance. The library's simulation capabilities are\nonly restricted by the amount of available physical memory. On a typical\nmachine (Intel i5 8Gb RAM) Quantum++ can successfully simulate the evolution of\n25 qubits in a pure state or of 12 qubits in a mixed state reasonably fast.\n\nTo report any bugs or ask for additional features/enhancements, please\n[submit an issue](https://github.com/softwareQinc/qpp/issues) with an\nappropriate label.\n\nIf you are interested in contributing to this project, feel free to contact us.\nAlternatively, fork the repository, create a custom branch, add your\ncontribution, then finally create a pull request. If we accept the pull request,\nwe will merge your custom branch with the latest main/development branch. The\nlatter will eventually be merged into a future release version. To contribute,\nit is preferable to have a solid knowledge of modern C++ (preferably C++17 or\nlater), including templates and the standard library, a basic knowledge of\nquantum computing and linear algebra, and working experience\nwith [Eigen 3](https://eigen.tuxfamily.org).\n\nFor additional [Eigen 3](https://eigen.tuxfamily.org) documentation\nsee <https://eigen.tuxfamily.org/dox/>. For a simple\n[Eigen 3](https://eigen.tuxfamily.org) quick ASCII reference see\n<https://eigen.tuxfamily.org/dox/AsciiQuickReference.txt>.\n\nCopyright (c) 2013 - 2023 softwareQ Inc. All rights reserved.\n\n---\n\n## License\n\n[Quantum++](https://github.com/softwareQinc/qpp) is distributed under the MIT\nlicense. Please see the\n[`LICENSE`](https://github.com/softwareQinc/qpp/blob/main/LICENSE) file for more\ndetails.\n\n---\n\n## Installation instructions and further documentation\n\nPlease see the installation guide\n[`INSTALL.md`](https://github.com/softwareQinc/qpp/blob/main/INSTALL.md) and the\ncomprehensive [Wiki](https://github.com/softwareQinc/qpp/wiki) for further\ndocumentation and detailed examples.\n\nTo generate the full official API documentation in both LaTeX and HTML formats\nrun\n[`doxygen`](https://www.doxygen.nl) on\nthe [`Doxyfile`](https://github.com/softwareQinc/qpp/blob/main/Doxyfile) file.\nThe tool `dot` from the [`Graphviz`](https://www.graphviz.org) package must be\ninstalled (`sudo apt-get install graphviz` on Ubuntu/Debian Linux,\nor `brew install graphviz` on macOS). Running `doxygen` will generate the\ndocumentation directory `doc` containing both the HTML and LaTeX documentation.\n\nThe HTML documentation file will be accessible by opening `doc/html/index.html`\nwith the browser of your choice. To generate a PDF file of the documentation,\nrun\n\n```shell\nlatexmk -pdf refman.tex\n```\n\nfrom the `doc/latex` directory or compile the file `doc/latex/refman.tex` with\nyour LaTeX compiler. This will create the `doc/latex/refman.pdf` documentation\nfile. Consult your favourite LaTeX manual for how to compile/build LaTeX files\nunder your specific operating system.\n\n---\n\n## Python 3 wrapper\n\n[pyqpp](https://github.com/softwareQinc/qpp/blob/main/pyqpp) is a Python 3\nwrapper for Quantum++. pyqpp requires the same dependencies as Quantum++, and\ncan be installed using `pip`\n\n```shell\npip install git+https://github.com/softwareQinc/qpp\n```\n\n**Important**: If the installation fails due to your system being unable to\ndetect the location of the Eigen3 matrix library, set the environment variable\n`EIGEN3_INSTALL_DIR` to point to the location of the Eigen3 library\n(include the `include/eigen3` part of the path).\n\nFor more details, please see\n[pyqpp/README.md](https://github.com/softwareQinc/qpp/blob/main/pyqpp/README.md)."
}
