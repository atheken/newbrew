{
  "name": "cjdns",
  "full_name": "cjdns",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Advanced mesh routing system with cryptographic addressing",
  "license": "GPL-3.0-or-later and GPL-2.0-or-later and BSD-3-Clause and MIT",
  "homepage": "https://github.com/cjdelisle/cjdns/",
  "versions": {
    "stable": "22",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/cjdelisle/cjdns/archive/cjdns-v22.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "21b555f7850f94cc42134f59cb99558baaaa18acf4c5544e8647387d4a5019ec"
    },
    "head": {
      "url": "https://github.com/cjdelisle/cjdns.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cjdns/blobs/sha256:43e9dbce680ded6cbe6b0aabbff2d4a5e06c37a0dfbdd62953b026901230ceab",
          "sha256": "43e9dbce680ded6cbe6b0aabbff2d4a5e06c37a0dfbdd62953b026901230ceab"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cjdns/blobs/sha256:9936c5967ebb1f708154585ccde1446d36c9eb88c614b59ae42f96c551f3ccd9",
          "sha256": "9936c5967ebb1f708154585ccde1446d36c9eb88c614b59ae42f96c551f3ccd9"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cjdns/blobs/sha256:2fa20c4991e09b7d63ebd478adfd07fc90a7d2e3b8d63fb5b4e5e22e92c6fa52",
          "sha256": "2fa20c4991e09b7d63ebd478adfd07fc90a7d2e3b8d63fb5b4e5e22e92c6fa52"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cjdns/blobs/sha256:021aebe2db8a0b89fca4649612f9d3732c0a83c6f0b3638834289e0802acde33",
          "sha256": "021aebe2db8a0b89fca4649612f9d3732c0a83c6f0b3638834289e0802acde33"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cjdns/blobs/sha256:8deb77907b473f50757c022df865fbea0df3d7e91ced2f35407064c8172fdc87",
          "sha256": "8deb77907b473f50757c022df865fbea0df3d7e91ced2f35407064c8172fdc87"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cjdns/blobs/sha256:60c3c3fc2c2e62759b79f38e29d6eb8a7518e1c3cc6066c1faa25e4a650b98f3",
          "sha256": "60c3c3fc2c2e62759b79f38e29d6eb8a7518e1c3cc6066c1faa25e4a650b98f3"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cjdns/blobs/sha256:311f9548b046796d787c72c94a536ca5cf0939319d1a2da502af32d837f2d6c9",
          "sha256": "311f9548b046796d787c72c94a536ca5cf0939319d1a2da502af32d837f2d6c9"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "node",
    "python@3.11",
    "rust",
    "six"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/cjdns.rb",
  "ruby_source_checksum": {
    "sha256": "9dc42867df27800f4984ce75d4a12db666546e5695ec2986c6a7bfce100e6941"
  },
  "date_added": "2015-06-15T09:04:42+01:00",
  "readme": "# cjdns\n\n[Русская версия](README_RU.md)\n[Hrvatski](README_HR.md)\n[Svenska](README_SV.md)\n[Ελληνικά](README_GR.md)\n[Deutsch](README_DE.md)\n[繁體中文](README_ZHT.md)\n[简体中文](README_ZHCN.md)\n[Español](README_ES.md)\n[Français](README_FR.md)\n[Português brasileiro](README_PT-BR.md)\n\n#### *Networking Reinvented*\n\nCjdns implements an encrypted IPv6 network using public-key cryptography for\naddress allocation and a distributed hash table for routing. This provides\nnear-zero-configuration networking, and prevents many of the security and\nscalability issues that plague existing networks.\n\n[![Build Status](https://api.travis-ci.org/cjdelisle/cjdns.svg?branch=master)](https://travis-ci.org/cjdelisle/cjdns)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/387/badge)](https://bestpractices.coreinfrastructure.org/projects/387)\n[![tip for next commit](https://tip4commit.com/projects/941.svg)](https://tip4commit.com/github/cjdelisle/cjdns)\n[![irc](https://img.shields.io/badge/irc%20chat-%23cjdns-blue.svg)](https://kiwiirc.com/client/irc.efnet.org/?nick=visitor|?#cjdns)\n![License](https://img.shields.io/github/license/cjdelisle/cjdns.svg)\n\n## Testimonials\n\n    23:26 <@jercos> well, cjdns is now officially more reliable than the open\n                    internet for getting to my cheaper VPSes :|\n\n    12:52 < mariner> so i don't know if it's been done before, and i assume it's\n                     obvious, but I think it's neat. Currently on hype from an\n                     airplane\n\n    00:36 < tester> man sites take so long to load on i2p\n    00:36 < tester> i value speed over anonymity any day\n\n    <DuoNoxSol> it's notably more reliable than the normal internet\n\n    09:46 < Kubuxu> I so love cjdns code base\n\n    <whyrusleeping> my internet is way better now.\n    <whyrusleeping> thanks\n    <whyrusleeping> i'm really upset and sad that its better\n    <whyrusleeping> but also quite happy\n\n    21:01 <@grewalsat> this is amazing. with my workpalce speedtest.net results I get around 6+mb speed, and with my cjdns-gate as vpn network I'm getting like 11-15mb download speed in speedtest.net\n    21:01 <@grewalsat> :P\n    21:01 <@grewalsat> plus, access anything! :D\n\n    <davidar> Yeah, I have to admit I sort of avoided hypeirc because of stuff like that\n\n## Community\n\n* [irc://irc.efnet.org/#cjdns][IRC Web]\n* [Hyperboria][] the largest cjdns network, as of October 2015 there are 2100 nodes.\n* [/r/darknetplan][]\n* [#cjdns on Twitter][]\n* [/r/CJDNS](https://www.reddit.com/r/cjdns/)\n\n\n## Documentation\n\n* [Project Goals](doc/projectGoals.md)\n* [Cjdns Whitepaper](doc/Whitepaper.md)\n* [Cjdns on Wikipedia][]\n\nAdvanced configuration:\n\n* [Setup a cjdns NAT gateway for your LAN](doc/nat-gateway.md)\n* [Install cjdns on OpenIndiana](doc/open-indiana.md)\n\nThank you for your time and interest,\n\nThe cjdns developers.\n\n--------------------------------------------------------------------------------\n\n## How to install cjdns\n\nThese instructions are for Debian-based Linux distributions and macOS. They should be\ninformative enough for use on other distributions - just don't expect them to\nwork verbatim. If you want to know what [operating system's base is go here](https://upload.wikimedia.org/wikipedia/commons/1/1b/Linux_Distribution_Timeline.svg).\n\n### 0. Install dependencies\n\n**You must have Rust/Cargo**, see: https://rustup.rs/ for information about how to install.\n\nIf you have [Node.js](https://nodejs.org/) installed, the build will be slightly faster but this is not necessary.\nIf Node.js is unavailable or an unacceptable version, it will be downloaded and installed in the source tree.\n\n#### Debian-based distro:\n\n    sudo apt-get install nodejs git build-essential python2.7\n\n#### Fedora 22+ based distro:\n\n    sudo dnf install nodejs git\n    sudo dnf install @development-tools\n\n#### RHEL based distro (adds the EPEL repo):\n\n    sudo yum localinstall https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n    sudo yum install nodejs git\n    sudo yum install @development-tools\n   \n#### CentOS Stream 9\n    sudo dnf install nodejs git\n    sudo dnf groupinstall \"Development Tools\"\n    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n\n#### Gentoo\n\n    emerge --ask nodejs sys-devel/gcc dev-lang/python:3.4 dev-vcs/git\n\n#### MacOS:\n\nInstall with [MacPorts](https://www.macports.org/):\n\n    sudo port install cjdns\n\n#### OpenBSD:\n\n    pkg_add git node gcc gmake bash\n\nSelect version gcc-4.8.1p2 or more recent.\n\n#### FreeBSD:\n\nEverything you need is available prebuild in FreeBSD' ports.\n\n    pkg install gmake node\n\n#### Arch:\n\nYou can install cjdns by running:\n\n    pacman -S cjdns\n\nIf you need to build from source, everything you need can be installed like this:\n\n    pacman -S nodejs git base-devel\n\nAlternatively, you may like to install via AUR from the package, `cjdns-git`.\nAfter installation, the configuration file is located at `/etc/cjdroute.conf`.\nTo start the service `cjdns.service`, do:\n\n    systemctl start cjdns\n\nTo stop it:\n\n    systemctl stop cjdns\n\n#### Gentoo:\n\ncjdns is not yet in the main Gentoo repository, so you will have to use an overlay.\nThe easiest way is to use Layman but you can do it by hand, too.\n\n##### Layman:\n\nFirst, you need to install layman.\n\n    emerge layman\n\nIf layman is installed correctly, you can add the overlay\n\n    layman -f\n    layman -a weuxel\n\nFor future update of the overlay use\n\n    layman -S\n\nNow you can install cjdns\n\n    emerge cjdns\n\n##### By hand:\n\nYou will have to clone the overlay repository\n\n    cd /opt\n    git clone https://github.com/Weuxel/portage-weuxel.git\n\nNow tell portage to use this repo\n\n    cd /etc/portage/repos.conf/\n\nCreate a file `portage-weuxel.conf` containing\n\n    [weuxel]\n    location = /opt/portage-weuxel\n    masters = gentoo\n    auto-sync = yes\n\nNow sync\n\n    emerge --sync\n\nAnd install cjdns\n\n    emerge cjdns\n\n#### Automatic crash detection and restart\n\nCopy the the openrc init script from `contrib/openrc` to `/etc/init.d/` and modify the `CONFFILE` and `command` parameter to your needs.\nThen start cjdns by issuing\n\n    /etc/init.d/cjdns start\n\nConfigure the init system to autostart cjdns\n\n    rc-update add cjdns default\n\nCopy the service_restart script `contrib/gentoo/service_restart.sh` to any convenient directory on\nyour system and modify the eMail address. If you do not wish to be notified, comment out the whole line.\nNow add a crontab entry like this\n\n    # Restart crashed Services\n    * * * * *       root\t/path/to/script/service_restart.sh\n\n#### Solus:\n\nDependencies:\n\n    sudo eopkg install nodejs git build-essential system.devel python gcc binutils kernal-headers xorg-server-devel\n\nThen Follow the steps below:\n\n*Sorry for so many steps. A package is being worked on currently*\n\n### 1. Retrieve cjdns from GitHub\n\nClone the repository from GitHub and change to the source directory:\n\n    git clone https://github.com/cjdelisle/cjdns.git cjdns\n    cd cjdns\n\n### 2. Build\n\n    ./do\n\nLook for `Build completed successfully, type ./cjdroute to begin setup.`, then\nproceed below:\n\n--------------------------------------------------------------------------------\n\n## Setup\n\nRun cjdroute without options for HELP:\n\n    ./cjdroute\n\n### 0. Make sure you've got the stuff.\n\nIf you're on macOS, don't worry about this step.\n\n    LANG=C cat /dev/net/tun\n\nIf it says: `cat: /dev/net/tun: File descriptor in bad state` Good!\n\nIf it says: `cat: /dev/net/tun: No such file or directory`, create it using:\n\n    sudo mkdir -p /dev/net &&\n    sudo mknod /dev/net/tun c 10 200 &&\n    sudo chmod 0666 /dev/net/tun\n\nThen `cat /dev/net/tun` again.\n\nIf it says: `cat: /dev/net/tun: Permission denied` You're probably using a VPS\nbased on the OpenVZ virtualization platform. Ask your provider to enable the\nTUN/TAP device - this is standard protocol so they should know exactly what you\nneed.\n\n\n### 1. Generate a new configuration file\n\n    ./cjdroute --genconf >> cjdroute.conf\n\n**Protect your conf file!**\n\nA lost conf file means you lost your password and\nconnections and anyone who connected to you will no longer be able to connect.\nA compromised conf file means that other people can impersonate you on the\nnetwork.\n\nTo generate a conf file with permissions set so that only your user can\nread it and write to it:\n\n    (umask 077 && ./cjdroute --genconf > cjdroute.conf)\n\n\n### 2. Find a friend\n\nTo get into an existing network (e.g. Hyperboria), you need to connect to\nsomeone who is already in the network. This is required for a number of\nreasons:\n\n1. It helps prevent abuse because bad people will be less likely to abuse a\n   system after they were, in an act of human kindness, given access to that\n   system.\n2. This is not intended to overlay The Old Internet, it is intended to replace\n   it. Each connection will in due time be replaced by a wire, a fiber optic\n   cable, or a wireless network connection.\n3. In any case of a disagreement, there will be a \"chain of friends\" linking\n   the people involved so there will already be a basis for coming to a\n   resolution.\n\nTo find a friend, get out there and join our [community](#community). Also, have\na look at the [Hyperboria Map](https://www.fc00.org/) to find peers near you.\n\nYou can also use the geographically assorted list of public peering credentials for joining Hyperboria at [hyperboria/peers](https://github.com/hyperboria/peers).\n\n### 3. Connect your node to your friend's node\n\n**To initiate the connection OUTbound**\n\nIn your conf file, you will see:\n\n``` javascript\n// Nodes to connect to.\n\"connectTo\":\n{\n    // Add connection credentials here to join the network\n    // Ask somebody who is already connected.\n}\n```\n\nA conf file with multiple friend-nodes, setup OUTbound, should look like:\n\n``` javascript\n// Nodes to connect to.\n\"connectTo\":\n{\n    //friend_1 (IPv4: 0.1.2.3; IPv6 fcaa:5bac:66e4:713:cb00:e446:c317:fc39)\n    \"0.1.2.3:45678\":\n    {\n        \"login\": \"k.alexander\"\n        \"password\": \"thisIsNotARealConnection_1\",\n        \"publicKey\": \"thisIsJustForAnExampleDoNotUseThisInYourConfFile_1.k\"\n    },\n\n    //friend_2 (IPv4: 5.1.2.3; IPv6 fcbb:5bac:66e4:713:cb00:e446:c317:fc39)\n    \"5.1.2.3:5678\":\n    {\n        \"login\": \"k.alexander\"\n        \"password\": \"thisIsNotARealConnection_2\",\n        \"publicKey\": \"thisIsJustForAnExampleDoNotUseThisInYourConfFile_2.k\"\n    }\n}\n```\n\nYou can add as many connections as you want to the `connectTo` attribute,\nfollowing JSON syntax.\n\n\n**To allow your friend to initiate the connection INbound**\n\nIn your conf file, you will see:\n\n``` javascript\n\"authorizedPasswords\":\n[\n    // A unique string which is known to the client and server.\n    {\"password\": \"password001\", \"login\": \"default-login\"}\n\n    // More passwords should look like this.\n    // {\"password\": \"password002\", \"login\": \"my-second-peer\"}\n    // {\"password\": \"password003\", \"login\": \"my-third-peer}\n    // {\"password\": \"password004\", \"login\": \"my-fourth-peer\"}\n    ...\n\n    // \"your.external.ip.goes.here:45678\":{\"login\": \"default-login\", \"password\": \"password001\",\"publicKey\":thisisauniqueKEY_001.k\"}\n\n],\n```\n\nA conf file with multiple friend-nodes, setup INbound, should look like:\n``` javascript\n\"authorizedPasswords\":\n[\n    // A unique string which is known to the client and server.\n    {\"password\": \"thisisauniquestring_001\", \"user\": \"k.alexander\"}\n\n    // More passwords should look like this.\n    //William Jevons (IPv4: 0.1.2.3; IPv6 fcaa:5bac:66e4:713:cb00:e446:c317:fc39)\n    {\"password\": \"thisisauniquestring_002\", \"user\": \"William Jevons\"}\n    //Marilyn Patel (IPv4: 5.1.2.3; IPv6 fcbb:5bac:66e4:713:cb00:e446:c317:fc39)\n    {\"password\": \"thisisauniquestring_003\", \"user\": \"Marilyn Patel\"}\n    // {\"password\": \"thisisauniquestring_004\"}\n    ...\n\n    // \"your.external.ip.goes.here:45678\":{\"password\": \"thisisauniquestring_001\",\"publicKey\":thisisauniqueKEY_001.k\"}\n],\n```\n\n\nYou need to give William Jevons (who is making the INbound connection) the following 4 items:\n\n1. Your external IPv4\n2. The port found in your conf file here:\n\n    `// Bind to this port.\n    \"bind\": \"0.0.0.0:yourportnumberishere\",`\n\n3. Their unique password that you uncommented or created: `\"password\": \"thisisauniquestring_002\"`\n4. Your public key: `\"publicKey\": \"thisisauniqueKEY_001.k\"`\n5. His username: \"William Jevons\"\n\nHis login credentials will look something like this (with your IPv4 and port):\n\n```javascript\n\"1.2.3.4:56789\": {\n    \"login\": \"William Jevons\",\n    \"password\": \"thisisauniquestring_002\",\n    \"publicKey\": \"thisIsJustForAnExampleDoNotUseThisInYourConfFile_1.k\"\n}\n```\n\nPlease note that you and your friend can *initiate* a\nconnection either outbound (from YOU --> FRIEND) or inbound (from FRIEND --> YOU)\nbut traffic flows both ways once the connection is established.\n\nSee [doc/configure.md](doc/configure.md) for more details on configuration,\nincluding how to peer with other cjdns nodes over ethernet and wifi.\n\n\n### 4. Secure your system - check for listening services\n\nOnce your node is running, you're now a newly minted IPv6 host. Your operating\nsystem may automatically reconfigure network services to use this new address.\nIf this is not what you intend, you should check to see that you are not\noffering more services than you intended to. ;)\n\nSee [doc/network-services.md](doc/network-services.md) for instructions.\n\n\n### 5. Start it up!\n\n    sudo ./cjdroute < cjdroute.conf\n\nIf you want to have your logs written to a file:\n\n    sudo ./cjdroute < cjdroute.conf > cjdroute.log\n\nTo stop cjdns:\n\n    sudo killall cjdroute\n\nIf you are having problems use `killall cjdroute` to return to sanity. Use\n`pgrep cjdroute` or `top` to see if it running.\n\n**NOTE!**\n\nThis starts cjdns as the root user so it can configure your system\nwithout concern for permissions. To start cjdns as a non-root user, see\n[doc/non-root-user.md](doc/non-root-user.md).\n\n\n### 6. Get in IRC\n\nWelcome to the network! You're now a network administrator. There are\nresponsibilities which come with being a network administrator which include\nbeing available in case there is something wrong with your equipment. You should\nstay on [IRC](#community) so that people can reach you.\n\n\n## Admin interface\n\nWhen cjdroute is up and running, the admin interface will be available at\n`udp://localhost:11234` (this can be changed in the `cjdroute.conf`\nconfiguration file). See [doc/admin-api.md](doc/admin-api.md) for more\ninformation about the admin interface. There are several tools in `contrib/`\nthat can interact with it.\n\nYou can access the admin API with:\n\n* the **Python library**; see [here](contrib/python/README.md).\n* the **Perl library**, maintained by Mikey; see [here](contrib/perl/CJDNS/README).\n\n\n## Reporting issues\n1. Don't report in this repo, please instead report it at https://github.com/hyperboria/bugs/issues\n2. Get on IRC and talk to somebody\n3. What will happen is either\n * Someone feels like fixing it\n * You feel like fixing it\n * Nobody cares about it and it will be forgotten for a while and maybe someone will hit it later\n and fix it or else it will get wiped away in a refactoring\n * Nobody can fix it at the moment but it is considered worth remembering because it has great\n significance to the way the code is developed, in this case it needs to be explained in technical\n terms by someone with strong familiarity with the code. They will make a pull request to the\n docs/bugs directory.\n\n### Security\nSecurity issues should be reported on IRC the same as other bugs. We don't have a closed\ngroup of people with special knowledge so that means the default security reporting method is\nfull disclosure.\n\nSee: [security_specification.md](https://github.com/cjdelisle/cjdns/blob/master/doc/security_specification.md) to see if a\npossible security issue is really a security issue.\n\n[IRC Web]: http://chat.efnet.org/irc.cgi?chan=%23cjdns\n[Hyperboria]: https://hyperboria.net\n[/r/darknetplan]: https://www.reddit.com/r/darknetplan\n[#cjdns on Twitter]: https://twitter.com/hashtag/cjdns\n[Hyperboria Map]: https://www.fc00.org/\n[Buildbots]: https://buildbot.meshwith.me/cjdns/waterfall\n\n[Cjdns on Wikipedia]: https://fr.wikipedia.org/wiki/Cjdns\n[Distributed Hash Table]: https://en.wikipedia.org/wiki/Distributed_hash_table\n[Beyond Pain]: https://lists.torproject.org/pipermail/tor-dev/2012-October/004063.html\n[Kademlia]: https://en.wikipedia.org/wiki/Kademlia\n\n[Tor]: https://www.torproject.org\n[I2P]: https://geti2p.net/en/\n[Freenet]: https://freenetproject.org"
}
