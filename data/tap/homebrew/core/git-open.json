{
  "name": "git-open",
  "full_name": "git-open",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Open GitHub webpages from a terminal",
  "license": "MIT",
  "homepage": "https://github.com/jeffreyiacono/git-open",
  "versions": {
    "stable": "1.3",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/jeffreyiacono/git-open/archive/v1.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "a1217e9b0a76382a96afd33ecbacad723528ec1116381c22a17cc7458de23701"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/git-open/blobs/sha256:b9a415294b615c483c64ea122544f80ccde480db013ced6c62b558c5cdabff74",
          "sha256": "b9a415294b615c483c64ea122544f80ccde480db013ced6c62b558c5cdabff74"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/git-open.rb",
  "ruby_source_checksum": {
    "sha256": "db10acaa29ffdaaad8f29914fe86e7b8c7cedfb59e97226d408be47b3a8e3942"
  },
  "date_added": "2014-03-12T20:54:27-07:00",
  "readme": "# git-open\n\nType less and open repo webpages faster all from your terminal.\n\n`git-open` is a commandline utility that allows you to specify a repo name\nand optionally the author and will then open the matching resource in your\nweb-browser.\n\n## Usage\n\nRequires the name of the repo that you want to open. You can optionally specify\nthe user that owns the repo. If you don't pass in a user name it will fall back\nto what you've specified for `$GITHUB_USER` and if that is not set it will fall\nback to your entry for `git config --get github.user`. (You'd probably have this\nset if you're interested in this script after all!)\n\nFor example, if you want to open up repo `bar` for Github author `foo`, you'd run:\n\n    $ ./git-open.sh foo bar\n\nwhich will open your web-browser to the given user's repo.\n\nIf, on the other hand, you've configured your local git to include a github\nsection and your username is set to `baz` and you want to open your `bar` repo:\n\n    $ ./git-open.sh foo # defaults to `baz` for author name\n\n## Installation\n\nYou can clone the repo into `~/src` and symlink to `~/bin` and use it anywhere:\n\n    $ git clone https://github.com/jeffreyiacono/git-open.git ~/src/git-open\n    $ ln -s ~/src/git-open/git-open.sh ~/bin/git-open\n    $ git-open -h\n    # Usage: /Users/username/bin/git-open [user name] <repo name>\n    # Note: user name will default to $GITHUB_USER or your `git config --get github.user` entry.\n\nAnd make sure `~/bin` is in your `PATH`.\n\n## I'm using Github Enterprise!\n\nWell lucky you. Nice to see that you work for a company that can shell for it!\nIn this case just set `GITHUB_URL` in your shell and the script will default to\nthis value.\n\nFor example, if your company hosts its github install at `git.my-company.com`,\ninclude this in your `~/.bashrc.local` (or where ever you'd like):\n\n    export GITHUB_URL='https://git.my-company.com'\n\n## I need to customize my default username\n\nAgain, we've got you covered: just set `GITHUB_USER` and the script will default\nto this value. If it is not set, we try to pull out what you've configured\nGithub to use (via `git config --get github.user`). Use the same pattern as\nabove to make your desired username available to the script.\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Added some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n## License\n\nCopyright (c) 2019 Jeff Iacono\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
}
