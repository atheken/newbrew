{
  "name": "youplot",
  "full_name": "youplot",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Command-line tool that draw plots on the terminal",
  "license": "MIT",
  "homepage": "https://github.com/red-data-tools/YouPlot/",
  "versions": {
    "stable": "0.4.5",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/red-data-tools/YouPlot/archive/v0.4.5.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "aa7339139bc4ea9aa0b2279e4e8052fde673a60ad47e87d50fde06626dc2b3c3"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/youplot/blobs/sha256:60e92af5e86cc5c29a923a12470c36b6c1bdbe9e3d0549ce483b45974494a090",
          "sha256": "60e92af5e86cc5c29a923a12470c36b6c1bdbe9e3d0549ce483b45974494a090"
        },
        "arm64_monterey": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/youplot/blobs/sha256:397cf683916a6b62eb8ac1a8ca98bb56d3ca3d9fdd725f40702d6f72c7e2bf4b",
          "sha256": "397cf683916a6b62eb8ac1a8ca98bb56d3ca3d9fdd725f40702d6f72c7e2bf4b"
        },
        "arm64_big_sur": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/youplot/blobs/sha256:6a0cc141b2dfc5bcd7a28666ca181799d5b6fbf48dca90ac64e582e7225810a2",
          "sha256": "6a0cc141b2dfc5bcd7a28666ca181799d5b6fbf48dca90ac64e582e7225810a2"
        },
        "ventura": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/youplot/blobs/sha256:13fedf180b967115571c03890214d65cfcaf8607acda2a75dea5b263c47ee3cb",
          "sha256": "13fedf180b967115571c03890214d65cfcaf8607acda2a75dea5b263c47ee3cb"
        },
        "monterey": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/youplot/blobs/sha256:c2d9cddf97b15b474f181f318f97a24a50e50e7e7ca71922cb97248d13935383",
          "sha256": "c2d9cddf97b15b474f181f318f97a24a50e50e7e7ca71922cb97248d13935383"
        },
        "big_sur": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/youplot/blobs/sha256:fbc41b8190ca616ba3794aa5d75fc9121cb15e303fc2f4a7df0926bc74468ff0",
          "sha256": "fbc41b8190ca616ba3794aa5d75fc9121cb15e303fc2f4a7df0926bc74468ff0"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/youplot/blobs/sha256:c14eb0b846c089762f066aef1f2cda5093012274234b92023a331a1bf8e93bdc",
          "sha256": "c14eb0b846c089762f066aef1f2cda5093012274234b92023a331a1bf8e93bdc"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "ruby"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/youplot.rb",
  "ruby_source_checksum": {
    "sha256": "ebc066d858091b8034565e34b9404e758938cc1e39a971a840c7ba4685f759e0"
  },
  "date_added": "2023-02-10T08:55:11+00:00",
  "readme": "<div align=\"center\">\n  <img src=\"logo.svg\">\n  <hr>\n  <a href=\"https://github.com/red-data-tools/YouPlot/actions/workflows/ci.yml\"><img alt=\"Build Status\" src=\"https://github.com/red-data-tools/YouPlot/workflows/test/badge.svg\"></a>\n  <a href=\"https://rubygems.org/gems/youplot/\"><img alt=\"Gem Version\" src=\"https://badge.fury.io/rb/youplot.svg\"></a>\n  <a href=\"https://zenodo.org/badge/latestdoi/283230219\"><img alt=\"DOI\" src=\"https://zenodo.org/badge/283230219.svg\"></a>\n  <a href=\"https://rubydoc.info/gems/youplot/\"><img alt=\"Docs Stable\" src=\"https://img.shields.io/badge/docs-stable-blue.svg\"></a>\n  <a href=\"LICENSE.txt\"><img alt=\"The MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue.svg\"></a>\n  \n  YouPlot is a command line tool that draws plots on the terminal.\n\n  :bar_chart: Powered by [UnicodePlot](https://github.com/red-data-tools/unicode_plot.rb)\n</div>\n\n## Installation\n\n```\nbrew install youplot\n```\n\n```\ngem install youplot\n```\n\n```\nguix install youplot\n```\n\n```\nconda install -c conda-forge ruby\nconda install -c conda-forge compilers\ngem install youplot\n```\n\n## Quick Start\n\n<img alt=\"barplot\" src=\"https://user-images.githubusercontent.com/5798442/101999903-d36a2d00-3d24-11eb-9361-b89116f44122.png\" width=160> <img alt=\"histogram\" src=\"https://user-images.githubusercontent.com/5798442/101999820-21cafc00-3d24-11eb-86db-e410d19b07df.png\" width=160> <img alt=\"scatter\" src=\"https://user-images.githubusercontent.com/5798442/101999827-27284680-3d24-11eb-9903-551857eaa69c.png\" width=160> <img alt=\"density\" src=\"https://user-images.githubusercontent.com/5798442/101999828-2abbcd80-3d24-11eb-902c-2f44266fa6ae.png\" width=160> <img alt=\"boxplot\" src=\"https://user-images.githubusercontent.com/5798442/101999830-2e4f5480-3d24-11eb-8891-728c18bf5b35.png\" width=160>\n\n`uplot <command> [options] <data.tsv>`\n\n### barplot\n\n```sh\ncurl -sL https://git.io/ISLANDScsv \\\n| sort -nk2 -t, \\\n| tail -n15 \\\n| uplot bar -d, -t \"Areas of the World's Major Landmasses\"\n```\n\n<p align=\"center\">\n  <img alt=\"barplot\" src=\"https://user-images.githubusercontent.com/5798442/101999903-d36a2d00-3d24-11eb-9361-b89116f44122.png\">\n</p>\n\n\n\n```sh\n# For offline user: Sorts files in a directory by size and shows a bar graph.\nls -l | awk '{print $9, $5}' | sort -nk 2 | uplot bar -d ' '\n```\n\n### histogram\n\n```sh\necho -e \"from numpy import random;\" \\\n        \"n = random.randn(10000);\"  \\\n        \"print('\\\\\\n'.join(str(i) for i in n))\" \\\n| python3 \\\n| uplot hist --nbins 20\n```\n\n<p align=\"center\">\n  <img alt=\"histogram\" src=\"https://user-images.githubusercontent.com/5798442/101999820-21cafc00-3d24-11eb-86db-e410d19b07df.png\">\n</p>\n\n### lineplot\n\n```sh\ncurl -sL https://git.io/AirPassengers \\\n| cut -f2,3 -d, \\\n| uplot line -d, -w 50 -h 15 -t AirPassengers --xlim 1950,1960 --ylim 0,600\n```\n\n<p align=\"center\">\n  <img alt=\"lineplot\" src=\"https://user-images.githubusercontent.com/5798442/101999825-24c5ec80-3d24-11eb-99f4-c642e8d221bc.png\">\n</p>\n\n```sh\n# For offline users: Calculates sin values (0-2*pi) and plots a sine wave.\npython3 -c '\nfrom math import sin, pi\ndata = \"\\n\".join(f\"{i*pi/50}\\t{sin(i*pi/50)}\" for i in range(101))\nprint(data)' | uplot line\n```\n\n### scatter\n\n```sh\ncurl -sL https://git.io/IRIStsv \\\n| cut -f1-4 \\\n| uplot scatter -H -t IRIS\n```\n\n<p align=\"center\">\n  <img alt=\"scatter\" src=\"https://user-images.githubusercontent.com/5798442/101999827-27284680-3d24-11eb-9903-551857eaa69c.png\">\n</p>\n\n\n```sh\n# For offline users\ncat test/fixtures/iris.csv | cut -f1-4 -d, | uplot scatter -H -d, -t IRIS\n```\n\n### density\n\n```sh\ncurl -sL https://git.io/IRIStsv \\\n| cut -f1-4 \\\n| uplot density -H -t IRIS\n```\n\n<p align=\"center\">\n  <img alt=\"density\" src=\"https://user-images.githubusercontent.com/5798442/101999828-2abbcd80-3d24-11eb-902c-2f44266fa6ae.png\">\n</p>\n\n```sh\n# For offline users\ncat test/fixtures/iris.csv | cut -f1-4 -d, | uplot density -H -d, -t IRIS\n```\n\n### boxplot\n\n```sh\ncurl -sL https://git.io/IRIStsv \\\n| cut -f1-4 \\\n| uplot boxplot -H -t IRIS\n```\n\n<p align=\"center\">\n  <img alt=\"boxplot\" src=\"https://user-images.githubusercontent.com/5798442/101999830-2e4f5480-3d24-11eb-8891-728c18bf5b35.png\">\n</p>\n\n```sh\n# For offline users\ncat test/fixtures/iris.csv | cut -f1-4 -d, | uplot boxplot -H -d, -t IRIS\n```\n\n### count\n\nCount processes by user ID.\n\n```sh\nps aux | awk '{print $1}' | uplot count\n```\n\nCount the number of chromosomes where genes are located. \n\n```sh\ncat gencode.v35.annotation.gff3 \\\n| grep -v '#' | grep 'gene' | cut -f1 \\\n| uplot count -t \"The number of human gene annotations per chromosome\"  -c blue\n```\n\n<p align=\"center\">\n  <img alt=\"count\" src=\"https://user-images.githubusercontent.com/5798442/101999832-30b1ae80-3d24-11eb-96fe-e5000bed1f5c.png\">\n</p>\n\n* [GENCODE - Human Release](https://www.gencodegenes.org/human/)\n\nNote: `count` is not very fast because it runs in a Ruby script.\nThis is fine in most cases, as long as the data size is small. If you want to visualize huge data, it is faster to use a combination of common Unix commands as shown below.\n\n```sh\ncat gencode.v35.annotation.gff3 | grep -v '#' | grep 'gene' | cut -f1 \\\n| sort | uniq -c | sort -nrk1 \\\n| uplot bar --fmt yx -d ' ' -t \"The number of human gene annotations per chromosome\"  -c blue\n```\n\n## Usage\n\n### Commands\n\n`uplot` is the shortened form of `youplot`. You can use either.\n\n| Command                                        | Description                       |\n|------------------------------------------------|-----------------------------------|\n| `cat data.tsv \\| uplot <command> [options]`    | Take input from stdin             |\n| `uplot <command> [options] data.tsv ...`       | Take input from files             |\n| `pipeline1 \\| uplot <command> -O \\| pipeline2` | Outputs data from stdin to stdout |\n\n### Subcommands\n\nThe following sub-commands are available.\n\n| command   | short | how it works                           |\n|-----------|-------|----------------------------------------|\n| barplot   | bar   | draw a horizontal barplot              |\n| histogram | hist  | draw a horizontal histogram            |\n| lineplot  | line  | draw a line chart                      |\n| lineplots | lines | draw a line chart with multiple series |\n| scatter   | s     | draw a scatter plot                    |\n| density   | d     | draw a density plot                    |\n| boxplot   | box   | draw a horizontal boxplot              |\n|           |       |                                        |\n| count     | c     | draw a barplot based on the number of occurrences (slow) |\n|           |       |                                        |\n| colors    | color | show the list of available colors      |\n\n### Output the plot\n\n* `-o`\n  * By default, the plot is output to **standard error output**.\n  * If you want to output to standard input, Use hyphen ` -o -` or no argument `uplot s -o | `.\n\n### Output the input data\n\n* `-O`\n  * By default, the input data is not shown anywhere.\n  * If you want to pass the input data directly to the standard output, Use hyphen `-O -` or no argument `uplot s -O |`.\n  * This is useful when passing data to a subsequent pipeline.\n\n### Header\n\n* `-H`\n  * If input data contains a header line, you need to specify the `-H` option.\n\n### Delimiter\n\n* `-d`\n  * You do not need to use `-d` option for tab-delimited text since the default value is tab.\n  * To specify a blank space, you can use `uplot bar -d ' ' data.txt`. \n\n### Real-time data\n\n* `-p` `--progress`\n  * Experimental progressive mode is currently under development.\n  * `ruby -e 'loop{puts rand(100)}' | uplot line --progress`\n\n### Show detailed options for subcommands\n\n* `--help`\n  * The `--help` option will show more detailed options for each subcommand.\n  * `uplot hist --help`\n\n### Set columns as x-axis or y-axis\n\n* YouPlot treats the first column as the X axis and the second column as the Y axis. When working with multiple series, the first column is the X axis, the second column is series Y1, the third column is series Y2, and so on. \n* If you pass only one column of data for `line` and `bar`, YouPlot will automatically use a sequential number starting from 1 as the X-axis. \n\n* `--fmt`\n  * `--fmt xyy` `--fmt xyxy` `--fmt yx` options give you a few more choices. See `youplot <command> --help` for more details. \n  * The fmt option may be renamed in the future. \n  * The `-x` and `-y` options might be used to specify columns in the future.\n\n* Use `awk '{print $2, $1}'` to swap columns. Use `paste` to concatenate series.\n\n### Categorical data\n\n* With GNU datamash, you can manage to handle categorized data. \n  * `cat test/fixtures/iris.csv | sed '/^$/d' | datamash --header-in --output-delimiter=: -t, -g5 collapse 3,4 | cut -f2-3 -d: | sed 's/:/\\n/g' | uplot s -d, -T --fmt xyxy`\n  * This is not so easy...\n\n### Time series\n\n* Not yet supported.\n\n### YouPlot Configuration (youplotrc)\n\nYou can specify default options in a configuration file in YAML format. For more information, enter the following command.\n\n```\nuplot --config\n```\n\n## Tools that are useful to use with YouPlot\n\n* [csvtk](https://github.com/shenwei356/csvtk)\n* [GNU datamash](https://www.gnu.org/software/datamash/)\n* [awk](https://www.gnu.org/software/gawk/)\n* [xsv](https://github.com/BurntSushi/xsv)\n\n## Contributing\n\nYouPlot is a library under development, so even small improvements like typofix are welcome!\nPlease feel free to send us your pull requests.\n\n* [Report bugs](https://github.com/red-data-tools/YouPlot/issues)\n* Fix bugs and [submit pull requests](https://github.com/red-data-tools/YouPlot/pulls)\n* Write, clarify, or fix documentation\n  * English corrections by native speakers are welcome.\n* Suggest or add new features\n* Make a donation\n\n### Development\n\n```sh\n# fork the main repository by clicking the Fork button. \ngit clone https://github.com/your_name/YouPlot\nbundle install             # Install the gem dependencies\nbundle exec rake test      # Run the test\nbundle exec rake install   # Installation from source code\nbundle exec exe/uplot      # Run youplot (Try out the edited code)\n```\n\n    Do you need commit rights to my repository?\n    Do you want to get admin rights and take over the project?\n    If so, please feel free to contact us.\n\n### Acknowledgements\n\n* [sampo grafiikka](https://jypg.net/sampo_grafiikka) - Project logo creation\n* [yutaas](https://github.com/yutaas) - English proofreading\n\n## License\n\n[MIT License](https://opensource.org/licenses/MIT)."
}
