{
  "name": "gallery-dl",
  "full_name": "gallery-dl",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Command-line downloader for image-hosting site galleries and collections",
  "license": "GPL-2.0-only",
  "homepage": "https://github.com/mikf/gallery-dl",
  "versions": {
    "stable": "1.25.8",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/7b/b1/7695f743070f369d76b802372faeec7a4ff4a43327d8942c54d5f5091eb9/gallery_dl-1.25.8.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "eaad85f73486669d2266806f39422e204a8db3dee16ec6f3136dd72724d95037"
    },
    "head": {
      "url": "https://github.com/mikf/gallery-dl.git",
      "branch": "master"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gallery-dl/blobs/sha256:7cde347e133715c1cda93f8d73ae81ffbc7899ead41697ee73c7046b3e9115e3",
          "sha256": "7cde347e133715c1cda93f8d73ae81ffbc7899ead41697ee73c7046b3e9115e3"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gallery-dl/blobs/sha256:e71a5b4c6b888f5edb545e58214239314f5f553149fa9a91b4e85d425a71ce0a",
          "sha256": "e71a5b4c6b888f5edb545e58214239314f5f553149fa9a91b4e85d425a71ce0a"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gallery-dl/blobs/sha256:7e19519cac80490cd7602fb649f3c7fa32f8a8e95d3fe9b06bff4cc11f31ccb1",
          "sha256": "7e19519cac80490cd7602fb649f3c7fa32f8a8e95d3fe9b06bff4cc11f31ccb1"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gallery-dl/blobs/sha256:086a2a55862f13d7576207ce6338b5bf703950ed2cb395f98eae6dc1ca43245c",
          "sha256": "086a2a55862f13d7576207ce6338b5bf703950ed2cb395f98eae6dc1ca43245c"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gallery-dl/blobs/sha256:524f1a91ba4062dd6e073f65f4523d8b9ae8885a8388d5fe99c3f907b2427827",
          "sha256": "524f1a91ba4062dd6e073f65f4523d8b9ae8885a8388d5fe99c3f907b2427827"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gallery-dl/blobs/sha256:a1e15c23a70318e635bcbdc60f8e82825372f86157d2a0fc0050adb9035b1fc6",
          "sha256": "a1e15c23a70318e635bcbdc60f8e82825372f86157d2a0fc0050adb9035b1fc6"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gallery-dl/blobs/sha256:a407f0a842d7f71ad4248dc7f59ed05849a8b8e99f92b283eed7fdd5dbbff00f",
          "sha256": "a407f0a842d7f71ad4248dc7f59ed05849a8b8e99f92b283eed7fdd5dbbff00f"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/gallery-dl.rb",
  "ruby_source_checksum": {
    "sha256": "3126419deff6c8e06d00425ebf344ab0a5c9c4edb1bbedca7886626a5e94cec6"
  },
  "date_added": "2021-01-10T18:23:56+00:00",
  "readme": "==========\ngallery-dl\n==========\n\n*gallery-dl* is a command-line program\nto download image galleries and collections\nfrom several image hosting sites\n(see `Supported Sites <docs/supportedsites.md>`__).\nIt is a cross-platform tool\nwith many `configuration options <docs/configuration.rst>`__\nand powerful `filenaming capabilities <docs/formatting.md>`__.\n\n\n|pypi| |build|\n\n.. contents::\n\n\nDependencies\n============\n\n- Python_ 3.4+\n- Requests_\n\nOptional\n--------\n\n- FFmpeg_: Pixiv Ugoira conversion\n- yt-dlp_ or youtube-dl_: Video downloads\n- PySocks_: SOCKS proxy support\n- brotli_ or brotlicffi_: Brotli compression support\n- PyYAML_: YAML configuration file support\n- toml_: TOML configuration file support for Python<3.11\n- SecretStorage_: GNOME keyring passwords for ``--cookies-from-browser``\n\n\nInstallation\n============\n\n\nPip\n---\n\nThe stable releases of *gallery-dl* are distributed on PyPI_ and can be\neasily installed or upgraded using pip_:\n\n.. code:: bash\n\n    python3 -m pip install -U gallery-dl\n\nInstalling the latest dev version directly from GitHub can be done with\npip_ as well:\n\n.. code:: bash\n\n    python3 -m pip install -U -I --no-deps --no-cache-dir https://github.com/mikf/gallery-dl/archive/master.tar.gz\n\nNote: Windows users should use :code:`py -3` instead of :code:`python3`.\n\nIt is advised to use the latest version of pip_,\nincluding the essential packages :code:`setuptools` and :code:`wheel`.\nTo ensure these packages are up-to-date, run\n\n.. code:: bash\n\n    python3 -m pip install --upgrade pip setuptools wheel\n\n\nStandalone Executable\n---------------------\n\nPrebuilt executable files with a Python interpreter and\nrequired Python packages included are available for\n\n- `Windows <https://github.com/mikf/gallery-dl/releases/download/v1.25.8/gallery-dl.exe>`__\n  (Requires `Microsoft Visual C++ Redistributable Package (x86) <https://aka.ms/vs/17/release/vc_redist.x86.exe>`__)\n- `Linux   <https://github.com/mikf/gallery-dl/releases/download/v1.25.8/gallery-dl.bin>`__\n\n\nNightly Builds\n--------------\n\n| Executables build from the latest commit can be found at\n| https://github.com/mikf/gallery-dl/actions/workflows/executables.yml\n\n\nSnap\n----\n\nLinux users that are using a distro that is supported by Snapd_ can install *gallery-dl* from the Snap Store:\n\n.. code:: bash\n\n    snap install gallery-dl\n\n\nChocolatey\n----------\n\nWindows users that have Chocolatey_ installed can install *gallery-dl* from the Chocolatey Community Packages repository:\n\n.. code:: powershell\n\n    choco install gallery-dl\n\n\nScoop\n-----\n\n*gallery-dl* is also available in the Scoop_ \"main\" bucket for Windows users:\n\n.. code:: powershell\n\n    scoop install gallery-dl\n\n\nHomebrew\n--------\n\nFor macOS or Linux users using Homebrew:\n\n.. code:: bash\n\n    brew install gallery-dl\n\nMacPorts\n--------\n\nFor macOS users with MacPorts:\n\n.. code:: bash\n\n    sudo port install gallery-dl\n\n\nUsage\n=====\n\nTo use *gallery-dl* simply call it with the URLs you wish to download images\nfrom:\n\n.. code:: bash\n\n    gallery-dl [OPTIONS]... URLS...\n\nUse :code:`gallery-dl --help` or see `<docs/options.md>`__\nfor a full list of all command-line options.\n\n\nExamples\n--------\n\nDownload images; in this case from danbooru via tag search for 'bonocho':\n\n.. code:: bash\n\n    gallery-dl \"https://danbooru.donmai.us/posts?tags=bonocho\"\n\n\nGet the direct URL of an image from a site supporting authentication with username & password:\n\n.. code:: bash\n\n    gallery-dl -g -u \"<username>\" -p \"<password>\" \"https://twitter.com/i/web/status/604341487988576256\"\n\n\nFilter manga chapters by chapter number and language:\n\n.. code:: bash\n\n    gallery-dl --chapter-filter \"10 <= chapter < 20\" -o \"lang=fr\" \"https://mangadex.org/title/59793dd0-a2d8-41a2-9758-8197287a8539\"\n\n\n| Search a remote resource for URLs and download images from them:\n| (URLs for which no extractor can be found will be silently ignored)\n\n.. code:: bash\n\n    gallery-dl \"r:https://pastebin.com/raw/FLwrCYsT\"\n\n\nIf a site's address is nonstandard for its extractor, you can prefix the URL with the\nextractor's name to force the use of a specific extractor:\n\n.. code:: bash\n\n    gallery-dl \"tumblr:https://sometumblrblog.example\"\n\n\nConfiguration\n=============\n\nConfiguration files for *gallery-dl* use a JSON-based file format.\n\n\nDocumentation\n-------------\n\nA list of all available configuration options and their descriptions\ncan be found in `<docs/configuration.rst>`__.\n\n| For a default configuration file with available options set to their\n  default values, see `<docs/gallery-dl.conf>`__.\n\n| For a commented example with more involved settings and option usage,\n  see `<docs/gallery-dl-example.conf>`__.\n\n\nLocations\n---------\n\n*gallery-dl* searches for configuration files in the following places:\n\nWindows:\n    * ``%APPDATA%\\gallery-dl\\config.json``\n    * ``%USERPROFILE%\\gallery-dl\\config.json``\n    * ``%USERPROFILE%\\gallery-dl.conf``\n\n    (``%USERPROFILE%`` usually refers to a user's home directory,\n    i.e. ``C:\\Users\\<username>\\``)\n\nLinux, macOS, etc.:\n    * ``/etc/gallery-dl.conf``\n    * ``${XDG_CONFIG_HOME}/gallery-dl/config.json``\n    * ``${HOME}/.config/gallery-dl/config.json``\n    * ``${HOME}/.gallery-dl.conf``\n\nWhen run as `executable <Standalone Executable_>`__,\n*gallery-dl* will also look for a ``gallery-dl.conf`` file\nin the same directory as said executable.\n\nIt is possible to use more than one configuration file at a time.\nIn this case, any values from files after the first will get merged\ninto the already loaded settings and potentially override previous ones.\n\n\nAuthentication\n==============\n\nUsername & Password\n-------------------\n\nSome extractors require you to provide valid login credentials in the form of\na username & password pair. This is necessary for\n``nijie``\nand optional for\n``aryion``,\n``danbooru``,\n``e621``,\n``exhentai``,\n``idolcomplex``,\n``imgbb``,\n``inkbunny``,\n``mangadex``,\n``mangoxo``,\n``pillowfort``,\n``sankaku``,\n``subscribestar``,\n``tapas``,\n``tsumino``,\n``twitter``,\nand ``zerochan``.\n\nYou can set the necessary information in your\n`configuration file <Configuration_>`__\n\n.. code:: json\n\n    {\n        \"extractor\": {\n            \"twitter\": {\n                \"username\": \"<username>\",\n                \"password\": \"<password>\"\n            }\n        }\n    }\n\nor you can provide them directly via the\n:code:`-u/--username` and :code:`-p/--password` or via the\n:code:`-o/--option` command-line options\n\n.. code:: bash\n\n    gallery-dl -u \"<username>\" -p \"<password>\" \"URL\"\n    gallery-dl -o \"username=<username>\" -o \"password=<password>\" \"URL\"\n\n\nCookies\n-------\n\nFor sites where login with username & password is not possible due to\nCAPTCHA or similar, or has not been implemented yet, you can use the\ncookies from a browser login session and input them into *gallery-dl*.\n\nThis can be done via the\n`cookies <docs/configuration.rst#extractorcookies>`__\noption in your configuration file by specifying\n\n- | the path to a Mozilla/Netscape format cookies.txt file exported by a browser addon\n  | (e.g. `Get cookies.txt LOCALLY <https://chrome.google.com/webstore/detail/get-cookiestxt-locally/cclelndahbckbenkjhflpdbgdldlbecc>`__ for Chrome,\n    `Export Cookies <https://addons.mozilla.org/en-US/firefox/addon/export-cookies-txt/>`__ for Firefox)\n\n- | a list of name-value pairs gathered from your browser's web developer tools\n  | (in `Chrome <https://developers.google.com/web/tools/chrome-devtools/storage/cookies>`__,\n     in `Firefox <https://developer.mozilla.org/en-US/docs/Tools/Storage_Inspector>`__)\n\n- | the name of a browser to extract cookies from\n  | (supported browsers are Chromium-based ones, Firefox, and Safari)\n\nFor example:\n\n.. code:: json\n\n    {\n        \"extractor\": {\n            \"instagram\": {\n                \"cookies\": \"$HOME/path/to/cookies.txt\"\n            },\n            \"patreon\": {\n                \"cookies\": {\n                    \"session_id\": \"K1T57EKu19TR49C51CDjOJoXNQLF7VbdVOiBrC9ye0a\"\n                }\n            },\n            \"twitter\": {\n                \"cookies\": [\"firefox\"]\n            }\n        }\n    }\n\n| You can also specify a cookies.txt file with\n  the :code:`--cookies` command-line option\n| or a browser to extract cookies from with :code:`--cookies-from-browser`:\n\n.. code:: bash\n\n    gallery-dl --cookies \"$HOME/path/to/cookies.txt\" \"URL\"\n    gallery-dl --cookies-from-browser firefox \"URL\"\n\n\nOAuth\n-----\n\n*gallery-dl* supports user authentication via OAuth_ for some extractors.\nThis is necessary for\n``pixiv``\nand optional for\n``deviantart``,\n``flickr``,\n``reddit``,\n``smugmug``,\n``tumblr``,\nand ``mastodon`` instances.\n\nLinking your account to *gallery-dl* grants it the ability to issue requests\non your account's behalf and enables it to access resources which would\notherwise be unavailable to a public user.\n\nTo do so, start by invoking it with ``oauth:<sitename>`` as an argument.\nFor example:\n\n.. code:: bash\n\n    gallery-dl oauth:flickr\n\nYou will be sent to the site's authorization page and asked to grant read\naccess to *gallery-dl*. Authorize it and you will be shown one or more\n\"tokens\", which should be added to your configuration file.\n\nTo authenticate with a ``mastodon`` instance, run *gallery-dl* with\n``oauth:mastodon:<instance>`` as argument. For example:\n\n.. code:: bash\n\n    gallery-dl oauth:mastodon:pawoo.net\n    gallery-dl oauth:mastodon:https://mastodon.social/\n\n\n.. _Python:     https://www.python.org/downloads/\n.. _PyPI:       https://pypi.org/\n.. _pip:        https://pip.pypa.io/en/stable/\n.. _Requests:   https://requests.readthedocs.io/en/master/\n.. _FFmpeg:     https://www.ffmpeg.org/\n.. _yt-dlp:     https://github.com/yt-dlp/yt-dlp\n.. _youtube-dl: https://ytdl-org.github.io/youtube-dl/\n.. _PySocks:    https://pypi.org/project/PySocks/\n.. _brotli:     https://github.com/google/brotli\n.. _brotlicffi: https://github.com/python-hyper/brotlicffi\n.. _PyYAML:     https://pyyaml.org/\n.. _toml:       https://pypi.org/project/toml/\n.. _SecretStorage: https://pypi.org/project/SecretStorage/\n.. _Snapd:      https://docs.snapcraft.io/installing-snapd\n.. _OAuth:      https://en.wikipedia.org/wiki/OAuth\n.. _Chocolatey: https://chocolatey.org/install\n.. _Scoop:      https://scoop.sh\n\n.. |pypi| image:: https://img.shields.io/pypi/v/gallery-dl.svg\n    :target: https://pypi.org/project/gallery-dl/\n\n.. |build| image:: https://github.com/mikf/gallery-dl/workflows/tests/badge.svg\n    :target: https://github.com/mikf/gallery-dl/actions\n\n.. |gitter| image:: https://badges.gitter.im/gallery-dl/main.svg\n    :target: https://gitter.im/gallery-dl/main"
}
