{
  "name": "alass",
  "full_name": "alass",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Automatic Language-Agnostic Subtitle Synchronization",
  "license": "GPL-3.0-or-later",
  "homepage": "https://github.com/kaegi/alass",
  "versions": {
    "stable": "2.0.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/kaegi/alass/archive/refs/tags/v2.0.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "ce88f92c7a427b623edcabb1b64e80be70cca2777f3da4b96702820a6cdf1e26"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alass/blobs/sha256:93ea3d2535b7d2f339a736efbbf28f952abf06fdcb8186a72b1f706a77c9c3c1",
          "sha256": "93ea3d2535b7d2f339a736efbbf28f952abf06fdcb8186a72b1f706a77c9c3c1"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alass/blobs/sha256:c20460b0e920c4165d4f2e0fda02055564277562ca0707d7417279f3c1a70a4f",
          "sha256": "c20460b0e920c4165d4f2e0fda02055564277562ca0707d7417279f3c1a70a4f"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alass/blobs/sha256:89d96baa88517ace085a0a467f08928fff9fc15966edd7061ebf614133eb5e98",
          "sha256": "89d96baa88517ace085a0a467f08928fff9fc15966edd7061ebf614133eb5e98"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alass/blobs/sha256:1b6e4cc531bc410f1c4792f5e8709230fa1312425499c7179712714ecbfbc593",
          "sha256": "1b6e4cc531bc410f1c4792f5e8709230fa1312425499c7179712714ecbfbc593"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alass/blobs/sha256:3b60c7670145e819679d32671912305e150b55164de74e39b4ea788586651696",
          "sha256": "3b60c7670145e819679d32671912305e150b55164de74e39b4ea788586651696"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alass/blobs/sha256:8aa09d2f899a21272a4703e587a036e475b4ce060bdb9ef0d214b449157126fe",
          "sha256": "8aa09d2f899a21272a4703e587a036e475b4ce060bdb9ef0d214b449157126fe"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alass/blobs/sha256:499c4ee6c9cefa90b135dbfb668879f8a56fd5da4ab20dfd077ae1047b34f0f1",
          "sha256": "499c4ee6c9cefa90b135dbfb668879f8a56fd5da4ab20dfd077ae1047b34f0f1"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/alass.rb",
  "ruby_source_checksum": {
    "sha256": "068414827e291a4a9c11f08e47a1deade94334b529f7df47cb20023eb66957a5"
  },
  "date_added": "2023-06-28T12:51:58-07:00",
  "readme": "# Introduction\n\n`alass` is a command line tool to synchronize subtitles to movies.\n\nIt can automatically correct\n\n - constant offsets\n - splits due to advertisement breaks, directors cut, ...\n - different framerates\n\nThe alignment process is not only fast and\naccurate, but also language-agnostic. This means\nyou can align subtitles to movies in different\nlanguages.\n\n`alass` stands for  \"Automatic Language-Agnostic Subtitle Synchronization\". The theory and algorithms\nare documented in my [bachelor's thesis](documentation/thesis.pdf)\nand summarized in my [bachelor's presentation](documentation/slides.pdf).\n\n\n## Executable for Windows (64-bit)\n\nGet the latest executable from [here](https://github.com/kaegi/alass/releases)! Just download and extract the archive. The file `alass.bat` is the command line tool.\n\n## Executable for Linux (64-bit)\n\nGet the latest executable from [here](https://github.com/kaegi/alass/releases)! To run the executable, `ffmpeg` and\n`ffprobe` have to be installed.\nYou can change their paths with the environment variables\n`ALASS_FFMPEG_PATH` (default `ffmpeg`) and `ALASS_FFPROBE_PATH` (default `ffprobe`). \n\n## Usage\n\nThe most basic command is:\n\n```bash\n$ alass movie.mp4 incorrect_subtitle.srt output.srt\n```\n\nYou can also use `alass` to align the incorrect subtitle to a different subtitle:\n\n```bash\n$ alass reference_subtitle.ssa incorrect_subtitle.srt output.srt\n```\n\nYou can additionally adjust how much the algorithm tries to avoid introducing or removing a break:\n\n```bash\n# split-penalty is a value between 0 and 1000 (default 7)\n$ alass reference_subtitle.ssa incorrect_subtitle.srt output.srt --split-penalty 10\n```\n\nValues between 5 and 20 are the most useful. Anything above 20 misses some important splits and anything below 5 introduces many unnecessary splits.\n\nIf you only want to shift the subtitle, without introducing splits, you can use `--no-splits`:\n\n```bash\n# synchronizing the subtitles in this mode is very fast\n$ alass movie.mp4 incorrect_subtitle.srt output.srt --no-splits\n```\n\nCurrently supported are `.srt`, `.ssa`/`.ass` and `.idx` files. Every common video format is supported for the reference file.\n\n\n## Performance and Results\n\nThe extraction of the audio from a video takes about 10 to 20 seconds. Computing the alignment usually takes between 5 and 10 seconds.\n\nThe alignment is usually perfect -\nthe percentage of \"good subtitles\" is about 88% to 98%, depending on how strict you classify a \"good subtitle\".\nDownloading random subtitles\nfrom `OpenSubtitles.org` had an error rate of about 50%\n(sample size N=118).\nOf all subtitle _lines_ (not subtitle files) in the tested database,\nafter synchronization\n\n - 50% were within 50ms of target position\n - 80% were within 100ms of target position\n - 90% were within 400ms of target position\n - 95% were within 800ms of target position\n\ncompared to a (possibly not perfect) reference subtitle.\n\n## How to compile the binary\n\nInstall [Rust and Cargo](https://www.rust-lang.org/en-US/install.html) then run:\n\n```bash\n# this will create the lastest release in ~/.cargo/bin/alass-cli\n$ cargo install alass-cli\n```\n\n\nThe voice-activity module this project uses is written in C. Therefore a C compiler (`gcc` or `clang`) is needed to compile this project.\n\nTo use `alass-cli` with video files, `ffmpeg` and `ffprobe` have to be installed. It is used to extract the raw audio data. You can set the paths used by `alass` using the environment variables `ALASS_FFMPEG_PATH` (default `ffmpeg`) and `ALASS_FFPROBE_PATH` (default `ffprobe`). \n\n### Building from Source \n\nIf you want to build and run the project from source code:\n\n```bash\n$ git clone https://github.com/kaegi/alass\n$ cd alass\n$ cargo build\n$ cargo run -- movie.mp4 input.srt output.srt\n```\n\n### Configuration\n\nAll parameters are shown for `cargo build` can also be used for `cargo install` and `cargo run`.\n\n#### FFmpeg as a library\n\nYou can also link `ffmpeg` as a dynamic library during compile time. The library implementation can extract the audio about 2 to 3 seconds faster. Unfortunately it is harder to compile, the error handling is only very basic and might still have bugs.\n\nYou have to remove \"`# FFMPEG-LIB`\" from every line that starts with it in `alass-cli/Cargo.toml`. Then use:\n\n```bash\n# Important: you have to be inside `alass-cli`! Otherwise the parameters get ignored.\n$ cargo build --no-default-features --features ffmpeg-library\n```\n\n\n### Alias Setup\n\n*For Linux users:* It is recommended to add the folder path to your system path as well as setup an alias for `alass` to `alass-cli`. Add this to your `~/.bashrc` (or the setup file of your favorite shell):\n\n```bash\nexport PATH=\"$PATH:$HOME/.cargo/bin\"\nalias alass=\"alass-cli\"\n```\n\n## Folder structure\n\nThis `cargo` workspace contains two projects:\n\n  - `alass-core` which provides the algorithm\n  \n    It is targeted at *developers* who want to use the same algorithm in their project.\n\n  - `alass-cli` which is the official command line tool\n\n    It is target at *end users* who want to correct their subtitles.\n\n## Library Documentation\n\n[Open README](./alass-core/README.md) from `alass-core`.\n\n## Notes\n\nThis program was called `aligner` in the past. This made it nearly impossible to find on a search engine, so `alass` was chosen instead."
}
