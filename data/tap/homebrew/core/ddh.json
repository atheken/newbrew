{
  "name": "ddh",
  "full_name": "ddh",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Fast duplicate file finder",
  "license": "LGPL-3.0-only",
  "homepage": "https://github.com/darakian/ddh",
  "versions": {
    "stable": "0.13.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/darakian/ddh/archive/refs/tags/0.13.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "87010f845fa68945d2def4a05a3eb796222b67c5d3cea41e576cfaf2ab078ef8"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ddh/blobs/sha256:572994664d86a2abf9505e70949230fa17b613dc7e594425f58a21ea7eb749f1",
          "sha256": "572994664d86a2abf9505e70949230fa17b613dc7e594425f58a21ea7eb749f1"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ddh/blobs/sha256:073c663ddac4ba5e99753ce7e281dc9c3fc6d575cc8b4ef2490e6fa99cd1a6eb",
          "sha256": "073c663ddac4ba5e99753ce7e281dc9c3fc6d575cc8b4ef2490e6fa99cd1a6eb"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ddh/blobs/sha256:8f5f09cae94b0d72be22b34cd17a879a15cf7e2d69460af1a384e82a30ef963e",
          "sha256": "8f5f09cae94b0d72be22b34cd17a879a15cf7e2d69460af1a384e82a30ef963e"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ddh/blobs/sha256:b6d9b4efbd475c242879125f200dd62ce1a5ac036faa100a098c5b5b80e04084",
          "sha256": "b6d9b4efbd475c242879125f200dd62ce1a5ac036faa100a098c5b5b80e04084"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ddh/blobs/sha256:029526e26902af6c10c161f6558b088f3eab0adebdcf6f0f10cd2abca092e053",
          "sha256": "029526e26902af6c10c161f6558b088f3eab0adebdcf6f0f10cd2abca092e053"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ddh/blobs/sha256:49eb05e9c24cbbfd4c8483046102211c865b95c218bce76269a48a3b5440584b",
          "sha256": "49eb05e9c24cbbfd4c8483046102211c865b95c218bce76269a48a3b5440584b"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ddh/blobs/sha256:74c576492d6d3809831b378c382e885b05425eda763b280ab17fa5cafb222a08",
          "sha256": "74c576492d6d3809831b378c382e885b05425eda763b280ab17fa5cafb222a08"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ddh/blobs/sha256:119fff1c3e34608d859d79aef5a4958176a9685000f7686941bf6b26d5f3f5c6",
          "sha256": "119fff1c3e34608d859d79aef5a4958176a9685000f7686941bf6b26d5f3f5c6"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/ddh.rb",
  "ruby_source_checksum": {
    "sha256": "1ac80d25a70842122273a1b222da066630fac54d9eb982034961a1e3121a05b9"
  },
  "date_added": "2022-04-25T15:36:43+00:00",
  "readme": "# The **D**irectory **D**ifferential **h**Tool\nDDH traverses input directories and their subdirectories. It also hashes files as needed and reports findings.\n\nThe H in \"hTool\" is silent. The H in its abbreviation, \"DDH,\" is not.\n\nThis tool is called DDH for two very good reasons.\n* DDT is a dangerous pesticide\n* I mistyped when I created the project\n\n## Usage\nDDH is usable both as a library and as a stand alone CLI tool and aims to be simple to use in both cases.\n\n## Library example\n```rust\nlet (files, errors): (Vec<Fileinfo>, Vec<(_, _)>) = ddh::deduplicate_dirs(dirs);\nlet (shared, unique): (Vec<&Fileinfo>, Vec<&Fileinfo>) = files\n                    .par_iter()\n                    .partition(|&x| x.get_paths().len()>1);\nprocess_full_output(&shared, &unique, &files, &errors, &arguments);\n```\n\n## CLI Install\n* Install [Rust](https://www.rust-lang.org/en-US/install.html)\n* `cargo install --git https://github.com/darakian/ddh ddh`\n* The DDH binary will be installed into `$CARGO_HOME/.bin/ddh`, which usually is `$HOME/.cargo/bin/ddh`. This should be in your `PATH` already if you're using rustup.\n\n## CLI Features\nDDH supports both a `standard` output for human comprehension and a parsable `json` output for custom tools such as [ddh-move](https://github.com/JayWalker512/ddh-move).\n\n## CLI Example\n```\nDirectory Difference hTool\nJon Moroney jmoroney@hawaii.edu\nCompare and contrast directories.\n\nExample invocation: ddh -v duplicates -d /home/jon/downloads /home/jon/documents\nExample pipe: ddh -o no -v all -f json -d ~/Downloads/ | someJsonParser.bin\n\nUsage: ddh [OPTIONS]\n\nOptions:\n  -m, --minimum [<MIN_SIZE>]\n          Minimum file size in bytes to consider [default: 0]\n  -b, --blocksize [<BLOCKSIZE>]\n          Set the display blocksize to Bytes, Kilobytes, Megabytes or Gigabytes [default: K] [possible values: B, K, M, G]\n  -v, --verbosity [<VERBOSITY>]\n          Set verbosity for printed output [default: quiet] [possible values: quiet, duplicates, all]\n  -o, --output [<OUTPUT>]\n          Set file to save all output. Use 'no' for no file output [default: Results.txt]\n  -f, --format [<FMT>]\n          Set output format [default: standard] [possible values: standard, json]\n  -i, --ignore <IGNORE_DIRS>\n          Directories to ignore (comma separated list)\n  -d, --directories <DIRECTORIES>...\n          Directories to parse\n  -h, --help\n          Print help information (use `--help` for more detail)\n  -V, --version\n          Print version information\n```\n## How Does DDH Work?\nDDH works by hashing files to determine their uniqueness and, as such, depends heavily on disk speeds for performance. The algorithmic choices in use are discussed [here](https://darakian.github.io/2018/04/02/how-many-bytes-does-it-take.html)."
}
