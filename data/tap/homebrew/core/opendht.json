{
  "name": "opendht",
  "full_name": "opendht",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "C++17 Distributed Hash Table implementation",
  "license": "GPL-3.0-or-later",
  "homepage": "https://github.com/savoirfairelinux/opendht",
  "versions": {
    "stable": "2.5.5",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/savoirfairelinux/opendht/archive/refs/tags/v2.5.5.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "ef30dc5249dda1a4032f5dbba525988ba253d7a76a24183062960693367fa0fe"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/opendht/blobs/sha256:3591560854312c572ed9c11677c943694c80678a85fd0582d16edbe044ed51f8",
          "sha256": "3591560854312c572ed9c11677c943694c80678a85fd0582d16edbe044ed51f8"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/opendht/blobs/sha256:4df41a97c70aa710238d97ff2c2ad2903f7108f37e0217a1a4312feb93a7672c",
          "sha256": "4df41a97c70aa710238d97ff2c2ad2903f7108f37e0217a1a4312feb93a7672c"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/opendht/blobs/sha256:af967299ae1d00355a710b343663e61e4b9e196962f49eaa86f9da2f165213bb",
          "sha256": "af967299ae1d00355a710b343663e61e4b9e196962f49eaa86f9da2f165213bb"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/opendht/blobs/sha256:66890f1f522a6a36bb7ad106519f8dcd7447d6601221a7380e43478bdeef160e",
          "sha256": "66890f1f522a6a36bb7ad106519f8dcd7447d6601221a7380e43478bdeef160e"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/opendht/blobs/sha256:023bf901b9283a9f8485625a02995024d993f0eca508385a726a2209778e95a7",
          "sha256": "023bf901b9283a9f8485625a02995024d993f0eca508385a726a2209778e95a7"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/opendht/blobs/sha256:0f33bcc96fe7586c9f570e0aff77e257a7f1639469193bbacb0250d8ae371666",
          "sha256": "0f33bcc96fe7586c9f570e0aff77e257a7f1639469193bbacb0250d8ae371666"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/opendht/blobs/sha256:a9e502567e2f1fe880488a7e0b7bfd443afde45de84d06eb9a53877ce1cee361",
          "sha256": "a9e502567e2f1fe880488a7e0b7bfd443afde45de84d06eb9a53877ce1cee361"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake",
    "pkg-config"
  ],
  "dependencies": [
    "argon2",
    "asio",
    "gnutls",
    "msgpack-cxx",
    "nettle",
    "readline"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/opendht.rb",
  "ruby_source_checksum": {
    "sha256": "0a2eff64921962b7dc1c3c4209a571f587bcb25955063050960f55c644a54e23"
  },
  "date_added": "2022-03-08T05:41:48+00:00",
  "readme": "<img src=\"https://raw.githubusercontent.com/savoirfairelinux/opendht/master/resources/opendht_logo_512.png\" width=\"100\" align=\"right\">\n<br>\n<h1 style=\"margin-top:10px\">\n    <a id=\"user-content-opendht-\" class=\"anchor\" href=\"/savoirfairelinux/opendht/blob/master/README.md#opendht-\" aria-hidden=\"true\"></a>OpenDHT\n</h1>\n\nA lightweight C++17 Distributed Hash Table implementation.\n\nOpenDHT provides an easy to use distributed in-memory data store.\nEvery node in the network can read and write values to the store.\nValues are distributed over the network, with redundancy.\n\n * Lightweight and scalable, designed for large networks and small devices\n * High resilience to network disruption\n * Public key cryptography layer providing optional data signature and encryption (using GnuTLS)\n * IPv4 and IPv6 support\n * Clean and powerful **C++17** map API\n * Bindings for **C, Rust & Python 3**\n * REST API with optional HTTP client+server with push notification support\n\n## Documentation\nSee the wiki: <https://github.com/savoirfairelinux/opendht/wiki>\n\n#### How-to build and install\n\nBuild instructions: <https://github.com/savoirfairelinux/opendht/wiki/Build-the-library>\n\n## Examples\n### C++ example\nThe `tools` directory includes simple example programs :\n* `dhtnode`, a command line tool, allowing to run a DHT node and perform operations supported by the library (get, put etc.) with text values.\n* `dhtchat`, a very simple IM client working over the dht.\n\nExample program launching a DHT node, connecting to the network and performing some basic operations:\n```c++\n#include <opendht.h>\n#include <vector>\n\nint main()\n{\n    dht::DhtRunner node;\n\n    // Launch a dht node on a new thread, using a\n    // generated RSA key pair, and listen on port 4222.\n    node.run(4222, dht::crypto::generateIdentity(), true);\n\n    // Join the network through any running node,\n    // here using a known bootstrap node.\n    node.bootstrap(\"bootstrap.jami.net\", \"4222\");\n\n    // put some data on the dht\n    std::vector<uint8_t> some_data(5, 10);\n    node.put(\"unique_key\", some_data);\n\n    // put some data on the dht, signed with our generated private key\n    node.putSigned(\"unique_key_42\", some_data);\n\n    // get data from the dht\n    node.get(\"other_unique_key\", [](const std::vector<std::shared_ptr<dht::Value>>& values) {\n        // Callback called when values are found\n        for (const auto& value : values)\n            std::cout << \"Found value: \" << *value << std::endl;\n        return true; // return false to stop the search\n    });\n\n    // wait for dht threads to end\n    node.join();\n    return 0;\n}\n```\n### Python 3 example\n```python\nimport opendht as dht\n\nnode = dht.DhtRunner()\nnode.run()\n\n# Join the network through any running node,\n# here using a known bootstrap node.\nnode.bootstrap(\"bootstrap.jami.net\", \"4222\")\n\n# blocking call (provide callback arguments to make the call non-blocking)\nnode.put(dht.InfoHash.get(\"unique_key\"), dht.Value(b'some binary data'))\n\nresults = node.get(dht.InfoHash.get(\"unique_key\"))\nfor r in results:\n    print(r)\n```\n\n## Dependencies\n- msgpack-c 1.2+, used for data serialization.\n- GnuTLS 3.3+, used for cryptographic operations.\n- Nettle 2.4+, a GnuTLS dependency for crypto.\n- (optional) restinio used for the REST API.\n- (optional) jsoncpp 1.7.4-3+, used for the REST API.\n- Build tested with GCC 7+ (GNU/Linux, Windows with MinGW), Clang/LLVM (GNU/Linux, Android, macOS, iOS).\n- Build tested with Microsoft Visual Studio 2017, 2019, 2022\n\n## Contact\n\nIRC: join us on Libera.chat at [`#opendht`](https://web.libera.chat/#opendht).\n\n## License\nCopyright (C) 2014-2023 Savoir-faire Linux Inc.\n\nOpenDHT is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nSee COPYING or https://www.gnu.org/licenses/gpl-3.0.en.html for the full GPLv3 license.\n\n## Acknowledgements\nThis project was originally based on https://github.com/jech/dht by Juliusz Chroboczek.\nIt is independent from another project called OpenDHT (Sean Rhea. Ph.D. Thesis, 2005), now extinct."
}
