{
  "name": "bitrise",
  "full_name": "bitrise",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Command-line automation tool",
  "license": "MIT",
  "homepage": "https://github.com/bitrise-io/bitrise",
  "versions": {
    "stable": "2.3.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/bitrise-io/bitrise/archive/2.3.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "ebafe04cb63dca03054a3f84d94feec437949f23972168cef75ee7f5f8cfea74"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bitrise/blobs/sha256:e8d3f5a74e181c9f2917d99679b71a13b980dbba3ac1663c8a086a4ef5c91ab1",
          "sha256": "e8d3f5a74e181c9f2917d99679b71a13b980dbba3ac1663c8a086a4ef5c91ab1"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bitrise/blobs/sha256:e8d3f5a74e181c9f2917d99679b71a13b980dbba3ac1663c8a086a4ef5c91ab1",
          "sha256": "e8d3f5a74e181c9f2917d99679b71a13b980dbba3ac1663c8a086a4ef5c91ab1"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bitrise/blobs/sha256:e8d3f5a74e181c9f2917d99679b71a13b980dbba3ac1663c8a086a4ef5c91ab1",
          "sha256": "e8d3f5a74e181c9f2917d99679b71a13b980dbba3ac1663c8a086a4ef5c91ab1"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bitrise/blobs/sha256:c1855f15092bea2140214f8e632015ed6880acc647338f5f1bfecded03900c14",
          "sha256": "c1855f15092bea2140214f8e632015ed6880acc647338f5f1bfecded03900c14"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bitrise/blobs/sha256:c1855f15092bea2140214f8e632015ed6880acc647338f5f1bfecded03900c14",
          "sha256": "c1855f15092bea2140214f8e632015ed6880acc647338f5f1bfecded03900c14"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bitrise/blobs/sha256:c1855f15092bea2140214f8e632015ed6880acc647338f5f1bfecded03900c14",
          "sha256": "c1855f15092bea2140214f8e632015ed6880acc647338f5f1bfecded03900c14"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bitrise/blobs/sha256:07874eb971d1136991ff0c4a1ea5024f9671c44d248954dadfbba428c548bf90",
          "sha256": "07874eb971d1136991ff0c4a1ea5024f9671c44d248954dadfbba428c548bf90"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "rsync"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/bitrise.rb",
  "ruby_source_checksum": {
    "sha256": "ebcb33a93c9802507b3f8bcf4b90ef7608171e6a4ad04562ebd1e2af20930ee2"
  },
  "date_added": "2015-08-09T09:59:43+01:00",
  "readme": "# Bitrise (offline) CLI\n\n_Discussion forum: [https://discuss.bitrise.io/](https://discuss.bitrise.io/)_\n\nRun your Bitrise automations with this CLI tool on any Mac or Linux machine, and use the same configuration on\n[bitrise.io](https://www.bitrise.io) (automation service, with a mobile app focus).\n\n_Part of the Bitrise Continuous Integration, Delivery and Automations Stack,\nwith [stepman](https://github.com/bitrise-io/stepman) and [envman](https://github.com/bitrise-io/envman)._\n\nFor a nice & quick intro you should check: [https://www.bitrise.io/cli](https://www.bitrise.io/cli)\n\n## Install and Setup\n\nThe installation is quick and easy, check the latest release for instructions at: [https://github.com/bitrise-io/bitrise/releases](https://github.com/bitrise-io/bitrise/releases)\n\nInstalling with Homebrew:\n\n`brew update && brew install bitrise`\n\nOptionally, you can call `bitrise setup` to verify that everything what's required for `bitrise` to run\nis installed and available, but if you forget to do this it'll be performed the first\ntime you call `bitrise run`.\n\nYou can enable shell completion for the `bitrise run` command: [https://blog.bitrise.io/workflow-id-completion](https://blog.bitrise.io/workflow-id-completion)\n\n## Tutorials and Examples\n\nYou can find examples in the [\\_examples](https://github.com/bitrise-io/bitrise/tree/master/_examples) folder.\n\nIf you're getting started you should start with [\\_examples/tutorials](https://github.com/bitrise-io/bitrise/tree/master/_examples/tutorials),\nthis should guide you through the basics, while you'll already use `bitrise` (requires installed `bitrise`).\n\nYou can find a complete iOS sample project at: https://github.com/bitrise-io/sample-apps-ios-with-bitrise-yml\n\n## Tooling support & JSON output format\n\n`bitrise` CLI commands support a `--format=[format]` parameter.\nThis is intended mainly for tooling support, by adding `--format=json` you'll\nget a JSON formatted output on Standard Output.\n\n**This is still work-in-progress, we're working on providing\nthe `--format` param to every command except `run`**.\n\nEvery error, warning etc. message will go to StdErr; and on the StdOut\nyou should only get the valid JSON output.\n\nAn example calling the `version` command:\n\n`$ bitrise version --format=json`\n\nWill print `{\"version\":\"1.2.4\"}` to the Standard Output (StdOut).\n\n## Share your Step\n\nYou can use your own Step as you can see in the `_examples`, even if it's\nnot yet committed into a repository, or from a repository directly.\n\nIf you would like to share your awesome Step with others\nyou can do so by calling `stepman share` and then following the\nguide it prints.\n\n## Documentation\n\nWe added some documents to make it a bit easier to get started with Bitrise CLI. The documentation includes a quick and a little longer guides for CLI, a [React Native](http://facebook.github.io/react-native/) project workflow guide and an overview of the Step share process. You can find them in the [\\_docs](/_docs/) folder.\n\n## Development\n\n### Guidelines\n\n* **Easy to use**: the UX for the end-user, always keep it in mind, make it a pleasant experience to work with this tool (and all of the Bitrise tools)!\n* **Code should be kept simple**: easy to understand, easy to collaborate/contribute (as much as possible of course).\n* **Compatibility**: never do an incompatible change, unless you can't avoid it. Release new features as additional options, to not to break existing configurations.\n* **Stability**: related to compatibility, but in general stability is really important, especially so in a CI/automation environment, where you expect fully reproducible outcomes.\n* **Flexibility**: should also be kept in mind, but only if it does not affect the previous points.\n\n### Updating dependencies\n\nTo do a full dependency update use [bitrise-tools/gows](https://github.com/bitrise-tools/gows),\nfor a clean workspace:\n\n```\ngows clear && gows bitrise run dep-update\n```\n\nto test that all dependency is included:\n\n```\ngows clear && gows go test ./... && gows go install && gows bitrise run test\n```\n\nand/or with `docker-compose`:\n\n```\ndocker-compose build && docker-compose run --rm app go test ./...\n```\n\n### Local Dev Workflow\nThe following commands will work to get you started using a text editor such as VCSCode or similar. \n\nAll commands should be run from the root directory.\n\n* Setup:\n\n    ```mkdir -p ./_bin```\n\n* Build:\n\n    ```go build -o ./_bin```\n\n* Run:\n    \n    ```./_bin/bitrise COMMAND```"
}
