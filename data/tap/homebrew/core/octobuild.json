{
  "name": "octobuild",
  "full_name": "octobuild",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Compiler cache for Unreal Engine",
  "license": "MIT",
  "homepage": "https://github.com/octobuild/octobuild",
  "versions": {
    "stable": "0.6.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/octobuild/octobuild/archive/refs/tags/0.6.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "df1704a2758a1f5d8db0c00b02076b2e2fc843caed9dfa9b6d055c28cfd51b4c"
    },
    "head": {
      "url": "https://github.com/octobuild/octobuild.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/octobuild/blobs/sha256:90a3c5f36eecd49278f81f56b7f08ee1f26f418bc74a9361daff0a543a877a14",
          "sha256": "90a3c5f36eecd49278f81f56b7f08ee1f26f418bc74a9361daff0a543a877a14"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/octobuild/blobs/sha256:1cc1ba2bd69c6881bf0b7ddec17b06bdecdd1e0d4ad534a01a03a1aee49e2b3b",
          "sha256": "1cc1ba2bd69c6881bf0b7ddec17b06bdecdd1e0d4ad534a01a03a1aee49e2b3b"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/octobuild/blobs/sha256:6a883cc0d682ef6c9e4a447ca3ff08438feb4947809ee196c725b2407d1be7df",
          "sha256": "6a883cc0d682ef6c9e4a447ca3ff08438feb4947809ee196c725b2407d1be7df"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/octobuild/blobs/sha256:311c925fad00b188331f560a15171fcc1c1249a064e65745d3b775317c56508b",
          "sha256": "311c925fad00b188331f560a15171fcc1c1249a064e65745d3b775317c56508b"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/octobuild/blobs/sha256:bd75856037043b554272aa4fd4d402884fdcec82f525bb375e96ab9721b7e131",
          "sha256": "bd75856037043b554272aa4fd4d402884fdcec82f525bb375e96ab9721b7e131"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/octobuild/blobs/sha256:f73be32ecf6830d72a2b4258cfff3c62829604ca9eaaaafb4970b5789e75d20a",
          "sha256": "f73be32ecf6830d72a2b4258cfff3c62829604ca9eaaaafb4970b5789e75d20a"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/octobuild/blobs/sha256:a8c444eeb7b3c013cf7c8b977595c5d5a37aa3ad4c9cb5589651050b2c9d3f59",
          "sha256": "a8c444eeb7b3c013cf7c8b977595c5d5a37aa3ad4c9cb5589651050b2c9d3f59"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust",
    "pkg-config"
  ],
  "dependencies": [
    "openssl@3"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/octobuild.rb",
  "ruby_source_checksum": {
    "sha256": "0765aba12e1cca4942814a4144dbf40f813a3f92ad775be82c85471cdb164f76"
  },
  "date_added": "2023-02-23T05:17:44+00:00",
  "readme": "= octobuild\nArtem Navrotskiy; Marat Radchenko\n:slug: octobuild/octobuild\n:uri-project: https://github.com/{slug}\n:uri-ci: {uri-project}/actions?query=branch%3Amaster\n:uri-discuss: https://gitter.im/{slug}\n:source-highlighter: rouge\n\nimage:{uri-project}/workflows/CI/badge.svg?branch=master[Build Status,link={uri-ci}]\nimage:https://img.shields.io/github/release/{slug}.svg[Download,link={uri-project}/releases/latest]\nimage:https://img.shields.io/chocolatey/v/octobuild[Chocolatey package,link=https://community.chocolatey.org/packages/octobuild]\nimage:https://img.shields.io/homebrew/v/octobuild[Homebrew formula,link=https://formulae.brew.sh/formula/octobuild]\n\n[[overview]]\n== Overview\n\nThis project allows you to speedup re-compilation of Unreal Engine (and UE-based games) by caching intermediate compilation files, reducing time by <<benchmark,60-90%>>.\n\n[[supported-platforms]]\n== Supported platforms\n\n- iOS\n- Linux\n- macOS\n- PS4\n- PS5\n- Win64\n- Xbox One\n- Xbox Series\n\n[[installation]]\n== Installation\n\n[[installation-windows-chocolatey]]\n=== Chocolatey (Windows)\n\noctobuild is available via https://community.chocolatey.org/packages/octobuild[Chocolatey] package manager.\nIf you already have Chocolatey installed, you can just run the following command from elevated console:\n\n[source,powershell]\n----\nchoco install octobuild\n----\n\n[[installation-windows-winget]]\n=== WinGet (Windows)\n\n[source,powershell]\n----\nwinget install octobuild\n----\n\n[[installation-windows-manual]]\n=== Manual (Windows)\n\n. Download https://github.com/octobuild/octobuild/releases/latest[MSI installer]\n. Double-click on it\n. Next-next-next\n\n[[installation-ubuntu-deb]]\n=== deb package (Ubuntu 20.04, 22.04)\n\nYou can install octobuild on Ubuntu using the following commands:\n\n[source,shell]\n----\n# Set up repository\ncurl -1sLf 'https://dl.cloudsmith.io/public/octobuild/octobuild/setup.deb.sh' | sudo -E bash\n\n# Install octobuild\nsudo apt-get install octobuild\n----\n\n[[installation-ubuntu-manual]]\n=== Manual (Ubuntu/Debian)\n\n. Download https://cloudsmith.io/~octobuild/repos/octobuild/packages/[deb package]\n. Install it via `dpkg -i <octobuild>.deb`\n\n[installation-homebrew]\n=== Homebrew (macOS/Linux)\n\noctobuild is available via https://brew.sh/[Homebrew package manager].\n\nIf you already have Homebrew configured, you can install octobuild with a single command:\n\n[source,shell]\n----\nbrew install octobuild\n----\n\n[[Usage]]\n== Usage\n\nYou do not need to use octobuild directly.\nJust build Unreal Engine as usual, via Unreal Build Tool, Unreal Automation Tool or your IDE.\nUnder the hood, they will automatically use octobuild.\n\nAlso see <<linux-notes>> and <<macos-notes>>.\n\n[[configuration]]\n== Configuration files\n\nYou can list configuration files and check actual configuration by running `ib_console`/`xgConsole` without parameters.\n\n[%autowidth]\n|===\n| Platform | System-wide config | User-specific config (overrides system defaults)\n\n| Linux\n| `/etc/octobuild/octobuild.conf`\n| `$XDG_CONFIG_HOME/octobuild/octobuild.conf` (with fallback to `~/.config/octobuild/octobuild.conf` when `$XDG_CONFIG_HOME` is not set)\n\n| Windows\n| `%ProgramData\\octobuild\\octobuild.conf`\n| `%AppData%\\octobuild\\octobuild.conf`\n\n| macOS\n| `/etc/octobuild/octobuild.conf`\n| `~/Library/Application Support/octobuild/octobuild.conf`\n\n|===\n\n[[environment-variables]]\n== Environment variables\n\nEnvironment variables have higher priority than config files.\n\n`OCTOBUILD_CACHE` (string):: specifies path to directory where octobuild cache is stored.\nDefault is `%LocalAppData%/octobuild/cache` on Windows, `~/.cache/octobuild` on Linux and `~/Library/Caches/octobuild` on macOS.\n`OCTOBUILD_CACHE_LIMIT_MB` (number):: specifies octobuild disk cache size limit in megabytes.\nDefaults is 64GB.\n`OCTOBUILD_PROCESS_LIMIT` (number):: specifies max number of concurrent processes octobuild will spawn.\nDefault is number of cores.\n`OCTOBUILD_USE_RESPONSE_FILES` (bool):: specifies whether octobuild should use compiler response files to overcome commandline length limitation.\nDefault is `true` on Windows and `false` on other platforms.\nEnable this if you're getting `ERROR: The filename or extension is too long. (os error 206)` on Windows.\n\n[[benchmark]]\n== Benchmark\n\nLinux build tested on AMD Ryzen 7 3700X, 32GB DDR4 @ 3200MHz, SSD and Unreal Engine 5.0.3 by running `<engine>/Engine/Build/BatchFiles/RunUAT.sh <game>.uproject <game>Editor DebugGame Linux`.\n\nWindows build tested on Intel Core i7-9700F, 32GB DDR4 @ 2400MHz, SSD and Unreal Engine 5.0.3 by running `<engine>/Engine/Build/BatchFiles/RunUBT.bat <game>.uproject <game>Editor DebugGame Win64`.\n\nConsole builds tested on Intel Core i7-9700F, 32GB DDR4 @ 2400MHz, SSD and Unreal Engine 5.0.3 by running `<engine>/Engine/Build/BatchFiles/RunUBT.bat <game>.uproject <game> DebugGame <platform>`.\n\n[%autowidth]\n|===\n| Platform | Without octobuild | octobuild (0% cache) | octobuild (100% cache)\n\n| *Linux*\n| 3m54s\n| 3m53s\n| 36s\n\n| *Win64 (MSVC 2019)*\n| 8m4s\n| 10m6s\n| 2m15s\n\n| *PS4*\n| 6m12s\n| 7m10s\n| 2m34s\n\n| *PS5*\n| 5m48s\n| 6m56s\n| 2m11s\n\n| *XB1*\n| 4m40s\n| 6m10s\n| 1m39s\n\n| *XSX*\n| 4m49s\n| 5m42s\n| 1m40s\n\n|===\n\n[[linux-notes]]\n== Linux notes\n\nThis project requires several patches to Unreal Engine:\n\n- https://github.com/EpicGames/UnrealEngine/pull/9933[#9933]: Allow usage of octobuild on Linux\n- https://github.com/EpicGames/UnrealEngine/pull/9903[#9903]: Restore ability to use XGE executor on non-Windows platforms (already included in UE >= 5.2)\n- https://github.com/EpicGames/UnrealEngine/pull/9932[#9932]: Fix action graph copy action on non-Windows platforms (already included in UE >= 5.2)\n\n[[macos-notes]]\n== macOS notes\n\nThis project requires minor patching of Unreal Engine:\n\n- https://github.com/EpicGames/UnrealEngine/pull/10191[#10191]: Allow usage of octobuild on macOS (already included in UE >= 5.3)\n- https://github.com/EpicGames/UnrealEngine/pull/9903[#9903]: Restore ability to use XGE executor on non-Windows platforms (already included in UE >= 5.2)\n- https://github.com/EpicGames/UnrealEngine/pull/9932[#9932]: Fix action graph copy action on non-Windows platforms (already included in UE >= 5.2)\n\n== Building from source\n\n. Install https://www.rust-lang.org/tools/install[Rust]\n. (Windows only) Install Visual Studio 2019 or 2022. Enable \"Desktop development with {cpp}\" workload.\nAlso, enable \"{cpp} 2019 Redistributable MSMs\" \"C++ 2022 Redistributable MSMs\" in individual components.\n. Clone octobuild Git repository\n. Run `cargo build` in repository root to compile octobuild"
}
