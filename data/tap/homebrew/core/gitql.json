{
  "name": "gitql",
  "full_name": "gitql",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Git query language",
  "license": "MIT",
  "homepage": "https://github.com/filhodanuvem/gitql",
  "versions": {
    "stable": "2.3.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/filhodanuvem/gitql/archive/v2.3.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "e3d34649f3dc714cb3189638103918314cf63b1ddbfd99a067d802730d1119b2"
    },
    "head": {
      "url": "https://github.com/filhodanuvem/gitql.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitql/blobs/sha256:f3aa2f078b36976dfbfe3b5a906ac43f625b04851fa400e03e21d5abcc965c9e",
          "sha256": "f3aa2f078b36976dfbfe3b5a906ac43f625b04851fa400e03e21d5abcc965c9e"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitql/blobs/sha256:f8d5a45420e0c8696a821493c292c57a929d5571007fa0d6863a6c0479c17e0e",
          "sha256": "f8d5a45420e0c8696a821493c292c57a929d5571007fa0d6863a6c0479c17e0e"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitql/blobs/sha256:c510bf179af95811b10550f58751e33b54f7becae1106ead14d2088058deb141",
          "sha256": "c510bf179af95811b10550f58751e33b54f7becae1106ead14d2088058deb141"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitql/blobs/sha256:1afa4269aa54b3f990d4061b7fe21424c9aeb509ba86a6af4a6b7cdfd5d6daf6",
          "sha256": "1afa4269aa54b3f990d4061b7fe21424c9aeb509ba86a6af4a6b7cdfd5d6daf6"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitql/blobs/sha256:211d0bb817e59169943c5e12a9b6b147cb74a409eb59af501e774eedf30d7f4f",
          "sha256": "211d0bb817e59169943c5e12a9b6b147cb74a409eb59af501e774eedf30d7f4f"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitql/blobs/sha256:1d03ac14a4d11bd7f0c09694b68b04b679eb6fc1feb5b292b1c289417e46ce26",
          "sha256": "1d03ac14a4d11bd7f0c09694b68b04b679eb6fc1feb5b292b1c289417e46ce26"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitql/blobs/sha256:39d4bb77007f584d4ebfb5f3b6e1d40e1c6794fb728f7e32877b75d6ca3f17cd",
          "sha256": "39d4bb77007f584d4ebfb5f3b6e1d40e1c6794fb728f7e32877b75d6ca3f17cd"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/gitql.rb",
  "ruby_source_checksum": {
    "sha256": "051c88d8db1876641581b58e7b0b09a4ded6b6e472648dc8d0f7aeaf7de77634"
  },
  "date_added": "2020-10-05T13:29:54+00:00",
  "readme": "Gitql \n![](https://github.com/cloudson/gitql/workflows/CI/badge.svg) \n[![Go Report Card](https://goreportcard.com/badge/github.com/filhodanuvem/gitql)](https://goreportcard.com/report/github.com/filhodanuvem/gitql) \n[![Open Source Helpers](https://www.codetriage.com/filhodanuvem/gitql/badges/users.svg)](https://www.codetriage.com/filhodanuvem/gitql)\n<a href=\"https://opensource.org/licenses/MIT\">\n  <img src=\"https://img.shields.io/badge/license-MIT-blue.svg\" alt=\"License MIT\">\n</a>\n===============\n\nGitql is a Git query language.\n\nIn a repository path...\n\n![how to use](howtouse.gif)\n\nSee more [here](https://asciinema.org/a/97094)\n\n## Reading the code \n⚠️ Gitql is my first golang project. If you are a beginner looking for using the project as a guideline (how to organise or make an idiomatic go code), I recommend you [polyglot](https://github.com/filhodanuvem/polyglot) instead. \n\n## Requirements \n- Go 1.16+ \n\n## How to install\n\nYou can access the [releases page](https://github.com/cloudson/gitql/releases) and just grab the binary. If you want to compile itself just run `go build .`.\n\n## Examples\n\n`gitql \"your query\" `  \nor  \n`git ql \"your query\" `\n\nAs an example, this is the `commits` table:\n\n| commits |\n| ---------|\n| author |\n| author_email |\n| committer |\n| committer_email |\n| hash |\n| date |\n| message |\n| full_message |\n\n(see more tables [here](tables.md))\n\n## Example Commands\n* `select hash, author, message from commits limit 3`\n* `select hash, message from commits where 'hell' in full_message or 'Fuck' in full_message`\n* `select hash, message, author_email from commits where author = 'cloudson'`\n* `select date, message from commits where date < '2014-04-10'`\n* `select message from commits where 'hell' in message order by date asc`\n* `select distinct author from commits where date < '2020-01-01'`\n\n## Questions?\n\n`gitql` or open an [issue](https://github.com/cloudson/gitql/issues)\n\nNotes:\n* Gitql doesn't want to _kill_ `git log` - it was created just for science! :sweat_smile:\n* It's read-only - no deleting, inserting, or updating tables or commits. :stuck_out_tongue_closed_eyes:\n* The default limit is 10 rows.\n* It's inspired by [textql](https://github.com/dinedal/textql).\n* Gitql is a compiler/interpreter instead of just read a sqlite database with all commits, tags, etc. because we would need to sync the tables every time before run sql and we would have sqlite bases for each repository. :neutral_face:"
}
