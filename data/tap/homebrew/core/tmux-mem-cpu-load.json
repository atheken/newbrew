{
  "name": "tmux-mem-cpu-load",
  "full_name": "tmux-mem-cpu-load",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "CPU, RAM memory, and load monitor for use with tmux",
  "license": "Apache-2.0",
  "homepage": "https://github.com/thewtex/tmux-mem-cpu-load",
  "versions": {
    "stable": "3.8.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/thewtex/tmux-mem-cpu-load/archive/v3.8.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "deb9bdedee2aa8ad0e1e95da4c2ffdfdd0d205288ac3c9ae42c770cec4df6615"
    },
    "head": {
      "url": "https://github.com/thewtex/tmux-mem-cpu-load.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tmux-mem-cpu-load/blobs/sha256:b203442ae6ea0f20f0e4976a755ec08d83534cd51818f4582d1da7fa7fb95b2b",
          "sha256": "b203442ae6ea0f20f0e4976a755ec08d83534cd51818f4582d1da7fa7fb95b2b"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tmux-mem-cpu-load/blobs/sha256:424b990c816022d4b778e7524b3488f242dabc0bbf306bc090d4aff2ecc0bb27",
          "sha256": "424b990c816022d4b778e7524b3488f242dabc0bbf306bc090d4aff2ecc0bb27"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tmux-mem-cpu-load/blobs/sha256:04cf13948e6fa8160a4bdc51a53d0712beeb5520d52096375883ccb9c0f69a5e",
          "sha256": "04cf13948e6fa8160a4bdc51a53d0712beeb5520d52096375883ccb9c0f69a5e"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tmux-mem-cpu-load/blobs/sha256:6141b5aacc588f176a65deb2a2bdce878785bdcbc615d9ad4a4d2d4247f26201",
          "sha256": "6141b5aacc588f176a65deb2a2bdce878785bdcbc615d9ad4a4d2d4247f26201"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tmux-mem-cpu-load/blobs/sha256:eb872918fa407b197916ef2489aa35ab444a4092828f55660244b4bd3a3849fa",
          "sha256": "eb872918fa407b197916ef2489aa35ab444a4092828f55660244b4bd3a3849fa"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tmux-mem-cpu-load/blobs/sha256:393b7c5b14914cb92c22117c86a03a37b4f353457a4cf8f9718d6f6ddc645eea",
          "sha256": "393b7c5b14914cb92c22117c86a03a37b4f353457a4cf8f9718d6f6ddc645eea"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tmux-mem-cpu-load/blobs/sha256:08d2105a5e0b6fca0204c8270800bc9097c464e2a37febbaadc9ab1f273396e3",
          "sha256": "08d2105a5e0b6fca0204c8270800bc9097c464e2a37febbaadc9ab1f273396e3"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/tmux-mem-cpu-load.rb",
  "ruby_source_checksum": {
    "sha256": "364e3671d5fa351171f42aca8b3fd88b35a7f73abe08ffa4d928e5a0b22d6b08"
  },
  "date_added": "2013-09-26T22:48:27-07:00",
  "readme": "=============================================\n            tmux-mem-cpu-load\n=============================================\n---------------------------------------------\nCPU, RAM, and load monitor for use with tmux_\n---------------------------------------------\n\n.. image:: https://travis-ci.org/thewtex/tmux-mem-cpu-load.svg\n  :target: https://travis-ci.org/thewtex/tmux-mem-cpu-load\n\n.. image:: https://circleci.com/gh/thewtex/tmux-mem-cpu-load.svg?style=svg\n  :target: https://circleci.com/gh/thewtex/tmux-mem-cpu-load\n  \n.. image:: https://github.com/thewtex/tmux-mem-cpu-load/actions/workflows/main.yml/badge.svg\n   :target: https://github.com/thewtex/tmux-mem-cpu-load/actions/workflows/main.yml\n\nDescription\n===========\n\nA simple, lightweight program provided for system monitoring in the *status*\nline of **tmux**.\n\nThe memory monitor displays the used and available memory.\n\nThe CPU usage monitor outputs a percent CPU usage over all processors. It also\ndisplays a textual bar graph of the current percent usage.\n\nThe system load average is also displayed.\n\nExample output::\n\n  2885/7987MB [|||||     ]  51.2% 2.11 2.35 2.44\n\n   ^    ^          ^         ^     ^    ^    ^\n   |    |          |         |     |    |    |\n   1    2          3         4     5    6    7\n\n1. Currently used memory.\n2. Available memory.\n3. CPU usage bar graph.\n4. CPU usage percentage.\n5. Load average for the past minute.\n6. Load average for the past 5 minutes.\n7. Load average for the past 15 minutes.\n\nFor `terminals with 256 color support`_, graded colors can be displayed by\npassing the **--colors** flag.\n\n\nInstallation\n============\n\nDependencies\n------------\n\nCurrently, Linux, Mac OSX, FreeBSD, OpenBSD, and NetBSD are supported.\n\nBuilding\n~~~~~~~~\n\n* >= CMake_ -3.5\n* C++ compiler with C++11 support (e.g. gcc/g++ >= 4.6)\n\nDownload\n--------\n\nThere are links to the source code at the `project homepage`_.\n\nBuild\n-----\n\n::\n\n  cd <source dir>\n  cmake .\n  make\n\nInstall\n-------\n\n::\n\n  su -\n  make install\n  logout\n\nBuild and Install Using tpm_\n-----------------------------\n\nInclude the plugin in your ``.tmux.conf``, the same file you'll set the\nconfiguration in, below.\n\n::\n\n  set -g @plugin 'thewtex/tmux-mem-cpu-load'\n\nInstall with Package Managers\n-----------------------------\n\n* Gentoo: ``emerge tmux-mem-cpu-load``\n* Homebrew: ``brew install tmux-mem-cpu-load``\n\nBuild and Install Using Antigen_\n--------------------------------\n\nInclude the bundle in your ``.zshrc``\n\n::\n\n  antigen bundle thewtex/tmux-mem-cpu-load\n\nConfiguring tmux_\n=================\n\nEdit ``$HOME/.tmux.conf`` to display the program's output in *status-left* or\n*status-right*.  For example::\n\n  set -g status-interval 2\n  set -g status-left \"#S #[fg=green,bg=black]#(tmux-mem-cpu-load --colors --interval 2)#[default]\"\n  set -g status-left-length 60\n\nIf you installed using tpm, you must specify the full path to the\n``tmux-mem-cpu-load`` script, like below::\n\n  set -g status-right '#[fg=green]#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load --colors --powerline-right --interval 2)#[default]'\n\nNote that the *interval* argument to `tmux-mem-cpu-load` should be the same number\nof seconds that *status-interval* is set at.\n\nAnother optional argument is the number of bars in the bar graph, which\ndefaults to 10.  This can, for instance, be set to the number of cores in a\nmulti-core system.\n\nThe *colors* option will add graded colors for each of the measures.\n\nThe full usage::\n\n  Usage: tmux-mem-cpu-load [OPTIONS]\n\n  Available options:\n  -h, --help\n           Prints this help message\n  -c, --colors\n          Use tmux colors in output\n  -p, --powerline-left\n\t  Use powerline left symbols throughout the output, enables --colors\n  -q, --powerline-right\n\t  Use powerline right symbols throughout the output, enables --colors\n  -v, --vertical-graph\n\t  Use vertical bar chart for CPU graph\n  -l <value>, --segments-left <value>\n\t  Enable blending bg/fg color (depending on -p or -q use) with segment to left\n\t  Provide color to be used depending on -p or -q option for seamless segment blending\n\t  Color is an integer value which uses the standard tmux color palette values\n  -r <value>, --segments-right <value>\n\t  Enable blending bg/fg color (depending on -p or -q use) with segment to right\n\t  Provide color to be used depending on -p or -q option for seamless segment blending\n\t  Color is an integer value which uses the standard tmux color palette values\n  -i <value>, --interval <value>\n          Set tmux status refresh interval in seconds. Default: 1 second\n  -g <value>, --graph-lines <value>\n          Set how many lines should be drawn in a graph. Default: 10\n  -m <value>, --mem-mode <value>\n        Set memory display mode. 0: Default, 1: Free memory, 2: Usage percent.\n  -t <value>, --cpu-mode <value>\n        Set cpu % display mode. 0: Default max 100%, 1: Max 100% * number of threads.\n  -a <value>, --averages-count <value>\n        Set how many load-averages should be drawn. Default: 3\n\nBlending Dynamic Colors Tmux Powerline Segments\n===============================================\n\nThe -l and -r options when used in conjunction with a recent version of Tmux Powerline\nthat has the ability to selectively disable spacing and separators between segments allow\nfor seamless blending of tmux-mem-cpu-load output with other adjacent segments.  The end\nresult is dynamic changing of appropriate foreground and background colors as the start\nand end of the tmux-mem-cpu-load output string that is aggregated with other Tmux\nPowerline output to produce a more polished status line in Tmux.\n\nSegment Adjaceny before this feature:\n\n.. image:: seg-adj1.png\n\nSegment Adjaceny after this feature:\n\n.. image:: seg-adj2.png\n\nNote that the values for the -l and -r options  will be the standard Tmux integer color\nvalues.  They set the appropriate background and foreground colors used for the separator\ncharacter when used with the poweline-left or powerline-right options so it is easy to\nmatch coloring to adjacent segments.  An example from the segment script that calls\ntmux-mem-cpu-load is as follows::\n\n  tmux-mem-cpu-load -q -v -l 52 -r 33\n\nThis combines with theme options available to tmux-powerline, such as the following::\n\n  \"disk_usage_cust 52 123 ${TMUX_POWERLINE_SEPARATOR_LEFT_BOLD} 52 123 right_disable\" \\\n  \"tmux_mem_cpu_load_cust 52 234 ${TMUX_POWERLINE_SEPARATOR_LEFT_BOLD} 52 234 both_disable separator_disable\" \\\n  \"batt_cust 33 154 ${TMUX_POWERLINE_SEPARATOR_LEFT_BOLD} 16 33 N separator_disable\" \\  \n\nAuthors\n=======\n\nMatt McCormick (thewtex) <matt@mmmccormick.com>\n\nContributions from:\n\n* cousine <iam@cousine.me>\n* Jasper Lievisse Adriaanse <jasper@humppa.nl>\n* Justin Crawford <justinc@pci-online.net>\n* krieiter <krieiter@gmail.com>\n* Mark Palmeri <mlp6@duke.edu>\n* `Pawel 'l0ner' Soltys`_ <pwslts@gmail.com>\n* Travil Heller <trav.heller@gmail.com>\n* Tony Narlock <tony@git-pull.com>\n* Compilenix <Compilenix@compilenix.org>\n* jodavies <jodavies1010@gmail.com>\n* `@nhdaly`_ (Nathan Daly) <nhdaly@gmail.com>\n* bensuperpc <bensuperpc@gmail.com>\n\n.. _tmux: http://tmux.sourceforge.net/\n.. _CMake: http://www.cmake.org\n.. _`project homepage`: http://github.com/thewtex/tmux-mem-cpu-load\n.. _`tpm`: http://github.com/tmux-plugins/tpm\n.. _`Antigen`: https://github.com/zsh-users/antigen\n.. _`terminals with 256 color support`: http://misc.flogisoft.com/bash/tip_colors_and_formatting#terminals_compatibility\n.. _`Pawel 'l0ner' Soltys` : http://l0ner.github.io/\n.. _`@nhdaly` : http://github.com/nhdaly"
}
