{
  "name": "unshield",
  "full_name": "unshield",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Extract files from InstallShield cabinet files",
  "license": "MIT",
  "homepage": "https://github.com/twogood/unshield",
  "versions": {
    "stable": "1.5.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/twogood/unshield/archive/1.5.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "34cd97ff1e6f764436d71676e3d6842dc7bd8e2dd5014068da5c560fe4661f60"
    },
    "head": {
      "url": "https://github.com/twogood/unshield.git",
      "branch": "master"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unshield/blobs/sha256:4919d2591a3822980fc17ed43ce5550ec7a40aa5f0a3df597222147d4eded84d",
          "sha256": "4919d2591a3822980fc17ed43ce5550ec7a40aa5f0a3df597222147d4eded84d"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unshield/blobs/sha256:1956ca8994e481560c1f7d548d3af0f5ebdf82ff632a6bbd5de320cb87162436",
          "sha256": "1956ca8994e481560c1f7d548d3af0f5ebdf82ff632a6bbd5de320cb87162436"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unshield/blobs/sha256:3f410a76b57b1cde50eb5f564afec25ebc83a5a07b0251bcdbba468c2d902610",
          "sha256": "3f410a76b57b1cde50eb5f564afec25ebc83a5a07b0251bcdbba468c2d902610"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unshield/blobs/sha256:32e84d1e1fd8e1b06dede6e390d72c1335cefefcecf875d2088093ac56f67836",
          "sha256": "32e84d1e1fd8e1b06dede6e390d72c1335cefefcecf875d2088093ac56f67836"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unshield/blobs/sha256:cd329f3c7c6a0eb689adc539072a66228042b126b89e41fd7fc2e2017c302b4b",
          "sha256": "cd329f3c7c6a0eb689adc539072a66228042b126b89e41fd7fc2e2017c302b4b"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unshield/blobs/sha256:bcfab080b4f19f79161072f22eb8dbc16ca0907c65ed497784e156f83c102959",
          "sha256": "bcfab080b4f19f79161072f22eb8dbc16ca0907c65ed497784e156f83c102959"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unshield/blobs/sha256:459cca0a961fff42ce428014c5ae250925835a722f2553fc015ae0a52d178c25",
          "sha256": "459cca0a961fff42ce428014c5ae250925835a722f2553fc015ae0a52d178c25"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/unshield/blobs/sha256:c30ebbc1b331b3eff9f80d5ef689f8934ee3c684f7b1cba914b9c1e45795128d",
          "sha256": "c30ebbc1b331b3eff9f80d5ef689f8934ee3c684f7b1cba914b9c1e45795128d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "openssl@3"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "zlib"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/unshield.rb",
  "ruby_source_checksum": {
    "sha256": "eb409f6a96d7411b55ac158c4971bd9a3f717ff855f10c9b442c7e77aa28b6de"
  },
  "date_added": "2010-03-15T11:11:29-07:00",
  "readme": "Unshield\n========\n\n[![Packaging status](https://repology.org/badge/tiny-repos/unshield.svg)](https://repology.org/project/unshield/versions)\n[![Homebrew package](https://repology.org/badge/version-for-repo/homebrew/unshield.svg)](https://repology.org/project/unshield/versions)\n\n\nSupport Unshield development\n----------------------------\n\n- [PayPal](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=SQ7PEFMJK36AU)\n\n\nDictionary\n----------\n\nInstallShield (IS): see www.installshield.com\n\nInstallShield Cabinet File (ISCF): A .cab file used by IS.\n\nMicrosoft Cabinet File (MSCF): A .cab file used by Microsoft.\n\n\nAbout Unshield\n--------------\n\nTo install a Pocket PC application remotely, an installable\nMicrosoft Cabinet File is copied to the /Windows/AppMgr/Install\ndirectory on the PDA and then the wceload.exe is executed to\nperform the actual install. That is a very simple procedure.\n\nUnfortunately, many applications for Pocket PC are distributed as\nInstallShield installers for Microsoft Windows, and not as\nindividual Microsoft Cabinet Files. That is very impractical for\nusers of other operating systems, such as Linux or FreeBSD.\n\nAn installer created by the InstallShield software stores the\nfiles it will install inside of InstallShield Cabinet Files. It\nwould thus be desirable to be able to extract the Microsoft\nCabinet Files from the InstallShield Cabinet Files in order to be\nable to install the applications without access to Microsoft\nWindows.\n\nThe format of InstallShield Cabinet Files is not officially\ndocumented but there are two tools available for Microsoft\nWindows that extracts files from InstallShield installers, and\nthey are distributed with source code included. These tools are\nnamed \"i5comp\" and \"i6comp\" and can be downloaded from the\nInternet.\n\nOne major drawback with these tools are that for the actual\ndecompression of the files stored in the InstallShield Cabinet\nFiles they require the use of code written by InstallShield that\nis not available as source code. Luckily, by examining this code\nwith the 'strings' tool, I discovered that they were using the\nopen source zlib library (www.gzip.org/zlib) for decompression.\n\nI could have modified i5comp and i6comp to run on other operating\nsystems than Microsoft Windows, but I preferred to use them as a\nreference for this implementation. The goals of this\nimplementation are:\n\n- Use a well known open source license (MIT)\n\n- Work on both little-endian and big-endian systems\n\n- Separate the implementation in a tool and a library\n\n- Support InstallShield versions 5 and later\n\n- Be able to list contents of InstallShield Cabinet Files\n\n- Be able to extract files from InstallShield Cabinet Files\n\n\nLicense\n-------\n\nUnshield uses the MIT license. The short version is \"do as you\nlike, but don't blame me if anything goes wrong\".\n\nSee the file LICENSE for details.\n\n\nBuild From Source\n-----------------\n\nJust use the standard CMake build process:\n\n``` sh\ncmake .\nmake\nmake install\n```"
}
