{
  "name": "ctemplate",
  "full_name": "ctemplate",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Template language for C++",
  "license": "BSD-3-Clause",
  "homepage": "https://github.com/olafvdspek/ctemplate",
  "versions": {
    "stable": "2.4",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/OlafvdSpek/ctemplate/archive/ctemplate-2.4.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "ccc4105b3dc51c82b0f194499979be22d5a14504f741115be155bd991ee93cfa"
    },
    "head": {
      "url": "https://github.com/olafvdspek/ctemplate.git",
      "branch": "master"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 3,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ctemplate/blobs/sha256:ee9935e535f7fc5ad36e78a17cdfa370dd804442065fb9d71f42939042b9a239",
          "sha256": "ee9935e535f7fc5ad36e78a17cdfa370dd804442065fb9d71f42939042b9a239"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ctemplate/blobs/sha256:60926618dc8939dee2953a3eed541ffbcda70ae70ea9e4811de4c635f351c3dc",
          "sha256": "60926618dc8939dee2953a3eed541ffbcda70ae70ea9e4811de4c635f351c3dc"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ctemplate/blobs/sha256:229589ee690294f135322334b902cacb32c86b9be7775320920300f8716d2a2a",
          "sha256": "229589ee690294f135322334b902cacb32c86b9be7775320920300f8716d2a2a"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ctemplate/blobs/sha256:8395eba52adc92de5ec11316fd65082dba1f5c934750cd86d7ec68ab7c40251d",
          "sha256": "8395eba52adc92de5ec11316fd65082dba1f5c934750cd86d7ec68ab7c40251d"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ctemplate/blobs/sha256:3403981879581767866598b52b148046e46362102620c6220a06464add516197",
          "sha256": "3403981879581767866598b52b148046e46362102620c6220a06464add516197"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ctemplate/blobs/sha256:d47aa3297f5e44511790bb0fb1bf4e7eb5d37c599b9c9b661133d68f821b7048",
          "sha256": "d47aa3297f5e44511790bb0fb1bf4e7eb5d37c599b9c9b661133d68f821b7048"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ctemplate/blobs/sha256:376a70935eec4f3f5965bcd0b39603f25459b8995d12d124c3ab10184e15f3ae",
          "sha256": "376a70935eec4f3f5965bcd0b39603f25459b8995d12d124c3ab10184e15f3ae"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "autoconf",
    "automake",
    "libtool",
    "python@3.11"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/ctemplate.rb",
  "ruby_source_checksum": {
    "sha256": "fca653f7e7629908e2e2c6c42edddbd86149c543e8ca61c30709ec62052597b8"
  },
  "date_added": "2012-08-22T09:02:41-07:00",
  "readme": "# Welcome to the C++ CTemplate system!\n\nThis library provides an easy to use and lightning fast text templating system\nto use with C++ programs.\n\nIt was originally called Google Templates, due to its origin as the template\nsystem used for Google search result pages. Now it has a more general name\nmatching its community-owned nature.\n\n## Documentation\n\nRefer to the [Project\nDocumentation](<https://htmlpreview.github.io/?https://github.com/OlafvdSpek/ctemplate/blob/master/doc/index.html>)\nto learn how to use the CTemplate system.\n\nThere is also a\n[HOWTO](<https://htmlpreview.github.io/?https://raw.githubusercontent.com/OlafvdSpek/ctemplate/master/doc/howto.html>)\nand\n[Examples](<https://htmlpreview.github.io/?https://raw.githubusercontent.com/OlafvdSpek/ctemplate/master/doc/example.html>).\n\n## Compiling\n\nTo compile test applications with these classes, run `./autogen.sh && ./configure` followed by\n`make` on unixoid platforms like Linux or MacOSX.\n\nTo install these header files on your system, run `make install`.\n\nSee INSTALL for more details.\n\nThis code should work on any modern C++ system. It has been tested on Linux\n(Ubuntu, Fedora, RedHat), Solaris 10 x86, FreeBSD 6.0, OS X 10.3 and 10.4, and\nWindows under both VC++7 and VC++8.\n\nThere are a few Windows-specific details; see the [Windows README](README_windows.txt)\nfor more information.\n\n## CTemplate and Threads\n\nThe ctemplate library has thread support, so it works properly in a threaded\nenvironment.\n\nFor this to work, if you link libraries with `-lctemplate` you may also need to\nadd `-pthread` (or, on some systems, `-pthreads`, and on others, `-lpthread`) to\nget the library to compile. If you leave out the `-pthread`, you'll see errors\nlike this:\n\n```\nsymbol lookup error: /usr/local/lib/libctemplate.so.0: undefined symbol: pthread_rwlock_init\n```\n\nIf your code isn't multi-threaded, you can instead use the `ctemplate_nothreads`\nlibrary: `-lctemplate_nothreads`.\n\nTo summarize, there are two ways to link in ctemplate in non-threaded\napplications. For instance:\n\n1.  Thread safe build: `gcc -o my_app my_app.o -lctemplate -pthread`\n\n2.  Unthreaded code: `gcc -o my_app my_app.o -lctemplate_nothreads`\n\nIf your application uses threads, you should use form (1)."
}
