{
  "name": "arxiv_latex_cleaner",
  "full_name": "arxiv_latex_cleaner",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Clean LaTeX code to submit to arXiv",
  "license": "Apache-2.0",
  "homepage": "https://github.com/google-research/arxiv-latex-cleaner",
  "versions": {
    "stable": "1.0.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/ba/75/626014f47d51aad0e6ef39a051ba7fe24a4e4f8b0bf23750909615d62864/arxiv_latex_cleaner-1.0.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d9fae07f82f8ad19704ff58fe4e1ed7fc668cc28ea6238c13bf5d687c988d79c"
    },
    "head": {
      "url": "https://github.com/google-research/arxiv-latex-cleaner.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/arxiv_latex_cleaner/blobs/sha256:59e1f7f2b1fd4a108cd90d8f37e4f25df256f1497d33a06ac7dd1816feca76ea",
          "sha256": "59e1f7f2b1fd4a108cd90d8f37e4f25df256f1497d33a06ac7dd1816feca76ea"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/arxiv_latex_cleaner/blobs/sha256:443cd9aa0aa89848be97e53875f750350038a51ab823054eb4d2e2d045564388",
          "sha256": "443cd9aa0aa89848be97e53875f750350038a51ab823054eb4d2e2d045564388"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/arxiv_latex_cleaner/blobs/sha256:e553bbb1f502cd3af77fc1f47f74e12f346d8c13bfc498a7b5dad91ec4d5cd9f",
          "sha256": "e553bbb1f502cd3af77fc1f47f74e12f346d8c13bfc498a7b5dad91ec4d5cd9f"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/arxiv_latex_cleaner/blobs/sha256:e2c836ed2b9e98abf78c749bb7063f4b7d82f70aa894a4a3fc7e127ccbb75f22",
          "sha256": "e2c836ed2b9e98abf78c749bb7063f4b7d82f70aa894a4a3fc7e127ccbb75f22"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/arxiv_latex_cleaner/blobs/sha256:ec7d1e9001dc717e0e675251fcea6dc279e76c0ab33bb6cc49e05bf5f2021ce7",
          "sha256": "ec7d1e9001dc717e0e675251fcea6dc279e76c0ab33bb6cc49e05bf5f2021ce7"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/arxiv_latex_cleaner/blobs/sha256:f3e4be0d6ce58369194aadbd41d7b7b01499fefc0cd96ecf5cb0953074152b23",
          "sha256": "f3e4be0d6ce58369194aadbd41d7b7b01499fefc0cd96ecf5cb0953074152b23"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/arxiv_latex_cleaner/blobs/sha256:3f1d41f50ae1732dbbaf453074307d963e5cc787a7716d50d6469b524b2e4c07",
          "sha256": "3f1d41f50ae1732dbbaf453074307d963e5cc787a7716d50d6469b524b2e4c07"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "pillow",
    "python@3.11",
    "pyyaml",
    "six"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/arxiv_latex_cleaner.rb",
  "ruby_source_checksum": {
    "sha256": "28494b679a61af6b0ed8a6c91e31d8ae86734161b587dafc9f3e3977e2ec7bae"
  },
  "date_added": "2022-05-03T13:36:09+00:00",
  "readme": "# `arxiv_latex_cleaner`\n\nThis tool allows you to easily clean the LaTeX code of your paper to submit to\narXiv. From a folder containing all your code, e.g. `/path/to/latex/`, it\ncreates a new folder `/path/to/latex_arXiv/`, that is ready to ZIP and upload to\narXiv.\n\n## Example call:\n\n```bash\narxiv_latex_cleaner /path/to/latex --resize_images --im_size 500 --images_allowlist='{\"images/im.png\":2000}'\n```\n\nOr simply from a config file\n\n```bash\narxiv_latex_cleaner /path/to/latex --config cleaner_config.yaml\n```\n\n## Installation:\n\n```bash\npip install arxiv-latex-cleaner\n```\n\n| :exclamation: arxiv_latex_cleaner is only compatible with Python >=3 :exclamation: |\n| ---------------------------------------------------------------------------------- |\n\nIf using MacOS, you can install using [Homebrew](https://brew.sh/):\n\n```bash\nbrew install arxiv_latex_cleaner\n```\n\nAlternatively, you can download the source code:\n\n```bash\ngit clone https://github.com/google-research/arxiv-latex-cleaner\ncd arxiv-latex-cleaner/\npython -m arxiv_latex_cleaner --help\n```\n\nAnd install as a command-line program directly from the source code:\n\n```bash\npython setup.py install\n```\n\n## Main features:\n\n#### Privacy-oriented\n\n*   Removes all auxiliary files (`.aux`, `.log`, `.out`, etc.).\n*   Removes all comments from your code (yes, those are visible on arXiv and you\n    do not want them to be). These also include `\\begin{comment}\\end{comment}`,\n    `\\iffalse\\fi`, and `\\if0\\fi` environments.\n*   Optionally removes user-defined commands entered with `commands_to_delete`\n    (such as `\\todo{}` that you redefine as the empty string at the end).\n*   Optionally allows you to define custom regex replacement rules through a\n    `cleaner_config.yaml` file.\n\n#### Size-oriented\n\nThere is a 50MB limit on arXiv submissions, so to make it fit:\n\n*   Removes all unused `.tex` files (those that are not in the root and not\n    included in any other `.tex` file).\n*   Removes all unused images that take up space (those that are not actually\n    included in any used `.tex` file).\n*   Optionally resizes all images to `im_size` pixels, to reduce the size of the\n    submission. You can allowlist some images to skip the global size using\n    `images_allowlist`.\n*   Optionally compresses `.pdf` files using ghostscript (Linux and Mac only).\n    You can allowlist some PDFs to skip the global size using\n    `images_allowlist`.\n\n#### TikZ picture source code concealment\n\nTo prevent the upload of tikzpicture source code or raw simulation data, this\nfeature:\n\n*   Replaces the tikzpicture environment `\\begin{tikzpicture} ...\n    \\end{tikzpicture}` with the respective\n    `\\includegraphics{EXTERNAL_TIKZ_FOLDER/picture_name.pdf}`.\n*   Requires externally compiled TikZ pictures as `.pdf` files in folder\n    `EXTERNAL_TIKZ_FOLDER`. See section 53 in the\n    [PGF/TikZ manual](https://ctan.org/pkg/pgf?lang=en) on TikZ picture\n    externalization.\n*   Only replaces environments with preceding\n    `\\tikzsetnextfilename{picture_name}` command (as in\n    `\\tikzsetnextfilename{picture_name}\\begin{tikzpicture} ...\n    \\end{tikzpicture}`) where the externalized `picture_name.pdf` filename\n    matches `picture_name`.\n\n#### More sophisticated pattern replacement based on regex group captures\n\nSometimes it is useful to work with a set of custom LaTeX commands when writing\na paper. To get rid of them upon arXiv submission, one can simply revert them to\nplain LaTeX with a regular expression insertion.\n\n```yaml\n{\n    \"pattern\" : '(?:\\\\figcomp{\\s*)(?P<first>.*?)\\s*}\\s*{\\s*(?P<second>.*?)\\s*}\\s*{\\s*(?P<third>.*?)\\s*}',\n    \"insertion\" : '\\parbox[c]{{ {second} \\linewidth}} {{ \\includegraphics[width= {third} \\linewidth]{{figures/{first} }} }}',\n    \"description\" : \"Replace figcomp\"\n}\n```\n\nThe pattern above will find all `\\figcomp{path}{w1}{w2}` commands and replace\nthem with\n`\\parbox[c]{w1\\linewidth}{\\includegraphics[width=w2\\linewidth]{figures/path}}`.\nNote that the insertion template is filled with the\n[named groups captures](https://docs.python.org/3/library/re.html#regular-expression-examples)\nfrom the pattern. Note that the replacement is processed **before** all\n`\\includegraphics` commands are processed and corresponding file paths are\ncopied, making sure all figure files are copied to the cleaned version. See also\n[cleaner_config.yaml](cleaner_config.yaml) for details on how to specify the\npatterns.\n\n## Usage:\n\n```\nusage: arxiv_latex_cleaner@v1.0.1 [-h] [--resize_images] [--im_size IM_SIZE]\n                                   [--compress_pdf]\n                                   [--pdf_im_resolution PDF_IM_RESOLUTION]\n                                   [--images_allowlist IMAGES_ALLOWLIST]\n                                   [--keep_bib]\n                                   [--commands_to_delete COMMANDS_TO_DELETE [COMMANDS_TO_DELETE ...]]\n                                   [--use_external_tikz USE_EXTERNAL_TIKZ]\n                                   [--config CONFIG] [--verbose]\n                                   input_folder\n\nClean the LaTeX code of your paper to submit to arXiv. Check the README for\nmore information on the use.\n\npositional arguments:\n  input_folder          Input folder containing the LaTeX code.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --resize_images       Resize images.\n  --im_size IM_SIZE     Size of the output images (in pixels, longest side).\n                        Fine tune this to get as close to 10MB as possible.\n  --compress_pdf        Compress PDF images using ghostscript (Linux and Mac\n                        only).\n  --pdf_im_resolution PDF_IM_RESOLUTION\n                        Resolution (in dpi) to which the tool resamples the\n                        PDF images.\n  --images_allowlist IMAGES_ALLOWLIST\n                        Images (and PDFs) that won't be resized to the default\n                        resolution,but the one provided here. Value is pixel\n                        for images, and dpi forPDFs, as in --im_size and\n                        --pdf_im_resolution, respectively. Format is a\n                        dictionary as: '{\"path/to/im.jpg\": 1000}'\n  --keep_bib            Avoid deleting the *.bib files.\n  --commands_to_delete COMMANDS_TO_DELETE [COMMANDS_TO_DELETE ...]\n                        LaTeX commands that will be deleted. Useful for e.g.\n                        user-defined \\todo commands. For example, to delete\n                        all occurrences of \\todo1{} and \\todo2{}, run the tool\n                        with `--commands_to_delete todo1 todo2`.Please note\n                        that the positional argument `input_folder` cannot\n                        come immediately after `commands_to_delete`, as the\n                        parser does not have any way to know if it's another\n                        command to delete.\n  --commands_only_to_delete COMMANDS_ONLY_TO_DELETE [COMMANDS_ONLY_TO_DELETE ...]\n                        LaTeX commands that will be deleted but the text \n                        wrapped in the commands will be retained. Useful for\n                        commands that change text formats and colors, which\n                        you may want to remove but keep the text within. Usages\n                        are exactly the same as commands_to_delete. Note that if\n                        the commands listed here duplicate that after\n                        commands_to_delete, the default action will be retaining\n                        the wrapped text.\n  --environments_to_delete ENVIRONMENTS_TO_DELETE [ENVIRONMENTS_TO_DELETE ...]\n                        LaTeX environments that will be deleted. Useful for e.g. \n                        user-defined comment environments. For example, to \n                        delete all occurrences of \\begin{note} ... \\end{note},\n                        run the tool with `--environments_to_delete note`. \n                        Please note that the positional argument `input_folder`\n                        cannot come immediately after\n                        `environments_to_delete`, as the parser does not have\n                        any way to know if it's another environment to delete.\n  --use_external_tikz USE_EXTERNAL_TIKZ\n                        Folder (relative to input folder) containing\n                        externalized tikz figures in PDF format.\n  --svg_inkscape [SVG_INKSCAPE]\n                        Include PDF files generated by Inkscape via the\n                        `\\includesvg` command from the `svg` package. This is\n                        done by replacing the `\\includesvg` calls with\n                        `\\includeinkscape` calls pointing to the generated\n                        `.pdf_tex` files. By default, these files and the\n                        generated PDFs are located under `./svg-inkscape`\n                        (relative to the input folder), but a different path\n                        (relative to the input folder) can be provided in case a\n                        different `inkscapepath` was set when loading the `svg`\n                        package.\n  --config CONFIG       Read settings from `.yaml` config file. If command\n                        line arguments are provided additionally, the config\n                        file parameters are updated with the command line\n                        parameters.\n  --verbose             Enable detailed output.\n```\n\n## Testing:\n\n```bash\npython -m unittest arxiv_latex_cleaner.tests.arxiv_latex_cleaner_test\n```\n\n## Note\n\nThis is not an officially supported Google product."
}
