{
  "name": "vfuse",
  "full_name": "vfuse",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Convert bootable DMG images for use in VMware Fusion",
  "license": "Apache-2.0",
  "homepage": "https://github.com/chilcote/vfuse",
  "versions": {
    "stable": "2.2.6",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/chilcote/vfuse/archive/2.2.6.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "fbf5f8a1c664b03c7513a70aa05c3fc501a7ebdb53f128f1f05c24395871a314"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/vfuse/blobs/sha256:f8184d1fd9ed9a9053df739ad09fa721686131c8a6c2a13b294aec564016cf19",
          "sha256": "f8184d1fd9ed9a9053df739ad09fa721686131c8a6c2a13b294aec564016cf19"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/vfuse/blobs/sha256:f8184d1fd9ed9a9053df739ad09fa721686131c8a6c2a13b294aec564016cf19",
          "sha256": "f8184d1fd9ed9a9053df739ad09fa721686131c8a6c2a13b294aec564016cf19"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/vfuse/blobs/sha256:95be83b370683ec27d9052f897028bd939241568d81939a67d3bb985d89a06df",
          "sha256": "95be83b370683ec27d9052f897028bd939241568d81939a67d3bb985d89a06df"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/vfuse/blobs/sha256:95be83b370683ec27d9052f897028bd939241568d81939a67d3bb985d89a06df",
          "sha256": "95be83b370683ec27d9052f897028bd939241568d81939a67d3bb985d89a06df"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/vfuse/blobs/sha256:95be83b370683ec27d9052f897028bd939241568d81939a67d3bb985d89a06df",
          "sha256": "95be83b370683ec27d9052f897028bd939241568d81939a67d3bb985d89a06df"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/vfuse/blobs/sha256:95be83b370683ec27d9052f897028bd939241568d81939a67d3bb985d89a06df",
          "sha256": "95be83b370683ec27d9052f897028bd939241568d81939a67d3bb985d89a06df"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": true,
  "deprecation_date": "2023-07-03",
  "deprecation_reason": "deprecated_upstream",
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/vfuse.rb",
  "ruby_source_checksum": {
    "sha256": "6ce9dafe51ed8f84b9864da4a58dfa9accd6b33828d15b4f0388fa88daba8db2"
  },
  "date_added": "2018-09-15T15:46:37+10:00",
  "readme": "vfuse (Deprecated)\n====\n\n> Note: Big Sur guests are not supported due to the changes Apple made to the system volume. Additionally, because Apple has changed the anatomy of the installer application, AutoDMG [cannot](https://github.com/MagerValp/AutoDMG/issues/254) create a never-booted DMG for Big Sur or above. And finally, Apple Silicon doesn't even support virtualizing macOS. As a result, I won't be updating this script any longer. My heartfelt thanks to everyone who contributed code or issues. This community is amazing.\n\n---\n\nThis script takes a never-booted DMG and converts it to a VMware Fusion VM.\n\nThe germ of this idea came about, as all good ideas, and germs, do: while drinking beer. Specifically, I was tossing back drinks and tossing around ideas with [Gilbert Wilson](https://www.linkedin.com/in/wilsongilbert/), and he mentioned that he uses the VMware CLI tools to convert DMGs to VMDKs based on a [blog post](http://hazenet.dk/2013/07/17/creating-a-never-booted-os-x-template-in-vsphere-5-1/6/) he'd read.  Intrigued, I asked Gil to email me the specifics.  After seeing how potentially cool this was, I wrapped it up in this here terribly illegible, queasingly unpythonic script.\n\n> Note: Big Sur guests are not supported. Because Apple has changed the anatomy of the installer application, AutoDMG [most likely won't be able to](https://github.com/MagerValp/AutoDMG/issues/254) create a never-booted DMG for Big Sur. And since that is a dependency for vfuse, we are currently out of luck.\n\n> Note: Version 3.0 requires python3. If you wish to continue using vfuse with Apple's system python2, you should use the vfuse 2.2.6 release. However, at some point in the not-too-distant future, Apple is going to remove python completely from macOS, and you'll need to roll your own python3 to be able to use vfuse.\n\nOptions for installing python3:\n1. Install the pkg downloaded directly from [python.org](https://www.python.org/downloads).\n2. Install Apple's CL Tools (either by downloading the pkg from Apple's [developer site](https://developer.apple.com/download/more), or by invoking the shim at `/usr/bin/python3`).\n3. Build your own copy of python (E.g. Greg Neagle's [relocatable python](https://github.com/gregneagle/relocatable-python) tools). You'll need to ensure that this custom python is the default python in your `$PATH`.\n\nRequirements\n------------\n\n+ VMware Fusion 11.5.1 Professional or above\n+ OS X 10.15+\n+ Python 3+\n+ A never-booted image created with [AutoDMG](https://github.com/magervalp/autodmg).\n+ (optional) [Packer](https://packer.io) 1.1.1 (or above) for building a vagrant box.\n+ (optional) [qemu-img](https://en.wikibooks.org/wiki/QEMU/Installing_QEMU)\n\nUsage\n-----\n\n    usage: vfuse [-h] [--version] [-i INPUT] [-o OUTPUT] [-n NAME] [-w HW_VERSION]\n                 [-m MEM_SIZE] [-s [SERIAL]] [-t TEMPLATE] [-e]\n                 [--disk_type DISK_TYPE] [-p PACKER] [-d D] [--hw-model HW_MODEL]\n                 [--board-id BOARD_ID] [--use-qemu [USE_QEMU]] [--recovery]\n                 [--snapshot] [--snapshot-name SNAPSHOT_NAME] [-c CHECKSUM]\n                 [--list-templates] [--list-cache] [--clear-cache]\n\n    Create VM from source DMG.\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    --version             show the version number\n    -i INPUT, --input INPUT\n                            /path/to/dmg\n    -o OUTPUT, --output OUTPUT\n                            /path/to/output/dir\n    -n NAME, --name NAME  Use a custom name\n    -w HW_VERSION, --hw-version HW_VERSION\n                            VMware hardware version\n    -m MEM_SIZE, --mem-size MEM_SIZE\n                            Memory Size in MB\n    -s [SERIAL], --serial [SERIAL]\n                            Custom Serial number\n    -t TEMPLATE, --template TEMPLATE\n                            Use a template\n    -e, --esx             Create pre-allocated ESX-type VMDK\n    -p PACKER, --packer PACKER\n                            Populate a packer template\n    -d D                  Path to CD/DVD ISO path\n    --hw-model HW_MODEL   Custom hardware model\n    --board-id BOARD_ID   Custom hardware board id\n    --use-qemu [USE_QEMU]\n                            Use qemu-img intead of the Fusion CLI tools [/path/to\n                            /qemu-img]\n    --recovery            Boot into Recovery HD\n    --snapshot            Create initial snapshot\n    --snapshot-name SNAPSHOT_NAME\n                            Custom name for the initial snapshot\n    -c CHECKSUM, --checksum CHECKSUM\n                            Generate checksum of a DMG\n    --list-templates      Return list of available templates\n    --list-cache          Return list of cached disk images\n    --clear-cache         Clear cached disk images\n\nCreating a VM\n-------------\n\nRunning `vfuse` does not necessarily require sudo rights, but if you don't want to be prompted in the GUI for an admin password, run it with `sudo`. (Escalated privileges is required to run the `vmware-vdiskmanager` binary, which `vfuse` uses.)\n\nThe only required argument is `-i` aka `--input`. Run thusly, it will create a vm called `macos-vm.vmwarevm` in the current working directory:\n\n    /usr/local/vfuse/bin/vfuse -i /path/to/dmg\n\nSee the [wiki](https://github.com/chilcote/vfuse/wiki) for more on how to use `vfuse`.\n\n\nCaveats\n-------\n\n`vfuse` is meant to be used with never-booted disk images created with [AutoDMG](https://github.com/magervalp/autodmg). Using `vfuse` with a dmg created with Disk Utility is not something that has been tested, so you're on your own there. Likely, it's even more of a longshot with APFS.\n\nLicense\n-------\n\n    Copyright 2016-Present Joseph Chilcote\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License."
}
