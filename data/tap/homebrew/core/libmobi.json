{
  "name": "libmobi",
  "full_name": "libmobi",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "C library for handling Kindle (MOBI) formats of ebook documents",
  "license": "LGPL-3.0-or-later",
  "homepage": "https://github.com/bfabiszewski/libmobi",
  "versions": {
    "stable": "0.11",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/bfabiszewski/libmobi/releases/download/v0.11/libmobi-0.11.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "6a7cbfb2b8f00849f02af3d913a694a0d7c7e7acb6b801625373f32e57db8051"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libmobi/blobs/sha256:ed2e5915bb8c43876492d8c12f09d72ce13a2e2b9d6567cd815a07ebca15288f",
          "sha256": "ed2e5915bb8c43876492d8c12f09d72ce13a2e2b9d6567cd815a07ebca15288f"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libmobi/blobs/sha256:8910ccf86e81bb038762ff0f07239a16bfbe36321c682042ef0e7b594cc30154",
          "sha256": "8910ccf86e81bb038762ff0f07239a16bfbe36321c682042ef0e7b594cc30154"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libmobi/blobs/sha256:acb868d0c49f811fe952cb7a5d1844dfaefc8d1c845486c4fddb10c0304b2a7b",
          "sha256": "acb868d0c49f811fe952cb7a5d1844dfaefc8d1c845486c4fddb10c0304b2a7b"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libmobi/blobs/sha256:3519c368bd9c42d991b7b81e6d18f1e6061906e0b3c3814be54337fad1076dd3",
          "sha256": "3519c368bd9c42d991b7b81e6d18f1e6061906e0b3c3814be54337fad1076dd3"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libmobi/blobs/sha256:fd2601afa5199daa00c077c7aa7e3fd2f47e2f54f6661678c3474d6cc5d7f681",
          "sha256": "fd2601afa5199daa00c077c7aa7e3fd2f47e2f54f6661678c3474d6cc5d7f681"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libmobi/blobs/sha256:481e9486192ed6cea54c75465612f23675434fb5efea26267cdb944120a75851",
          "sha256": "481e9486192ed6cea54c75465612f23675434fb5efea26267cdb944120a75851"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libmobi/blobs/sha256:ca52fa0e0ffad550d104ac35f6d45d24d4e02478f76ff15e1650d38de66d26b2",
          "sha256": "ca52fa0e0ffad550d104ac35f6d45d24d4e02478f76ff15e1650d38de66d26b2"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libmobi/blobs/sha256:78c582c8d248ba77c93065c9e71658ea1a8e6b8e4f5e22d512e17d7a67f1d28d",
          "sha256": "78c582c8d248ba77c93065c9e71658ea1a8e6b8e4f5e22d512e17d7a67f1d28d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "libxml2",
    "zlib"
  ],
  "uses_from_macos_bounds": [
    {},
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/libmobi.rb",
  "ruby_source_checksum": {
    "sha256": "0762439515b8ab5b2b392e3b65ce902f5a30de3f8961a37b4a10f9ebc9471419"
  },
  "date_added": "2021-06-07T07:46:28+00:00",
  "readme": "# Libmobi\n\nC library for handling Mobipocket/Kindle (MOBI) ebook format documents.\n\nLibrary comes with several [command line tools](https://github.com/bfabiszewski/libmobi/tree/public/tools) for working with mobi ebooks.\nThe tools source may also be used as an example on how to use the library.\n\n## Features:\n- reading and parsing:\n  - some older text Palmdoc formats (pdb),\n  - Mobipocket files (prc, mobi),\n  - newer MOBI files including KF8 format (azw, azw3),\n  - Replica Print files (azw4)\n- recreating source files using indices\n- reconstructing references (links and embedded) in html files\n- reconstructing source structure that can be fed back to kindlegen\n- reconstructing dictionary markup (orth, infl tags)\n- writing back loaded documents\n- metadata editing\n- handling encrypted documents\n- encrypting documents for use on eInk Kindles\n\n## Todo:\n- improve writing\n- serialize rawml into raw records\n- process RESC records\n\n## Doxygen documentation:\n- [functions](http://www.fabiszewski.net/libmobi/group__mobi__export.html),\n- [structures for the raw, unparsed records metadata and data](http://www.fabiszewski.net/libmobi/group__raw__structs.html),\n- [structures for the parsed records metadata and data](http://www.fabiszewski.net/libmobi/group__parsed__structs.html),\n- [enums](http://www.fabiszewski.net/libmobi/group__mobi__enums.html)\n\n## Source:\n- [on github](https://github.com/bfabiszewski/libmobi/)\n\n## Packages:\n[![Packaging status](https://repology.org/badge/vertical-allrepos/libmobi.svg)](https://repology.org/project/libmobi/versions)\n\n## Installation:\n\n    [for git] $ ./autogen.sh\n    $ ./configure\n    $ make\n    [optionally] $ make test\n    $ sudo make install\n\nOn macOS, you can install via [Homebrew](https://brew.sh/) with `brew install libmobi`.\n\n## Alternative build systems\n- The supported way of building project is by using autotools.\n- Optionally project provides basic support for CMake, Xcode and MSVC++ systems. However these alternative configurations are not covering all options of autotools project. They are also not tested and not updated regularly. \n\n## Usage\n- single include file: `#include <mobi.h>`\n- linker flag: `-lmobi`\n- basic usage:\n```c\n#include <mobi.h>\n\n/* Initialize main MOBIData structure */\n/* Must be deallocated with mobi_free() when not needed */\nMOBIData *m = mobi_init();\nif (m == NULL) { \n  return ERROR; \n}\n\n/* Open file for reading */\nFILE *file = fopen(fullpath, \"rb\");\nif (file == NULL) {\n  mobi_free(m);\n  return ERROR;\n}\n\n/* Load file into MOBIData structure */\n/* This structure will hold raw data/metadata from mobi document */\nMOBI_RET mobi_ret = mobi_load_file(m, file);\nfclose(file);\nif (mobi_ret != MOBI_SUCCESS) { \n  mobi_free(m);\n  return ERROR;\n}\n\n/* Initialize MOBIRawml structure */\n/* Must be deallocated with mobi_free_rawml() when not needed */\n/* In the next step this structure will be filled with parsed data */\nMOBIRawml *rawml = mobi_init_rawml(m);\nif (rawml == NULL) {\n  mobi_free(m);\n  return ERROR;\n}\n/* Raw data from MOBIData will be converted to html, css, fonts, media resources */\n/* Parsed data will be available in MOBIRawml structure */\nmobi_ret = mobi_parse_rawml(rawml, m);\nif (mobi_ret != MOBI_SUCCESS) {\n  mobi_free(m);\n  mobi_free_rawml(rawml);\n  return ERROR;\n}\n\n/* Do something useful here */\n/* ... */\n/* For examples how to access data in MOBIRawml structure see mobitool.c */\n\n/* Free MOBIRawml structure */\nmobi_free_rawml(rawml);\n\n/* Free MOBIData structure */\nmobi_free(m);\n\nreturn SUCCESS;\n```\n- for examples of usage, see [tools](https://github.com/bfabiszewski/libmobi/tree/public/tools)\n\n\n## Requirements\n- compiler supporting C99\n- zlib (optional, configure --with-zlib=no to use included miniz.c instead)\n- libxml2 (optional, configure --with-libxml2=no to use internal xmlwriter)\n- tested with gcc (>=4.2.4), clang (llvm >=3.4), sun c (>=5.13), MSVC++ (2015)\n- builds on Linux, MacOS, Windows (MSVC++, MinGW), Android, Solaris\n- tested architectures: x86, x86-64, arm, ppc\n- works cross-compiled on Kindle :)\n\n## Tests\n- [![Github Action status](https://github.com/bfabiszewski/libmobi/actions/workflows/build.yml/badge.svg)](https://github.com/bfabiszewski/libmobi/actions)\n- [![Travis status](https://travis-ci.com/bfabiszewski/libmobi.svg?branch=public)](https://travis-ci.com/bfabiszewski/libmobi)\n- [![Coverity status](https://scan.coverity.com/projects/3521/badge.svg)](https://scan.coverity.com/projects/3521)\n\n## Projects using libmobi\n- [KyBook 2 Reader](http://kybook-reader.com)\n- [@Voice Aloud Reader](http://www.hyperionics.com/atVoice/)\n- [QLMobi quicklook plugin](https://github.com/bfabiszewski/QLMobi/tree/master/QLMobi)\n- [Librera Reader](http://librera.mobi)\n- ... (let me know to include your project)\n\n## License:\n- LGPL, either version 3, or any later\n\n## Credits:\n- The huffman decompression and KF8 parsing algorithms were learned by studying python source code of [KindleUnpack](https://github.com/kevinhendricks/KindleUnpack).\n- Thanks to all contributors of Mobileread [MOBI wiki](http://wiki.mobileread.com/wiki/MOBI)"
}
