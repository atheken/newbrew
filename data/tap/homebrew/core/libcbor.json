{
  "name": "libcbor",
  "full_name": "libcbor",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "CBOR protocol implementation for C and others",
  "license": "MIT",
  "homepage": "https://github.com/PJK/libcbor",
  "versions": {
    "stable": "0.10.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/PJK/libcbor/archive/v0.10.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "e75f712215d7b7e5c89ef322a09b701f7159f028b8b48978865725f00f79875b"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libcbor/blobs/sha256:ee1e77e1e6cef7ba754d1757f7aa038e34b139466f789231b672e389a194a5fc",
          "sha256": "ee1e77e1e6cef7ba754d1757f7aa038e34b139466f789231b672e389a194a5fc"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libcbor/blobs/sha256:57f42308a7a0da1e7c5e7093669c0b860d83832903ec1233fad60ecd8ac92aeb",
          "sha256": "57f42308a7a0da1e7c5e7093669c0b860d83832903ec1233fad60ecd8ac92aeb"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libcbor/blobs/sha256:3f8fcacd05f809c68d133967f3485997d3864afd76c7ea8df4b00a6638cd71dd",
          "sha256": "3f8fcacd05f809c68d133967f3485997d3864afd76c7ea8df4b00a6638cd71dd"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libcbor/blobs/sha256:3c52d6c4828af57070d970dab0cfe3e174572c0eb6adf496c1cbdb54988cd97a",
          "sha256": "3c52d6c4828af57070d970dab0cfe3e174572c0eb6adf496c1cbdb54988cd97a"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libcbor/blobs/sha256:5b1cc91f67025cfe899980d227fb0d14592635746e966b19307c9fc298f514e0",
          "sha256": "5b1cc91f67025cfe899980d227fb0d14592635746e966b19307c9fc298f514e0"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libcbor/blobs/sha256:b748fb213e434fe650e0964d72f84275a5aac3620b336778dbdf578b5263df0c",
          "sha256": "b748fb213e434fe650e0964d72f84275a5aac3620b336778dbdf578b5263df0c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libcbor/blobs/sha256:0c532bdfe6b9efb37ff7cd43d1fcf2def27aefbffbea09093cecf16f95adc198",
          "sha256": "0c532bdfe6b9efb37ff7cd43d1fcf2def27aefbffbea09093cecf16f95adc198"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/libcbor.rb",
  "ruby_source_checksum": {
    "sha256": "de94732662fbcd1347a07c1bb481c89c30c5796f3ac1abb67a355db150cc5e80"
  },
  "date_added": "2020-02-17T11:37:00+00:00",
  "readme": "# [libcbor](https://github.com/PJK/libcbor)\n\n[![CircleCI](https://circleci.com/gh/PJK/libcbor/tree/master.svg?style=svg)](https://circleci.com/gh/PJK/libcbor/tree/master)\n[![Documentation Status](https://readthedocs.org/projects/libcbor/badge/?version=latest)](https://readthedocs.org/projects/libcbor/?badge=latest)\n[![latest packaged version(s)](https://repology.org/badge/latest-versions/libcbor.svg)](https://repology.org/project/libcbor/versions)\n[![codecov](https://codecov.io/gh/PJK/libcbor/branch/master/graph/badge.svg)](https://codecov.io/gh/PJK/libcbor)\n\n**libcbor** is a C library for parsing and generating [CBOR](https://cbor.io/), the general-purpose schema-less binary data format.\n\n## Main features\n - Complete [IETF RFC 8949 (STD 94)](https://www.rfc-editor.org/info/std94) conformance\n - Robust platform-independent C99 implementation\n - Layered architecture offers both control and convenience\n - Flexible memory management\n - No shared global state - threading friendly\n - Proper handling of UTF-8\n - Full support for streams & incremental processing\n - Extensive documentation and test suite\n - No runtime dependencies, small footprint\n \n## Getting started\n\n### Compile from source\n\n```bash\ngit clone https://github.com/PJK/libcbor\ncmake -DCMAKE_BUILD_TYPE=Release libcbor\nmake\nmake install\n```\n\n### Homebrew\n\n```bash\nbrew install libcbor\n```\n\n### Ubuntu 18.04 and above\n\n```bash\nsudo add-apt-repository universe\nsudo apt-get install libcbor-dev\n```\n\n### Fedora & RPM friends\n\n```bash\nyum install libcbor-devel\n```\n\n### Others \n\n<details>\n  <summary>Packaged libcbor is available from 15+ major repositories. Click here for more detail</summary>\n  \n  [![Packaging status](https://repology.org/badge/vertical-allrepos/libcbor.svg)](https://repology.org/project/libcbor/versions)\n</details>\n\n## Usage example\n\n```c\n#include <cbor.h>\n#include <stdio.h>\n\nint main(void) {\n  /* Preallocate the map structure */\n  cbor_item_t* root = cbor_new_definite_map(2);\n  /* Add the content */\n  bool success = cbor_map_add(\n      root, (struct cbor_pair){\n                .key = cbor_move(cbor_build_string(\"Is CBOR awesome?\")),\n                .value = cbor_move(cbor_build_bool(true))});\n  success &= cbor_map_add(\n      root, (struct cbor_pair){\n                .key = cbor_move(cbor_build_uint8(42)),\n                .value = cbor_move(cbor_build_string(\"Is the answer\"))});\n  if (!success) return 1;\n  /* Output: `length` bytes of data in the `buffer` */\n  unsigned char* buffer;\n  size_t buffer_size;\n  cbor_serialize_alloc(root, &buffer, &buffer_size);\n\n  fwrite(buffer, 1, buffer_size, stdout);\n  free(buffer);\n\n  fflush(stdout);\n  cbor_decref(&root);\n}\n```\n\n## Documentation\nGet the latest documentation at [libcbor.readthedocs.org](http://libcbor.readthedocs.org/)\n\n## Contributions\n\nBug reports and contributions are welcome. Please see [CONTRIBUTING.md](https://github.com/PJK/libcbor/blob/master/CONTRIBUTING.md) for more info.\n\nKudos to all the [contributors](https://github.com/PJK/libcbor/graphs/contributors)!\n\n## License\nThe MIT License (MIT)\n\nCopyright (c) Pavel Kalvoda, 2014-2020\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
}
