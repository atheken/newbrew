{
  "name": "brotli",
  "full_name": "brotli",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Generic-purpose lossless compression algorithm by Google",
  "license": "MIT",
  "homepage": "https://github.com/google/brotli",
  "versions": {
    "stable": "1.0.9",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/google/brotli/archive/v1.0.9.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "f9e8d81d0405ba66d181529af42a3354f838c939095ff99930da6aa9cdf6fe46"
    },
    "head": {
      "url": "https://github.com/google/brotli.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/brotli/blobs/sha256:dda0779953c24b98703ae950195fdd7f5ae6dbd697e026cb65520d13ea8b1258",
          "sha256": "dda0779953c24b98703ae950195fdd7f5ae6dbd697e026cb65520d13ea8b1258"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/brotli/blobs/sha256:5e9bddd862bda5b950307710430f3adf65486554d12e29629f67df8a0c5b881c",
          "sha256": "5e9bddd862bda5b950307710430f3adf65486554d12e29629f67df8a0c5b881c"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/brotli/blobs/sha256:bcd00b6f423ec35f98aec55bc2c1cf433b6e70e915cdf04dd2c3a3707f1ce341",
          "sha256": "bcd00b6f423ec35f98aec55bc2c1cf433b6e70e915cdf04dd2c3a3707f1ce341"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/brotli/blobs/sha256:ed4f61a9dc166cb1241e6b0a890298789eb564bfac1b4438ebe8ddf3d2632662",
          "sha256": "ed4f61a9dc166cb1241e6b0a890298789eb564bfac1b4438ebe8ddf3d2632662"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/brotli/blobs/sha256:985ce69f1aece701dc8103ef8775d57deaf99936782339583e16177ceb1259f3",
          "sha256": "985ce69f1aece701dc8103ef8775d57deaf99936782339583e16177ceb1259f3"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/brotli/blobs/sha256:9d3009fd246d0f6cf9fd11d0a3bd388f6c043c75fa302decf0dd935163fb0f4b",
          "sha256": "9d3009fd246d0f6cf9fd11d0a3bd388f6c043c75fa302decf0dd935163fb0f4b"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/brotli/blobs/sha256:a382d95787cc2a5742a1d713f939bbc91ca6e097aee7f49f95cc111dca9fa9d7",
          "sha256": "a382d95787cc2a5742a1d713f939bbc91ca6e097aee7f49f95cc111dca9fa9d7"
        },
        "mojave": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/brotli/blobs/sha256:d121eaa3e670d5ad972514a4cc000326249694c8b9691013e28b8dd52b87410d",
          "sha256": "d121eaa3e670d5ad972514a4cc000326249694c8b9691013e28b8dd52b87410d"
        },
        "high_sierra": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/brotli/blobs/sha256:126ecc002d37d167252743eb6ff5db19bb6aa4584ab3f731bd7876e438fc6dab",
          "sha256": "126ecc002d37d167252743eb6ff5db19bb6aa4584ab3f731bd7876e438fc6dab"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/brotli/blobs/sha256:97756cdd4ee7ca03251307eafdb3dff7be3f070a8c0fdf385e87e7ad4a1068de",
          "sha256": "97756cdd4ee7ca03251307eafdb3dff7be3f070a8c0fdf385e87e7ad4a1068de"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/brotli.rb",
  "ruby_source_checksum": {
    "sha256": "2f2b3ac8fb4fb0b20165d40ee8eb4571fa30d58935fbc61df4fbe0f2054a37bd"
  },
  "date_added": "2016-01-05T17:07:46+01:00",
  "readme": "<p align=\"center\">\n  <img src=\"https://github.com/google/brotli/actions/workflows/build_test.yml/badge.svg\" alt=\"GitHub Actions Build Status\" href=\"https://github.com/google/brotli/actions?query=branch%3Amaster\">\n  <img src=\"https://oss-fuzz-build-logs.storage.googleapis.com/badges/brotli.svg\" alt=\"Fuzzing Status\" href=\"https://oss-fuzz-build-logs.storage.googleapis.com/index.html#brotli\">\n</p>\n<p align=\"center\"><img src=\"https://brotli.org/brotli.svg\" alt=\"Brotli\" width=\"64\"></p>\n\n### Introduction\n\nBrotli is a generic-purpose lossless compression algorithm that compresses data\nusing a combination of a modern variant of the LZ77 algorithm, Huffman coding\nand 2nd order context modeling, with a compression ratio comparable to the best\ncurrently available general-purpose compression methods. It is similar in speed\nwith deflate but offers more dense compression.\n\nThe specification of the Brotli Compressed Data Format is defined in [RFC 7932](https://tools.ietf.org/html/rfc7932).\n\nBrotli is open-sourced under the MIT License, see the LICENSE file.\n\n> **Please note:** brotli is a \"stream\" format; it does not contain\n> meta-information, like checksums or uncompresssed data length. It is possible\n> to modify \"raw\" ranges of the compressed stream and the decoder will not\n> notice that.\n\n### Build instructions\n\n#### Vcpkg\n\nYou can download and install brotli using the [vcpkg](https://github.com/Microsoft/vcpkg/) dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    ./vcpkg install brotli\n\nThe brotli port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n#### Bazel\n\nSee [Bazel](http://www.bazel.build/)\n\n#### CMake\n\nThe basic commands to build and install brotli are:\n\n    $ mkdir out && cd out\n    $ cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./installed ..\n    $ cmake --build . --config Release --target install\n\nYou can use other [CMake](https://cmake.org/) configuration.\n\n#### Python\n\nTo install the latest release of the Python module, run the following:\n\n    $ pip install brotli\n\nTo install the tip-of-the-tree version, run:\n\n    $ pip install --upgrade git+https://github.com/google/brotli\n\nSee the [Python readme](python/README.md) for more details on installing\nfrom source, development, and testing.\n\n### Contributing\n\nWe glad to answer/library related questions in\n[brotli mailing list](https://groups.google.com/forum/#!forum/brotli).\n\nRegular issues / feature requests should be reported in\n[issue tracker](https://github.com/google/brotli/issues).\n\nFor reporting vulnerability please read [SECURITY](SECURITY.md).\n\nFor contributing changes please read [CONTRIBUTING](CONTRIBUTING.md).\n\n### Benchmarks\n* [Squash Compression Benchmark](https://quixdb.github.io/squash-benchmark/) / [Unstable Squash Compression Benchmark](https://quixdb.github.io/squash-benchmark/unstable/)\n* [Large Text Compression Benchmark](http://mattmahoney.net/dc/text.html)\n* [Lzturbo Benchmark](https://sites.google.com/site/powturbo/home/benchmark)\n\n### Related projects\n> **Disclaimer:** Brotli authors take no responsibility for the third party projects mentioned in this section.\n\nIndependent [decoder](https://github.com/madler/brotli) implementation by Mark Adler, based entirely on format specification.\n\nJavaScript port of brotli [decoder](https://github.com/devongovett/brotli.js). Could be used directly via `npm install brotli`\n\nHand ported [decoder / encoder](https://github.com/dominikhlbg/BrotliHaxe) in haxe by Dominik Homberger. Output source code: JavaScript, PHP, Python, Java and C#\n\n7Zip [plugin](https://github.com/mcmilk/7-Zip-Zstd)\n\nDart [native bindings](https://github.com/thosakwe/brotli)\n\nDart compression framework with [fast FFI-based Brotli implementation](https://pub.dev/documentation/es_compression/latest/brotli/brotli-library.html) with ready-to-use prebuilt binaries for Win/Linux/Mac"
}
