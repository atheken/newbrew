{
  "name": "chinadns-c",
  "full_name": "chinadns-c",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Port of ChinaDNS to C: fix irregularities with DNS in China",
  "license": "GPL-3.0",
  "homepage": "https://github.com/shadowsocks/ChinaDNS",
  "versions": {
    "stable": "1.3.2",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/shadowsocks/ChinaDNS/releases/download/1.3.2/chinadns-1.3.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "abfd433e98ac0f31b8a4bd725d369795181b0b6e8d1b29142f1bb3b73bbc7230"
    },
    "head": {
      "url": "https://github.com/shadowsocks/ChinaDNS.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/chinadns-c/blobs/sha256:962e197fda53c506ca1a8a11ab883c4e7b154a12ea747219b4add76e8fc2cc0d",
          "sha256": "962e197fda53c506ca1a8a11ab883c4e7b154a12ea747219b4add76e8fc2cc0d"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/chinadns-c/blobs/sha256:b400b323f97ff6d0570ed5b2ccffc2325516dea3c12d6ee18c5903ee2d607f3e",
          "sha256": "b400b323f97ff6d0570ed5b2ccffc2325516dea3c12d6ee18c5903ee2d607f3e"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/chinadns-c/blobs/sha256:8a5921a1eb32cce03417035e20ed9fc3c52569bbe3cc963f4a5d8dacd8a61bd4",
          "sha256": "8a5921a1eb32cce03417035e20ed9fc3c52569bbe3cc963f4a5d8dacd8a61bd4"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/chinadns-c/blobs/sha256:25c8e721baf2e9622339fd932f96af2e331aceafe6188f196536455cf4e77f20",
          "sha256": "25c8e721baf2e9622339fd932f96af2e331aceafe6188f196536455cf4e77f20"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/chinadns-c/blobs/sha256:3269038188274afa37cfbc4155f9aac9d63c5e47ac0e1cae9b10eb3e6eab63b5",
          "sha256": "3269038188274afa37cfbc4155f9aac9d63c5e47ac0e1cae9b10eb3e6eab63b5"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/chinadns-c/blobs/sha256:d15cde6788156aa67dffd280752d52f5aac1ef1e8f56c8e5864ce05b9c81647a",
          "sha256": "d15cde6788156aa67dffd280752d52f5aac1ef1e8f56c8e5864ce05b9c81647a"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/chinadns-c/blobs/sha256:0c4820f0e5a12421b0e64c3cb993608560817a446b8747e7119838cb271b9044",
          "sha256": "0c4820f0e5a12421b0e64c3cb993608560817a446b8747e7119838cb271b9044"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/chinadns-c/blobs/sha256:61ccebe523d9e2417385c911beca6a01ee7d2810f1a665fca9a4f6a0e7b81623",
          "sha256": "61ccebe523d9e2417385c911beca6a01ee7d2810f1a665fca9a4f6a0e7b81623"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/chinadns-c/blobs/sha256:5b0b51abe8a40dee4b1296e81da179aff05ba42befc869e06e081d7e6fc4e726",
          "sha256": "5b0b51abe8a40dee4b1296e81da179aff05ba42befc869e06e081d7e6fc4e726"
        },
        "sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/chinadns-c/blobs/sha256:fa51351f3cdfb63fa672d2011c08ac8a1f9a260bcfaacb13e4657f39e721b96f",
          "sha256": "fa51351f3cdfb63fa672d2011c08ac8a1f9a260bcfaacb13e4657f39e721b96f"
        },
        "el_capitan": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/chinadns-c/blobs/sha256:a620bce8421a9773233c51886c6845995569a1fda80e252efa86f6271c1d274c",
          "sha256": "a620bce8421a9773233c51886c6845995569a1fda80e252efa86f6271c1d274c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/chinadns-c/blobs/sha256:e7158e876b817917183a78e96e891dcd9ff9cefe333d1b139c73f9209fd585b0",
          "sha256": "e7158e876b817917183a78e96e891dcd9ff9cefe333d1b139c73f9209fd585b0"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/chinadns-c.rb",
  "ruby_source_checksum": {
    "sha256": "4382a2b7e1f6a2e354870f6c70a8a383af9f3ee01bea815468107ba351c9044e"
  },
  "head_dependencies": {
    "build_dependencies": [
      "autoconf",
      "automake"
    ],
    "dependencies": [],
    "test_dependencies": [],
    "recommended_dependencies": [],
    "optional_dependencies": [],
    "uses_from_macos": [],
    "uses_from_macos_bounds": []
  },
  "date_added": "2014-11-26T11:48:15+00:00",
  "readme": "ChinaDNS\n========\n\n[![Build Status]][Travis CI]\n[![Coverage Status]][Coverage]\n\nTraditional way to bypass DNS poisoning is to send all queries to\na foreign DNS server via VPN. However some Chinese websites will get\nbad results if they have CDNs outside the country.\n\nThe second way is to maintain a list of domains of which you want to\nresolve from local DNS or foreign DNS. This list changes too often,\ntaking too much effort to maintain.\n\nChinaDNS automatically queries local DNS servers to resolve Chinese domains\nand queries foreign DNS servers to resolve foreign domains. It is smart\nenough to work only with a Chinese IP range file, which doesn't change often.\n\nIn order to bypass IP blocking, you SHOULD use VPN software like [ShadowVPN].\n\nInstall\n-------\n\n* Linux / Unix\n\n    [Download a release].\n\n        ./configure && make\n        src/chinadns -m -c chnroute.txt\n\n* OpenWRT\n\n    * [Download precompiled] for OpenWRT trunk and CPU: ar71xx, brcm63xx,\n      brcm47xx, ramips_24kec. Open an issue if you think your CPU is a popular\n      one but not listed here.\n    * If you use other CPU or other OpenWRT versions, build yourself:\n      cd into [SDK] root, then\n\n            pushd package\n            git clone https://github.com/clowwindy/ChinaDNS.git\n            popd\n            make menuconfig # select Network/ChinaDNS\n            make -j\n            make V=99 package/ChinaDNS/openwrt/compile\n\n* Tomoto\n\n    * Download [Tomato toolchain], build by yourself.\n    * Uncompress the downloaded file to `~/`.\n    * Copy the `brcm` directory under\n      `~/WRT54GL-US_v4.30.11_11/tools/` to `/opt`, then\n\n            export PATH=/opt/brcm/hndtools-mipsel-uclibc/bin/:/opt/brcm/hndtools-mipsel-linux/bin/:$PATH\n            git clone https://github.com/clowwindy/ChinaDNS.git\n            cd ChinaDNS\n            ./autogen.sh && ./configure --host=mipsel-linux --enable-static && make\n\n* Windows\n\n    [Download] Python exe version.\n\nUsage\n-----\n\n* Linux / Unix\n    Recommand using with option \"-m\" ([DNS pointer mutation method])\n    Run `sudo chinadns -m -c chnroute.txt` on your local machine. ChinaDNS creates a\n    UDP DNS Server at `0.0.0.0:53`.\n\n* OpenWRT\n\n        opkg install ChinaDNS_1.x.x_ar71xx.ipk\n        /etc/init.d/chinadns start\n        /etc/init.d/chinadns enable\n\n    Invoke the \"enable\" command to run the initscript on boot\n\n    (Optional) We strongly recommend you to set ChinaDNS as a upstream DNS\n    server for dnsmasq instead of using ChinaDNS directly:\n\n    1. Run `/etc/init.d/chinadns stop`\n    2. Remove the 2 lines containing `iptables` in `/etc/init.d/chinadns`.\n    3. Update `/etc/dnsmasq.conf` to use only 127.0.0.1#5353:\n\n            no-resolv\n            server=127.0.0.1#5353\n\n    4. Restart chinadns and dnsmasq\n\nTest if it works correctly:\n\n    $ dig @192.168.1.1 www.youtube.com -p5353\n    ; <<>> DiG 9.8.3-P1 <<>> @127.0.0.1 www.google.com -p5353\n    ; (1 server found)\n    ;; global options: +cmd\n    ;; Got answer:\n    ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 29845\n    ;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0\n    \n    ;; QUESTION SECTION:\n    ;www.youtube.com.\t\tIN\tA\n    \n    ;; ANSWER SECTION:\n    www.youtube.com.\t21569\tIN\tCNAME\tyoutube-ui.l.google.com.\n    youtube-ui.l.google.com. 269\tIN\tA\t216.58.220.174\n\n    ;; Query time: 74 msec\n    ;; SERVER: 127.0.0.1#5353(127.0.0.1)\n    ;; WHEN: Fri Jan 30 18:37:57 2015\n    ;; MSG SIZE  rcvd: 83\n\nCurrently ChinaDNS only supports UDP. Builtin OpenWRT init script works with\ndnsmasq, which handles TCP. If you use it directly without dnsmasq, you need to\nadd a redirect rule for TCP:\n\n    iptables -t nat -A PREROUTING -p tcp --dport 53 -j DNAT --to-destination 8.8.8.8:53\n\nAdvanced\n--------\n\n    usage: chinadns [-h] [-l IPLIST_FILE] [-b BIND_ADDR] [-p BIND_PORT]\n           [-c CHNROUTE_FILE] [-s DNS] [-v]\n    Forward DNS requests.\n\n    -h, --help            show this help message and exit\n    -l IPLIST_FILE        path to ip blacklist file\n    -c CHNROUTE_FILE      path to china route file\n                          if not specified, CHNRoute will be turned off\n    -d                    enable bi-directional CHNRoute filter\n    -y                    delay time for suspects, default: 0.3\n    -b BIND_ADDR          address that listens, default: 127.0.0.1\n    -p BIND_PORT          port that listens, default: 53\n    -s DNS                DNS servers to use, default:\n                          114.114.114.114,208.67.222.222:443,8.8.8.8\n    -m                    Using DNS compression pointer mutation\n                          (backlist and delaying would be disabled)\n    -v                    verbose logging\n\nAbout chnroute\n--------------\n\nYou can generate latest chnroute.txt using this command:\n\n    curl 'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest' | grep ipv4 | grep CN | awk -F\\| '{ printf(\"%s/%d\\n\", $4, 32-log($5)/log(2)) }' > chnroute.txt\n\n\nLicense\n-------\n\nCopyright (C) 2015 clowwindy\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nBugs and Issues\n----------------\nPlease visit [Issue Tracker]\n\nMailing list: http://groups.google.com/group/shadowsocks\n\n\n[Build Status]:         https://travis-ci.org/clowwindy/ChinaDNS.svg?branch=master\n[ChinaDNS]:             https://github.com/clowwindy/ChinaDNS\n[Coverage Status]:      https://jenkins.shadowvpn.org/result/chinadns\n[Coverage]:             https://jenkins.shadowvpn.org/job/ChinaDNS/ws/src/index.html\n[Download]:             https://github.com/clowwindy/ChinaDNS/releases\n[Issue Tracker]:        https://github.com/clowwindy/ChinaDNS/issues?state=open\n[Download precompiled]: https://github.com/clowwindy/ChinaDNS/releases\n[Download a release]:   https://github.com/clowwindy/ChinaDNS/releases\n[SDK]:                  http://wiki.openwrt.org/doc/howto/obtain.firmware.sdk\n[ShadowVPN]:            https://github.com/clowwindy/ShadowVPN\n[Tomato toolchain]:     http://downloads.linksysbycisco.com/downloads/WRT54GL_v4.30.11_11_US.tgz\n[Travis CI]:            https://travis-ci.org/clowwindy/ChinaDNS\n[DNS pointer mutation method]: https://gist.github.com/klzgrad/f124065c0616022b65e5"
}
