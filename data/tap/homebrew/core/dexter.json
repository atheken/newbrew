{
  "name": "dexter",
  "full_name": "dexter",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Automatic indexer for Postgres",
  "license": "MIT",
  "homepage": "https://github.com/ankane/dexter",
  "versions": {
    "stable": "0.5.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/ankane/dexter/archive/v0.5.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "280403858ea209b41910f487f737fd602b41c60cc6cd3e5cf54ed5db9330b321"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dexter/blobs/sha256:0d0819a25037801276345d56e2c65efd77599cfbc5753c2b6050b1a5678778dc",
          "sha256": "0d0819a25037801276345d56e2c65efd77599cfbc5753c2b6050b1a5678778dc"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dexter/blobs/sha256:e3a0878eda19b97048653255f5eabffec541c6404e9ab052dc4c4726da64e2d8",
          "sha256": "e3a0878eda19b97048653255f5eabffec541c6404e9ab052dc4c4726da64e2d8"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dexter/blobs/sha256:c87db9cbd96d7a827e91ef098254667d6421f8e000a3b073ec9f709a65537f57",
          "sha256": "c87db9cbd96d7a827e91ef098254667d6421f8e000a3b073ec9f709a65537f57"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dexter/blobs/sha256:0b5646a0960610fa1374292d65027cf43b345c247623cb9df7120b4683536aa2",
          "sha256": "0b5646a0960610fa1374292d65027cf43b345c247623cb9df7120b4683536aa2"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dexter/blobs/sha256:d1a8e777427a998b6001bed942da698b3000055d8d654bfb49d2cc025f6adb22",
          "sha256": "d1a8e777427a998b6001bed942da698b3000055d8d654bfb49d2cc025f6adb22"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dexter/blobs/sha256:a3fea06cec0f5ae107c9e244a03f63bd4cf09a503620aaf5f68e9dc38d0d0c15",
          "sha256": "a3fea06cec0f5ae107c9e244a03f63bd4cf09a503620aaf5f68e9dc38d0d0c15"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dexter/blobs/sha256:8fc114dc62a681eb4c133d60c2ff6604c9f3fa59a4072ae7a6b295d6a158b5f1",
          "sha256": "8fc114dc62a681eb4c133d60c2ff6604c9f3fa59a4072ae7a6b295d6a158b5f1"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "libpq",
    "ruby"
  ],
  "test_dependencies": [
    "postgresql@15"
  ],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/dexter.rb",
  "ruby_source_checksum": {
    "sha256": "0f87cc1990e7831d6005c86572a9929a56fa05e63b21bd6dfbe501a8ebcc50fc"
  },
  "date_added": "2023-03-28T14:45:45-07:00",
  "readme": "# Dexter\n\nThe automatic indexer for Postgres\n\n[Read about how it works](https://ankane.org/introducing-dexter) or [watch the talk](https://www.youtube.com/watch?v=Mni_1yTaNbE)\n\n[![Build Status](https://github.com/ankane/dexter/workflows/build/badge.svg?branch=master)](https://github.com/ankane/dexter/actions)\n\n## Installation\n\nFirst, install [HypoPG](https://github.com/HypoPG/hypopg) on your database server. This doesn’t require a restart.\n\n```sh\ncd /tmp\ncurl -L https://github.com/HypoPG/hypopg/archive/1.4.0.tar.gz | tar xz\ncd hypopg-1.4.0\nmake\nmake install # may need sudo\n```\n\nAnd enable it in databases where you want to use Dexter:\n\n```sql\nCREATE EXTENSION hypopg;\n```\n\nSee the [installation notes](#hypopg-installation-notes) if you run into issues.\n\nThen install the command line tool with:\n\n```sh\ngem install pgdexter\n```\n\nThe command line tool is also available with [Docker](#docker), [Homebrew](#homebrew), or as a [Linux package](guides/Linux.md).\n\n## How to Use\n\nDexter needs a connection to your database and a source of queries (like [pg_stat_statements](https://www.postgresql.org/docs/current/pgstatstatements.html)) to process.\n\n```sh\ndexter -d dbname --pg-stat-statements\n```\n\nThis finds slow queries and generates output like:\n\n```\nStarted\nProcessing 189 new query fingerprints\nIndex found: public.genres_movies (genre_id)\nIndex found: public.genres_movies (movie_id)\nIndex found: public.movies (title)\nIndex found: public.ratings (movie_id)\nIndex found: public.ratings (rating)\nIndex found: public.ratings (user_id)\n```\n\nTo be safe, Dexter will not create indexes unless you pass the `--create` flag. In this case, you’ll see:\n\n```\nIndex found: public.ratings (user_id)\nCreating index: CREATE INDEX CONCURRENTLY ON \"public\".\"ratings\" (\"user_id\")\nIndex created: 15243 ms\n```\n\n## Connection Options\n\nDexter supports the same connection options as psql.\n\n```\n-h host -U user -p 5432 -d dbname\n```\n\nThis includes URIs:\n\n```\npostgresql://user:pass@host:5432/dbname\n```\n\nand connection strings:\n\n```\nhost=localhost port=5432 dbname=mydb\n```\n\nAlways make sure your [connection is secure](https://ankane.org/postgres-sslmode-explained) when connecting to a database over a network you don’t fully trust.\n\n## Collecting Queries\n\nDexter can collect queries from a number of sources.\n\n- [Query stats](#query-stats)\n- [Live queries](#live-queries)\n- [Log files](#log-file)\n- [SQL files](#sql-files)\n\n### Query Stats\n\nEnable [pg_stat_statements](https://www.postgresql.org/docs/current/pgstatstatements.html) in your database.\n\n```psql\nCREATE EXTENSION pg_stat_statements;\n```\n\nAnd use:\n\n```sh\ndexter <connection-options> --pg-stat-statements\n```\n\n### Live Queries\n\nGet live queries from the [pg_stat_activity](https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-ACTIVITY-VIEW) view with:\n\n```sh\ndexter <connection-options> --pg-stat-activity\n```\n\n### Log Files\n\nEnable logging for slow queries in your Postgres config file.\n\n```ini\nlog_min_duration_statement = 10 # ms\n```\n\nAnd use:\n\n```sh\ndexter <connection-options> postgresql.log\n```\n\nSupports `stderr`, `csvlog`, and `jsonlog` formats.\n\nFor real-time indexing, pipe your logfile:\n\n```sh\ntail -F -n +1 postgresql.log | dexter <connection-options> --stdin\n```\n\nAnd pass `--input-format csvlog` or `--input-format jsonlog` if needed.\n\n### SQL Files\n\nPass a SQL file with:\n\n```sh\ndexter <connection-options> queries.sql\n```\n\nPass a single query with:\n\n```sh\ndexter <connection-options> -s \"SELECT * FROM ...\"\n```\n\n## Collection Options\n\nTo prevent one-off queries from being indexed, specify a minimum number of calls before a query is considered for indexing\n\n```sh\ndexter --min-calls 100\n```\n\nYou can do the same for total time a query has run\n\n```sh\ndexter --min-time 10 # minutes\n```\n\nWhen streaming logs, specify the time to wait between processing queries\n\n```sh\ndexter --interval 60 # seconds\n```\n\n## Analyze\n\nFor best results, make sure your tables have been recently analyzed so statistics are up-to-date. You can ask Dexter to analyze tables it comes across that haven’t been analyzed in the past hour with:\n\n```sh\ndexter --analyze\n```\n\n## Tables\n\nYou can exclude large or write-heavy tables from indexing with:\n\n```sh\ndexter --exclude table1,table2\n```\n\nAlternatively, you can specify which tables to index with:\n\n```sh\ndexter --include table3,table4\n```\n\n## Debugging\n\nSee how Dexter is processing queries with:\n\n```sh\ndexter --log-sql --log-level debug2\n```\n\n## Hosted Postgres\n\nThe `hypopg` extension, which Dexter needs to run, is available on [these providers](https://github.com/ankane/dexter/issues/44).\n\nFor other providers, see [this guide](guides/Hosted-Postgres.md). To request a new extension:\n\n- Google Cloud SQL - vote or comment on [this page](https://issuetracker.google.com/issues/69250435)\n- DigitalOcean Managed Databases - vote or comment on [this page](https://ideas.digitalocean.com/managed-database/p/support-hypopg-for-postgres)\n\n## HypoPG Installation Notes\n\n### Postgres Location\n\nIf your machine has multiple Postgres installations, specify the path to [pg_config](https://www.postgresql.org/docs/current/app-pgconfig.html) with:\n\n```sh\nexport PG_CONFIG=/Applications/Postgres.app/Contents/Versions/latest/bin/pg_config\n```\n\nThen re-run the installation instructions (run `make clean` before `make` if needed)\n\n### Missing Header\n\nIf compilation fails with `fatal error: postgres.h: No such file or directory`, make sure Postgres development files are installed on the server.\n\nFor Ubuntu and Debian, use:\n\n```sh\nsudo apt-get install postgresql-server-dev-15\n```\n\nNote: Replace `15` with your Postgres server version\n\n## Additional Installation Methods\n\n### Docker\n\nGet the [Docker image](https://hub.docker.com/r/ankane/dexter) with:\n\n```sh\ndocker pull ankane/dexter\n```\n\nAnd run it with:\n\n```sh\ndocker run -ti ankane/dexter <connection-options>\n```\n\nFor databases on the host machine, use `host.docker.internal` as the hostname (on Linux, this requires Docker 20.04+ and `--add-host=host.docker.internal:host-gateway`).\n\n### Homebrew\n\nWith Homebrew, you can use:\n\n```sh\nbrew install dexter\n```\n\n## Future Work\n\n[Here are some ideas](https://github.com/ankane/dexter/issues/45)\n\n## Upgrading\n\nRun:\n\n```sh\ngem install pgdexter\n```\n\nTo use master, run:\n\n```sh\ngem install specific_install\ngem specific_install https://github.com/ankane/dexter.git\n```\n\n## Upgrade Notes\n\n### 0.5.0\n\nThe `--stdin` option is now required to read queries from stdin.\n\n```sh\ntail -F -n +1 postgresql.log | dexter <connection-options> --stdin\n```\n\n## Thanks\n\nThis software wouldn’t be possible without [HypoPG](https://github.com/HypoPG/hypopg), which allows you to create hypothetical indexes, and [pg_query](https://github.com/lfittl/pg_query), which allows you to parse and fingerprint queries. A big thanks to Dalibo and Lukas Fittl respectively. Also, thanks to YugabyteDB for [this article](https://dev.to/yugabyte/explain-from-pgstatstatements-normalized-queries-how-to-always-get-the-generic-plan-in--5cfi) on how to explain normalized queries.\n\n## Research\n\nThis is known as the Index Selection Problem (ISP).\n\n## Contributing\n\nEveryone is encouraged to help improve this project. Here are a few ways you can help:\n\n- [Report bugs](https://github.com/ankane/dexter/issues)\n- Fix bugs and [submit pull requests](https://github.com/ankane/dexter/pulls)\n- Write, clarify, or fix documentation\n- Suggest or add new features\n\nTo get started with development, run:\n\n```sh\ngit clone https://github.com/ankane/dexter.git\ncd dexter\nbundle install\nbundle exec rake install\n```\n\nTo run tests, use:\n\n```sh\ncreatedb dexter_test\nbundle exec rake test\n```"
}
