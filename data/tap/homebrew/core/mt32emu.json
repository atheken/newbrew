{
  "name": "mt32emu",
  "full_name": "mt32emu",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Multi-platform software synthesiser",
  "license": "LGPL-2.1-or-later",
  "homepage": "https://github.com/munt/munt",
  "versions": {
    "stable": "2.7.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/munt/munt/archive/refs/tags/libmt32emu_2_7_0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "5ede7c3d28a3bb0d9e637935b8b96484fadb409c9e5952a9e5432b3e05e5dbc1"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mt32emu/blobs/sha256:e17f59e16d6e854e33f00f336878f222a8526600468507a4b9f9be0eed8f22c6",
          "sha256": "e17f59e16d6e854e33f00f336878f222a8526600468507a4b9f9be0eed8f22c6"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mt32emu/blobs/sha256:b687a8634f4a6b1e75589c41cd6e053452506e48be916360046ff79ef5b374a9",
          "sha256": "b687a8634f4a6b1e75589c41cd6e053452506e48be916360046ff79ef5b374a9"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mt32emu/blobs/sha256:9d119e757d88a8fd84c127b1d3f875f4ad72c3f9ea99973b5a485194651b3bcd",
          "sha256": "9d119e757d88a8fd84c127b1d3f875f4ad72c3f9ea99973b5a485194651b3bcd"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mt32emu/blobs/sha256:3c4726017584143d94e3a89198f9ca27e08353a98fca6b83b68d396269458fcf",
          "sha256": "3c4726017584143d94e3a89198f9ca27e08353a98fca6b83b68d396269458fcf"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mt32emu/blobs/sha256:b0449f67f14ff75ad4c8ddd8d5f81f989e5ffe61261b12a2fe87ca48aeed649a",
          "sha256": "b0449f67f14ff75ad4c8ddd8d5f81f989e5ffe61261b12a2fe87ca48aeed649a"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mt32emu/blobs/sha256:3c414eefe4494914e24b36ab00aeec61c6520202101b74ef2f3e41e60aaad2f9",
          "sha256": "3c414eefe4494914e24b36ab00aeec61c6520202101b74ef2f3e41e60aaad2f9"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mt32emu/blobs/sha256:fd89bfb84134e333c40f3e819b997423ca1538a9e5f40c8a9f377454c729ab99",
          "sha256": "fd89bfb84134e333c40f3e819b997423ca1538a9e5f40c8a9f377454c729ab99"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mt32emu/blobs/sha256:929ee5e13b8e418b03d75cb0a9855b9fe6cf509739575b1405618de1695fcb96",
          "sha256": "929ee5e13b8e418b03d75cb0a9855b9fe6cf509739575b1405618de1695fcb96"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "libsamplerate",
    "libsoxr"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/mt32emu.rb",
  "ruby_source_checksum": {
    "sha256": "f68681430fec564151f7069dca45fb874e4de3affebc90cf725f25b514877aca"
  },
  "date_added": "2021-11-30T09:53:17+00:00",
  "readme": "This repository consists of several related subprojects collected in one place\nfor convenience.\n\n# [mt32emu](https://github.com/munt/munt/tree/master/mt32emu)\n\nmt32emu is a _C/C++ library_ which allows to emulate (approximately) [the Roland\nMT-32, CM-32L and LAPC-I synthesiser\nmodules](https://en.wikipedia.org/wiki/Roland_MT-32).\n\n# [mt32emu_alsadrv](https://github.com/munt/munt/tree/master/mt32emu_alsadrv)\n\nComprises of a GUI and a console applications that make use of _mt32emu library_\nto provide emulation services via *ALSA MIDI sequencer* interface for Linux\napplications. Applications that rely on *raw ALSA MIDI ports* may connect via\nvirtual raw MIDI ports, e.g. created with help of `snd_virmidi` kernel module.\nThe GUI application is mostly obsolete and can be replaced with _mt32emu_qt_.\nStill, _mt32emu_alsadrv_ may be preferred for systems with limited resources.\n\n# [mt32emu_smf2wav](https://github.com/munt/munt/tree/master/mt32emu_smf2wav)\n\nA console application intended to facilitate conversion a pre-recorded [Standard\nMIDI file](https://www.midi.org/specifications-old/item/standard-midi-files-smf)\n(SMF) to a WAVE file using the mt32emu library for audio rendering. The output\nfile is equivalent to a direct recording from a Roland MT-32, CM-32L or LAPC-I\nsynthesiser module.\n\n# [mt32emu_win32drv](https://github.com/munt/munt/tree/master/mt32emu_win32drv)\n\nWindows MME driver that provides for creating a MIDI output port and\ntransferring MIDI messages received from an external MIDI program to _mt32emu_qt_,\nthe main synthesiser application. It also includes the _mt32emu_ engine built-in\nand is able to operate in stand-alone mode if the main application _mt32emu_qt_\nis unavailable.\n\n# [mt32emu_win32drv_setup](https://github.com/munt/munt/tree/master/mt32emu_win32drv_setup)\n\nHelper tools intended to simplify installation / upgrade of the Windows MME\ndriver mt32emu_win32drv.\n\n# [mt32emu_qt](https://github.com/munt/munt/tree/master/mt32emu_qt)\n\nThe main synthesiser application. It facilitates both realtime synthesis and\nconversion of pre-recorded SMF files to WAVE making use of the mt32emu library\nand [the Qt framework](https://www.qt.io/). Key features:\n\n1. Support for multiple simultaneous synths with separate state & configuration.\n2. GUI to configure synths, manage ROMs, connections to external MIDI ports and\n   MIDI programs and interfaces to the host audio systems.\n3. Emulates the funny MT-32 LCD. Also displays the internal synth state in\n   realtime.\n4. Being a cross-platform application, provides support for different operating\n   systems and multimedia systems such as Windows multimedia, PulseAudio, JACK\n   Audio Connection Kit, ALSA, OSS and CoreMIDI.\n5. Contains built-in MIDI player of Standard MIDI files optimised for mt32emu.\n6. Makes it easy to record either the MIDI input or the produced audio output.\n7. Simplifies batch conversion of collections of SMF files to .wav / .raw audio\n   files.\n\n# [DOSBox-mt32-patch](https://github.com/munt/munt/tree/master/DOSBox-mt32-patch)\n\nPatch for the official [DOSBox](https://www.dosbox.com/) release v.0.74 to\ndemonstrate a possibility to add mt32 MIDI device. Intended for developers and\nmaintainers of customised DOSBox builds.\n\n# [FreeBSD](https://github.com/munt/munt/tree/master/FreeBSD)\n\nFiles related to the port of munt components for [the FreeBSD\nsystem](https://www.freebsd.org/)."
}
