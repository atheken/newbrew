{
  "name": "cargo-bloat",
  "full_name": "cargo-bloat",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Find out what takes most of the space in your executable",
  "license": "MIT",
  "homepage": "https://github.com/RazrFalcon/cargo-bloat",
  "versions": {
    "stable": "0.11.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/RazrFalcon/cargo-bloat/archive/v0.11.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "4f338c1a7f7ee6bcac150f7856ed1f32cf8d9009cfd513ca6c1aac1e6685c35f"
    },
    "head": {
      "url": "https://github.com/RazrFalcon/cargo-bloat.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-bloat/blobs/sha256:2c53b8b2d79a6849c1d205fb83756a26d05c9474dd1224c60b2514be91c88de4",
          "sha256": "2c53b8b2d79a6849c1d205fb83756a26d05c9474dd1224c60b2514be91c88de4"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-bloat/blobs/sha256:5f62f85a081b59f0bd758eef9d2bab666fa6454b0aacd2cdfd37ddf0739f7de8",
          "sha256": "5f62f85a081b59f0bd758eef9d2bab666fa6454b0aacd2cdfd37ddf0739f7de8"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-bloat/blobs/sha256:b6ab2d9245352f227b5f223510a0f5808f12f6c7c646cd97762bffc3a9ba1314",
          "sha256": "b6ab2d9245352f227b5f223510a0f5808f12f6c7c646cd97762bffc3a9ba1314"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-bloat/blobs/sha256:bc46e671082df2cbd1efe4c960fda46fbd9d8367cf6dc5dc3609f23d8acd688c",
          "sha256": "bc46e671082df2cbd1efe4c960fda46fbd9d8367cf6dc5dc3609f23d8acd688c"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-bloat/blobs/sha256:3805e2d627484ee6d60f6f5e3b67d1e89f9b4813207f406f462a3a3f582d92f2",
          "sha256": "3805e2d627484ee6d60f6f5e3b67d1e89f9b4813207f406f462a3a3f582d92f2"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-bloat/blobs/sha256:bef4a80020141209f357649f2574808a043c5d8134f7986dd3574cd61d11672f",
          "sha256": "bef4a80020141209f357649f2574808a043c5d8134f7986dd3574cd61d11672f"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-bloat/blobs/sha256:89b74b010c7fa1ecf1593d3f0134e19d29c95d4457f19103cb1d726f76253f1c",
          "sha256": "89b74b010c7fa1ecf1593d3f0134e19d29c95d4457f19103cb1d726f76253f1c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-bloat/blobs/sha256:5bf7b9ad04fb48b20b2c5e000b812bd6910d65d3dd6cc567436f5e9b156a6ca8",
          "sha256": "5bf7b9ad04fb48b20b2c5e000b812bd6910d65d3dd6cc567436f5e9b156a6ca8"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [
    "rustup-init"
  ],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/cargo-bloat.rb",
  "ruby_source_checksum": {
    "sha256": "94771bf70188240e4e83f69d89a06e4871be1cb7a5961c1f01dba211d10b350f"
  },
  "date_added": "2021-08-22T15:13:39+00:00",
  "readme": "## cargo-bloat\n\nFind out what takes most of the space in your executable.\n\nSupports ELF (Linux, BSD), Mach-O (macOS) and PE (Windows) binaries.\n\nWASM is not supported. Use [twiggy](https://github.com/rustwasm/twiggy) instead.\n\nInspired by [google/bloaty](https://github.com/google/bloaty).\n\n### Install\n\n```bash\ncargo install cargo-bloat\n```\n\nor\n\n```bash\ncargo install cargo-bloat --no-default-features\n```\n\nif you don't need regex filtering using the `--filter` option.\n\n### Usage\n\nGet a list of the biggest functions in the release build:\n\n```\n% cargo bloat --release -n 10\nCompiling ...\nAnalyzing target/release/cargo-bloat\n\n File  .text     Size       Crate Name\n 0.9%   7.1%  27.0KiB cargo_bloat cargo_bloat::main\n 0.8%   5.7%  21.4KiB cargo_bloat cargo_bloat::process_crate\n 0.3%   2.3%   8.6KiB   [Unknown] read_line_info\n 0.3%   2.1%   7.9KiB         std std::sys::unix::process::process_common::Command::capture_env\n 0.3%   2.1%   7.8KiB        json json::parser::Parser::parse\n 0.2%   1.7%   6.5KiB   [Unknown] elf_add\n 0.2%   1.7%   6.3KiB         std __rdos_backtrace_dwarf_add\n 0.2%   1.3%   5.0KiB         std <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt\n 0.2%   1.3%   4.9KiB         std std::sys_common::backtrace::_print\n 0.2%   1.3%   4.8KiB         std core::num::flt2dec::strategy::dragon::format_shortest\n 9.8%  73.5% 278.0KiB             And 932 smaller methods. Use -n N to show more.\n13.3% 100.0% 378.0KiB             .text section size, the file size is 2.8MiB\n```\n\nGet a list of the biggest dependencies in the release build:\n```\n% cargo bloat --release --crates\nCompiling ...\nAnalyzing target/release/cargo-bloat\n\n File  .text     Size Crate\n 8.1%  61.2% 231.5KiB std\n 2.5%  19.2%  72.4KiB cargo_bloat\n 1.2%   9.4%  35.5KiB [Unknown]\n 1.0%   7.2%  27.2KiB json\n 0.3%   2.2%   8.5KiB pico_args\n 0.1%   0.4%   1.7KiB multimap\n 0.0%   0.3%   1.1KiB memmap\n 0.0%   0.0%     175B term_size\n 0.0%   0.0%      45B time\n13.3% 100.0% 378.0KiB .text section size, the file size is 2.8MiB\n\nNote: numbers above are a result of guesswork. They are not 100% correct and never will be.\n```\n\nGet a list of the biggest functions in the release build filtered by the regexp:\n\n**Note**: you have to build `cargo-bloat` with a `regex-filter` feature enabled.\n\n```\n% cargo bloat --release --filter '^__' -n 10\nCompiling ...\nAnalyzing target/release/cargo-bloat\n\nFile .text    Size Crate Name\n0.2%  1.7%  6.3KiB   std __rdos_backtrace_dwarf_add\n0.1%  0.5%  1.9KiB   std __rdos_backtrace_qsort\n0.0%  0.2%    843B   std __udivmodti4\n0.0%  0.1%    296B   std __floattidf\n0.0%  0.1%    290B   std __floattisf\n0.0%  0.1%    284B   std __rdos_backtrace_initialize\n0.0%  0.1%    253B   std __floatuntisf\n0.0%  0.1%    253B   std __floatuntidf\n0.0%  0.1%    211B   std __rdos_backtrace_get_view\n0.0%  0.0%    180B   std __rdos_backtrace_vector_grow\n0.1%  0.7%  2.8KiB       And 37 smaller methods. Use -n N to show more.\n0.5%  3.6% 13.5KiB       filtered data size, the file size is 2.8MiB\n```\n\nGet a list of crates that took longest to compile:\n\n```\n% cargo bloat --time -j 1\n Time Crate\n1.42s pdb\n1.37s regex_syntax\n1.11s cargo_bloat\n0.96s regex\n0.58s binfarce\n0.54s json\n0.45s libc\n0.22s uuid\n0.20s fallible_iterator\n0.19s pico_args\n0.18s scroll\n0.12s memmap2\n0.09s multimap\n0.06s term_size\n```\n\nFlags specific for `cargo-bloat`:\n```\n    --crates                   Per crate bloatedness\n    --time                     Per crate build time. Will run `cargo clean` first\n    --filter <CRATE|REGEXP>    Filter functions by crate\n    --split-std                Split the 'std' crate to original crates like core, alloc, etc.\n    --no-relative-size         Hide 'File' and '.text' columns\n    --full-fn                  Print full function name with hash values\n-n <NUM>                       Number of lines to show, 0 to show all [default: 20]\n-w, --wide                     Do not trim long function names\n    --message-format <FMT>     Output format [default: table] [possible values: table, json]\n```\n\n### License\n\n*cargo-bloat* is licensed under the MIT license."
}
