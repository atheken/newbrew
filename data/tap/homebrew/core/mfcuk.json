{
  "name": "mfcuk",
  "full_name": "mfcuk",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "MiFare Classic Universal toolKit",
  "license": "GPL-2.0",
  "homepage": "https://github.com/nfc-tools/mfcuk",
  "versions": {
    "stable": "0.3.8",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/mfcuk/mfcuk-0.3.8.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "977595765b4b46e4f47817e9500703aaf5c1bcad39cb02661f862f9d83f13a55"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mfcuk/blobs/sha256:c9ab885a21f8102b6a0f9256a565f35a2501a635880bc9e0f6aaf07c766fe97f",
          "sha256": "c9ab885a21f8102b6a0f9256a565f35a2501a635880bc9e0f6aaf07c766fe97f"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mfcuk/blobs/sha256:7b5be1129fc0bd29968d0c863391b101892525aacb5146316095066a87c652aa",
          "sha256": "7b5be1129fc0bd29968d0c863391b101892525aacb5146316095066a87c652aa"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mfcuk/blobs/sha256:f37625d6d5f84b70a6e85359da444790d64a56f898c8051c41f314ad061cbc42",
          "sha256": "f37625d6d5f84b70a6e85359da444790d64a56f898c8051c41f314ad061cbc42"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mfcuk/blobs/sha256:c126f3f7da887cb15754a7e9ac59cd9f70bebb9bca2d4a931395a4bcdea9895e",
          "sha256": "c126f3f7da887cb15754a7e9ac59cd9f70bebb9bca2d4a931395a4bcdea9895e"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mfcuk/blobs/sha256:fb3c96007c69c0b301d8dbe1d4c05b21e5ecfe16927e18cdc8d8e3d1179f8ae6",
          "sha256": "fb3c96007c69c0b301d8dbe1d4c05b21e5ecfe16927e18cdc8d8e3d1179f8ae6"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mfcuk/blobs/sha256:0da7f4ed6a6b71a7960274fc7f020510d289269d6a3ed1e8f84f884a2619a684",
          "sha256": "0da7f4ed6a6b71a7960274fc7f020510d289269d6a3ed1e8f84f884a2619a684"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mfcuk/blobs/sha256:c9191edf0484422fa432827e017d05d4854cde1fd8194a3735eec0e060884652",
          "sha256": "c9191edf0484422fa432827e017d05d4854cde1fd8194a3735eec0e060884652"
        },
        "mojave": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mfcuk/blobs/sha256:2540f3232f4220dac3cf296c43fea2f2582c71ab18037e9d0c047c4f1df39f71",
          "sha256": "2540f3232f4220dac3cf296c43fea2f2582c71ab18037e9d0c047c4f1df39f71"
        },
        "high_sierra": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mfcuk/blobs/sha256:f624f03ed0674915332412b50d0013a9495aece4b1ef773767024d11b8fd0d8c",
          "sha256": "f624f03ed0674915332412b50d0013a9495aece4b1ef773767024d11b8fd0d8c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mfcuk/blobs/sha256:ce46cb3bb5f400139ff5e306dbdd76d4e1c0fe62acd3b9bc5711e3cc734ee835",
          "sha256": "ce46cb3bb5f400139ff5e306dbdd76d4e1c0fe62acd3b9bc5711e3cc734ee835"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "pkg-config"
  ],
  "dependencies": [
    "libnfc",
    "libusb"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/mfcuk.rb",
  "ruby_source_checksum": {
    "sha256": "fb1255a12ec0cd7fda936dc71ee139a6a65ab5a98bff55873214cfee6f9d7396"
  },
  "date_added": "2014-03-10T19:01:40-07:00",
  "readme": "README\r\n======\r\n\r\nCompiling:\r\n    autoreconf -is\r\n    ./configure\r\n    make\r\n\r\nRunning (most basic):\r\n    ./mfcuk -C -R 0:A -v 2\r\n\r\nPACKAGE\r\n-------\r\nMiFare Classic Universal toolKit (MFCUK)\r\n\r\nTOOL(S)\r\n-------\r\nMifare Classic DarkSide Key Recovery Tool (mfcuk_keyrecovery_darkside.c) (previously known as zv_mf_dark_side)\r\n...\r\n\r\nLICENSE\r\n-------\r\nGPL. See MFCUK_LICENSE for more information.\r\n\r\n\r\nBIBLIOGRAPHY (no specific order)\r\n---------------------------------\r\n1. [WPMCC09] - \"Wirelessly Pickpocketing a Mifare Classic Card\"\r\n2. [ESO08] - \"2008-esorics.pdf\"\r\n3. [ESOSL08] - \"2008-esorics-slides-updated.pdf\"\r\n4. [KON08] - \"2008-koning-thesis.pdf\"\r\n5. [VER08] - \"2008-verdult-thesis.pdf\"\r\n6. [PATMC] - \"A Practical Attack on the MIFARE Classic.pdf\"\r\n7. [NCOURFIDSEC09] - \"mifare_courtois_rfidsec09.pdf\"\r\n8. [MFCLTRB09] - \"MifareClassicTroubles.ppt\"\r\n9. [TEEP08] - \"p2008-teepe-classic_mistakes.pdf\"\r\n10. [RFIDSANJ] - \"RFID Attacks_WCA_San_Jose.pdf\"\r\n11. [ROSS] - \"rossum-mifare.pdf\"\r\n12. [PLOTZ08] - \"SAR-PR-2008-21_.pdf\"\r\n13. [ROSSSASG] - \"SASG35_Peter_v_Rossum_Mifare.pdf\"\r\n14. [DARK2009] - \"THE DARK SIDE OF SECURITY BY OBSCURITY and Cloning MiFare Classic Rail and Building Passes, Anywhere, Anytime\"\r\n\r\nKUDOS and HATS-OFF to (no specific order) (for all the knowledge, time spent researching and all the things)\r\n---------------------\r\n - blapost@gmail.com - this man is a genius and a technical artist. crapto1 3.1 is the horse power of this tool. PS: you somehow resemble I.C.Wiener anonymous&smart hacker\r\n - Roel and RConty @ libnfc/proxmark - these guys are true advisers, helpful. Thanks for providing a powerfull platform for NFC\r\n - N.Curtois - also a crypto-artist in differential analysis. The 29bit prefix attack is pure genius of theoretical analysis.\r\n - RU University Staff for working out different aspects and papers for Crypto1 analysis\r\n - Nohl, Plotz, Evans - how the \"F\" did you get those slicers and microscopes :))?\r\n - Milosch M et al. - for pushing the limits for open-source hardware (OpenPCD and OpenPICC)\r\n - Jonathan Westhues - for giving the open-source community the: Proxmark schematics/sources and RFID knowledge\r\n - Nethemba team - for first open-source/GPL nested authentication attack key recovery implementation in MFOC\r\n - hat, schwa226, pgrahamm, marcus2608, phadom - for useful samples, advices, traces and all the things\r"
}
