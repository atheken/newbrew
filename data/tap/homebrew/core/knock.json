{
  "name": "knock",
  "full_name": "knock",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Port-knock server",
  "license": "GPL-2.0-or-later",
  "homepage": "https://github.com/jvinet/knock",
  "versions": {
    "stable": "0.8",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/jvinet/knock/releases/download/v0.8/knock-0.8.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "698d8c965624ea2ecb1e3df4524ed05afe387f6d20ded1e8a231209ad48169c7"
    },
    "head": {
      "url": "https://github.com/jvinet/knock.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/knock/blobs/sha256:326959f0e368e3b38816abdc5b45d483d1c4d46f0d26775171bd7d5ebeaa059d",
          "sha256": "326959f0e368e3b38816abdc5b45d483d1c4d46f0d26775171bd7d5ebeaa059d"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/knock/blobs/sha256:4f84095e2b3b16af1f3d2263b79dd3432f9dbc9db27654377d520fdb54a0c520",
          "sha256": "4f84095e2b3b16af1f3d2263b79dd3432f9dbc9db27654377d520fdb54a0c520"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/knock/blobs/sha256:81bcc7e4f700f88fd52678bcb97fe0eddf0a562e28bd406268ae263e286903dd",
          "sha256": "81bcc7e4f700f88fd52678bcb97fe0eddf0a562e28bd406268ae263e286903dd"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/knock/blobs/sha256:765d3a0f6ae6560d5c274cda7330e50faaa3412d11251594a8463b5acd9a0539",
          "sha256": "765d3a0f6ae6560d5c274cda7330e50faaa3412d11251594a8463b5acd9a0539"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/knock/blobs/sha256:964a0505b7d815efb5be3a9ecf3e935d19e07e8fb9245fc292dda30501d089cd",
          "sha256": "964a0505b7d815efb5be3a9ecf3e935d19e07e8fb9245fc292dda30501d089cd"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/knock/blobs/sha256:b8d423345658b70c35b16a032ace493f1da244144dbfe0f4c4b0ed79ce0ac560",
          "sha256": "b8d423345658b70c35b16a032ace493f1da244144dbfe0f4c4b0ed79ce0ac560"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/knock/blobs/sha256:2c9a3167f4b08e9b4ed890f6cc165eda8e813da9c911e741fd9cdb5d3742de31",
          "sha256": "2c9a3167f4b08e9b4ed890f6cc165eda8e813da9c911e741fd9cdb5d3742de31"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/knock/blobs/sha256:5af91e5dcf61f216105c1562c032f2d06decbf6f6653171793d6af2101e27f0b",
          "sha256": "5af91e5dcf61f216105c1562c032f2d06decbf6f6653171793d6af2101e27f0b"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/knock/blobs/sha256:92ee3bfd7171b2fd896bda24b35ccb710365acf17e8c87b01d6a119a5133d996",
          "sha256": "92ee3bfd7171b2fd896bda24b35ccb710365acf17e8c87b01d6a119a5133d996"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "libpcap"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/knock.rb",
  "ruby_source_checksum": {
    "sha256": "56d8f701e8fedf480d6fdd642234a75cc5dcb3139e88dec1278ac4e2d6182c58"
  },
  "head_dependencies": {
    "build_dependencies": [
      "autoconf",
      "automake"
    ],
    "dependencies": [],
    "test_dependencies": [],
    "recommended_dependencies": [],
    "optional_dependencies": [],
    "uses_from_macos": [
      "libpcap"
    ],
    "uses_from_macos_bounds": [
      {}
    ]
  },
  "date_added": "2010-04-13T10:13:50-07:00",
  "readme": "## knock: A port-knocking implementation\n\nCopyright (c) 2004, Judd Vinet <jvinet@zeroflux.org>\n\n### ABOUT  \n\nThis is a port-knocking server/client.  Port-knocking is a method where a\nserver can sniff one of its interfaces for a special \"knock\" sequence of\nport-hits.  When detected, it will run a specified event bound to that port\nknock sequence.  These port-hits need not be on open ports, since we use\nlibpcap to sniff the raw interface traffic.\n\n\n### BUILDING\n\nTo build knockd, make sure you have libpcap and the autoconf tools\ninstalled. Then run the following:\n\n    $ autoreconf -fi\n    $ ./configure --prefix=/usr/local\n    $ make\n    $ sudo make install\n\n\n### EXAMPLE  \n\nThe example below could be used to run a strict (DENY policy) firewall that\ncan only be accessed after a successful knock sequence.\n\n  1. Client sends four TCP SYN packets to Server, at the following ports:\n     38281, 29374, 4921, 54918\n  2. Server detects this and runs an iptables command to open port 22 to\n     Client.\n  3. Client connects to Server via SSH and does whatever it needs to do.\n  4. Client sends four more TCP SYN packets to Server:  37281, 8529,\n     40127, 10100\n  5. Server detects this and runs another iptables command to close port\n     22 to Client.\n\n\n### KNOCKING CLIENTS\n\nThe accompanying knock client is very basic.  If you want to do more advanced\nknocks (eg, setting specific tcp flags) then you should take look at more\npowerful clients.\n\n  - [sendip](http://freshmeat.net/projects/sendip/)\n\n\n### OTHER IMPLEMENTATIONS  \n\nHere are some other implementations of port-knocking:\n\n  - [pasmal](http://sourceforge.net/projects/pasmal/)\n  - [doorman](http://doorman.sourceforge.net/)"
}
