{
  "name": "screenresolution",
  "full_name": "screenresolution",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Get, set, and list display resolution",
  "license": "GPL-2.0-only",
  "homepage": "https://github.com/jhford/screenresolution",
  "versions": {
    "stable": "1.6",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/jhford/screenresolution/archive/v1.6.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d3761663eaf585b014391a30a77c9494a6404e78e8a4863383e12c59b0f539eb"
    },
    "head": {
      "url": "https://github.com/jhford/screenresolution.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenresolution/blobs/sha256:115831028fe4da37486b48aabc70fc13fde8a297aa2e3d5eee9ea822a2727053",
          "sha256": "115831028fe4da37486b48aabc70fc13fde8a297aa2e3d5eee9ea822a2727053"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenresolution/blobs/sha256:305ef97e31c6a2cdafb1a9de02787e2861b3c9de0165d45dde1c56185b8e1e64",
          "sha256": "305ef97e31c6a2cdafb1a9de02787e2861b3c9de0165d45dde1c56185b8e1e64"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenresolution/blobs/sha256:65567f2a43d8744ca821b29e001d92b18f25750267714f4b42df0b2c24cfd3a9",
          "sha256": "65567f2a43d8744ca821b29e001d92b18f25750267714f4b42df0b2c24cfd3a9"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenresolution/blobs/sha256:25f283268c93a7d6be4fa71f4eb08c0f618206a3beaf365338d52a11af0513e9",
          "sha256": "25f283268c93a7d6be4fa71f4eb08c0f618206a3beaf365338d52a11af0513e9"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenresolution/blobs/sha256:961b7f2ee25f6df43ac16338dc3e7b3fc23f76985a672084c37e193e1570ad0b",
          "sha256": "961b7f2ee25f6df43ac16338dc3e7b3fc23f76985a672084c37e193e1570ad0b"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenresolution/blobs/sha256:234674351827f392bc7de0eb7ddb9855e6254c83a5bade7fa93b9e09ac71218b",
          "sha256": "234674351827f392bc7de0eb7ddb9855e6254c83a5bade7fa93b9e09ac71218b"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenresolution/blobs/sha256:53636977689925be4ef97933dc0f1b411f0cd82f71a268cfe7c6f90d5a294f97",
          "sha256": "53636977689925be4ef97933dc0f1b411f0cd82f71a268cfe7c6f90d5a294f97"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenresolution/blobs/sha256:15d61e87178dbe8ef88c9cb75251f472efc42830b1a2c5be25e4a5bd074e0c66",
          "sha256": "15d61e87178dbe8ef88c9cb75251f472efc42830b1a2c5be25e4a5bd074e0c66"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenresolution/blobs/sha256:b2f7b0933c734d5ecd8bfafae8d384f20821c45ca38fc81308035d3ca79f3535",
          "sha256": "b2f7b0933c734d5ecd8bfafae8d384f20821c45ca38fc81308035d3ca79f3535"
        },
        "sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenresolution/blobs/sha256:ef630f5af67d6bcdde3fd580917ad05d871274f0d62b2a76705ab2b9683f334f",
          "sha256": "ef630f5af67d6bcdde3fd580917ad05d871274f0d62b2a76705ab2b9683f334f"
        },
        "el_capitan": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenresolution/blobs/sha256:63cfb53fe13d5f5b2c72e8a644b312f8a144b12e2b3f284de5adfc5010e1570d",
          "sha256": "63cfb53fe13d5f5b2c72e8a644b312f8a144b12e2b3f284de5adfc5010e1570d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/screenresolution.rb",
  "ruby_source_checksum": {
    "sha256": "936a3e45581ff246bbd6df6804cd50dad35c3843ff086c67fd42a801ff6a0814"
  },
  "date_added": "2013-11-05T15:40:39+00:00",
  "readme": "This is a tool that can be used to determine current resolution,\nlist available resolutions and set resolutions for active displays\non Mac OS 10.6, and possibly above.  I have only tested 10.6.\n\nI used clang for development, but the code seems to compile\njust fine with gcc.  The code might not be as well layed out\nas it could be, feel free to send a pull request.\n\nBuild+Install\n====================\nRunning the following commands in Terminal.app will result in \ndmg with a pkg file being created if the system has Xcode 4.\n    \n    git clone github.com:jhford/screenresolution\n    cd screenresolution\n    make dmg\n\nAt this point, I'd recommend testing that things work!  I have\nwritten a 'test' makefile target.  Because this script expects two\nmonitors that both use the same resolution, it mightn't work \nproperly for you if you only have one\n\n    make test ORIG_RES=1920x1200x32\n\nThis will cause your screen to flicker as it changes the mode a\ncouple times on each monitor.\n\nThe makefiles support the DESTDIR (alternate root) and PREFIX \nvariables.  If you don't know what those are, you probably don't\nwant them.\n\nThis will create a DMG file and a PKG file.  If you know or care \nabout the differences, you probably know what to do at this point.\nIf you want to install this program on the system you built it on,\nyou can run \n    \n    open screenresolution.pkg\n\nIf you want to put this program on another system, you can choose\nbetween the pkg file, the dmg file, the binaries or use the \ninstall make target with DESTDIR to specify an alternate root.\n\nRunning\n====================\nThere are three commands that this program supports: get, list \nand set.  All three modes operate on active displays [1].\n\nThe get mode will show you the resolution of all active displays\n\n    $ screenresolution get\n    Display 0: 1920x1200x32\n    Display 1: 1920x1200x32\n \n The list mode will show you to the available resolutions of all\n active displays, seperated by various whitespace.\n\n    Available Modes on Display 0\n      1920x1200x8   1920x1200x16    1920x1200x32    960x600x8 \n      960x600x16    960x600x32      1680x1050x8 \t1680x1050x16 \n    <snip>\n    Available Modes on Display 1\n    <snip>\n\nThe set command takes a list of modes.  It will apply the modes\nin the list of modes to the list of displays, starting with 0.\nModes in excess of the number of active displays will be ignored.\nIf you wish to set a monitor but not the lower numbered displays,\nthere is a keyword 'skip' which can be subsituted for a resolution.\nThis keyword will cause the first display to be skipped.  If you\nspecify more resolutions than you have active screens, the extra\nresolutions will be ignored.\n\nExample 1:\n    This example works with one or more screens\n    $ screenresolution set 800x600x32\nResult 1:\n    The main display will change to 800x600x32, second screen\n    will not be changed\n\nExample 2:\n    This example assumes two screens\n    $ screenresolution set 800x600x32 800x600x32\nResult 2:\n    The first and second monitor on the system will be set to \n    800x600x32\n\nExample 3:\n    This example assumes two screens\n    $ screenresolution set skip 800x600x32\n    This will not touch the first screen but will set the second\n    screen to 800x600x32\n\n\n[1]See discussion point for explanation of what active display means.\nhttp://developer.apple.com/library/mac/documentation/GraphicsImaging/Reference/Quartz_Services_Ref/Reference/reference.html#//apple_ref/c/func/CGGetActiveDisplayList"
}
