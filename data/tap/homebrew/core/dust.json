{
  "name": "dust",
  "full_name": "dust",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "More intuitive version of du in rust",
  "license": "Apache-2.0",
  "homepage": "https://github.com/bootandy/dust",
  "versions": {
    "stable": "0.8.6",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/bootandy/dust/archive/v0.8.6.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "feede818e814011207c5bfeaf06dd9fc95825c59ab70942aa9b9314791c5d6b6"
    },
    "head": {
      "url": "https://github.com/bootandy/dust.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dust/blobs/sha256:d6d72ba4c858b0e44d7f95713b78070610aebcec83ea8200ee6c8ce465144480",
          "sha256": "d6d72ba4c858b0e44d7f95713b78070610aebcec83ea8200ee6c8ce465144480"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dust/blobs/sha256:e0ce635f5ac7ae65863e2eec8f928d980f4fcc558096f738bbee3afe6d0009d6",
          "sha256": "e0ce635f5ac7ae65863e2eec8f928d980f4fcc558096f738bbee3afe6d0009d6"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dust/blobs/sha256:f083d4c18e1014c826927da64b5893546eafb5597e02f73adf0f8de4eb93f361",
          "sha256": "f083d4c18e1014c826927da64b5893546eafb5597e02f73adf0f8de4eb93f361"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dust/blobs/sha256:4fbdda7b25b1c9ec1ec4110b1c6589ad998fdc914921a66d19ec76b1d131d54a",
          "sha256": "4fbdda7b25b1c9ec1ec4110b1c6589ad998fdc914921a66d19ec76b1d131d54a"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dust/blobs/sha256:1c6a6a5305b711c33a23fc1dd7311ef479767be4046dc99373558c92eabe3ed6",
          "sha256": "1c6a6a5305b711c33a23fc1dd7311ef479767be4046dc99373558c92eabe3ed6"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dust/blobs/sha256:d93f784924a5b7bfbf9a51f9abf37752af93e6eea61a02aa257b893c86ce282d",
          "sha256": "d93f784924a5b7bfbf9a51f9abf37752af93e6eea61a02aa257b893c86ce282d"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dust/blobs/sha256:a37c6d9c30ca6d383019a6da38c25ea8680b2e62ed4438dbfa76a9abb77be128",
          "sha256": "a37c6d9c30ca6d383019a6da38c25ea8680b2e62ed4438dbfa76a9abb77be128"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/dust.rb",
  "ruby_source_checksum": {
    "sha256": "f2b4be9f7cfe0e03f77d446285e72063341108e38453ea85fb84c34845806c99"
  },
  "date_added": "2019-06-07T14:33:39+02:00",
  "readme": "[![Build Status](https://travis-ci.org/bootandy/dust.svg?branch=master)](https://travis-ci.org/bootandy/dust)\n\n# Dust\n\ndu + rust = dust. Like du but more intuitive.\n\n# Why\n\nBecause I want an easy way to see where my disk is being used.\n\n# Demo\n\n![Example](media/snap.png)\n\n## Install\n\n#### Cargo <a href=\"https://repology.org/project/du-dust/versions\"><img src=\"https://repology.org/badge/vertical-allrepos/du-dust.svg\" alt=\"Packaging status\" align=\"right\"></a>\n\n- `cargo install du-dust`\n\n#### üç∫ Homebrew (Mac OS)\n\n- `brew install dust`\n\n#### üç∫ Homebrew (Linux)\n\n- `brew tap tgotwig/linux-dust && brew install dust`\n\n#### [Pacstall](https://github.com/pacstall/pacstall) (Debian/Ubuntu)\n\n- `pacstall -I dust-bin`\n\n#### [deb-get](https://github.com/wimpysworld/deb-get) (Debian/Ubuntu)\n\n- `deb-get install du-dust`\n\n#### Windows:\n\n- Windows GNU version - works\n- Windows MSVC - requires: [VCRUNTIME140.dll](https://docs.microsoft.com/en-gb/cpp/windows/latest-supported-vc-redist?view=msvc-170)\n\n#### Download\n\n- Download Linux/Mac binary from [Releases](https://github.com/bootandy/dust/releases)\n- unzip file: `tar -xvf _downloaded_file.tar.gz`\n- move file to executable path: `sudo mv dust /usr/local/bin/`\n\n## Overview\n\nDust is meant to give you an instant overview of which directories are using disk space without requiring sort or head. Dust will print a maximum of one 'Did not have permissions message'.\n\nDust will list a slightly-less-than-the-terminal-height number of the biggest subdirectories or files and will smartly recurse down the tree to find the larger ones. There is no need for a '-d' flag or a '-h' flag. The largest subdirectories will be colored.\n\nThe different colors on the bars: These represent the combined tree hierarchy & disk usage. The shades of grey are used to indicate which parent folder a subfolder belongs to. For instance, look at the above screenshot. `.steam` is a folder taking 44% of the space. From the `.steam` bar is a light grey line that goes up. All these folders are inside `.steam` so if you delete `.steam` all that stuff will be gone too.\n\n## Usage\n\n```\nUsage: dust\nUsage: dust <dir>\nUsage: dust <dir>  <another_dir> <and_more>\nUsage: dust -p (full-path - Show fullpath of the subdirectories)\nUsage: dust -s (apparent-size - shows the length of the file as opposed to the amount of disk space it uses)\nUsage: dust -n 30  (Shows 30 directories instead of the default [default is terminal height])\nUsage: dust -d 3  (Shows 3 levels of subdirectories)\nUsage: dust -D (Show only directories (eg dust -D))\nUsage: dust -F (Show only files - finds your largest files)\nUsage: dust -r (reverse order of output)\nUsage: dust -H (si print sizes in powers of 1000 instead of 1024)\nUsage: dust -X ignore  (ignore all files and directories with the name 'ignore')\nUsage: dust -x (Only show directories on the same filesystem)\nUsage: dust -b (Do not show percentages or draw ASCII bars)\nUsage: dust -i (Do not show hidden files)\nUsage: dust -c (No colors [monochrome])\nUsage: dust -f (Count files instead of diskspace)\nUsage: dust -t (Group by filetype)\nUsage: dust -z 10M (min-size, Only include files larger than 10M)\nUsage: dust -e regex (Only include files matching this regex (eg dust -e \"\\.png$\" would match png files))\nUsage: dust -v regex (Exclude files matching this regex (eg dust -v \"\\.png$\" would ignore png files))\nUsage: dust -L (dereference-links - Treat sym links as directories and go into them)\nUsage: dust -P (Disable the progress indicator)\nUsage: dust -R (For screen readers. Removes bars/symbols. Adds new column: depth level. (May want to use -p for full path too))\nUsage: dust --skip-total (No total row will be displayed)\nUsage: dust -z 4000000 (Exclude files below size 4MB)\n\n```\n\n## Alternatives\n\n- [NCDU](https://dev.yorhel.nl/ncdu)\n- [dutree](https://github.com/nachoparker/dutree)\n- [dua](https://github.com/Byron/dua-cli/)\n- [pdu](https://github.com/KSXGitHub/parallel-disk-usage)\n- [dirstat-rs](https://github.com/scullionw/dirstat-rs)\n- du -d 1 -h | sort -h\n\nNote: Apparent-size is calculated slightly differently in dust to gdu. In dust each hard link is counted as using file_length space. In gdu only the first entry is counted."
}
