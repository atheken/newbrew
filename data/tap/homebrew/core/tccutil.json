{
  "name": "tccutil",
  "full_name": "tccutil",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Utility to modify the macOS Accessibility Database (TCC.db)",
  "license": "GPL-2.0-or-later",
  "homepage": "https://github.com/jacobsalmela/tccutil",
  "versions": {
    "stable": "1.2.11",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/jacobsalmela/tccutil/archive/v1.2.11.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "efff442bc4d1b50ededa0798c9e3a6a881ac3d06310148cf438d5e531f9d6564"
    },
    "head": {
      "url": "https://github.com/jacobsalmela/tccutil.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tccutil/blobs/sha256:27033a9fedb26e4ea0087263ed08c2ab7136ca8258ac08f2fd0e6511d217c481",
          "sha256": "27033a9fedb26e4ea0087263ed08c2ab7136ca8258ac08f2fd0e6511d217c481"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/tccutil.rb",
  "ruby_source_checksum": {
    "sha256": "b4a0f01000826cc23fe809508fdb8d41881a08226bbb8ad66a9d425fe186dd61"
  },
  "date_added": "2015-12-07T15:59:32+00:00",
  "readme": "<p align=\"center\">\n    <a href=\"https://jacobsalmela.com/\">\n        <img src=\"https://user-images.githubusercontent.com/3843505/108144809-fea82a00-708f-11eb-9c99-884ce4702282.png\" width=\"250\" height=\"250\" alt=\"tccutil\">\n    </a>\n    <br>\n    <strong>tccutil.py</strong><br>\n    Modify macOS' <code>TCC.db</code> from the command line\n</p>\n\n## Modify macOS' Transparency, Consent, and Control (TCC) Framework from the Command Line\n\nApple has a utility in `/usr/bin` named `tccutil`, but it only supports one command, which is to `reset` the entire database.  It has been like this for many versions of macOS.   I wanted a command-line utility that would be able to add, remove, list, and take other actions.\n\n## SIP Notice\n\nThis tool needs SIP disabled in order to function.  The risk of doing so is up to you.\n\nDiscussions on this topic can be found here: https://github.com/jacobsalmela/tccutil/discussions/44\n\n## How is `tccutil.py` Different from other solutions?\n\n- `tccutil.py` can be installed without any additional software.\n- it has an easy to use syntax\n- there are other solutions out there, but there were some things I did not like about them:\n\n  + [Privacy Manager Services](https://github.com/univ-of-utah-marriott-library-apple/privacy_services_manager) has other dependencies that need to be installed (it has also gone over five years without any updates)\n\n  + [tccmanager.py](https://github.com/timsutton/scripts/blob/master/tccmanager/tccmanager.py) uses a `.plist` to add items, which is inconvenient.\n\n- these are also some other projects I found that do similar things\n\n  + [go-tccutil](https://github.com/JesusTinoco/go-tccutil) I actually only recently found this\n\n  + [tccplus](https://github.com/jslegendre/tccplus)\n\n  + [DocSystem/tccutil](https://github.com/DocSystem/tccutil)\n\n\n\n# Installation\n\n## Homebrew\n\nInstall using Homebrew.\n\n```\nbrew install tccutil\n```\n\nDepending how you have your `$PATH` variable setup, you can simply type `tccutil` (instead of the full path) and it will run this utility _instead_ of Apple's.\n\n\n## Alternative Install\n\nClone this repo and manually copy `tccutil.py` to `/usr/local/bin` or run from any directory with `python /path/to/tccutil.py`.\n\n## Usage\n\n**This utility needs super-user priveleges for most operations.** It is important that you either run this as root or use `sudo`, otherwise it won't work and you will end up with “permission denied” errors.\n\n```\nusage: tccutil.py [-h] [--service SERVICE] [--list] [--insert INSERT] [-v]\n                  [-r REMOVE] [-e ENABLE] [-d DISABLE] [--version]\n                  [ACTION]\n\nModify Accesibility Preferences\n\npositional arguments:\n  ACTION                This option is only used to perform a reset.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --service SERVICE, -s SERVICE\n                        Set TCC service\n  --list, -l            List all entries in the accessibility database.\n  --insert INSERT, -i INSERT\n                        Adds the given bundle ID or path to the accessibility\n                        database.\n  -v, --verbose         Outputs additional info for some commands.\n  -r REMOVE, --remove REMOVE\n                        Removes a given Bundle ID or Path from the\n                        Accessibility Database.\n  -e ENABLE, --enable ENABLE\n                        Enables Accessibility Access for the given Bundle ID\n                        or Path.\n  -d DISABLE, --disable DISABLE\n                        Disables Accessibility Access for the given Bundle ID\n                        or Path.\n  --version             Show the version of this script\n```\n\n\n### Examples\n\nList existing Entries in the Accessibility Database\n\n```bash\nsudo tccutil.py --list\n```\n\nAdd `/usr/bin/osascript` to the Accessibility Database (using UNIX-Style Option)\n\n```bash\nsudo tccutil.py -i /usr/bin/osascript\n````\n\nAdd *Script Editor* to the Accessibility Database (using Long Option)\n\n```bash\nsudo tccutil.py --insert com.apple.ScriptEditor2\n```\n\nRemove *Terminal* from the Accessibility Database\n\n```bash\nsudo tccutil.py --remove com.apple.Terminal\n```\n\nEnable *Terminal* (must already exist in the Database)\n\n```bash\nsudo tccutil.py --enable com.apple.Terminal\n```\n\nDisable `/usr/bin/osascript` (must already exist in the Database)\n\n```bash\nsudo tccutil.py -d /usr/bin/osascript\n```\n\n## Contributing\n\nMany people have contributed already, so feel free to make a PR and we'll get it merged in."
}
