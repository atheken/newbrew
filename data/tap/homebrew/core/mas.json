{
  "name": "mas",
  "full_name": "mas",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Mac App Store command-line interface",
  "license": "MIT",
  "homepage": "https://github.com/mas-cli/mas",
  "versions": {
    "stable": "1.8.6",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/mas-cli/mas.git",
      "tag": "v1.8.6",
      "revision": "560c89af2c1fdf0da9982a085e19bb6f5f9ad2d0",
      "checksum": null
    },
    "head": {
      "url": "https://github.com/mas-cli/mas.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mas/blobs/sha256:e49511dd1283813c4420aec9fc3b3167d18f9fdbb51d82b1e479b628d5312342",
          "sha256": "e49511dd1283813c4420aec9fc3b3167d18f9fdbb51d82b1e479b628d5312342"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mas/blobs/sha256:379d46e2657be295321f1603dc1df28130ea0b5b264ceb192a9ba488d77c7a98",
          "sha256": "379d46e2657be295321f1603dc1df28130ea0b5b264ceb192a9ba488d77c7a98"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mas/blobs/sha256:918a1484de106940f7bebc936e1ded87d7b65652054b09204887ad0651937ec4",
          "sha256": "918a1484de106940f7bebc936e1ded87d7b65652054b09204887ad0651937ec4"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mas/blobs/sha256:6ef7788e28c46cdc0f916812f49dfeb1fabf2240a8c36f33ce34bcfb9df1502f",
          "sha256": "6ef7788e28c46cdc0f916812f49dfeb1fabf2240a8c36f33ce34bcfb9df1502f"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mas/blobs/sha256:6b313f2f66d028cb7782c108d6e502ce73ccb9c08fac3bece0b057fcce5c4689",
          "sha256": "6b313f2f66d028cb7782c108d6e502ce73ccb9c08fac3bece0b057fcce5c4689"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mas/blobs/sha256:50b50f51219143fcb69c730b52b74011a76104f66348ea727d0200f7b375ae25",
          "sha256": "50b50f51219143fcb69c730b52b74011a76104f66348ea727d0200f7b375ae25"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mas/blobs/sha256:d241d3b9156b033f3d2c31684a44de726297e07fd9bd5e3ccc4c36e4f1c3baf3",
          "sha256": "d241d3b9156b033f3d2c31684a44de726297e07fd9bd5e3ccc4c36e4f1c3baf3"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    },
    {
      "name": "xcode",
      "cask": null,
      "download": null,
      "version": "12.0",
      "contexts": [
        "build"
      ],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/mas.rb",
  "ruby_source_checksum": {
    "sha256": "8c372b3d5b9e8cc0f2d77775ef57858f7a8f90bdedb7725eab5cfa820ddc7a19"
  },
  "date_added": "2016-04-21T16:40:59+01:00",
  "readme": "<h1 align=\"center\"><img src=\"mas-cli.png\" alt=\"mas-cli\" width=\"450\" height=\"auto\"></h1>\n\n# mas-cli\n\nA simple command line interface for the Mac App Store. Designed for scripting and automation.\n\n[![Software License](https://img.shields.io/badge/license-MIT-lightgrey.svg)](https://github.com/mas-cli/mas/blob/main/LICENSE)\n[![Swift 5](https://img.shields.io/badge/Language-Swift_5-orange.svg)](https://swift.org)\n[![GitHub Release](https://img.shields.io/github/release/mas-cli/mas.svg)](https://github.com/mas-cli/mas/releases)\n[![Reviewed by Hound](https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg)](https://houndci.com)\n[![Build, Test, & Lint](https://github.com/mas-cli/mas/actions/workflows/build-test.yml/badge.svg?branch=main)](https://github.com/mas-cli/mas/actions/workflows/build-test.yml?query=branch%3Amain)\n\n## 📲 Install\n\n### 🍺 Homebrew\n\n[Homebrew](http://brew.sh) is the preferred way to install:\n\n```bash\nbrew install mas\n```\n\n### MacPorts\n\n[MacPorts](https://www.macports.org/install.php) works as well:\n\n```bash\nsudo port install mas\n```\n\n⚠️ Note that macOS 10.15 (Catalina) is required to install mas from MacPorts or the core Homebrew formula.\n\n### ☎️ Older macOS Versions\n\nWe provide a [custom Homebrew tap](https://github.com/mas-cli/homebrew-tap) with pre-built bottles\nfor all macOS versions since 10.11.\n\nTo install mas from our tap:\n\n```bash\nbrew install mas-cli/tap/mas\n```\n\n#### Swift 5 Runtime Support\n\nmas requires Swift 5 runtime support. macOS 10.14.4 and later include it, but earlier releases did not.\nWithout it, running `mas` may report an error similar to this:\n> dyld: Symbol not found: _$s11SubSequenceSlTl\n\nTo get Swift 5 support, you have a few options:\n\n- Install the [Swift 5 Runtime Support for Command Line Tools](https://support.apple.com/kb/DL1998).\n- Update to macOS 10.14.4 or later.\n- Install Xcode 10.2 or later to `/Applications/Xcode.app`.\n\n### 🐙 GitHub Releases\n\nAlternatively, binaries are available in the [GitHub Releases](https://github.com/mas-cli/mas/releases).\n\n## 🤳🏻 Usage\n\nEach application in the Mac App Store has a product identifier which is also\nused for mas-cli commands. Using `mas list` will show all installed\napplications and their product identifiers.\n\n```bash\n$ mas list\n446107677 Screens\n407963104 Pixelmator\n497799835 Xcode\n```\n\nIt is possible to search for applications by name using `mas search` which\nwill search the Mac App Store and return matching identifiers.\nInclude the `--price` flag to include prices in the result.\n\n```bash\n$ mas search Xcode\n497799835 Xcode\n688199928 Docs for Xcode\n449589707 Dash 3 - API Docs & Snippets. Integrates with Xcode, Alfred, TextWrangler and many more.\n[...]\n```\n\nAnother way to find the identifier for an app is to\n\n1. Find the app in the Mac App Store\n2. Select `Share` > `Copy Link`\n3. Grab the identifier from the string, e.g. for Xcode,\n   [https://apps.apple.com/us/app/xcode/id497799835?mt=12](https://apps.apple.com/us/app/xcode/id497799835?mt=12)\n   has identifier `497799835`\n\nTo install or update an application simply run `mas install` with an\napplication identifier:\n\n```bash\n$ mas install 808809998\n==> Downloading PaintCode 2\n==> Installed PaintCode 2\n```\n\nIf you want to install the first result that the `search` command returns, use the `lucky` command.\n\n```bash\n$ mas lucky twitter\n==> Downloading Twitter\n==> Installed Twitter\n```\n\n> Please note that this command will not allow you to install (or even purchase) an app for the first time:\nuse the `purchase` command in that case.\n> ⛔ The `purchase` command is not supported as of macOS 10.15 Catalina. Please see [Known Issues](#%EF%B8%8F-known-issues).\n\n```bash\n$ mas purchase 768053424\n==> Downloading Gapplin\n==> Installed Gapplin\n```\n\n> Please note that you may have to re-authenticate yourself in the App Store to complete the purchase.\nThis is the case if the application is not free or if you configured your account not to remember the\ncredentials for free purchases.\n\nUse `mas outdated` to list all applications with pending updates.\n\n```bash\n$ mas outdated\n497799835 Xcode (7.0)\n446107677 Screens VNC - Access Your Computer From Anywhere (3.6.7)\n```\n\n> `mas` is only able to install/update applications that are listed in the Mac App Store itself.\nUse [`softwareupdate(8)`] utility for downloading system updates (e.g. Xcode Command Line Tools)\n\nTo install all pending updates run `mas upgrade`.\n\n```bash\n$ mas upgrade\nUpgrading 2 outdated applications:\nXcode (7.0), Screens VNC - Access Your Computer From Anywhere (3.6.7)\n==> Downloading Xcode\n==> Installed Xcode\n==> Downloading iFlicks\n==> Installed iFlicks\n```\n\nUpdates can be performed selectively by providing the app identifier(s) to\n`mas upgrade`\n\n```bash\n$ mas upgrade 715768417\nUpgrading 1 outdated application:\nXcode (8.0)\n==> Downloading Xcode\n==> Installed Xcode\n```\n\n### 🚏📥 Sign-in\n\n> ⛔ The `signin` command is not supported as of macOS 10.13 High Sierra. Please see [Known Issues](#%EF%B8%8F-known-issues).\n\nTo sign into the Mac App Store for the first time run `mas signin`.\n\n```bash\n$ mas signin mas@example.com\n==> Signing in to Apple ID: mas@example.com\nPassword:\n```\n\nIf you experience issues signing in this way, you can ask to sign in using a graphical dialog\n(provided by Mac App Store application):\n\n```bash\n$ mas signin --dialog mas@example.com\n==> Signing in to Apple ID: mas@example.com\n```\n\nYou can also embed your password in the command.\n\n```bash\n$ mas signin mas@example.com 'ZdkM4f$gzF;gX3ABXNLf8KcCt.x.np'\n==> Signing in to Apple ID: mas@example.com\n```\n\nUse `mas signout` to sign out from the Mac App Store.\n\n## 🍺 Homebrew integration\n\n`mas` is integrated with [homebrew-bundle]. If `mas` is installed, and you run `brew bundle dump`,\nthen your Mac App Store apps will be included in the Brewfile created. See the [homebrew-bundle]\ndocs for more details.\n\n## ⚠️ Known Issues\n\nOver time, Apple has changed the APIs used by `mas` to manage App Store apps, limiting its capabilities. Please sign in\nor purchase apps using the App Store app instead. Subsequent redownloads can be performed with `mas install`.\n\n- ⛔️ The `signin` command is not supported as of macOS 10.13 High Sierra. [#164](https://github.com/mas-cli/mas/issues/164)\n- ⛔️ The `purchase` command is not supported as of macOS 10.15 Catalina. [#289](https://github.com/mas-cli/mas/issues/289)\n- ⛔️ The `account` command is not supported as of macOS 12 Monterey. [#417](https://github.com/mas-cli/mas/issues/417)\n\nThe versions `mas` sees from the app bundles on your Mac don't always match the versions reported by the App Store for\nthe same app bundles. This leads to some confusion when the `outdated` and `upgrade` commands differ in behavior from\nwhat is shown as outdated in the App Store app. Further confusing matters, there is often some delay due to CDN\npropagation and caching between the time a new app version is released to the App Store, and the time it appears\navailable in the App Store app or via the `mas` command. These issues cause symptoms like\n[#384](https://github.com/mas-cli/mas/issues/384) and [#387](https://github.com/mas-cli/mas/issues/387).\n\nMacs with Apple silicon can install and run iOS and iPadOS apps from the App Store. `mas` is not yet aware of these\napps, and is not yet able to install or update them. [#321](https://github.com/mas-cli/mas/issues/321)\n\n## 💥 When something doesn't work\n\nIf you see this error, it's probably because you haven't installed the app through the App Store yet.\nSee [#46](https://github.com/mas-cli/mas/issues/46#issuecomment-248581233).\n> This redownload is not available for this Apple ID either because it was bought by a different user or the\n> item was refunded or cancelled.\n\nIf `mas` doesn't work for you as expected (e.g. you can't update/download apps), run `mas reset` and try again.\nIf the issue persists, please [file a bug](https://github.com/mas-cli/mas/issues/new).\nAll your feedback is much appreciated! ✨\n\n## 📺 Using `tmux`\n\n`mas` operates via the same system services as the Mac App Store. These exist as\nseparate processes with communication through XPC. As a result of this, `mas`\nexperiences similar problems as the pasteboard when running inside `tmux`. A\n[wrapper tool exists](https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard) to\nfix pasteboard behaviour which also works for `mas`.\n\nYou should consider configuring `tmux` to use the wrapper but if you do not wish\nto do this it can be used on a one-off basis as follows:\n\n```bash\nbrew install reattach-to-user-namespace\nreattach-to-user-namespace mas install\n```\n\n## ℹ️ Build from source\n\nYou can build from Xcode by opening the root `mas` directory, or from the Terminal:\n\n```bash\nscript/bootstrap\nscript/build\n```\n\nBuild output can be found in the `.build/` directory within the project.\n\n## ✅ Tests\n\nThe tests in this project are a recent work-in-progress.\nSince Xcode does not officially support tests for command-line tool targets,\nall logic is part of the MasKit target with tests in MasKitTests.\nTests are written using [Quick].\n\n```bash\nscript/test\n```\n\n## 📄 License\n\nmas-cli was created by [@argon](https://github.com/argon).\nCode is under the [MIT license](LICENSE).\n\n[homebrew-bundle]: https://github.com/Homebrew/homebrew-bundle\n[`softwareupdate(8)`]: https://www.unix.com/man-page/osx/8/softwareupdate/\n[Quick]: https://github.com/Quick/Quick"
}
