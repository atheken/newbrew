{
  "name": "grayskull",
  "full_name": "grayskull",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Recipe generator for Conda",
  "license": "Apache-2.0",
  "homepage": "https://github.com/conda/grayskull",
  "versions": {
    "stable": "2.3.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/71/93/27ffbfcb57281a6051d738d9c8c35f9748a8b3c1f406249160006fa3aca2/grayskull-2.3.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "41dd1cc94c8b8951571af7628ffa97146ae76e99295918a20d8db84b2f60b5e7"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/grayskull/blobs/sha256:58aa1ddfdffdfa56b056d232ce8cdc6b894e9daa65e201d88875c88e14f7d564",
          "sha256": "58aa1ddfdffdfa56b056d232ce8cdc6b894e9daa65e201d88875c88e14f7d564"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/grayskull/blobs/sha256:d6536f37bede5315f3b466c02093539c9aa2bd073a5776cf3176a23afecedeb4",
          "sha256": "d6536f37bede5315f3b466c02093539c9aa2bd073a5776cf3176a23afecedeb4"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/grayskull/blobs/sha256:97d432c87c3a5fd9990c0edde57e6407c8ac5971d948a7b32c5bc3cee921d242",
          "sha256": "97d432c87c3a5fd9990c0edde57e6407c8ac5971d948a7b32c5bc3cee921d242"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/grayskull/blobs/sha256:328ed596ec3d2e4b4c7a96b09a5ae6ae1d59e2cb688ab3a39393bbd572eadb2d",
          "sha256": "328ed596ec3d2e4b4c7a96b09a5ae6ae1d59e2cb688ab3a39393bbd572eadb2d"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/grayskull/blobs/sha256:de073370cf91052fb2d3cc1d8c8b5611b442fe485759153771608ed87f6a0f93",
          "sha256": "de073370cf91052fb2d3cc1d8c8b5611b442fe485759153771608ed87f6a0f93"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/grayskull/blobs/sha256:c4de219c2c73822ec5243e6d0749c62dffa323e462e80ea52ce8d952e96886a9",
          "sha256": "c4de219c2c73822ec5243e6d0749c62dffa323e462e80ea52ce8d952e96886a9"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/grayskull/blobs/sha256:006c92cdf57f7abfa0e0e91105b2f14c5f2d6f9b2bea78e45dc405fddcb5b849",
          "sha256": "006c92cdf57f7abfa0e0e91105b2f14c5f2d6f9b2bea78e45dc405fddcb5b849"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/grayskull.rb",
  "ruby_source_checksum": {
    "sha256": "2ab85e2180335560c613b90a65f2d296e88c0a80d7c0ea8113aa3f32dbb8a0dc"
  },
  "date_added": "2023-01-15T17:17:23+00:00",
  "readme": "# Grayskull\n-------------\n[![Tests](https://github.com/conda/grayskull/actions/workflows/tests.yml/badge.svg)](https://github.com/conda/grayskull/actions/workflows/tests.yml) [![Deployment (PyPI)](https://github.com/conda/grayskull/actions/workflows/publish_pypi.yml/badge.svg)](https://github.com/conda/grayskull/actions/workflows/publish_pypi.yml)\n\n[![codecov](https://codecov.io/gh/conda/grayskull/branch/master/graph/badge.svg)](https://codecov.io/gh/conda/grayskull) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) ![](https://img.shields.io/badge/python-3.8+-blue.svg) ![](https://img.shields.io/github/license/conda/grayskull.svg) [![PyPI version](https://badge.fury.io/py/grayskull.svg)](https://badge.fury.io/py/grayskull) [![Conda Version](https://img.shields.io/conda/vn/conda-forge/grayskull.svg)](https://anaconda.org/conda-forge/grayskull) [![Gitter](https://badges.gitter.im/conda_grayskull/community.svg)](https://gitter.im/conda_grayskull/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n-------------\n<span align=\"center\">\n    <br>\n    <img src=\"https://static.wikia.nocookie.net/heman/images/3/33/Grayskull.jpg\" align=\"center\" />\n    <br>\n    <i>\"Skeleto<strike>n</strike>r's main goal is to conquer the mysterious fortress of Castle Grayskull, from which He-Man draws his powers. If he succeeds, Skeletor would be able to conquer not only Eternia, but the whole universe.\"</i> </br>Adapted from <a href=https://en.wikipedia.org/wiki/Skeletor>Wikipedia</a>. Image credits: <a href=https://he-man.fandom.com>https://he-man.fandom.com</a>\n</span>\n\n\n-------------\n## Introduction\n\nGrayskull is an automatic conda recipe generator. <br>\nThe main goal of this project is to generate concise recipes\nfor [conda-forge](https://conda-forge.org/).\nThe Grayskull project was created with the intention to eventually replace `conda skeleton`. <br>\nPresently Grayskull can generate recipes for Python packages available on PyPI and also those not published on PyPI but available as GitHub repositories.\nGrayskull can also generate recipes for R packages published on CRAN.\nFuture versions of Grayskull will support recipe generation for packages of other repositories such as Conan and CPAN etc..\n\n## Installation\n\nIt is possible to install this project using `pip`:\n```bash\npip install grayskull\n```\n\nor `conda`, using the ``conda-forge`` channel:\n```bash\nconda install -c conda-forge grayskull\n```\n\nIt is also possible to clone this repo and install it using `pip`:\n```bash\ngit clone https://github.com/conda/grayskull.git\ncd grayskull\npip install -e .\n```\n\n## Usage\n\nIt is pretty simple to use `grayskull`. Just call it, pass the repository\n (`pypi` or `cran`) and the package name.\n\n* Example:\n```bash\ngrayskull pypi pytest\n```\n\nAfter that `grayskull` will create a folder with the same name as the package\nand inside this folder the generated recipe will be present (`meta.yaml`).\n\n* Example with `pytest` (`grayskull pypi pytest`):\n\n![Grayskull CLI](https://github.com/conda/grayskull/raw/main/images/cli_example_grayskull.gif)\n\nIf your package is a GitHub repository just replace the package name with the GitHub repository URL. <br>\nFor example: <br>\n\n```bash\ngrayskull pypi https://github.com/confluentinc/confluent-kafka-python\n```\n\nYou can also generate a recipe from a local sdist archive:\n\n```bash\ngrayskull pypi ./pytest-5.3.5.tar.gz\n```\n\nNote that such a recipe isn't really portable as it will depend on the local path of the\nsdist file. It can be useful if you want to automatically generate a conda package.\n\n### Online Grayskull\n\nIt is also possible to use Grayskull without any installation. You can go to this website [marcelotrevisani.com/grayskull](https://www.marcelotrevisani.com/grayskull) and inform the name and the version (optional) of the package and it will create the recipe for you.\n\n\n## License\nCopyright Marcelo Duarte Trevisani and contributors, 2020-2023.\n\nDistributed under the terms of the Apache 2.0 license, grayskull is free and open source software."
}
