{
  "name": "the_platinum_searcher",
  "full_name": "the_platinum_searcher",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [
    "pt"
  ],
  "versioned_formulae": [],
  "desc": "Multi-platform code-search similar to ack and ag",
  "license": "MIT",
  "homepage": "https://github.com/monochromegane/the_platinum_searcher",
  "versions": {
    "stable": "2.2.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/monochromegane/the_platinum_searcher/archive/v2.2.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "3d5412208644b13723b2b7ca4af0870d25c654e3a76feee846164c51b88240b0"
    },
    "head": {
      "url": "https://github.com/monochromegane/the_platinum_searcher.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/the_platinum_searcher/blobs/sha256:d34acea6e7a4f0bfff85c75756c119ad978a11e72e2901f15e40a107cd1a8564",
          "sha256": "d34acea6e7a4f0bfff85c75756c119ad978a11e72e2901f15e40a107cd1a8564"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/the_platinum_searcher/blobs/sha256:920eca3416a24f405f47f9422797e405768da23008de8ec12f3beb292e8b6be2",
          "sha256": "920eca3416a24f405f47f9422797e405768da23008de8ec12f3beb292e8b6be2"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/the_platinum_searcher/blobs/sha256:0f3097b2d88f4b8479ecb3e3439f6688656fc1c5e20f18a4c300edf9ea953874",
          "sha256": "0f3097b2d88f4b8479ecb3e3439f6688656fc1c5e20f18a4c300edf9ea953874"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/the_platinum_searcher/blobs/sha256:f2f494e7c9a055b112241f2a9d30b260f6aec006382337941c7bb6ea23c5ef74",
          "sha256": "f2f494e7c9a055b112241f2a9d30b260f6aec006382337941c7bb6ea23c5ef74"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/the_platinum_searcher/blobs/sha256:b9f8d4628e265fe8cee61b17d40a0695316940d4805d84ee98de11abc6dc54fa",
          "sha256": "b9f8d4628e265fe8cee61b17d40a0695316940d4805d84ee98de11abc6dc54fa"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/the_platinum_searcher/blobs/sha256:63cc973af4c1fc612acb86c7a928f1680f84db7edfae52f374b95925c00761dc",
          "sha256": "63cc973af4c1fc612acb86c7a928f1680f84db7edfae52f374b95925c00761dc"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/the_platinum_searcher/blobs/sha256:79066cac44fd6cd21b8feadc9737045f98846832f15bd2a2e1fdaae3a8165e6d",
          "sha256": "79066cac44fd6cd21b8feadc9737045f98846832f15bd2a2e1fdaae3a8165e6d"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/the_platinum_searcher/blobs/sha256:6b7fb2ff2ca2b5a0d264a7733a59eb0e1b68e211d15a261f6bbcab5664bb6ff7",
          "sha256": "6b7fb2ff2ca2b5a0d264a7733a59eb0e1b68e211d15a261f6bbcab5664bb6ff7"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/the_platinum_searcher/blobs/sha256:d6ba21397a0538c990656c24ba157c5650ea62a26da823afdba238da37226d3b",
          "sha256": "d6ba21397a0538c990656c24ba157c5650ea62a26da823afdba238da37226d3b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/the_platinum_searcher.rb",
  "ruby_source_checksum": {
    "sha256": "860d8e2ae32ea6746a035c61774911925fe30c1507fd70918dec5ca90698032a"
  },
  "date_added": "2014-06-30T08:07:06+01:00",
  "readme": "# The Platinum Searcher [![Build Status](https://travis-ci.org/monochromegane/the_platinum_searcher.svg?branch=master)](https://travis-ci.org/monochromegane/the_platinum_searcher) [![wercker status](https://app.wercker.com/status/59ef90ac217537abc0994546958037f3/s/master \"wercker status\")](https://app.wercker.com/project/bykey/59ef90ac217537abc0994546958037f3)\n\nA code search tool similar to `ack` and `the_silver_searcher(ag)`. It supports multi platforms and multi encodings.\n\n## Features\n\n- It searches code about 3–5× faster than `ack`.\n- It searches code as fast as `the_silver_searcher(ag)`.\n- It ignores file patterns from your `.gitignore`.\n- It ignores directories with names that start with `.`, eg `.config`. Use `--hidden` option, if you want to search.\n- It searches `UTF-8`, `EUC-JP` and `Shift_JIS` files.\n- It provides binaries for multi platform (macOS, Windows, Linux).\n\n### Benchmarks\n\n```sh\ncd ~/src/github.com/torvalds/linux\nack EXPORT_SYMBOL_GPL 30.18s user 2.32s system  99% cpu 32.613 total # ack\nag  EXPORT_SYMBOL_GPL  1.57s user 1.76s system 311% cpu  1.069 total # ag: It's faster than ack.\npt  EXPORT_SYMBOL_GPL  2.29s user 1.26s system 358% cpu  0.991 total # pt: It's faster than ag!!\n```\n\n## Usage\n\n```sh\n$ # Recursively searches for PATTERN in current directory.\n$ pt PATTERN\n\n$ # You can specify PATH and some OPTIONS.\n$ pt OPTIONS PATTERN PATH\n```\n\n## Configuration\n\nIf you put configuration file on the following directories, pt use option in the file.\n\n- $XDG\\_CONFIG\\_HOME/pt/config.toml\n- $HOME/.ptconfig.toml\n- .ptconfig.toml (current directory)\n\nThe file is TOML format like the following.\n\n```toml\ncolor = true\ncontext = 3\nignore = [\"dir1\", \"dir2\"]\ncolor-path = \"1;34\"\n```\n\nThe options are same as command line options.\n\n## Editor Integration\n\n### Vim + Unite.vim\n\nYou can use pt with [Unite.vim](https://github.com/Shougo/unite.vim).\n\n```vim\nnnoremap <silent> ,g :<C-u>Unite grep:. -buffer-name=search-buffer<CR>\nif executable('pt')\n  let g:unite_source_grep_command = 'pt'\n  let g:unite_source_grep_default_opts = '--nogroup --nocolor'\n  let g:unite_source_grep_recursive_opt = ''\n  let g:unite_source_grep_encoding = 'utf-8'\nendif\n```\n\n### Emacs + pt.el\n\nYou can use pt with [pt.el](https://github.com/bling/pt.el), which can be installed from [MELPA](http://melpa.milkbox.net/).\n\n## Installation\n\n### Developer\n\n```sh\n$ go get -u github.com/monochromegane/the_platinum_searcher/...\n```\n\n### User\n\nDownload from the following url.\n\n- [https://github.com/monochromegane/the_platinum_searcher/releases](https://github.com/monochromegane/the_platinum_searcher/releases)\n\nOr, you can use Homebrew (Only macOS).\n\n```sh\n$ brew install pt\n```\n\n`pt` is an alias for `the_platinum_searcher` in Homebrew.\n\n## Contribution\n\n1. Fork it\n2. Create a feature branch\n3. Commit your changes\n4. Rebase your local changes against the master branch\n5. Run test suite with the `go test ./...` command and confirm that it passes\n6. Run `gofmt -s`\n7. Create new Pull Request\n\n## License\n\n[MIT](https://github.com/monochromegane/the_platinum_searcher/blob/master/LICENSE)\n\n## Author\n\n[monochromegane](https://github.com/monochromegane)"
}
