{
  "name": "rst-lint",
  "full_name": "rst-lint",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "ReStructuredText linter",
  "license": "Unlicense",
  "homepage": "https://github.com/twolfson/restructuredtext-lint",
  "versions": {
    "stable": "1.4.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/48/9c/6d8035cafa2d2d314f34e6cd9313a299de095b26e96f1c7312878f988eec/restructuredtext_lint-1.4.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "1b235c0c922341ab6c530390892eb9e92f90b9b75046063e047cacfb0f050c45"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 2,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/rst-lint/blobs/sha256:977a9d1c0f562445d972e95d59e883d26a7966b18ca3a124577936d8dde74018",
          "sha256": "977a9d1c0f562445d972e95d59e883d26a7966b18ca3a124577936d8dde74018"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/rst-lint/blobs/sha256:977a9d1c0f562445d972e95d59e883d26a7966b18ca3a124577936d8dde74018",
          "sha256": "977a9d1c0f562445d972e95d59e883d26a7966b18ca3a124577936d8dde74018"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/rst-lint/blobs/sha256:977a9d1c0f562445d972e95d59e883d26a7966b18ca3a124577936d8dde74018",
          "sha256": "977a9d1c0f562445d972e95d59e883d26a7966b18ca3a124577936d8dde74018"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/rst-lint/blobs/sha256:c8bbc56f35fe2f218241996e273e173cbb2e19535ca95dd77bf97c6ce6ca5479",
          "sha256": "c8bbc56f35fe2f218241996e273e173cbb2e19535ca95dd77bf97c6ce6ca5479"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/rst-lint/blobs/sha256:c8bbc56f35fe2f218241996e273e173cbb2e19535ca95dd77bf97c6ce6ca5479",
          "sha256": "c8bbc56f35fe2f218241996e273e173cbb2e19535ca95dd77bf97c6ce6ca5479"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/rst-lint/blobs/sha256:c8bbc56f35fe2f218241996e273e173cbb2e19535ca95dd77bf97c6ce6ca5479",
          "sha256": "c8bbc56f35fe2f218241996e273e173cbb2e19535ca95dd77bf97c6ce6ca5479"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/rst-lint/blobs/sha256:c8bbc56f35fe2f218241996e273e173cbb2e19535ca95dd77bf97c6ce6ca5479",
          "sha256": "c8bbc56f35fe2f218241996e273e173cbb2e19535ca95dd77bf97c6ce6ca5479"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/rst-lint/blobs/sha256:680297bd09a922363c112da4ce90736e24c732d5907727684625aa639ac777c3",
          "sha256": "680297bd09a922363c112da4ce90736e24c732d5907727684625aa639ac777c3"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "docutils",
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/rst-lint.rb",
  "ruby_source_checksum": {
    "sha256": "8f0d2e83cb0d672fe1dab439164e1a1f0be88303d7d1c4b2fd25952674effd51"
  },
  "date_added": "2017-12-15T09:27:04+01:00",
  "readme": "restructuredtext-lint\n=====================\n\n.. image:: https://app.travis-ci.com/twolfson/restructuredtext-lint.svg?branch=master\n   :target: https://app.travis-ci.com/twolfson/restructuredtext-lint\n   :alt: Build Status\n\n`reStructuredText`_ `linter`_\n\nThis was created out of frustration with `PyPI`_; it sucks finding out your `reST`_ is invalid **after** uploading it. It is being developed in junction with a `Sublime Text`_ linter.\n\n.. _`reStructuredText`: http://docutils.sourceforge.net/rst.html\n.. _`linter`: http://en.wikipedia.org/wiki/Lint_%28software%29\n.. _`reST`: `reStructuredText`_\n.. _`PyPI`: http://pypi.python.org/\n.. _`Sublime Text`: http://sublimetext.com/\n\nGetting Started\n---------------\nInstall the module with: ``pip install restructuredtext_lint``\n\n.. code:: python\n\n    import restructuredtext_lint\n    errors = restructuredtext_lint.lint(\"\"\"\n    Hello World\n    =======\n    \"\"\")\n\n    # `errors` will be list of system messages\n    # [<system_message: <paragraph...><literal_block...>>]\n    errors[0].message  # Title underline too short.\n\nCLI Utility\n^^^^^^^^^^^\nFor your convenience, we present a CLI utility ``rst-lint`` (also available as ``restructuredtext-lint``).\n\n.. code:: console\n\n    $ rst-lint --help\n    usage: rst-lint [-h] [--version] [--format {text,json}] [--encoding ENCODING]\n                    [--level {debug,info,warning,error,severe}]\n                    [--rst-prolog RST_PROLOG]\n                    path [path ...]\n\n    Lint reStructuredText files. Returns 0 if all files pass linting, 1 for an\n    internal error, and 2 if linting failed.\n\n    positional arguments:\n      path                  File/folder to lint\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --version             show program's version number and exit\n      --format {text,json}  Format of the output (default: \"text\")\n      --encoding ENCODING   Encoding of the input file (e.g. \"utf-8\")\n      --level {debug,info,warning,error,severe}\n                            Minimum error level to report (default: \"warning\")\n      --rst-prolog RST_PROLOG\n                            reStructuredText content to prepend to all files\n                            (useful for substitutions)\n\n    $ rst-lint README.rst\n    WARNING README.rst:2 Title underline too short.\n\nOther tools\n^^^^^^^^^^^\n``restructuredtext-lint`` is also integrated in other tools. A list can be found and updated in our wiki\n\nhttps://github.com/twolfson/restructuredtext-lint/wiki/Integration-in-other-tools\n\nPyPI issues\n^^^^^^^^^^^\nWhile a document may lint cleanly locally, there can be issues when submitted it to `PyPI`_. Here are some common problems:\n\n- Usage of non-builtin lexers (e.g. ``bibtex``) will pass locally but not be recognized/parsable on `PyPI`_\n\n  - This is due to `PyPI`_ not having a non-builtin lexer installed\n  - Please avoid non-builtin lexers to avoid complications\n  - For more information, see `#27`_\n\n- Relative hyperlinks will not work (e.g. ``./UNLICENSE``)\n\n  - According to Stack Overflow, hyperlinks must use a scheme (e.g. ``http``, ``https``) and that scheme must be whitelisted\n\n    - http://stackoverflow.com/a/16594755\n\n  - Please use absolute hyperlinks (e.g. ``https://github.com/twolfson/restructuredtext-lint/blob/master/UNLICENSE``)\n\n.. _`#27`: https://github.com/twolfson/restructuredtext-lint/issues/27\n\nDocumentation\n-------------\n``restructuredtext-lint`` exposes a ``lint`` and ``lint_file`` function\n\n``restructuredtext_lint.lint(content, filepath=None, rst_prolog=None)``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nLint `reStructuredText`_ and return errors\n\n- content ``String`` - `reStructuredText`_ to be linted\n- filepath ``String`` - Optional path to file, this will be returned as the source\n- rst_prolog ``String`` - Optional content to prepend to content, line numbers will be offset to ignore this\n\nReturns:\n\n- errors ``List`` - List of errors\n\n  - Each error is a class from `docutils`_ with the following attrs\n\n    - line ``Integer|None`` - Line where the error occurred\n\n      - On rare occasions, this will be ``None`` (e.g. anonymous link mismatch)\n\n    - source ``String`` - ``filepath`` provided in parameters\n    - level ``Integer`` - Level of the warning\n\n      - Levels represent 'info': 1, 'warning': 2, 'error': 3, 'severe': 4\n\n    - type ``String`` - Noun describing the error level\n\n      - Levels can be 'INFO', 'WARNING', 'ERROR', or 'SEVERE'\n    - message ``String`` - Error message\n    - full_message ``String`` - Error message and source lines where the error occurred\n\n  - It should be noted that ``level``, ``type``, ``message``, and ``full_message`` are custom attrs added onto the original ``system_message``\n\n.. _`docutils`: http://docutils.sourceforge.net/\n\n``restructuredtext_lint.lint_file(filepath, encoding=None, *args, **kwargs)``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nLint a `reStructuredText`_ file and return errors\n\n- filepath ``String`` - Path to file for linting\n- encoding ``String`` - Encoding to read file in as\n\n  - When ``None`` is provided, it will use OS default as provided by `locale.getpreferredencoding`_\n  - The list of supported encodings can be found at http://docs.python.org/2/library/codecs.html#standard-encodings\n\n- ``*args`` - Additional arguments to be passed to ``lint``\n- ``**kwargs`` - Additional keyword arguments to be passed to ``lint``\n\n.. _`locale.getpreferredencoding`: http://docs.python.org/2/library/locale.html#locale.getpreferredencoding\n\nReturns: Same structure as ``restructuredtext_lint.lint``\n\nExtension\n---------\nUnder the hood, we leverage `docutils`_ for parsing reStructuredText documents. `docutils`_ supports adding new directives and roles via ``register_directive`` and ``register_role``.\n\nSphinx\n^^^^^^\nUnfortunately due to customizations in `Sphinx's parser`_ we cannot include all of its directives/roles (see `#29`_). However, we can include some of them as one-offs. Here is an example of adding a directive from `Sphinx`_.\n\n.. _`Sphinx`: http://sphinx-doc.org/\n.. _`Sphinx's parser`:  Sphinx_\n.. _`#29`: https://github.com/twolfson/restructuredtext-lint/issues/29#issuecomment-243456787\n\nhttps://github.com/sphinx-doc/sphinx/blob/1.3/sphinx/directives/code.py\n\n**sphinx.rst**\n\n.. code:: rst\n\n    Hello\n    =====\n    World\n\n    .. highlight:: python\n\n        Hello World!\n\n**sphinx.py**\n\n.. code:: python\n\n    # Load in our dependencies\n    from docutils.parsers.rst.directives import register_directive\n    from sphinx.directives.code import Highlight\n    import restructuredtext_lint\n\n    # Load our new directive\n    register_directive('highlight', Highlight)\n\n    # Lint our README\n    errors = restructuredtext_lint.lint_file('docs/sphinx/README.rst')\n    print errors[0].message # Error in \"highlight\" directive: no content permitted.\n\nExamples\n--------\nHere is an example of all invalid properties\n\n.. code:: python\n\n    rst = \"\"\"\n    Some content.\n\n    Hello World\n    =======\n    Some more content!\n    \"\"\"\n    errors = restructuredtext_lint.lint(rst, 'myfile.py')\n    errors[0].line  # 5\n    errors[0].source  # myfile.py\n    errors[0].level  # 2\n    errors[0].type  # WARNING\n    errors[0].message  # Title underline too short.\n    errors[0].full_message  # Title underline too short.\n                            #\n                            # Hello World\n                            # =======\n\nContributing\n------------\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Test via ``nosetests``.\n\nDonating\n--------\nSupport this project and `others by twolfson`_ via `donations`_.\n\nhttp://twolfson.com/support-me\n\n.. _`others by twolfson`: http://twolfson.com/projects\n.. _donations: http://twolfson.com/support-me\n\nUnlicense\n---------\nAs of Nov 22 2013, Todd Wolfson has released this repository and its contents to the public domain.\n\nIt has been released under the `UNLICENSE`_.\n\n.. _UNLICENSE: https://github.com/twolfson/restructuredtext-lint/blob/master/UNLICENSE"
}
