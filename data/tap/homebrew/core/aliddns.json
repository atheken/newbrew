{
  "name": "aliddns",
  "full_name": "aliddns",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Aliyun(Alibaba Cloud) ddns for golang",
  "license": "MIT",
  "homepage": "https://github.com/OpenIoTHub/aliddns",
  "versions": {
    "stable": "0.0.20",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/OpenIoTHub/aliddns.git",
      "tag": "v0.0.20",
      "revision": "b2fd114d9d9c0cc9e01a1f4d794a5d609a2c350a",
      "checksum": null
    },
    "head": {
      "url": "https://github.com/OpenIoTHub/aliddns.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aliddns/blobs/sha256:51af64187981042422c57f4a4e41e977ddf974a3e22eb5b38c7863131979f0ae",
          "sha256": "51af64187981042422c57f4a4e41e977ddf974a3e22eb5b38c7863131979f0ae"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aliddns/blobs/sha256:51af64187981042422c57f4a4e41e977ddf974a3e22eb5b38c7863131979f0ae",
          "sha256": "51af64187981042422c57f4a4e41e977ddf974a3e22eb5b38c7863131979f0ae"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aliddns/blobs/sha256:51af64187981042422c57f4a4e41e977ddf974a3e22eb5b38c7863131979f0ae",
          "sha256": "51af64187981042422c57f4a4e41e977ddf974a3e22eb5b38c7863131979f0ae"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aliddns/blobs/sha256:af66b16954c12eb3e2b94da43422296f7c985824591224dc067cbc09ce4ba1ef",
          "sha256": "af66b16954c12eb3e2b94da43422296f7c985824591224dc067cbc09ce4ba1ef"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aliddns/blobs/sha256:af66b16954c12eb3e2b94da43422296f7c985824591224dc067cbc09ce4ba1ef",
          "sha256": "af66b16954c12eb3e2b94da43422296f7c985824591224dc067cbc09ce4ba1ef"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aliddns/blobs/sha256:af66b16954c12eb3e2b94da43422296f7c985824591224dc067cbc09ce4ba1ef",
          "sha256": "af66b16954c12eb3e2b94da43422296f7c985824591224dc067cbc09ce4ba1ef"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aliddns/blobs/sha256:4c0792941223e0d472adba98a65cddc7cbd9b62ad3f0eea6417b6c0780810ef6",
          "sha256": "4c0792941223e0d472adba98a65cddc7cbd9b62ad3f0eea6417b6c0780810ef6"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": {
    "run": [
      "/home/linuxbrew/.linuxbrew/opt/aliddns/bin/aliddns",
      "-c",
      "/home/linuxbrew/.linuxbrew/etc/aliddns/aliddns.yaml"
    ],
    "run_type": "immediate",
    "keep_alive": {
      "always": true
    },
    "log_path": "/home/linuxbrew/.linuxbrew/var/log/aliddns.log",
    "error_log_path": "/home/linuxbrew/.linuxbrew/var/log/aliddns.log"
  },
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/aliddns.rb",
  "ruby_source_checksum": {
    "sha256": "4e797af7310ed60186b1a98d8e554d934b6f6785c0f97ee8d7f91d8a15ef087c"
  },
  "date_added": "2021-01-22T22:41:19+00:00",
  "readme": "# aliddns\n[![Build Status](https://travis-ci.com/OpenIoTHub/aliddns.svg?branch=master)](https://travis-ci.com/OpenIoTHub/aliddns)\n\n[![Get it from the Snap Store](https://snapcraft.io/static/images/badges/en/snap-store-white.svg)](https://snapcraft.io/aliddns)\n\n```sh\naliddns -c /path/to/config/file/aliddns.yaml\n```\nor just:\n```\naliddns\n```\n(use default config file: ./aliddns.yaml)\n\nor:\n```sh\n aliddns run -i myid -k mykey -m iothub.cloud -s www -c 60\n```\n-i {AccessId} -k {AccessKey} -m {MainDomain} -s {SubDomainName} -c {CheckUpdateInterval}\n\nYou can install the pre-compiled binary (in several different ways),\nuse Docker.\n\nHere are the steps for each of them:\n\n## Install the pre-compiled binary\n\n**homebrew tap** :\n\n```sh\n$ brew install OpenIoTHub/tap/aliddns\n```\n\n**homebrew** (may not be the latest version):\n\n```sh\n$ brew install aliddns\n```\n\n**snapcraft**:\n\n```sh\n$ sudo snap install aliddns\n```\nconfig file path: /root/snap/aliddns/current/aliddns.yaml\n\nedit config file then:\n```sh\nsudo snap restart aliddns\n```\n\n**scoop**:\n\n```sh\n$ scoop bucket add OpenIoTHub https://github.com/OpenIoTHub/scoop-bucket.git\n$ scoop install aliddns\n```\n\n**deb/rpm**:\n\nDownload the `.deb` or `.rpm` from the [releases page][releases] and\ninstall with `dpkg -i` and `rpm -i` respectively.\n\nconfig file path: /etc/aliddns/aliddns.yaml\n\nedit config file then:\n```sh\nsudo systemctl restart aliddns\n```\n\n**Shell script**:\n\n```sh\n$ curl -sfL https://install.goreleaser.com/github.com/OpenIoTHub/aliddns.sh | sh\n```\n\n**manually**:\n\nDownload the pre-compiled binaries from the [releases page][releases] and\ncopy to the desired location.\n\n## Running with Docker\n\nYou can also use it within a Docker container. To do that, you'll need to\nexecute something more-or-less like the following:\n\n```sh\n$ docker run openiothub/aliddns:latest run -i {AccessId} -k {AccessKey} -m {MainDomain} -s {SubDomainName} -c {CheckUpdateInterval}\n```\nexample:\n```sh\n$ docker run openiothub/aliddns:latest run -i myid -k mykey -m iothub.cloud -s www -c 60\n```\nNote that the image will almost always have the last stable Go version.\n\n[releases]: https://github.com/OpenIoTHub/aliddns/releases"
}
