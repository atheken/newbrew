{
  "name": "openfortivpn",
  "full_name": "openfortivpn",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Open Fortinet client for PPP+SSL VPN tunnel services",
  "license": "GPL-3.0-or-later with openvpn-openssl-exception",
  "homepage": "https://github.com/adrienverge/openfortivpn",
  "versions": {
    "stable": "1.20.5",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/adrienverge/openfortivpn/archive/v1.20.5.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "82581408fd3fff3e017ad188e648ce6e935febc97f6bcd96945372638bfc7f13"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/openfortivpn/blobs/sha256:bb5a5b6b5ab6973248fc31e515dd0c5aacd6b561da97147fad765147bad00cc2",
          "sha256": "bb5a5b6b5ab6973248fc31e515dd0c5aacd6b561da97147fad765147bad00cc2"
        },
        "arm64_monterey": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/openfortivpn/blobs/sha256:f9156532189d835e4f553e9a3a0f972b2a6d291f989e9081c60212d89b386d27",
          "sha256": "f9156532189d835e4f553e9a3a0f972b2a6d291f989e9081c60212d89b386d27"
        },
        "arm64_big_sur": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/openfortivpn/blobs/sha256:bdb736636517a29186dbec1df79a6f052121b67a6303506a6c06f141844f3c2a",
          "sha256": "bdb736636517a29186dbec1df79a6f052121b67a6303506a6c06f141844f3c2a"
        },
        "ventura": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/openfortivpn/blobs/sha256:762b9c5121cac1f784cc5c13de3bafda6d2f0051b617c922a1c6e6ac8c0d596d",
          "sha256": "762b9c5121cac1f784cc5c13de3bafda6d2f0051b617c922a1c6e6ac8c0d596d"
        },
        "monterey": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/openfortivpn/blobs/sha256:144c5ac14ba1feb3830233863ab58b22483bc305aee92f6a8c8273a9480a814e",
          "sha256": "144c5ac14ba1feb3830233863ab58b22483bc305aee92f6a8c8273a9480a814e"
        },
        "big_sur": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/openfortivpn/blobs/sha256:709394e33207ebbe85a3d2d38e3957908d85c7eabc229e8038d32cc17478d328",
          "sha256": "709394e33207ebbe85a3d2d38e3957908d85c7eabc229e8038d32cc17478d328"
        },
        "x86_64_linux": {
          "cellar": "/home/linuxbrew/.linuxbrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/openfortivpn/blobs/sha256:cbebe377274c394f94f8b570056c549486abd6d5541e4f7d942dbfd4582705c9",
          "sha256": "cbebe377274c394f94f8b570056c549486abd6d5541e4f7d942dbfd4582705c9"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "autoconf",
    "automake",
    "pkg-config"
  ],
  "dependencies": [
    "openssl@3"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": {
    "run": [
      "/home/linuxbrew/.linuxbrew/opt/openfortivpn/bin/openfortivpn",
      "-c",
      "/home/linuxbrew/.linuxbrew/etc/openfortivpn/openfortivpn/config"
    ],
    "run_type": "immediate",
    "keep_alive": {
      "always": true
    },
    "require_root": true,
    "log_path": "/home/linuxbrew/.linuxbrew/var/log/openfortivpn.log",
    "error_log_path": "/home/linuxbrew/.linuxbrew/var/log/openfortivpn.log"
  },
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/openfortivpn.rb",
  "ruby_source_checksum": {
    "sha256": "b812d92691615d9eb790c4605c58c3c1a472f34bbf988f150a69b71058bc861d"
  },
  "date_added": "2017-06-26T06:42:34-07:00",
  "readme": "openfortivpn\n============\n\nopenfortivpn is a client for PPP+SSL VPN tunnel services.\nIt spawns a pppd process and operates the communication between the gateway and\nthis process.\n\nIt is compatible with Fortinet VPNs.\n\nUsage\n-----\n\n```shell\nman openfortivpn\n```\n\nExamples\n--------\n\n* Simply connect to a VPN:\n  ```shell\n  openfortivpn vpn-gateway:8443 --username=foo\n  ```\n\n* Connect to a VPN using an authentication realm:\n  ```shell\n  openfortivpn vpn-gateway:8443 --username=foo --realm=bar\n  ```\n\n* Store password securely with a pinentry program:\n  ```shell\n  openfortivpn vpn-gateway:8443 --username=foo --pinentry=pinentry-mac\n  ```\n\n* Connect with a user certificate and no password:\n  ```shell\n  openfortivpn vpn-gateway:8443 --username= --password= --user-cert=cert.pem --user-key=key.pem\n  ```\n\n* Don't set IP routes and don't add VPN nameservers to `/etc/resolv.conf`:\n  ```shell\n  openfortivpn vpn-gateway:8443 -u foo --no-routes --no-dns --pppd-no-peerdns\n  ```\n\n* Using a configuration file:\n  ```shell\n  openfortivpn -c /etc/openfortivpn/my-config\n  ```\n\n  With `/etc/openfortivpn/my-config` containing:\n  ```ini\n  host = vpn-gateway\n  port = 8443\n  username = foo\n  set-dns = 0\n  pppd-use-peerdns = 0\n  # X509 certificate sha256 sum, trust only this one!\n  trusted-cert = e46d4aff08ba6914e64daa85bc6112a422fa7ce16631bff0b592a28556f993db\n  ```\n\n* For the full list of config options, see the `CONFIGURATION` section of\n  ```shell\n  man openfortivpn\n  ```\n\nSmartcard\n---------\n\nSmartcard support needs `openssl pkcs engine` and `opensc` to be installed.\nThe pkcs11-engine from libp11 needs to be compiled with p11-kit-devel installed.\nCheck [#464](https://github.com/adrienverge/openfortivpn/issues/464) for a discussion\nof known issues in this area.\n\nTo make use of your smartcard put at least `pkcs11:` to the user-cert config or commandline\noption. It takes the full or a partial PKCS#11 token URI.\n\n```ini\nuser-cert = pkcs11:\nuser-cert = pkcs11:token=someuser\nuser-cert = pkcs11:model=PKCS%2315%20emulated;manufacturer=piv_II;serial=012345678;token=someuser\nusername =\npassword =\n```\n\nIn most cases `user-cert = pkcs11:` will do it, but if needed you can get the token-URI\nwith `p11tool --list-token-urls`.\n\nMultiple readers are currently not supported.\n\nSmartcard support has been tested with Yubikey under Linux, but other PIV enabled\nsmartcards may work too. On Mac OS X Mojave it is known that the pkcs engine-by-id\nis not found.\n\nInstalling\n----------\n\n### Installing existing packages\n\nSome Linux distributions provide `openfortivpn` packages:\n* [Fedora / CentOS](https://packages.fedoraproject.org/pkgs/openfortivpn)\n* [openSUSE / SLE](https://software.opensuse.org/package/openfortivpn)\n* [Gentoo](https://packages.gentoo.org/packages/net-vpn/openfortivpn)\n* [NixOS](https://github.com/NixOS/nixpkgs/tree/master/pkgs/tools/networking/openfortivpn)\n* [Arch Linux](https://archlinux.org/packages/extra/x86_64/openfortivpn)\n* [Debian](https://packages.debian.org/stable/openfortivpn)\n* [Ubuntu](https://packages.ubuntu.com/search?keywords=openfortivpn)\n* [Solus](https://dev.getsol.us/source/openfortivpn/)\n\nOn macOS both [Homebrew](https://formulae.brew.sh/formula/openfortivpn) and\n[MacPorts](https://ports.macports.org/port/openfortivpn)\nprovide an `openfortivpn` package.\nEither [install Homebrew](https://brew.sh/) then install openfortivpn:\n```shell\n# Install 'Homebrew'\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n# Install 'openfortivpn'\nbrew install openfortivpn\n```\n\nor [install MacPorts](https://www.macports.org/install.php) then install openfortivpn:\n```shell\n# Install 'openfortivpn'\nsudo port install openfortivpn\n```\n\nA more complete overview can be obtained from [repology](https://repology.org/project/openfortivpn/versions).\n\n### Building and installing from source\n\nFor other distros, you'll need to build and install from source:\n\n1.  Install build dependencies.\n\n    * RHEL/CentOS/Fedora: `gcc` `automake` `autoconf` `openssl-devel` `make` `pkg-config`\n    * Debian/Ubuntu: `gcc` `automake` `autoconf` `libssl-dev` `make` `pkg-config`\n    * Arch Linux: `gcc` `automake` `autoconf` `openssl` `pkg-config`\n    * Gentoo Linux: `net-dialup/ppp` `pkg-config`\n    * openSUSE: `gcc` `automake` `autoconf` `libopenssl-devel` `pkg-config`\n    * macOS (Homebrew): `automake` `autoconf` `openssl@1.1` `pkg-config`\n    * FreeBSD: `automake` `autoconf` `libressl` `pkgconf`\n\n    On Linux, if you manage your kernel yourself, ensure to compile those modules:\n    ```text\n    CONFIG_PPP=m\n    CONFIG_PPP_ASYNC=m\n    ```\n\n    On macOS, install 'Homebrew' to install the build dependencies:\n    ```shell\n    # Install 'Homebrew'\n    /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n    # Install Dependencies\n    brew install automake autoconf openssl@1.1 pkg-config\n\n    # You may need to make this openssl available to compilers and pkg-config\n    export LDFLAGS=\"-L/usr/local/opt/openssl/lib $LDFLAGS\"\n    export CPPFLAGS=\"-I/usr/local/opt/openssl/include $CPPFLAGS\"\n    export PKG_CONFIG_PATH=\"/usr/local/opt/openssl/lib/pkgconfig:$PKG_CONFIG_PATH\"\n    ```\n\n2.  Build and install.\n\n    ```shell\n    ./autogen.sh\n    ./configure --prefix=/usr/local --sysconfdir=/etc\n    make\n    sudo make install\n    ```\n\n    If you need to specify the openssl location you can set the `$PKG_CONFIG_PATH`\n    environment variable. For fine-tuning check the available configure arguments\n    with `./configure --help` especially when you are cross compiling.\n\n    Finally, install runtime dependency `ppp` or `pppd`.\n\nRunning as root?\n----------------\n\nopenfortivpn needs elevated privileges at three steps during tunnel set up:\n\n* when spawning a `/usr/sbin/pppd` process;\n* when setting IP routes through VPN (when the tunnel is up);\n* when adding nameservers to `/etc/resolv.conf` (when the tunnel is up).\n\nFor these reasons, you need to use `sudo openfortivpn`.\nIf you need it to be usable by non-sudoer users, you might consider adding an\nentry in `/etc/sudoers` or a file under `/etc/sudoers.d`.\n\nFor example:\n```shell\nvisudo -f /etc/sudoers.d/openfortivpn\n```\n```text\nCmnd_Alias  OPENFORTIVPN = /usr/bin/openfortivpn\n\n%adm       ALL = (ALL) OPENFORTIVPN\n```\nAdapt the above example by changing the `openfortivpn` path or choosing\na group different from `adm` - such as a dedicated `openfortivpn` group.\n\n**Warning**: Make sure only trusted users can run openfortivpn as root!\nAs described in [#54](https://github.com/adrienverge/openfortivpn/issues/54),\na malicious user could use `--pppd-plugin` and `--pppd-log` options to divert\nthe program's behaviour.\n\nSSO/SAML/2FA\n------------\n\nIn some cases, the server may require the VPN client to load and interact\nwith a web page containing JavaScript. Depending on the complexity of the\nweb page, interpreting the web page might be beyond the reach of a command\nline program such as openfortivpn.\n\nIn such cases, you may use an external program spawning a full-fledged\nweb browser such as\n[openfortivpn-webview](https://github.com/gm-vm/openfortivpn-webview)\nto authenticate and retrieve a session cookie. This cookie can be fed\nto openfortivpn using option `--cookie-on-stdin`. Obviously, such a\nsolution requires a graphic session.\n\nContributing\n------------\n\nFeel free to make pull requests!\n\nC coding style should follow the\n[Linux kernel coding style](https://www.kernel.org/doc/html/latest/process/coding-style.html)."
}
