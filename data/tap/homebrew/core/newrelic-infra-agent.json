{
  "name": "newrelic-infra-agent",
  "full_name": "newrelic-infra-agent",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "New Relic infrastructure agent",
  "license": "Apache-2.0",
  "homepage": "https://github.com/newrelic/infrastructure-agent",
  "versions": {
    "stable": "1.45.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/newrelic/infrastructure-agent.git",
      "tag": "1.45.0",
      "revision": "1cfd539a4796a48638fcb243bc8a713847b1fc6f",
      "checksum": null
    },
    "head": {
      "url": "https://github.com/newrelic/infrastructure-agent.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/newrelic-infra-agent/blobs/sha256:7d9a3a57caa4303d76400585c826682f9a6de618fc361c3facd2198a158e40de",
          "sha256": "7d9a3a57caa4303d76400585c826682f9a6de618fc361c3facd2198a158e40de"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/newrelic-infra-agent/blobs/sha256:1fcadf3639ffe69f4ee362ea05a516026673a23ff26d1aff7ca130fe74014ee2",
          "sha256": "1fcadf3639ffe69f4ee362ea05a516026673a23ff26d1aff7ca130fe74014ee2"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/newrelic-infra-agent/blobs/sha256:8cada90d54b4119c40909f75feca4293e768f6e40b928b876ba9ad84163bb534",
          "sha256": "8cada90d54b4119c40909f75feca4293e768f6e40b928b876ba9ad84163bb534"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/newrelic-infra-agent/blobs/sha256:e3515887826b85f2fa7e79d4de497f988bb3108169825ba014664ed4c13dbb52",
          "sha256": "e3515887826b85f2fa7e79d4de497f988bb3108169825ba014664ed4c13dbb52"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/newrelic-infra-agent/blobs/sha256:17dca9a3a760486db59d9ae28c46edeea0642a64d3291bf0e0e0e4c4b59457ab",
          "sha256": "17dca9a3a760486db59d9ae28c46edeea0642a64d3291bf0e0e0e4c4b59457ab"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/newrelic-infra-agent/blobs/sha256:45abc7efcb4eb5512e3b2c5956bb386ea3f1bf6f86c5da5086b378120628fb4f",
          "sha256": "45abc7efcb4eb5512e3b2c5956bb386ea3f1bf6f86c5da5086b378120628fb4f"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/newrelic-infra-agent/blobs/sha256:9f07c1b288074fc120c2da65730e8d41c32fd478e741e8c808213b34e32e3791",
          "sha256": "9f07c1b288074fc120c2da65730e8d41c32fd478e741e8c808213b34e32e3791"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": true,
  "service": {
    "run": [
      "/home/linuxbrew/.linuxbrew/opt/newrelic-infra-agent/bin/newrelic-infra-service",
      "-config",
      "/home/linuxbrew/.linuxbrew/etc/newrelic-infra/newrelic-infra.yml"
    ],
    "run_type": "immediate",
    "log_path": "/home/linuxbrew/.linuxbrew/var/log/newrelic-infra/newrelic-infra.log",
    "error_log_path": "/home/linuxbrew/.linuxbrew/var/log/newrelic-infra/newrelic-infra.stderr.log"
  },
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/newrelic-infra-agent.rb",
  "ruby_source_checksum": {
    "sha256": "8ac7620c0f69aa92c84b6edd4ce2fce19d5a5edd57735bbb129aef180df0577c"
  },
  "date_added": "2021-08-17T18:18:07+00:00",
  "readme": "<a href=\"https://opensource.newrelic.com/oss-category/#community-plus\"><picture><source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/newrelic/opensource-website/raw/main/src/images/categories/dark/Community_Plus.png\"><source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/newrelic/opensource-website/raw/main/src/images/categories/Community_Plus.png\"><img alt=\"New Relic Open Source community plus project banner.\" src=\"https://github.com/newrelic/opensource-website/raw/main/src/images/categories/Community_Plus.png\"></picture></a>\n\n![Build Status](https://github.com/newrelic/infrastructure-agent/actions/workflows/test.yml/badge.svg)\n[![Coverage Status](https://coveralls.io/repos/github/newrelic/infrastructure-agent/badge.svg?branch=master)](https://coveralls.io/github/newrelic/infrastructure-agent?branch=master)\n\n# New Relic infrastructure agent\n\nThe infrastructure agent (infra-agent) collects inventory data and metrics of your hosts and sends it to the New Relic platform. \n\n[New Relic's infrastructure monitoring](https://docs.newrelic.com/docs/infrastructure/new-relic-infrastructure/get-started/introduction-new-relic-infrastructure) provides flexible,\ndynamic monitoring of your entire infrastructure, from services running in the cloud or on dedicated hosts to containers running in orchestrated environments.\n\n- [Compatibility and requirements](#compatibility-and-requirements)\n  - [Set up your license key](#set-up-your-license-key)\n- [Compile and build the agent](#compile-and-build-the-agent)\n- [Run the agent](#run-the-agent)\n- [Use the agent](#use-the-agent)\n- [Testing](#testing)\n- [Documentation](#documentation)\n- [To do](#to-do)\n- [Support](#support)\n- [Privacy](#privacy)\n- [Contribute](#contribute)\n- [License](#license)\n\n## Compatibility and requirements\n\nGo 1.11 or higher is required to build the infrastructure agent.\n\nYou can build the agent for any OS and architecture [supported by Go](https://golang.org/doc/install#requirements);\nNew Relic does not provide support for all of them.\nFor more information on operating systems supported by New Relic, see the [agent compatibility docs](https://docs.newrelic.com/docs/infrastructure/new-relic-infrastructure/getting-started/compatibility-requirements-new-relic-infrastructure).\n\n### Set up your license key\n\nBefore using the agent, you need to add the [New Relic license key](https://docs.newrelic.com/docs/accounts/install-new-relic/account-setup/license-key) to the `newrelic-infra.yml` configuration file.\nThe default location is:\n\n* Linux: `/etc/newrelic-infra.yml`\n* Windows: `C:\\Program Files\\New Relic\\newrelic-infra\\newrelic-infra.yml`\n\nFor more information on configuration methods, precedence, and structure, see the [Configure the Infrastructure agent](https://docs.newrelic.com/docs/infrastructure/install-configure-infrastructure/configuration/configure-infrastructure-agent) document.\n\n## Compile and build the agent\n\nThis repository contains a number of scripts that facilitate building `infra-agent` for environments supported by New Relic: Linux, Windows, and Docker. \n\nTo build the agent for architectures and OSes different than the one where the build is running, set the [Go environment variables](https://golang.org/cmd/go/#hdr-Environment_variables) to target the desired OS/Architecture combination. For example:\n\n```bash\n$ make dist-for-os GOOS=linux\n```\n\nTo compile and build the agent run these commands:\n\n* Linux: \n\n  ```bash\n  $ make compile # On CentOS 5: make compile-centos-5\n  $ make dist\n  ```\n* Windows:\n  ```powershell\n  PS C:\\> ./win_build.ps1\n  ```\n* Docker: see the [instructions](build/container/README.md) for building a Docker image.\n\n> To build the agent on CentOS 5 use Go 1.9\n\n## Run the agent\n\nOnce you've built the agent, you'll find the following binary files inside the `target/bin/{OS_ARCH}` directory:\n- `newrelic-infra`: Main process of the agent, tasked with gathering host data and running [integrations](https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list).\n- `newrelic-infra-service`: Parent process that looks after the main process, making sure it executes and stays up.\n- `newrelic-infra-ctl`: Troubleshooting utility that enables verbose logs and executes health checks. For more information, see [Troubleshooting a running agent](https://docs.newrelic.com/docs/infrastructure/install-configure-manage-infrastructure/manage-your-agent/troubleshoot-running-agent).\n\nThe agent could run in [root/privileged/unprivileged/administrator(win) mode](https://docs.newrelic.com/docs/infrastructure/install-configure-infrastructure/linux-installation/linux-agent-running-modes).\n\n\n## Use the agent\n\nYou can [start, stop, restart, and check](https://docs.newrelic.com/docs/infrastructure/new-relic-infrastructure/configuration/start-stop-restart-check-infrastructure-agent-status) the Infrastructure agent from the command line. \n\nFor more information, [see our official documentation](https://docs.newrelic.com/docs/infrastructure/install-configure-manage-infrastructure).\n\n## Testing\n\nTo execute unit tests, run this command:\n\n```bash\n$ make test\n```\n\nYou can run a specific test by invoking `go` (which is also how you can run tests on Windows):\n```bash\n$ go test -race -run ''      # Run all tests.\n$ go test -race -run Foo     # Run top-level tests matching \"Foo\", such as \"TestFooBar\".\n$ go test -race -run Foo/A=  # For top-level tests matching \"Foo\", run subtests matching \"A=\".\n$ go test -race -run /A=1    # For all top-level tests, run subtests matching \"A=1\".\n```\n\nFor more information, see [Testing](https://golang.org/pkg/testing/) in the official Go docs.\n\n## Automated tests\n\nPackaging and harvest tests can be run in an automated way using ansible. \n\n[Packaging tests](test/packaging/ansible/README.md)\n\n[Harvest tests](test/harvest/ansible/README.md)\n\nIn order to spin ec2 instances and run these tests automated tests ansible project can be used.\n\n[Automated tests](test/automated/ansible/README.md)\n\nYou can use make targets to run spin instances, run tests and terminate instances.\n\n```bash\n# spin instances, run tests and terminate instances\nmake test/automated\n```\n\nIndividual targets:\n```bash\n# provision ec2 instances (test/automated/ansible/inventory.ec2 will be created)\nmake test/automated/provision\n\n# run harvest tests using test/automated/ansible/inventory.ec2 inventory\nmake test/automated/harvest\n\n# run packaging tests using test/automated/ansible/inventory.ec2 inventory\nmake test/automated/packaging\n\n# run packaging docker tests using test/automated/ansible/inventory.ec2 inventory\nmake test/automated/packaging-docker\n\n# terminate instances in test/automated/ansible/inventory.ec2\nmake test/automated/termination\n```\n\n## Documentation\n\nFind more documentation about the overall architecture, components, and workflows in [the docs\ndirectory](docs).\n\n## To do\n\nProvide full CI via GitHub Actions:\n- Integrations tests pipeline\n  * Platform tests\n  * Window tests & builds\n  * Installation tests\n  * Fuzz testing\n\n## Support\n\nShould you need assistance with New Relic products, you are in good hands with several support diagnostic tools and support channels.\n\n>New Relic offers NRDiag, [a client-side diagnostic utility](https://docs.newrelic.com/docs/using-new-relic/cross-product-functions/troubleshooting/new-relic-diagnostics) that automatically detects common problems with New Relic agents. If NRDiag detects a problem, it suggests troubleshooting steps. NRDiag can also automatically attach troubleshooting data to a New Relic Support ticket. Remove this section if it doesn't apply.\n\nIf the issue has been confirmed as a bug or is a feature request, file a GitHub issue.\n\n**Support Channels**\n\n* [New Relic Documentation](https://docs.newrelic.com): Comprehensive guidance for using our platform\n* [New Relic Community](https://forum.newrelic.com/: The best place to engage in troubleshooting questions\n* [New Relic Developer](https://developer.newrelic.com/): Resources for building a custom observability applications\n* [New Relic University](https://learn.newrelic.com/): A range of online training for New Relic users of every level\n* [New Relic Technical Support](https://support.newrelic.com/) 24/7/365 ticketed support. Read more about our [Technical Support Offerings](https://docs.newrelic.com/docs/licenses/license-information/general-usage-licenses/support-plan).\n\n## Privacy\n\nAt New Relic we take your privacy and the security of your information seriously, and are committed to protecting your information. We must emphasize the importance of not sharing personal data in public forums, and ask all users to scrub logs and diagnostic information for sensitive information, whether personal, proprietary, or otherwise.\n\nWe define “Personal Data” as any information relating to an identified or identifiable individual, including, for example, your name, phone number, post code or zip code, Device ID, IP address, and email address.\n\nFor more information, review [New Relic’s General Data Privacy Notice](https://newrelic.com/termsandconditions/privacy).\n\n## Contribute\n\nWe encourage your contributions to improve this project! Keep in mind that when you submit your pull request, you'll need to sign the CLA via the click-through using CLA-Assistant. You only have to sign the CLA one time per project.\n\nIf you have any questions, or to execute our corporate CLA (which is required if your contribution is on behalf of a company), drop us an email at opensource@newrelic.com.\n\n**A note about vulnerabilities**\n\nAs noted in our [security policy](../../security/policy), New Relic is committed to the privacy and security of our customers and their data. We believe that providing coordinated disclosure by security researchers and engaging with the security community are important means to achieve our security goals.\n\nIf you believe you have found a security vulnerability in this project or any of New Relic's products or websites, we welcome and greatly appreciate you reporting it to New Relic through [HackerOne](https://hackerone.com/newrelic).\n\nIf you would like to contribute to this project, review [these guidelines](./CONTRIBUTING.md).\n\nTo all contributors, we thank you!  Without your contribution, this project would not be what it is today.\n\n## License\n\ninfrastructure-agent is licensed under the [Apache 2.0](http://apache.org/licenses/LICENSE-2.0.txt) License."
}
