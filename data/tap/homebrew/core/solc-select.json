{
  "name": "solc-select",
  "full_name": "solc-select",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Manage multiple Solidity compiler versions",
  "license": "AGPL-3.0-only",
  "homepage": "https://github.com/crytic/solc-select",
  "versions": {
    "stable": "1.0.4",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/60/a0/2a2bfbbab1d9bd4e1a24e3604c30b5d6f84219238f3c98f06191faf5d019/solc-select-1.0.4.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "db7b9de009af6de3a5416b80bbe5b6d636bf314703c016319b8c1231e248a6c7"
    },
    "head": {
      "url": "https://github.com/crytic/solc-select.git",
      "branch": "dev"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/solc-select/blobs/sha256:33c9c5baba1102e62d30fe93d47e0ae3c88e1264880a365afd794000281c9191",
          "sha256": "33c9c5baba1102e62d30fe93d47e0ae3c88e1264880a365afd794000281c9191"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/solc-select/blobs/sha256:e81a047baa31cc208e54317b5a6dfa3a9259b306a4f71c2fc7db6bba12636782",
          "sha256": "e81a047baa31cc208e54317b5a6dfa3a9259b306a4f71c2fc7db6bba12636782"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/solc-select/blobs/sha256:b4ddd9ff9c92f38908bfd92bc6cba18788afb24c8514c859a917806c5877147e",
          "sha256": "b4ddd9ff9c92f38908bfd92bc6cba18788afb24c8514c859a917806c5877147e"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/solc-select/blobs/sha256:aff06bba18ec3b7294a317c1bf8b282ee421cf70f8ac361d6c08044346bcc36a",
          "sha256": "aff06bba18ec3b7294a317c1bf8b282ee421cf70f8ac361d6c08044346bcc36a"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/solc-select/blobs/sha256:89637261e8e0a45d698008c28b2937fbc5050410450ae1320caadee01515d56f",
          "sha256": "89637261e8e0a45d698008c28b2937fbc5050410450ae1320caadee01515d56f"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/solc-select/blobs/sha256:ce63982a9ba547fe60daba1adf434e1decfa7f463c0795bbb75464ac27650d53",
          "sha256": "ce63982a9ba547fe60daba1adf434e1decfa7f463c0795bbb75464ac27650d53"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/solc-select/blobs/sha256:b78982e23ddd3d162e641bc3a0071fccc6291716ac2833e5215a17df892a102e",
          "sha256": "b78982e23ddd3d162e641bc3a0071fccc6291716ac2833e5215a17df892a102e"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/solc-select.rb",
  "ruby_source_checksum": {
    "sha256": "acf3593933794566a381b3003f13c8c632af5c6887230823a36443d4b07cf386"
  },
  "date_added": "2022-08-13T18:43:36+00:00",
  "readme": "# solc-select\nA tool to quickly switch between Solidity compiler versions.\n\nThe tool is split into two CLI utilities:\n- `solc-select`: manages installing and setting different `solc` compiler versions\n- `solc`: wrapper around `solc` which picks the right version according to what was set via `solc-select`\n\nThe `solc` binaries are downloaded from https://binaries.soliditylang.org/ which contains\nofficial artifacts for many historial and modern `solc` versions for Linux and macOS.\n\nThe versioned binaries are stored in `~/.solc-select/artifacts/`.\n\n## Quickstart\n\n```\npip3 install solc-select\n```\n\nTo automatically install and use a version, run `solc-select use <version> --always-install`. \n\n### Running on ARM (Mac M1/M2)\n\n`solc` requires Rosetta to be installed. See the FAQ on [how to install Rosetta](#oserror-errno-86-bad-cpu-type-in-executable).\n\n## Usage\n\nThe global version of `solc` can be set with the `solc-select use <version>` command:\n```\n$ solc --version\nsolc, the solidity compiler commandline interface\nVersion: 0.5.2+commit.1df8f40c.Linux.g++\n$ solc-select use 0.4.24\nSwitched global version to 0.4.24\n$ solc --version\nsolc, the solidity compiler commandline interface\nVersion: 0.4.24+commit.e67f0147.Linux.g++\n```\n\nUse `SOLC_VERSION` environment variable to override the global version:\n```\n$ solc --version\nsolc, the solidity compiler commandline interface\nVersion: 0.4.24+commit.e67f0147.Linux.g++\n$ SOLC_VERSION=0.5.2 solc --version\nsolc, the solidity compiler commandline interface\nVersion: 0.5.2+commit.1df8f40c.Linux.g++\n```\n\nYou can list all available versions with `solc-select install`:\n```\n$ solc-select install\nAvailable versions to install:\n0.3.6\n0.4.0\n...\n0.8.0\n0.8.1\n```\n\nAnd install the one you need with `solc-select install <version>`:\n```\n$ solc-select install 0.8.1\nInstalling '0.8.1'...\nVersion '0.8.1' installed.\n```\n\nYou can also install the latest version with `solc-select install latest`\nand use the latest version with `solc-select use latest`\n\nDisplay the currently installed versions:\n```\n$ solc-select versions\n0.8.0\n0.4.2 (current, set by /Users/artur/.solc-select/global-version)\n```\n\n## Getting Help\n\nFeel free to stop by our [Slack channel](https://empirehacking.slack.com/) for help on using or extending `solc-select`.\n\n## FAQ\n\n### OSError: [Errno 86] Bad CPU type in executable\n\nOn newer `solc-select` versions, this might show as `solc binaries for macOS are\nIntel-only. Please install Rosetta on your Mac to continue.`\n\n`solc` requires Rosetta to be installed. To see whether you have Rosetta\ninstalled on your Mac, run\n\n```bash\npgrep -q oahd && echo Rosetta is installed || echo Rosetta is NOT installed\n```\n\nIf it is not installed, it can be installed with the command\n\n```bash\n/usr/sbin/softwareupdate --install-rosetta --agree-to-license\n```\n\n### solc-version not changing after running `solc-select use [version]` or setting `SOLC_VERSION`\n\nUninstall other installations of solc on your machine. `solc-select` re-installs solc binaries for your operating system and acts as a wrapper for solc. With duplicate solc installations, this may result in your `solc` version not being up to date.\n\n### \"Unsupported Platform\" on Windows \n\nThe solc-select version that supports Windows is currently in beta. Uninstall `solc-select` through `pip3 uninstall solc-select` and run \n\n```bash \npip install solc-select==1.0.0b1\n```\n\nAlternatively, for the most up-to-date version, clone this repository and run \n```bash \npip install . --user\n```\n\n## Known Issues\n\n### `SSL: CERTIFICATE_VERIFY_FAILED` on running `solc-select` commands [investigation ongoing]\n\n**OS X**\n```bash\npip3 install certifi\n/Applications/Python\\ 3.8/Install\\ Certificates.command\n```\n\nPython distributions on OS X has no certificates and cannot validate SSL connections, a breaking change introduced in Python 3.6. See [StackOverflow](https://stackoverflow.com/a/42334357) post for additional details.\n\n### `Connection refused` [investigation ongoing]\n\n```bash\npip3 uninstall solc-select \npip3 install solc-select==0.2.0\nsolc-select install \n```\n\nTry downgrading to `solc-select version 0.2.0`. \n\nOur `0.2.1` version of `solc-select` pulls older Linux binaries from [crytic/solc](https://github.com/crytic/solc) which seems to have introduced unexpected behavior in certain instances.\n\n### `solc-select` version changes, but `solc --version does not match`\n\nUsers seem to be experiencing situations in which the following command is successful: \n```\nsolc-select use <version> \n```\nHowever, when running the following command, it points to an older version of Solidity.\n```\nsolc --version\n```\n\n`solc-select` is intended to work with custom binaries. This means that Solidity installed through other means (i.e: `brew install solidity`) will _not_ work!. \n\nUninstall other versions Solidity from your computer.\n\n## License\n\n`solc-select` is licensed and distributed under the [AGPLv3](LICENSE) license. [Contact us](mailto:opensource@trailofbits.com) if youâ€™re looking for an exception to the terms."
}
