{
  "name": "req",
  "full_name": "req",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Simple and opinionated HTTP scripting language",
  "license": "Apache-2.0",
  "homepage": "https://github.com/andrewpillar/req",
  "versions": {
    "stable": "1.1.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/andrewpillar/req/archive/v1.1.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "4b628556876a5d16e05bdcca8b9a0e9147d48d801e49b0acc624adf6cb4e5350"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/req/blobs/sha256:761e455eaec2c41951b0aef7e6ccea876443742d59c630ad922b0a0a6eac7204",
          "sha256": "761e455eaec2c41951b0aef7e6ccea876443742d59c630ad922b0a0a6eac7204"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/req/blobs/sha256:c2b469cb7417b2afa5e405cea18a5d0d2772b9e59cd986ed69b1e1ae1e1fb66f",
          "sha256": "c2b469cb7417b2afa5e405cea18a5d0d2772b9e59cd986ed69b1e1ae1e1fb66f"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/req/blobs/sha256:279b79fce25a2ffa89d62d35116f3a9bd0e4a0f842d67ba805549881b18ae084",
          "sha256": "279b79fce25a2ffa89d62d35116f3a9bd0e4a0f842d67ba805549881b18ae084"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/req/blobs/sha256:f456775fc061aa0e0f3d864a014aae9c43c68a7eda55f5b73915a5daa788abf7",
          "sha256": "f456775fc061aa0e0f3d864a014aae9c43c68a7eda55f5b73915a5daa788abf7"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/req/blobs/sha256:dbc6285c19cd5b0564bf5f2fb3a06023b96793ed139984aeadfaa8aa1c1f4181",
          "sha256": "dbc6285c19cd5b0564bf5f2fb3a06023b96793ed139984aeadfaa8aa1c1f4181"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/req/blobs/sha256:dc965d02788d551a28e21aff831c60c7cc9ac17197399651fd6a210bd1f0b3b4",
          "sha256": "dc965d02788d551a28e21aff831c60c7cc9ac17197399651fd6a210bd1f0b3b4"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/req/blobs/sha256:e4d3f87b52397cf896e418a57719c8cebdd81c97a54eab5559c3606e0f91bbe2",
          "sha256": "e4d3f87b52397cf896e418a57719c8cebdd81c97a54eab5559c3606e0f91bbe2"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/req/blobs/sha256:235b2a9a3aa0e458c04d7c4d77fc8bfbb7951c98bedbe5e4d1f7263609e964a2",
          "sha256": "235b2a9a3aa0e458c04d7c4d77fc8bfbb7951c98bedbe5e4d1f7263609e964a2"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/req.rb",
  "ruby_source_checksum": {
    "sha256": "7fcd315312019f3c44daf92ba9d92f8205ed1fb53a5c893beef0350b3fdf3eae"
  },
  "date_added": "2022-06-20T18:03:04+00:00",
  "readme": "# req\n\nreq is an opinionated HTTP scripting language. It is designed for easily making\nHTTP requests, and working with their responses. Below is an example that calls\nout to the GitHub API and displays the user making the call,\n\n    $ cat gh.req\n    Stderr = open \"/dev/stderr\";\n\n    Endpoint = \"https://api.github.com\";\n    Token = env \"GH_TOKEN\";\n\n    if $Token == \"\" {\n        writeln $Stderr \"GH_TOKEN not set\";\n        exit 1;\n    }\n\n    Headers = (\n        Authorization: \"Bearer $(Token)\",\n    );\n\n    Resp = GET \"$(Endpoint)/user\" $Headers -> send;\n\n    match $Resp.StatusCode {\n        200 -> {\n            User = decode json $Resp.Body;\n\n            writeln _ \"Hello $(User[\"login\"])\";\n        }\n        _   -> {\n            writeln $Stderr \"Unexpected response: $(Resp.Status)\";\n            exit 1;\n        }\n    }\n    $ GH_TOKEN=1a2b3c4d5ef req gh.req\n\nThis language hopes to fill in a gap when it comes to writing scripts for\nworking with an HTTP service. Typically, you have a choice between a shell\nscript that utilizes cURL, or a programmaing language and any HTTP library\nthat may come with it.\n\nThe cURL approach can work, for simple one off requests, but when you want to\ndo something more with the response you're left with having to munge that data\nwith jq, grep, sed, or awk (or all of the above). Using a programming language\ngives you more control, but can be more cumbersome as you have far many more\nknobs to turn.\n\nreq provides a middleground between the two. A limited syntax, with builtin\ncommands for working with any data you want to send/received. For more details\non how to start working with req, then refer to the [documentation](docs), or\nyou can dive right in by looking over the [examples](examples)."
}
