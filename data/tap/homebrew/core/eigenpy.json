{
  "name": "eigenpy",
  "full_name": "eigenpy",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Python bindings of Eigen library with Numpy support",
  "license": "BSD-2-Clause",
  "homepage": "https://github.com/stack-of-tasks/eigenpy",
  "versions": {
    "stable": "3.1.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/stack-of-tasks/eigenpy/releases/download/v3.1.0/eigenpy-3.1.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "3b2faf13a96d875764c3455e8c722288f49472dbadbe86bca5fa815bb8617f7a"
    },
    "head": {
      "url": "https://github.com/stack-of-tasks/eigenpy.git",
      "branch": "master"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/eigenpy/blobs/sha256:c82fd05930316ba54316c33f450054ed47343c973c644d4d7e551d91ccee8528",
          "sha256": "c82fd05930316ba54316c33f450054ed47343c973c644d4d7e551d91ccee8528"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/eigenpy/blobs/sha256:d563903d954481eff8269e043ef28ce7824948a82ff3aca41bcc3b400876635f",
          "sha256": "d563903d954481eff8269e043ef28ce7824948a82ff3aca41bcc3b400876635f"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/eigenpy/blobs/sha256:77ed8242928775b6af9115bbcc3e9bd3bd25c7844e279f9618ae2dcc65324c06",
          "sha256": "77ed8242928775b6af9115bbcc3e9bd3bd25c7844e279f9618ae2dcc65324c06"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/eigenpy/blobs/sha256:807a79528f2561482d62e899a5e21b6991c7ffc74d4c8f0f5dc33e96423d666d",
          "sha256": "807a79528f2561482d62e899a5e21b6991c7ffc74d4c8f0f5dc33e96423d666d"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/eigenpy/blobs/sha256:1c8bd9bc31c41e01a745f982232863fce3db45118de812339b556f772405d5e3",
          "sha256": "1c8bd9bc31c41e01a745f982232863fce3db45118de812339b556f772405d5e3"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/eigenpy/blobs/sha256:07bc7a800422a44d78286babe0a0a81e970a0db2b6c408d14eaab9e01b0934d6",
          "sha256": "07bc7a800422a44d78286babe0a0a81e970a0db2b6c408d14eaab9e01b0934d6"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/eigenpy/blobs/sha256:005c80ab87d07d1ab3644f451994d94ab8da7ff6b19c15375d87d63c7da0afea",
          "sha256": "005c80ab87d07d1ab3644f451994d94ab8da7ff6b19c15375d87d63c7da0afea"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "boost",
    "cmake",
    "doxygen"
  ],
  "dependencies": [
    "boost-python3",
    "eigen",
    "numpy",
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/eigenpy.rb",
  "ruby_source_checksum": {
    "sha256": "1fd32ac7169cbb3b37d3192fcc426ee2e8bd3bf00242653384860ddbbcfc8eec"
  },
  "date_added": "2021-08-18T14:56:49+00:00",
  "readme": "EigenPy — Versatile and efficient Python bindings between Numpy and Eigen\n======\n\n<p align=\"center\">\n  <a href=\"https://opensource.org/licenses/BSD-2-Clause\"><img src=\"https://img.shields.io/badge/License-BSD%202--Clause-green.svg\" alt=\"License\"/></a>\n  <a href=\"https://github.com/stack-of-tasks/eigenpy/workflows/linux.yml\"><img alt=\"Build Status\" src=\"https://github.com/stack-of-tasks/eigenpy/actions/workflows/linux.yml/badge.svg?branch=devel\" /></a>\n  <a href=\"https://anaconda.org/conda-forge/eigenpy\"><img src=\"https://img.shields.io/conda/dn/conda-forge/eigenpy.svg\" alt=\"Conda Downloads\"/></a>\n  <a href=\"https://anaconda.org/conda-forge/eigenpy\"><img src=\"https://img.shields.io/conda/vn/conda-forge/eigenpy.svg\" alt=\"Conda Version\"/></a>\n  <a href=\"https://badge.fury.io/py/eigenpy\"><img src=\"https://badge.fury.io/py/eigenpy.svg\" alt=\"PyPI version\"></a>\n  <a href=\"https://github.com/psf/black\"><img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" alt=\"Code style: black\"></a>\n</p>\n\n**EigenPy** is an open source framework which allows to bind the famous [Eigen](http://eigen.tuxfamily.org) C++ library in Python via Boost.Python.\n\n**EigenPy** provides:\n - full memory sharing between Numpy and Eigen avoiding memory allocation\n - full support Eigen::Ref avoiding memory allocation\n - full support of the Eigen::Tensor module\n - exposition of the Geometry module of Eigen for easy code prototyping\n - standard matrix decomposion routines of Eigen such as the Cholesky decomposition, SVD decomposition, QR decomposition, and etc.\n - full support of SWIG objects\n - full support of runtime declaration of Numpy scalar types\n - extended API to expose std::vector types\n - full support of vectorization between C++ and Python (all the hold objects are properly aligned in memory)\n\n## Setup\n\nThe installation of **EigenPy** on your computer is made easy for Linux/BSD, Mac OS X and Windows environments.\n\n### The Conda approach\n\nYou simply need this simple line:\n```bash\nconda install eigenpy -c conda-forge\n```\n\n### Ubuntu\n\nYou can easily install **EigenPy** from binairies.\n\n#### Add robotpkg apt repository\n1. Add robotpkg as source repository to apt:\n```\nsudo sh -c \"echo 'deb [arch=amd64] http://robotpkg.openrobots.org/packages/debian/pub $(lsb_release -cs) robotpkg' >> /etc/apt/sources.list.d/robotpkg.list\"\n```\n2. Register the authentication certificate of robotpkg:\n```\ncurl http://robotpkg.openrobots.org/packages/debian/robotpkg.key | sudo apt-key add -\n```\n3. You need to run at least once apt update to fetch the package descriptions:\n```bash\nsudo apt-get update\n```\n\n#### Install EigenPy\n4. The installation of **EigenPy** and its dependencies is made through the line:\n\n```bash\nsudo apt install robotpkg-py35-eigenpy\n```\nwhere 35 should be replaced by the python 3 you want to work this (e.g. `robotpkg-py36-eigenpy` to work with Python 3.6).\n\n### Mac OS X\n\nThe installation of **EigenPy** on Mac OS X is made via [HomeBrew](https://brew.sh/).\nYou just need to register the tap of the sofware repository.\n\n```\nbrew tap gepetto/homebrew-gepetto\n```\nand then install **EigenPy** for Python 3.x with:\n```\nbrew install eigenpy\n```\n\n## Credits\n\nThe following people have been involved in the development of **EigenPy**:\n\n- [Justin Carpentier](https://jcarpent.github.io) (INRIA): main developer and manager of the project\n- [Nicolas Mansard](http://projects.laas.fr/gepetto/index.php/Members/NicolasMansard) (LAAS-CNRS): initial project instructor\n- [Wolfgang Merkt](http://www.wolfgangmerkt.com/) (University of Edinburgh): ROS integration and support\n- [Sean Yen](https://www.linkedin.com/in/seanyentw) (Microsoft): Windows integration\n- [Loïc Estève](https://github.com/lesteve) (INRIA): Conda integration\n- [Wilson Jallet](https://manifoldfr.github.io/) (INRIA/LAAS-CNRS): core developer\n\nIf you have taken part to the development of **EigenPy**, feel free to add your name and contribution here.\n\n## Acknowledgments\n\nThe development of **EigenPy** is supported by the [Gepetto team](http://projects.laas.fr/gepetto/) [@LAAS-CNRS](http://www.laas.fr) and the [Willow team](https://www.di.ens.fr/willow/) [@INRIA](http://www.inria.fr)."
}
