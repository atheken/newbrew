{
  "name": "navi",
  "full_name": "navi",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Interactive cheatsheet tool for the command-line",
  "license": "Apache-2.0",
  "homepage": "https://github.com/denisidoro/navi",
  "versions": {
    "stable": "2.22.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/denisidoro/navi/archive/refs/tags/v2.22.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "a728ad6b6e18abe27ca2190983bedca719e46462007e61bedbc50fc9d15b89a5"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/navi/blobs/sha256:11fb063a8feb7479c1c8e027b418fe4eeb2ce0c6533e9e1fcb8f0bb6b3e51184",
          "sha256": "11fb063a8feb7479c1c8e027b418fe4eeb2ce0c6533e9e1fcb8f0bb6b3e51184"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/navi/blobs/sha256:7b298bac9d3585536f184768eaf6a6553d66c4ba8ffcca2a477e5d5dc8cb95d9",
          "sha256": "7b298bac9d3585536f184768eaf6a6553d66c4ba8ffcca2a477e5d5dc8cb95d9"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/navi/blobs/sha256:00928858c1656fb7d2c4c914537d280b519705f64c363c8e2f8be2834cb2348e",
          "sha256": "00928858c1656fb7d2c4c914537d280b519705f64c363c8e2f8be2834cb2348e"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/navi/blobs/sha256:8c80e5544f78032c082085ec62c684f118d1eedeaa8ed221a29de30fb9622638",
          "sha256": "8c80e5544f78032c082085ec62c684f118d1eedeaa8ed221a29de30fb9622638"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/navi/blobs/sha256:521bfbff2d18d71ffbad13f779db5fdd3c7845979056b3b971764b75666cc4be",
          "sha256": "521bfbff2d18d71ffbad13f779db5fdd3c7845979056b3b971764b75666cc4be"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/navi/blobs/sha256:e7365c1f4a1aeed3d144c6e4ef71deb5a0d0e5339338cf62adedb205098f0c81",
          "sha256": "e7365c1f4a1aeed3d144c6e4ef71deb5a0d0e5339338cf62adedb205098f0c81"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/navi/blobs/sha256:6dcaf2e3ed8224a9f16d1366c2718829d473ca7829ff1682a3a965883b6807ef",
          "sha256": "6dcaf2e3ed8224a9f16d1366c2718829d473ca7829ff1682a3a965883b6807ef"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [
    "fzf"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "zlib"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/navi.rb",
  "ruby_source_checksum": {
    "sha256": "bc608c0abede698ec9e5c0873135da0e29894c3612d2d7af7c9903717f424f2d"
  },
  "date_added": "2019-10-26T18:48:28-04:00",
  "readme": "# navi <img src=\"https://raw.githubusercontent.com/denisidoro/navi/master/assets/icon.png\" alt=\"icon\" height=\"28px\"/> [![Actions Status](https://github.com/denisidoro/navi/workflows/Tests/badge.svg)](https://github.com/denisidoro/navi/actions) ![GitHub release](https://img.shields.io/github/v/release/denisidoro/navi?include_prereleases)\n\nAn interactive cheatsheet tool for the command-line.\n\n[![Demo](https://asciinema.org/a/406461.svg)](https://asciinema.org/a/406461)\n\n**navi** allows you to browse through cheatsheets (that you may write yourself or download from maintainers) and execute commands. Suggested values for arguments are dynamically displayed in a list.\n\n## Pros\n\n- it will spare you from knowing CLIs by heart\n- it will spare you from copy-pasting output from intermediate commands\n- it will make you type less\n- it will teach you new one-liners\n\nIt uses [fzf](https://github.com/junegunn/fzf), [skim](https://github.com/lotabout/skim), or [Alfred](https://www.alfredapp.com/) under the hood and it can be either used as a command or as a shell widget (_Ã  la_ Ctrl-R).\n\n## Table of contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Cheatsheet repositories](#cheatsheet-repositories)\n- [Cheatsheet syntax](#cheatsheet-syntax)\n- [Customization](#customization)\n- [More info](#more-info)\n- [Trying out online](#trying-out-online)\n- [Similar tools](#similar-tools)\n- [Etymology](#etymology)\n\n## Installation\n\n**navi** can be installed with the following package managers:\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/navi.svg)](https://repology.org/project/navi/versions)\n\nThe recommended way to install **navi** is by running:\n\n```sh\nbrew install navi\n```\n\nIf `brew` isn't available, you can check [alternative install instructions](docs/installation.md).\n\n## Usage\n\nThere are multiple ways to use **navi**:\n\n- by typing `navi` in the terminal\n  - pros: you have access to all possible subcommands and flags\n- as a [shell widget](docs/installation.md#installing-the-shell-widget) for the terminal\n  - pros: the shell history is correctly populated (i.e. with the actual command you ran instead of `navi`) and you can edit the command as you wish before executing it\n- as a [Tmux widget](docs/tmux.md)\n  - pros: you can use your cheatsheets in any command-line app even in SSH sessions\n- as [aliases](docs/aliases.md)\n- as a [shell scripting tool](docs/shell_scripting.md)\n- as an [Alfred workflow](docs/alfred.md)\n\nIn particular, check [these instructions](https://github.com/denisidoro/navi/issues/491) if you want to replicate what's shown in the demo above.\n\n## Cheatsheet repositories\n\nRunning **navi** for the first time will help you download and manage cheatsheets.\n\nYou can also:\n\n- [browse through featured cheatsheets](docs/cheatsheet_repositories.md#browsing-through-cheatsheet-repositories)\n- [import cheatsheets from git repositories](docs/cheatsheet_repositories.md#importing-cheatsheets)\n- [write your own cheatsheets](#cheatsheet-syntax) (and [share them](docs/cheatsheet_repositories.md#submitting-cheatsheets), if you want)\n- [use cheatsheets from other tools](docs/cheatsheet_repositories.md#using-cheatsheets-from-other-tools), such as [tldr](https://github.com/tldr-pages/tldr) and [cheat.sh](https://github.com/chubin/cheat.sh)\n- [auto-update repositories](docs/cheatsheet_repositories.md#auto-updating-repositories)\n- auto-export cheatsheets from your [TiddlyWiki](https://tiddlywiki.com/) notes using a [TiddlyWiki plugin](https://bimlas.gitlab.io/tw5-navi-cheatsheet/)\n\n## Cheatsheet syntax\n\nCheatsheets are described in `.cheat` files that look like this:\n\n```sh\n% git, code\n\n# Change branch\ngit checkout <branch>\n\n$ branch: git branch | awk '{print $NF}'\n```\n\nThe full syntax and examples can be found [here](docs/cheatsheet_syntax.md).\n\n## Customization\n\nYou can:\n\n- [setup your own config file](docs/config_file.md)\n- [change colors](docs/customization.md#changing-colors)\n- [resize columns](docs/customization.md#resizing-columns)\n- [change how search is performed](docs/customization.md#overriding-fzf-options)\n\n## More info\n\nPlease run the following command to read more about all possible options:\n\n```sh\nnavi --help\n```\n\nIn addition, please check the [/docs](docs) folder.\n\n## Similar tools\n\nThere are many similar projects out there ([beavr](https://github.com/denisidoro/beavr), [bro](https://github.com/hubsmoke/bro), [cheat](https://github.com/cheat/cheat), [cheat.sh](https://github.com/chubin/cheat.sh), [cmdmenu](https://github.com/amacfie/cmdmenu), [eg](https://github.com/srsudar/eg), [how2](https://github.com/santinic/how2), [howdoi](https://github.com/gleitz/howdoi), [Command Line Interface Pages](https://github.com/command-line-interface-pages) and [tldr](https://github.com/tldr-pages/tldr), to name a few).\n\nThey are excellent projects, but **navi** remains unique in the following ways:\n\n- it's natural to write cheatsheets tailored to your needs\n- arguments are neither hardcoded nor a simple template\n\n## Etymology\n\n[Navi](https://zelda.gamepedia.com/Navi) is a character from [The Legend of Zelda Ocarina of Time](https://zelda.gamepedia.com/Ocarina_of_Time) that provides [Link](https://zelda.gamepedia.com/Link) with a variety of clues to help him solve puzzles and make progress in his quest."
}
