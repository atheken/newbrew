{
  "name": "jackett",
  "full_name": "jackett",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "API Support for your favorite torrent trackers",
  "license": "GPL-2.0-only",
  "homepage": "https://github.com/Jackett/Jackett",
  "versions": {
    "stable": "0.21.558",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/Jackett/Jackett/archive/refs/tags/v0.21.558.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "deb9c2a94c581a163afea57ae7d2c5569052a614ade5c5f75951e14759dadbf2"
    },
    "head": {
      "url": "https://github.com/Jackett/Jackett.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jackett/blobs/sha256:aedb077f4ef196194dd28aaec489a877c007ca53e7f79d2ab9ccbb64d93c84f4",
          "sha256": "aedb077f4ef196194dd28aaec489a877c007ca53e7f79d2ab9ccbb64d93c84f4"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jackett/blobs/sha256:ed1c47733f46486fa65c490954251267a6a5bdfbb0082ec1b3cabbe7efe31fc2",
          "sha256": "ed1c47733f46486fa65c490954251267a6a5bdfbb0082ec1b3cabbe7efe31fc2"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jackett/blobs/sha256:aeaf792de112a28edb2a7d0472d44f91d2822c31490b947d3272d60549297e91",
          "sha256": "aeaf792de112a28edb2a7d0472d44f91d2822c31490b947d3272d60549297e91"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jackett/blobs/sha256:701b616e1664adfe14d5e0f4e2821eb43ae61e513b206978b6137154cd33b3a8",
          "sha256": "701b616e1664adfe14d5e0f4e2821eb43ae61e513b206978b6137154cd33b3a8"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jackett/blobs/sha256:d5187ed007e572761ffdbfccb7a7153036e2c6b90365371eb81607b89af2d6fa",
          "sha256": "d5187ed007e572761ffdbfccb7a7153036e2c6b90365371eb81607b89af2d6fa"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/jackett/blobs/sha256:693454757ab2d7a80401d2919370f2eb35b7dd0ec2194d53491a146c45c2abc4",
          "sha256": "693454757ab2d7a80401d2919370f2eb35b7dd0ec2194d53491a146c45c2abc4"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jackett/blobs/sha256:6e13c886c78e551d73e8bc42dd44e6e5da0edce194097ed61b7741988dd28b0c",
          "sha256": "6e13c886c78e551d73e8bc42dd44e6e5da0edce194097ed61b7741988dd28b0c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "dotnet@6"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": {
    "run": "/home/linuxbrew/.linuxbrew/opt/jackett/bin/jackett",
    "run_type": "immediate",
    "keep_alive": {
      "always": true
    },
    "working_dir": "/home/linuxbrew/.linuxbrew/opt/jackett/libexec",
    "log_path": "/home/linuxbrew/.linuxbrew/var/log/jackett.log",
    "error_log_path": "/home/linuxbrew/.linuxbrew/var/log/jackett.log"
  },
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/jackett.rb",
  "ruby_source_checksum": {
    "sha256": "13d6628e2201b092f566b2a7603944888b813b66bd8d85487c80ba2174bf0e76"
  },
  "date_added": "2022-06-06T16:39:14+00:00",
  "readme": "# Jackett\n\n[![GitHub issues](https://img.shields.io/github/issues/Jackett/Jackett.svg?maxAge=60&style=flat-square)](https://github.com/Jackett/Jackett/issues)\n[![GitHub pull requests](https://img.shields.io/github/issues-pr/Jackett/Jackett.svg?maxAge=60&style=flat-square)](https://github.com/Jackett/Jackett/pulls)\n[![Build Status](https://dev.azure.com/Jackett/Jackett/_apis/build/status/Jackett.Jackett?branchName=master)](https://dev.azure.com/jackett/jackett/_build/latest?definitionId=1&branchName=master)\n[![GitHub Releases](https://img.shields.io/github/downloads/Jackett/Jackett/total.svg?maxAge=60&style=flat-square)](https://github.com/Jackett/Jackett/releases/latest)\n[![Docker Pulls](https://img.shields.io/docker/pulls/linuxserver/jackett.svg?maxAge=60&style=flat-square)](https://hub.docker.com/r/linuxserver/jackett/)\n\n_Our [![Discord](https://img.shields.io/badge/discord-chat-7289DA.svg?maxAge=60&style=flat-square)](https://discord.gg/J865QuA) server is no longer maintained. If you have a problem, request, or question then please open a new issue here._\n\nThis project is a new fork and is recruiting development help.  If you are able to help out please [contact us](https://github.com/Jackett/Jackett/issues/8180).\n\nPlease see our [troubleshooting and contributing guidelines](CONTRIBUTING.md) before submitting any issues or pull requests\n\nJackett works as a proxy server: it translates queries from apps ([Sonarr](https://github.com/Sonarr/Sonarr), [Radarr](https://github.com/Radarr/Radarr), [SickRage](https://sickrage.github.io/), [CouchPotato](https://couchpota.to/), [Mylar3](https://github.com/mylar3/mylar3), [Lidarr](https://github.com/lidarr/lidarr), [DuckieTV](https://github.com/SchizoDuckie/DuckieTV), [qBittorrent](https://www.qbittorrent.org/), [Nefarious](https://github.com/lardbit/nefarious) etc.) into tracker-site-specific http queries, parses the html or json response, and then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping & translation logic - removing the burden from other apps.\n\nDeveloper note: The software implements the [Torznab](https://torznab.github.io/spec-1.3-draft/index.html) (with hybrid [nZEDb](https://github.com/nZEDb/nZEDb/blob/b485fa326a0ff1f47ce144164eb1f070e406b555/resources/db/schema/data/10-categories.tsv)/[Newznab](https://newznab.readthedocs.io/en/latest/misc/api/#predefined-categories) [category numbering](https://github.com/Jackett/Jackett/wiki/Jackett-Categories)) and [TorrentPotato](https://github.com/RuudBurger/CouchPotatoServer/wiki/Couchpotato-torrent-provider) APIs.\n\nA third-party Golang SDK for Jackett is available from [webtor-io/go-jackett](https://github.com/webtor-io/go-jackett)\n\n#### Supported Systems\n* Windows 7 SP1 or greater\n* Linux [supported operating systems here](https://github.com/dotnet/core/blob/main/release-notes/6.0/supported-os.md#linux)\n* macOS 10.15+ or greater\n\n<details> <summary> <b> Supported Public Trackers </b> </summary>\n\n * ØMagnet\n * 1337x\n * ACG.RIP\n * Anidex\n * AniLibria\n * Anime Time\n * Anime Tosho\n * AniRena\n * AniSource\n * AudioBook Bay (ABB)\n * Badass Torrents\n * Bangumi Moe\n * BigFANGroup\n * BitRu\n * BitSearch\n * BT.etree\n * BTDIGG\n * BTMET\n * BTSOW\n * BullTorrent\n * Byrutor\n * Cinecalidad\n * comicat\n * ConCen\n * cpasbien\n * cpasbienClone\n * CrackingPatching\n * Demonoid\n * DivxTotal\n * dmhy\n * DonTorrent\n * E-Hentai\n * EBook Bay (EBB)\n * EpubLibre\n * EXT Torrents\n * ExtraTorrent.st\n * EZTV\n * FileListing\n * FireBit\n * Frozen Layer\n * GamesTorrents\n * GkTorrent\n * GloDLS\n * GTorrent.pro\n * Idope\n * Il Corsaro Nero\n * Internet Archive (archive.org)\n * Isohunt2\n * iTorrent\n * JAV-Torrent\n * kickasstorrents.to\n * kickasstorrents.ws\n * Knaben\n * LePorno.info\n * LimeTorrents\n * LimeTorrents clone\n * LinuxTracker\n * Mac Torrents Download\n * MegaPeer\n * MejorTorrent\n * Mikan\n * MioBT\n * MixTapeTorrent\n * MoviesDVDR\n * MovieTorrent\n * MyPornClub\n * NextJAV\n * Newstudio\n * Nipponsei\n * NNTT\n * NoNaMe Club (NNM-Club)\n * Nyaa.si\n * OKPT\n * OneJAV\n * ParnuXi\n * PC-torrent\n * PiratBit\n * PornosLab\n * PornoTorrent\n * ProPorn\n * Rapidzona\n * RinTorNeT\n * RuTor\n * RuTracker.RU\n * Seedoff\n * Sexy-Pics\n * Shana Project\n * ShowRSS\n * SimpleAnime\n * Solid Torrents\n * sosulki\n * SubsPlease\n * sukebei.Nyaa.si\n * The Pirate Bay (TPB)\n * Tokyo Tosho\n * Torlock\n * Torrent[CORE]\n * Torrent Oyun indir\n * torrent.by\n * torrent-pirat\n * Torrent9\n * Torrent9 clone\n * Torrent911\n * TorrentFunk\n * TorrentDownloads\n * TorrentGalaxy (TGx)\n * TorrentKitty\n * TorrentProject2\n * TorrentQQ (토렌트큐큐)\n * Torrents.csv\n * TorrentSir (토렌트썰)\n * TorrentView (토렌트뷰)\n * TorrentWhiz (토렌트위즈)\n * Torrentz2eu\n * Torrentz2nz\n * TrahT\n * truPornolabs\n * UnionDHT\n * VSTHouse\n * VST Torrentz\n * VSTorrent\n * xxxAdultTorrent\n * XXXClub\n * xxxtor\n * xxxtorrents\n * YourBittorrent\n * YTS.ag\n * zetorrents\n</details>\n\n<details> <summary> <b> Supported Semi-Private Trackers </b> </summary>\n\n * AniDUB\n * Anime-Free\n * AnimeLayer\n * ArenaBG\n * BookTracker\n * BootyTape\n * Catorrent\n * Deildu\n * Demonoid\n * Devil-Torrents\n * DXP (Deaf Experts)\n * Electro-Torrent\n * EniaHD\n * Erai-Raws\n * Ex-torrenty\n * ExKinoRay\n * ExtremlymTorrents\n * File-Tracker\n * Gay-Torrents.net\n * Genesis-Movement\n * HD-CzTorrent\n * HDGalaKtik\n * HellTorrents\n * HunTorrent\n * Il CorSaRo Blu\n * Kinorun\n * Kinozal\n * LostFilm.tv\n * Magnetico (Local DHT) [[site](https://github.com/boramalper/magnetico)]\n * Marine Tracker\n * Masters-TB\n * Mazepa\n * Metal Tracker\n * Moviesite\n * MovieWorld (Flicker)\n * MuseBootlegs (MB)\n * MVGroup Forum\n * MVGroup Main\n * NetHD (VietTorrent)\n * Newstudio (login)\n * NoNaMe Club (NNM-Club) (login)\n * PiratBit (login)\n * PornoLab\n * PussyTorrents\n * Rainbow Tracker\n * RGFootball\n * RinTor\n * RiperAM\n * RockBox\n * RUDUB (ex-BaibaKoTV)\n * Rustorka\n * RuTracker\n * SATClubbing\n * seleZen\n * Sharewood\n * SkTorrent\n * SkTorrent-org\n * themixingbowl (TMB)\n * Toloka.to\n * Torrents-Local\n * TorrentDownload\n * TribalMixes\n * Union Fansub\n * UniOtaku\n * xTorrenty\n * YggTorrent (YGG)\n * ZOMB\n * Ztracker\n</details>\n\n<details> <summary> <b> Supported Private Trackers </b> </summary>\n\n * 0day.kiev\n * 1ptbar\n * 2 Fast 4 You [![(invite needed)][inviteneeded]](#)\n * 2xFree\n * 3ChangTrai (3CT)\n * 3D Torrents (3DT)\n * 3Wmg\n * 4thD (4th Dimension)\n * 52PT\n * 720pier\n * Abnormal\n * ABtorrents (ABT + RNS)\n * Acid Lounge (A-L)\n * AcrossTheTasman [![(invite needed)][inviteneeded]](#)\n * Aftershock\n * Aidoru!Online\n * Aither\n * AlphaRatio (AR)\n * AmigosShareClub\n * AnimeBytes (AB)\n * AnimeTorrents (AnT)\n * AnimeTracker\n * AnimeWorld\n * Anthelion\n * Araba Fenice (Phoenix) [![(invite needed)][inviteneeded]](#)\n * ArabP2P\n * ArabTorrents [![(invite needed)][inviteneeded]](#)\n * AsianCinema\n * AsianDVDClub\n * Audiences\n * AudioNews (AN)\n * Aussierul.es [![(invite needed)][inviteneeded]](#)\n * AvistaZ (AsiaTorrents)\n * Azusa [![(invite needed)][inviteneeded]](#)\n * Back-ups\n * BakaBT\n * BeiTai\n * Best-Core\n * BeyondHD (BHD)\n * Bibliotik\n * biho (必火pt)\n * Bit-Bázis\n * BIT-HDTV\n * Bitded\n * Bithorlo (BHO)\n * BitHUmen [![(invite needed)][inviteneeded]](#)\n * Bit Of Valor\n * BitSexy\n * Bitspyder\n * BitTorrentFiles\n * BiTTuRK\n * BJ-Share (BJ)\n * BlueBird [![(invite needed)][inviteneeded]](#)\n * Blutopia (BLU)\n * Borgzelle [![(invite needed)][inviteneeded]](#)\n * Boxing Torrents\n * Brasil Tracker\n * BroadcasTheNet (BTN)\n * BroadCity\n * BrokenStones [![(invite needed)][inviteneeded]](#)\n * BrSociety\n * BTNext (BTNT) [![(invite needed)][inviteneeded]](#)\n * BTSCHOOL\n * BWTorrents\n * BYRBT\n * Carp-Hunter\n * Carpathians\n * CarPT\n * CartoonChaos (CC)\n * Cathode-Ray.Tube (CRT)\n * Central Torrent\n * CeskeForum\n * CGPeers [![(invite needed)][inviteneeded]](#)\n * CHDBits [![(invite needed)][inviteneeded]](#)\n * cheggit\n * ChileBT\n * CiNEFiLHD\n * Cinemageddon [![(invite needed)][inviteneeded]](#)\n * CinemaMovieS_ZT\n * Cinematik [![(invite needed)][inviteneeded]](#)\n * CinemaZ (EuTorrents)\n * Classix [![(invite needed)][inviteneeded]](#)\n * Coastal-Crew\n * Concertos\n * CrazyHD\n * CrazySpirits\n * CrnaBerza\n * Dajiao (打胶) [![(invite needed)][inviteneeded]](#)\n * DANISH BYTES\n * Darius Tracker\n * Dark-Shadow\n * DataScene (DS)\n * DataTalli\n * DesiTorrents\n * Diablo Torrent [![(invite needed)][inviteneeded]](#)\n * DICMusic\n * DigitalCore\n * DimeADozen (EzTorrent)\n * DiscFan\n * DivTeam\n * DocsPedia\n * Dream Tracker\n * Drugari\n * Ebooks-Shares\n * Empornium (EMP) [![(invite needed)][inviteneeded]](#)\n * eShareNet\n * eStone (XiDER, BeLoad, BigTorrent)\n * ExoticaZ (YourExotic)\n * ExtremeTorrents\n * Falkon Vision Team\n * FANO.IN [![(invite needed)][inviteneeded]](#)\n * Fantastiko\n * Fappaizuri\n * FastScene\n * Femdomcult\n * FileList (FL)\n * FinElite (FE)\n * FinVip\n * Flux-Zone\n * Free Farm (自由农场)\n * FunFile (FF)\n * FunkyTorrents (FT)\n * FutureTorrent [![(invite needed)][inviteneeded]](#)\n * Fuzer (FZ)\n * GainBound [![(invite needed)][inviteneeded]](#)\n * Gamera (駕瞑羅)\n * Gay-Torrents.org\n * GAYtorrent.ru\n * GazelleGames (GGn)\n * Generation-Free\n * GigaTorrents\n * GimmePeers (formerly ILT)\n * GiroTorrent\n * GreatPosterWall (GPW)\n * GreekDiamond\n * Greek Team\n * HaiDan\n * Haitang\n * HappyFappy\n * Hawke-uno\n * HD Dolby\n * HD-Forever (HDF)\n * HD-Olimpo\n * HD-Only (HDO) [![(invite needed)][inviteneeded]](#)\n * HD-Space (HDS)\n * HD-Torrents (HDT)\n * HD-UNiT3D\n * HD4FANS [![(invite needed)][inviteneeded]](#)\n * HDArea (HDA)\n * HDAtmos\n * HDBits [![(invite needed)][inviteneeded]](#)\n * HDC (HDCiTY) [![(invite needed)][inviteneeded]](#)\n * HDChina (HDWing) [![(invite needed)][inviteneeded]](#)\n * HDFans\n * HDHome (HDBigger) [![(invite needed)][inviteneeded]](#)\n * HDMaYi\n * HDPT [![(invite needed)][inviteneeded]](#)\n * HDRoute [![(invite needed)][inviteneeded]](#)\n * HDSky [![(invite needed)][inviteneeded]](#)\n * HDTime\n * HDTurk\n * HDU\n * HDVIDEO\n * HDZone\n * Hebits\n * HellasHut\n * HHanClub\n * HomePornTorrents (HPT)\n * House of Devil\n * HQMusic\n * iAnon\n * ICC2022\n * ImmortalSeed (iS)\n * Immortuos\n * Indietorrents [![(invite needed)][inviteneeded]](#)\n * Infire\n * Insane Tracker\n * IPTorrents (IPT)\n * ItaTorrents\n * JME-REUNIT3D\n * JoyHD [![(invite needed)][inviteneeded]](#)\n * JPopsuki\n * JPTV\n * KamePT [![(invite needed)][inviteneeded]](#)\n * Karagarga\n * Keep Friends [![(invite needed)][inviteneeded]](#)\n * Korsar\n * KrazyZone\n * Kufei (库非)\n * Kufirc\n * LastFiles\n * Le Saloon\n * LaidBackManor\n * Lat-Team [![(invite needed)][inviteneeded]](#)\n * Le-Cinephile\n * LearnBits\n * LearnFlakes\n * leech24\n * Les-Cinephiles\n * Lesbians4u\n * Libble\n * LibraNet (LN)\n * LinkoManija [![(invite needed)][inviteneeded]](#)\n * Locadora\n * LosslessClub [![(invite needed)][inviteneeded]](#)\n * LST\n * M-Team TP (MTTP)\n * MaDs Revolution\n * magic-heaven\n * Magico (Trellas) [![(invite needed)][inviteneeded]](#)\n * Majomparádé (TurkDepo)\n * Mansão dos Animes (MDAN)\n * MegamixTracker\n * MeseVilág (Fairytale World)\n * MetalGuru\n * Milkie\n * MIRcrew\n * MMA-Torrents [![(invite needed)][inviteneeded]](#)\n * MNV (Max-New-Vision)\n * MOJBLiNK\n * MonikaDesign (MDU) [![(invite needed)][inviteneeded]](#)\n * MoreThanTV (MTV)\n * MouseBits\n * Movie-Torrentz\n * MuziekFabriek\n * MyAnonamouse (MAM)\n * MySpleen [![(invite needed)][inviteneeded]](#)\n * NCore\n * Nebulance (NBL) (TransmiTheNet)\n * NicePT\n * NorBits\n * NORDiCHD\n * Ntelogo\n * Old Toons World\n * OpenCD [![(invite needed)][inviteneeded]](#)\n * Orpheus\n * OnlyEncodes\n * OshenPT\n * OurBits (HDPter)\n * P2PBG\n * Panda\n * Party-Tracker\n * Peeratiko\n * Peers.FM\n * PigNetwork\n * PirateTheNet (PTN)\n * PixelCove (Ultimate Gamer)\n * PiXELHD (PxHD) [![(invite needed)][inviteneeded]](#)\n * PolishSource (PS)\n * PolishTracker\n * Pornbay [![(invite needed)][inviteneeded]](#)\n * Portugas\n * PotUK\n * Pretome\n * PrivateHD (PHD)\n * ProAudioTorrents (PAT)\n * PTChina (铂金学院)\n * PTerClub\n * PTFiles (PTF)\n * PThome [![(invite needed)][inviteneeded]](#)\n * PT分享站 (itzmx)\n * PTSBAO\n * PTtime\n * Punk's Horror Tracker\n * PuntoTorrent\n * PuTao\n * PWTorrents (PWT)\n * R3V WTF!\n * Racing4Everyone (R4E)\n * RacingForMe (RFM)\n * RareShare2\n * Red Star Torrent (RST) [![(invite needed)][inviteneeded]](#)\n * Redacted (PassTheHeadphones)\n * RedBits\n * ReelFlix\n * Resurrect The Net\n * RetroFlix\n * RevolutionTT\n * Romanian Metal Torrents (RMT) [![(invite needed)][inviteneeded]](#)\n * Rousi\n * SceneHD [![(invite needed)][inviteneeded]](#)\n * SceneRush\n * SceneTime\n * Secret Cinema\n * SeedFile\n * Shadowflow (影) [![(invite needed)][inviteneeded]](#)\n * Shareisland\n * Shazbat\n * SiamBIT\n * SkipTheCommercials\n * SkipTheTrailers\n * slosoul\n * SnowPT (SSPT)\n * SoulVoice\n * SpeedApp (SceneFZ, XtreMeZone / MYXZ, ICE Torrent)\n * SpeedCD\n * Speedmaster HD [![(invite needed)][inviteneeded]](#)\n * SpeedTorrent Reloaded\n * Spirit of Revolution [![(invite needed)][inviteneeded]](#)\n * SportHD\n * SportsCult\n * SpringSunday [![(invite needed)][inviteneeded]](#)\n * SugoiMusic\n * Superbits (SBS)\n * Swarmazon\n * Tapochek\n * Tasmanit\n * Team CT Game (TCTG)\n * TeamHD\n * TeamOS\n * TEKNO3D [![(invite needed)][inviteneeded]](#)\n * TellyTorrent\n * teracod (Movie Zone)\n * The Falling Angels (TFA)\n * The Geeks\n * The New Retro\n * The Occult [![(invite needed)][inviteneeded]](#)\n * The Old School\n * The Place [![(invite needed)][inviteneeded]](#)\n * The Shinning (TsH)\n * The Show\n * The Vault [![(invite needed)][inviteneeded]](#)\n * The-Crazy-Ones\n * The-New-Fun\n * TheEmpire (TE)\n * TheLeachZone (TLZ)\n * TheRebels\n * TheScenePlace (TSP)\n * Thor's Land\n * TJUPT\n * TLFBits [![(invite needed)][inviteneeded]](#)\n * TmGHuB\n * Tornado\n * Torrent Network (TN)\n * Torrent Sector Crew (TSC)\n * Torrent-Explosiv\n * Torrent-Syndikat [![(invite needed)][inviteneeded]](#)\n * TOrrent-tuRK (TORK)\n * Torrent.LT\n * TorrentBD\n * TorrentBytes (TBy)\n * TorrentCCF (TCCF)\n * TorrentDay (TD)\n * Torrenteros (TTR)\n * TorrentHeaven [![(invite needed)][inviteneeded]](#)\n * TorrentHR [![(invite needed)][inviteneeded]](#)\n * Torrenting (TT)\n * Torrentland\n * TorrentLeech (TL)\n * TorrentLeech.pl\n * TorrentMasters\n * TorrentSeeds (TS)\n * TotallyKids (TK)\n * ToTheGlory (TTG) [![(invite needed)][inviteneeded]](#)\n * TrackerMK\n * TranceTraffic\n * TreZzoR [![(invite needed)][inviteneeded]](#)\n * TurkSeed\n * TurkTorrent (TT)\n * TV Chaos UK (TVCUK)\n * TvRoad\n * TVstore\n * U2 (U2分享園@動漫花園) [![(invite needed)][inviteneeded]](#)\n * UBits\n * UHDBits\n * UltraHD\n * UnionGang\n * UnleashTheCartoons\n * UnlimitZ\n * Uploads\n * UTOPIA\n * White Angel\n * WinterSakura\n * World-In-HD [![(invite needed)][inviteneeded]](#)\n * World-of-Tomorrow\n * Wukong\n * x-ite.me (XM)\n * xBytesV2\n * XSpeeds (XS)\n * Xthor\n * XtremeBytes\n * XWT-Classics\n * XWTorrents (XWT)\n * YDYPT\n * Zamunda.net\n * Zelka.org\n * ZmPT (织梦)\n * ZonaQ\n</details>\n\nTrackers marked with [![(invite needed)][inviteneeded]](#) have no active maintainer and may be missing features or be broken. If you have an invite for them please send it to garfieldsixtynine -at- gmail.com or jacketttest -at- gmail.com to get them fixed/improved.\n\n### Aggregate indexers\n\nA special \"all\" indexer is available at `/api/v2.0/indexers/all/results/torznab`.\nIt will query all configured indexers and return the combined results.\n\nIf your client supports multiple feeds it's recommended to add each indexer directly instead of using the all indexer.\nUsing the all indexer has no advantages (besides reduced management overhead), only disadvantages:\n* you lose control over indexer specific settings (categories, search modes, etc.)\n* mixing search modes (IMDB, query, etc.) might cause low-quality results\n* indexer specific categories (>= 100000) can't be used.\n* slow indexers will slow down the overall result\n* total results are limited to 1000\n\nTo get all Jackett indexers including their capabilities you can use `t=indexers` on the all indexer. To get only configured/unconfigured indexers you can also add `configured=true/false` as a query parameter.\n\n### Filter indexers\n\nAnother special \"filter\" indexer is available at `/api/v2.0/indexers/<filter>/results/torznab`\nIt will query the configured indexers that match the `<filter>` expression criteria and return the combined results as \"all\".\n\nSupported filters\nFilter | Condition\n-|-\n`type:<type>` | where the indexer type is equal to `<type>`\n`tag:<tag>` | where the indexer tags contains `<tag>`\n`lang:<tag>` | where the indexer language start with `<lang>`\n`test:{passed\\|failed}` | where the last indexer test performed `passed` or `failed`\n`status:{healthy\\|failing\\|unknown}` | where the indexer state is `healthy` (successfully operates in the last minutes), `failing` (generates errors in the recent call) or `unknown` (unused for a while)\n\nSupported operators\nOperator | Condition\n-|-\n`!<expr>` | where not `<expr>`\n`<expr1>+<expr2>[+<expr3>...]` | where `<expr1>` and `<expr2>` [and `<expr3>`...]\n`<expr1>,<expr2>[,<expr3>...]` | where `<expr1>` or `<expr2>` [or `<expr3>`...]\n\nExample 1:\nThe \"filter\" indexer at `/api/v2.0/indexers/tag:group1,!type:private+lang:en/results/torznab` will query all the configured indexers tagged with `group1` or all the indexers not private and with `en` language (`en-en`,`en-us`,...)\n\nExample 2:\nThe \"filter\" indexer at `/api/v2.0/indexers/!status:failing,test:passed` will query all the configured indexers not `failing` or which `passed` its last test.\n\n### Search modes and parameters\n\nA list of supported API search modes and parameters:\n\n```\nt=search:\n   params  : q\nt=tvsearch:\n   params  : q, season, ep, imdbid, tvdbid, rid, tmdbid, tvmazeid, traktid, doubanid, year, genre\nt=movie:\n   params  : q, imdbid, tmdbid, traktid, doubanid, year, genre\nt=music:\n   params  : q, album, artist, label, track, year, genre\nt=book:\n   params  : q, title, author, publisher, year, genre\n```\n\nExamples:\n\n```\n.../api?apikey=APIKEY&t=search&cat=1,3&q=Show+Title+S01E02\n\n.../api?apikey=APIKEY&t=tvsearch&cat=1,3&q=Show+Title&season=1&ep=2\n.../api?apikey=APIKEY&t=tvsearch&cat=1,3&genre=comedy&season=2023&ep=02/13\n\n.../api?apikey=APIKEY&t=movie&cat=2&q=Movie+Title&year=2023\n.../api?apikey=APIKEY&t=movie&cat=2&imdbid=tt1234567\n\n.../api?apikey=APIKEY&t=music&cat=4&album=Title&artist=Name\n\n.../api?apikey=APIKEY&t=book&cat=5,6&genre=horror&publisher=Stuff\n```\n\n## Installation on Windows\nWe recommend you install Jackett as a Windows service using the supplied installer. You may also download the zipped version if you would like to configure everything manually.\n\nTo get started with using the installer for Jackett, follow the steps below:\n\n1. Check if you need any .NET prerequisites installed, see https://docs.microsoft.com/en-us/dotnet/core/install/windows?tabs=net60#dependencies\n2. Download the latest version of the Windows installer, \"Jackett.Installer.Windows.exe\" from the [releases](https://github.com/Jackett/Jackett/releases/latest) page.\n3. When prompted if you would like this app to make changes to your computer, select \"yes\".\n4. If you would like to install Jackett as a Windows Service, make sure the \"Install as Windows Service\" checkbox is filled.\n5. Once the installation has finished, check the \"Launch Jackett\" box to get started.\n6. Navigate your web browser to http://127.0.0.1:9117\n7. You're now ready to begin adding your trackers and using Jackett.\n\nWhen installed as a service the tray icon acts as a way to open/start/stop Jackett. If you opted to not install it as a service then Jackett will run its web server from the tray tool.\n\nJackett can also be run from the command line if you would like to see log messages (Ensure the server isn't already running from the tray/service). This can be done by using \"JackettConsole.exe\" (for Command Prompt), found in the Jackett data folder: \"%ProgramData%\\Jackett\".\n\n\n## Install on Linux (AMDx64)\nOn most operating systems all the required dependencies will already be present. In case they are not, you can refer to this page https://github.com/dotnet/core/blob/master/Documentation/linux-prereqs.md\n\n### Install as service\nA) Command to download and install latest package and run the Jackett service:\n\n`cd /opt && f=Jackett.Binaries.LinuxAMDx64.tar.gz && release=$(wget -q https://github.com/Jackett/Jackett/releases/latest -O - | grep \"title>Release\" | cut -d \" \" -f 4) && sudo wget -Nc https://github.com/Jackett/Jackett/releases/download/$release/\"$f\" && sudo tar -xzf \"$f\" && sudo rm -f \"$f\" && cd Jackett* && sudo ./install_service_systemd.sh && systemctl status jackett.service && cd - && echo -e \"\\nVisit http://127.0.0.1:9117\"`\n\nB) Or manually:\n\n1. Download and extract the latest `Jackett.Binaries.LinuxAMDx64.tar.gz` release from the [releases page](https://github.com/Jackett/Jackett/releases)\n2. To install Jackett as a service, open a Terminal, cd to the jackett folder and run `sudo ./install_service_systemd.sh` You need root permissions to install the service. The service will start on each logon. You can always stop it by running `systemctl stop jackett.service` from Terminal. You can start it again it using `systemctl start jackett.service`. Logs are stored as usual under `~/.config/Jackett/log.txt` and also in `journalctl -u jackett.service`.\n\n### Run without installing as a service\nDownload and extract the latest `Jackett.Binaries.LinuxAMDx64.tar.gz` release from the [releases page](https://github.com/Jackett/Jackett/releases), open a Terminal, cd to the jackett folder and run Jackett with the command `./jackett`\n\n### home directory\nIf you want to run it with a user without a /home directory you need to add `Environment=XDG_CONFIG_HOME=/path/to/folder` to your systemd file, this folder will be used to store your config files.\n\n\n## Install on Linux (ARMv7 or above)\nOn most operating systems all the required dependencies will already be present. In case they are not, you can refer to this page https://github.com/dotnet/core/blob/master/Documentation/linux-prereqs.md\n\n### Install as service\n1. Download and extract the latest `Jackett.Binaries.LinuxARM32.tar.gz` or `Jackett.Binaries.LinuxARM64.tar.gz` (32 bit is the most common on ARM) release from the [releases page](https://github.com/Jackett/Jackett/releases)\n2. To install Jackett as a service, open a Terminal, cd to the jackett folder and run `sudo ./install_service_systemd.sh` You need root permissions to install the service. The service will start on each logon. You can always stop it by running `systemctl stop jackett.service` from Terminal. You can start it again it using `systemctl start jackett.service`. Logs are stored as usual under `~/.config/Jackett/log.txt` and also in `journalctl -u jackett.service`.\n\n### Run without installing as a service\nDownload and extract the latest `Jackett.Binaries.LinuxARM32.tar.gz` or `Jackett.Binaries.LinuxARM64.tar.gz` (32 bit is the most common on ARM) release from the [releases page](https://github.com/Jackett/Jackett/releases), open a Terminal, cd to the jackett folder and run Jackett with the command `./jackett`\n\n### home directory\nIf you want to run it with a user without a /home directory you need to add `Environment=XDG_CONFIG_HOME=/path/to/folder` to your systemd file, this folder will be used to store your config files.\n\n\n## Installation on Linux (ARMv6 or below)\n 1. Install [Mono 5.8](http://www.mono-project.com/download/#download-lin) or better (using the latest stable release is recommended)\n       * Follow the instructions on the mono website and install the `mono-devel` and the `ca-certificates-mono` packages.\n       * On Red Hat/CentOS/openSUSE/Fedora the `mono-locale-extras` package is also required.\n 2. Install  libcurl:\n       * Debian/Ubuntu: `apt-get install libcurl4-openssl-dev`\n       * Redhat/Fedora: `yum install libcurl-devel`\n       * For other distros see the  [Curl docs](http://curl.haxx.se/dlwiz/?type=devel).\n 3. Download and extract the latest `Jackett.Binaries.Mono.tar.gz` release from the [releases page](https://github.com/Jackett/Jackett/releases) and run Jackett using mono with the command `mono --debug JackettConsole.exe`.\n 4. (Optional) To install Jackett as a service, open the Terminal and run `sudo ./install_service_systemd_mono.sh` You need root permissions to install the service. The service will start on each logon. You can always stop it by running `systemctl stop jackett.service` from Terminal. You can start it again it using `systemctl start jackett.service`. Logs are stored as usual under `~/.config/Jackett/log.txt` and also in `journalctl -u jackett.service`.\n\nIf you want to run it with a user without a /home directory you need to add `Environment=XDG_CONFIG_HOME=/path/to/folder` to your systemd file, this folder will be used to store your config files.\n\nMono must be compiled with the Roslyn compiler (default), using MCS will cause \"An error has occurred.\" errors (See https://github.com/Jackett/Jackett/issues/2704).\n\n\n### Installation on Linux via Ansible\n\nOn a CentOS/RedHat 7 system: [jewflix.jackett](https://galaxy.ansible.com/jewflix/jackett)\n\nOn an Ubuntu 16 system: [chrisjohnson00.jackett](https://galaxy.ansible.com/chrisjohnson00/jackett)\n\n\n## Installation on macOS\n\n### Prerequisites\nmacOS 10.15+ or greater\n\n### Install as service\n1. Download and extract the latest `Jackett.Binaries.macOS.tar.gz` or `Jackett.Binaries.macOSARM64.tar.gz` release from the [releases page](https://github.com/Jackett/Jackett/releases).\n2. Open the extracted folder and double-click on `install_service_macos`.\n3. If the installation was a success, you can close the Terminal window.\n\nThe service will start on each logon. You can always stop it by running `launchctl unload ~/Library/LaunchAgents/org.user.Jackett.plist` from Terminal. You can start it again it using `launchctl load ~/Library/LaunchAgents/org.user.Jackett.plist`.\nLogs are stored as usual under `~/.config/Jackett/log.txt`.\n\n### Run without installing as a service\nDownload and extract the latest `Jackett.Binaries.macOS.tar.gz` or `Jackett.Binaries.macOSARM64.tar.gz` release from the [releases page](https://github.com/Jackett/Jackett/releases) and run Jackett with the command `./jackett`.\n\n\n## Installation using Docker\nDetailed instructions are available at [LinuxServer.io Jackett Docker](https://hub.docker.com/r/linuxserver/jackett/). The Jackett Docker is highly recommended, especially if you are having Mono stability issues or having issues running Mono on your system e.g. QNAP, Synology. Thanks to [LinuxServer.io](https://linuxserver.io)\n\n\n## Installation on Alpine Linux\nDetailed instructions are available at [Jackett's Wiki](https://github.com/Jackett/Jackett/wiki/Installation-on-Alpine-Linux).\n\n\n## Installation on Synology\nJackett is available as a [beta package](https://synocommunity.com/package/jackett) from [SynoCommunity](https://synocommunity.com/)\n\n\n## Installation on OpenWrt\nDetailed instructions are available at [Jackett's Wiki](https://github.com/Jackett/Jackett/wiki/Installation-on-OpenWrt).\n\n\n## Running Jackett behind a reverse proxy\nWhen running jackett behind a reverse proxy make sure that the original hostname of the request is passed to Jackett. If HTTPS is used also set the X-Forwarded-Proto header to \"https\". Don't forget to adjust the \"Base path override\" Jackett option accordingly.\n\nExample config for apache:\n```\n<Location /jackett>\n    ProxyPreserveHost On\n    RequestHeader set X-Forwarded-Proto expr=%{REQUEST_SCHEME}\n    ProxyPass http://127.0.0.1:9117\n    ProxyPassReverse http://127.0.0.1:9117\n</Location>\n```\n\nExample config for Nginx:\n```\nlocation /jackett {\n\tproxy_pass http://127.0.0.1:9117;\n\tproxy_set_header X-Real-IP $remote_addr;\n\tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\tproxy_set_header X-Forwarded-Proto $scheme;\n\tproxy_set_header X-Forwarded-Host $http_host;\n\tproxy_redirect off;\n}\n```\n\n## Search Cache\nJackett has an internal cache to increase search speed and to reduce the number of requests to the torrent sites.\nThe default values should be good for most users. If you have problems, you can reduce the TTL value in the\nconfiguration or even disable the cache. Keep in mind that you can be banned by the sites if you make a lot of requests.\n* **Cache TTL (seconds)**: (default 2100 / 35 minutes) It indicates how long the results can remain in the cache.\n* **Cache max results per indexer**: (default 1000) How many results are kept in cache for each indexer. This limit is used to limit the use of RAM. If you make many requests and you have enough memory, increase this number.\n\n## Torznab cache\nIf you have enabled the Jackett internal cache, but have an indexer for which you would prefer to fetch fresh results (thus ignoring the internal cache) then add the **&cache=false** parameter to your torznab query.\n\n## Configuring FlareSolverr\nSome indexers are protected by CloudFlare or similar services and Jackett is not able to solve the challenges.\nFor these cases, [FlareSolverr](https://github.com/FlareSolverr/FlareSolverr) has been integrated into Jackett. This service is in charge of solving the challenges and configuring Jackett with the necessary cookies.\nSetting up this service is optional, most indexers don't need it.\n* Install FlareSolverr service (following their instructions)\n* Configure **FlareSolverr API URL** in Jackett. For example: http://172.17.0.2:8191\n* It is recommended to keep the default value in **FlareSolverr Max Timeout (ms)**\n\n## Configuring OMDb\nThis feature is used as a fallback (when using the aggregate Indexer) to get the movie/series title if only the IMDB ID is provided in the request.\nTo use it, please just request a free API key on [OMDb](http://www.omdbapi.com/apikey.aspx) (1,000 daily requests limit) and paste the key in Jackett\n\n## Command line switches\n\n  You can pass various options when running via the command line:\n\n<details> <summary> Command Line Switches </summary>\n\n-   `-i, --Install`            Install Jackett windows service (Must be admin)\n-   `-s, --Start`              Start the Jacket Windows service (Must be admin)\n-   `-k, --Stop`               Stop the Jacket Windows service (Must be admin)\n-   `-u, --Uninstall`          Uninstall Jackett windows service (Must be admin).\n\n-   `-r, --ReserveUrls`        (Re)Register windows port reservations (Required for\n                            listening on all interfaces).\n\n-   `-l, --Logging`            Log all requests/responses to Jackett\n\n-   `-t, --Tracing`            Enable tracing\n\n-   `-c, --UseClient`          Override web client selection.\n                            [automatic(Default)/httpclient/httpclient2]\n\n-   `-x, --ListenPublic`       Listen publicly\n\n-   `-z, --ListenPrivate`      Only allow local access\n\n-   `-p, --Port`               Web server port\n\n-   `-n, --IgnoreSslErrors`    [true/false] Ignores invalid SSL certificates\n\n-   `-d, --DataFolder`         Specify the location of the data folder (Must be an admin on Windows)\n    - e.g. --DataFolder=\"D:\\Your Data\\Jackett\\\".\n    - Don't use this on Unix (mono) systems. On Unix just adjust the HOME directory of the user to the data folder or set the XDG_CONFIG_HOME environment variable.\n\n-   `--NoRestart`              Don't restart after update\n\n-   `--PIDFile`                Specify the location of PID file\n\n-   `--NoUpdates`              Disable automatic updates\n\n-   `--help`                   Display this help screen.\n\n-   `--version`                Display version information.\n</details>\n\n## Building from source\n\n### Windows\n* Install the .NET 6 [SDK](https://www.microsoft.com/net/download/windows)\n* Clone Jackett\n* Open PowerShell and from the `src` directory:\n* - run `dotnet msbuild /restore`\n* - then run `dotnet restore`\n* - and run `dotnet build`\n* Open the Jackett solution in Visual Studio 2019 (version 16.9 or above)\n* Select **Jackett.Server** as the startup project\n* In the drop-down menu of the run button select **Jackett.Server** instead of _IIS Express_\n* Build/Start the project\n\n### OSX\n\n\n```bash\n# manually install osx dotnet via:\nhttps://dotnet.microsoft.com/download?initial-os=macos\n# then:\ngit clone https://github.com/Jackett/Jackett.git\ncd Jackett/src\n\n# dotnet core version\ndotnet publish Jackett.Server -f net6.0 --self-contained -r osx-x64 -c Debug # takes care of everything\n./Jackett.Server/bin/Debug/net6.0/osx-x64/jackett # run jackett\n```\n\n### Linux\n\n\n```bash\nsudo apt install nuget msbuild dotnet-sdk-6.0 # install build tools (Debian/ubuntu)\ngit clone https://github.com/Jackett/Jackett.git\ncd Jackett/src\n\n# dotnet core version\ndotnet publish Jackett.Server -f net6.0 --self-contained -r linux-x64 -c Debug # takes care of everything\n./Jackett.Server/bin/Debug/net6.0/linux-x64/jackett # run jackett\n```\n\n## Screenshots\n\n![screenshot](https://raw.githubusercontent.com/Jackett/Jackett/master/.github/jackett-screenshot1.png)\n\n![screenshot](https://raw.githubusercontent.com/Jackett/Jackett/master/.github/jackett-screenshot2.png)\n\n![screenshot](https://raw.githubusercontent.com/Jackett/Jackett/master/.github/jackett-screenshot3.png)\n\n[inviteneeded]: https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png"
}
