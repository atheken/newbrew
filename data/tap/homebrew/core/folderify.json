{
  "name": "folderify",
  "full_name": "folderify",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Generate pixel-perfect macOS folder icons in the native style",
  "license": "MIT",
  "homepage": "https://github.com/lgarron/folderify",
  "versions": {
    "stable": "3.0.12",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/lgarron/folderify/archive/refs/tags/v3.0.12.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "5979fe57e1844c9b2499003ff39c1598210969235a8733766034aef266b02ff3"
    },
    "head": {
      "url": "https://github.com/lgarron/folderify.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/folderify/blobs/sha256:23dcb2cb9e5dfd0db50e67dee1da1cfbef42c53422447d2b28874d1519f8d2b5",
          "sha256": "23dcb2cb9e5dfd0db50e67dee1da1cfbef42c53422447d2b28874d1519f8d2b5"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/folderify/blobs/sha256:90de5e21ae722a34bd83716da6568251352326f9f06fda6da8cf94f7fa4a4c80",
          "sha256": "90de5e21ae722a34bd83716da6568251352326f9f06fda6da8cf94f7fa4a4c80"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/folderify/blobs/sha256:a171d3b67b425d57e098c96f9547de9b6190a8e83c320fcb21cc9860c4e37480",
          "sha256": "a171d3b67b425d57e098c96f9547de9b6190a8e83c320fcb21cc9860c4e37480"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/folderify/blobs/sha256:511dc96bac985c7c4373be840e1cc1426cb166e596031e4033733e01cc7523be",
          "sha256": "511dc96bac985c7c4373be840e1cc1426cb166e596031e4033733e01cc7523be"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/folderify/blobs/sha256:02555b1c34b184754d01e0ec2320537e4d2e8c759e2db72d2f5ea220dd2c3e78",
          "sha256": "02555b1c34b184754d01e0ec2320537e4d2e8c759e2db72d2f5ea220dd2c3e78"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/folderify/blobs/sha256:73512b04cf5d3d39f501bc621b9c5f1c0704a21428824087343c8c1fd816bd08",
          "sha256": "73512b04cf5d3d39f501bc621b9c5f1c0704a21428824087343c8c1fd816bd08"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [
    "imagemagick"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "xcode",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [
        "build"
      ],
      "specs": [
        "stable",
        "head"
      ]
    },
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/folderify.rb",
  "ruby_source_checksum": {
    "sha256": "f8633bee6f898d8a1a163e5e75ecdfd69c6803e195675ba6d37901a49fbf3223"
  },
  "date_added": "2020-07-31T12:42:44+00:00",
  "readme": "# folderify\n\n![mask.png + folder = folderified!](examples/png/explanation.png)\n\nGenerate pixel-perfect macOS folder icons in the native style.\n\n- Automatically includes all icon sizes from `16x16` through `512x512@2x`.\n- Light or dark mode (automatically selected by default).\n\n**Using `folderify`?** [Let me know](https://mastodon.social/@lgarron) or [let me know](https://github.com/lgarron/folderify/issues/new) and I'd love to feature some real-world uses!\n\n## Install\n\nInstall `folderify` using [Homebrew](https://formulae.brew.sh/formula/folderify):\n\n```shell\nbrew install folderify\n```\n\nHomebrew install is recommended, and automatically installs `folderify` argument completions for your shell.\n\nSee below for other installation options.\n\n## Usage\n\nUse a mask to assign an icon to a folder:\n\n```shell\nfolderify mask.png /path/to/folder\n```\n\nGenerate `mask.icns` and `mask.iconset` files:\n\n```shell\nfolderify mask.png\n```\n\nBy default, `folderify` uses your system's current light/dark mode. Use `--color-scheme` to override this:\n\n```shell\nfolderify --color-scheme dark mask.png\n```\n\nNote:\n\n- There is currently no simple way to set an icon that will automatically switch between light and dark when you switch the entire OS. You can only assign one version of an icon to a folder.\n\n### Tips\n\nFor best results:\n\n- Use a `.png` mask.\n- Use a solid black design over a transparent background.\n- Make sure the corner pixels of the mask image are transparent. They are used for empty margins.\n- Pass the `--no-trim` flag and use a mask:\n  - with a height of 384px,\n  - with a width that is a multiple of 128px (up to 768px),\n  - using a 16px grid.\n  - Each 64x64 tile will exactly align with 1 pixel at the smallest icon size.\n\n### OS X (macOS 10)\n\nFolder styles from OS X / macOS 10 are no longer supported by `folderify` as of v3:\n\n- Leopard-style (OS X 10.5 to OS X 10.9)\n- Yosemite-style (OS X 10.10 to macOS 10.15)\n\nTo generate these, please use `folderify` v2. For example:\n\n```shell\npip3 install folderify\npython3 -m folderify --macOS 10.5 path/to/icon.png\n```\n\n## Other installation options\n\nIf you don't have Homebrew but you already have ImageMagick (the `convert`\nbinary) on your system, you can use the following:\n\n### Install using Rust\n\n```shell\ncargo install folderify\n```\n\n### From source\n\nOr download the code directly:\n\n```shell\ngit clone https://github.com/lgarron/folderify && cd folderify\n\n# Run directly\ncargo run -- --reveal examples/src/folder_outline.png .\n\n# Install (assuming the `cargo` bin is in your path)\ncargo install --path .\nfolderify --reveal examples/src/folder_outline.png .\n```\n\nThe repository folder should now have a custom icon.\n\n```shell\nfor file in examples/src/*.png; do cargo run -- $file; done\nopen examples/src/\n```\n\nYou should see a bunch of new `.iconset` folders and `.icns` files that were automatically generated from the `.png` masks.\n\n### Dependencies\n\n- [ImageMagick](https://www.imagemagick.org/) - for image processing (you should be able to run <code>convert</code> and <code>identify</code> on the commandline).\n- Included with macOS:\n  - `iconutil`\n- `sips`, `DeRez`, `Rez`, `SetFile` (You need Xcode command line tools for some of these.)\n\n## Full options\n\n```\nGenerate a native-style macOS folder icon from a mask file.\n\nUsage: folderify [OPTIONS] [MASK] [TARGET]\n\nArguments:\n  [MASK]\n          Mask image file. For best results:\n          - Use a .png mask.\n          - Use a solid black design over a transparent background.\n          - Make sure the corner pixels of the mask image are transparent. They are used for empty margins.\n          - Make sure the non-transparent pixels span a height of 384px, using a 16px grid.\n          If the height is 384px and the width is a multiple of 128px, each 64x64 tile will exactly align with 1 pixel at the smallest folder size.\n\n  [TARGET]\n          Target file or folder. If a target is specified, the resulting icon will\n          be applied to the target file/folder. Else (unless --output-icns or\n          --output-iconset is specified), a .iconset folder and .icns file will be\n          created in the same folder as the mask (you can use \"Get Info\" in Finder\n          to copy the icon from the .icns file).\n\nOptions:\n      --output-icns <ICNS_FILE>\n          Write the `.icns` file to the given path.\n          (Will be written even if a target is also specified.)\n\n      --output-iconset <ICONSET_FOLDER>\n          Write the `.iconset` folder to the given path.\n          (Will be written even if a target is also specified.)\n\n  -r, --reveal\n          Reveal either the target, `.icns`, or `.iconset` (in that order of preference) in Finder\n\n      --macOS <MACOS_VERSION>\n          Version of the macOS folder icon, e.g. \"10.13\". Defaults to the version currently running\n\n      --color-scheme <COLOR_SCHEME>\n          Color scheme â€” auto matches the current system value\n          \n          [default: auto]\n          [possible values: auto, light, dark]\n\n      --no-trim\n          Don't trim margins from the mask.\n          By default, transparent margins are trimmed from all 4 sides.\n\n      --no-progress\n          Don't show progress bars\n\n  -v, --verbose\n          Detailed output. Also sets `--no-progress`\n\n      --completions <SHELL>\n          Print completions for the given shell (instead of generating any icons).\n          These can be loaded/stored permanently (e.g. when using Homebrew), but they can also be sourced directly, e.g.:\n          \n           folderify --completions fish | source # fish\n           source <(folderify --completions zsh) # zsh\n          \n          [possible values: bash, elvish, fish, powershell, zsh]\n\n  -h, --help\n          Print help (see a summary with '-h')\n\n  -V, --version\n          Print version\n```\n\n## Example\n\nExample generated from the Apple logo:\n![Icons from apple.iconset at resolutions from 16x16 up to 512x5125@2x, shown in Quicklook on macOS](examples/png/apple.gif)"
}
