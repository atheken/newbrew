{
  "name": "typos-cli",
  "full_name": "typos-cli",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Source code spell checker",
  "license": "Apache-2.0 or MIT",
  "homepage": "https://github.com/crate-ci/typos",
  "versions": {
    "stable": "1.16.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/crate-ci/typos/archive/refs/tags/v1.16.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "1f1d3b78d453b82c257697fcc719606e5e80c707350844ffe0f4b00b76a324c5"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/typos-cli/blobs/sha256:5fef0114a6817d2302666fbff523a1fa26ff21ab8783d454441a4aeb888ea0f1",
          "sha256": "5fef0114a6817d2302666fbff523a1fa26ff21ab8783d454441a4aeb888ea0f1"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/typos-cli/blobs/sha256:a1dd197200f1c17d1eebcc4ac42b295d42ec59259ea03034a72211a5dd3ea978",
          "sha256": "a1dd197200f1c17d1eebcc4ac42b295d42ec59259ea03034a72211a5dd3ea978"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/typos-cli/blobs/sha256:8f8e694b1732aadc0af8ca309fb7bb8a478ac6007c664dab8b59643eeb18506e",
          "sha256": "8f8e694b1732aadc0af8ca309fb7bb8a478ac6007c664dab8b59643eeb18506e"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/typos-cli/blobs/sha256:4fcf16994b6c5cc331fc651519c637fbc7f42a184abe1a4d6b294fc6be5fcbb1",
          "sha256": "4fcf16994b6c5cc331fc651519c637fbc7f42a184abe1a4d6b294fc6be5fcbb1"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/typos-cli/blobs/sha256:8e76079e9b68f8114c8ddd8cc270cae9b846ed4382fb55688b10f6aea5c4cabe",
          "sha256": "8e76079e9b68f8114c8ddd8cc270cae9b846ed4382fb55688b10f6aea5c4cabe"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/typos-cli/blobs/sha256:d1b4a5d66d954711810feb8dce7afb68cb832345efe07b32d1144f3f208f336c",
          "sha256": "d1b4a5d66d954711810feb8dce7afb68cb832345efe07b32d1144f3f208f336c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/typos-cli/blobs/sha256:298178f95645b1411717d5c392df360f4578e345ac06e4d6605787be9ad3dfc7",
          "sha256": "298178f95645b1411717d5c392df360f4578e345ac06e4d6605787be9ad3dfc7"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/typos-cli.rb",
  "ruby_source_checksum": {
    "sha256": "c48fed43cbb8eb87fd780ead30185ecdd37c9e09bb792998ce1df27e9e1ecaff"
  },
  "date_added": "2022-11-07T12:51:44+00:00",
  "readme": "# typos\n\n> **Source code spell checker**\n\nFinds and corrects spelling mistakes among source code:\n- Fast enough to run on monorepos\n- Low false positives so you can run on PRs\n\n![Screenshot](./docs/screenshot.png)\n\n[![codecov](https://codecov.io/gh/crate-ci/typos/branch/master/graph/badge.svg)](https://codecov.io/gh/crate-ci/typos)\n[![Documentation](https://img.shields.io/badge/docs-master-blue.svg)][Documentation]\n![License](https://img.shields.io/crates/l/typos.svg)\n[![Crates Status](https://img.shields.io/crates/v/typos.svg)](https://crates.io/crates/typos)\n\nDual-licensed under [MIT](LICENSE-MIT) or [Apache 2.0](LICENSE-APACHE)\n\n## Documentation\n\n- [Installation](#install)\n- [Getting Started](#getting-started)\n  - [False Positives](#false-positives)\n  - [Integrations](#integrations)\n    - [GitHub Action](docs/github-action.md)\n    - [pre-commit](docs/pre-commit.md)\n    - [Custom](#custom)\n  - [Debugging](#debugging)\n- [Reference](docs/reference.md)\n- [FAQ](#faq)\n- [Comparison with other spell checkers](docs/comparison.md)\n- [Projects using typos](https://github.com/crate-ci/typos/wiki)\n- [Benchmarks](benchsuite/runs)\n- [Design](docs/design.md)\n- [Contribute](CONTRIBUTING.md)\n- [CHANGELOG](CHANGELOG.md)\n\n## Install\n\n[Download](https://github.com/crate-ci/typos/releases) a pre-built binary\n(installable via [gh-install](https://github.com/crate-ci/gh-install)).\n\nOr use rust to install:\n```bash\ncargo install typos-cli\n```\n\nOr use [Homebrew](https://brew.sh/) to install:\n```bash\nbrew install typos-cli\n```\n\nOr use [Conda](https://conda.io/) to install:\n```bash\nconda install typos\n```\n\n## Getting Started\n\nMost commonly, you'll either want to see what typos are available with\n```bash\ntypos\n```\n\nOr have them fixed\n```bash\ntypos --write-changes\ntypos -w\n```\nIf there is any ambiguity (multiple possible corrections), `typos` will just report it to the user and move on.\n\n### False-positives\n\nSometimes, what looks like a typo is intentional, like with people's names, acronyms, or localized content.\n\nTo mark a word or an identifier (grouping of words) as valid, add it your [`_typos.toml`](docs/reference.md) by declaring itself as the valid spelling:\n```toml\n[default]\nextend-ignore-identifiers-re = [\n    # *sigh* this just isn't worth the cost of fixing\n    \"AttributeID.*Supress.*\",\n]\n\n[default.extend-identifiers]\n# *sigh* this just isn't worth the cost of fixing\nAttributeIDSupressMenu = \"AttributeIDSupressMenu\"\n\n[default.extend-words]\n# Don't correct the surname \"Teh\"\nteh = \"teh\"\n```\n\nFor cases like localized content, you can disable spell checking of file contents while still checking the file name:\n```toml\n[type.po]\nextend-glob = [\"*.po\"]\ncheck-file = false\n```\n(run `typos --type-list` to see configured file types)\n\nIf you need some more flexibility, you can completely exclude some files from consideration:\n```toml\n[files]\nextend-exclude = [\"localized/*.po\"]\n```\n\n### Integrations\n\n- [GitHub Actions](docs/github-action.md)\n- [pre-commit](docs/pre-commit.md)\n- [üêäPutout Processor](https://github.com/putoutjs/putout-processor-typos)\n- [Visual Studio Code](https://github.com/tekumara/typos-vscode)\n\n#### Custom\n\n`typos` provides several building blocks for custom native integrations\n- `-` reads from `stdin`, `--write-changes` will be written to `stdout`\n- `--diff` to provide a diff\n- `--format json` to get jsonlines with exit code 0 on no errors, code 2 on typos, anything else is an error.\n\nExamples:\n```bash\n# Read file from stdin, write corrected version to stdout\ntypos - --write-changes\n# Creates a diff of what would change\ntypos dir/file --diff\n# Fully programmatic control\ntypos dir/file --format json\n```\n\n### Debugging\n\nYou can see what the effective config looks like by running\n```bash\ntypos --dump-config -\n```\n\nYou can then see how typos is processing your project with\n```bash\ntypos --files\ntypos --identifiers\ntypos --words\n```\n\nIf you need to dig in more, you can enable debug logging with `-v`\n\n## FAQ\n\n### Why was ... not corrected?\n\ntl;dr `typos` doesn't know about it yet\n\n`typos` maintains a list of known typo corrections to keep the false positive\ncount low so it can safely run unassisted.\n\nThis is in contrast to most spell checking UIs people use where there is a\nknown list of valid words.  In this case, the spell checker tries to guess your\nintent by finding the closest-looking word.  It then has a gauge for when a\nword isn't close enough and assumes you know best.  The user has the\nopportunity to verify these corrections and explicitly allow or reject them.\n\nFor more on the trade offs of these approaches, see [Design](docs/design.md).\n\n- To correct it locally, see also our [False Positives documentation](#false-positives).\n- To contribute your correction, see [Contribute](CONTRIBUTING.md)\n\n[Crates.io]: https://crates.io/crates/typos-cli\n[Documentation]: https://docs.rs/typos"
}
