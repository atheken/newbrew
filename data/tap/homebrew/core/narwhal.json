{
  "name": "narwhal",
  "full_name": "narwhal",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "General purpose JavaScript platform for building applications",
  "license": "MIT",
  "homepage": "https://github.com/280north/narwhal",
  "versions": {
    "stable": "0.3.2",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/280north/narwhal/archive/v0.3.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "a26ac20097839a5c7b5de665678fb76699371eea433d6e3b820d4d8de2ad4937"
    },
    "head": {
      "url": "https://github.com/280north/narwhal.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/narwhal/blobs/sha256:74667a2b115b6ee5a337b291882a06a3df9b4292a5a2b11fb5470e38abd228bc",
          "sha256": "74667a2b115b6ee5a337b291882a06a3df9b4292a5a2b11fb5470e38abd228bc"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [
    "spidermonkey",
    "elixir-build"
  ],
  "conflicts_with_reasons": [
    "both install a js binary",
    "both install `json` binaries"
  ],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": true,
  "deprecation_date": "2023-02-16",
  "deprecation_reason": "deprecated_upstream",
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/narwhal.rb",
  "ruby_source_checksum": {
    "sha256": "07f9870f1d0621f9bdaa004c6144e98fa72395d371c054ffa59d5b932e33ffc0"
  },
  "date_added": "2010-05-04T21:16:24-07:00",
  "readme": "\n<script>\nfunction addEvent(obj, evType, fn) { \n if (obj.addEventListener){ \n   obj.addEventListener(evType, fn, false); \n   return true; \n } else if (obj.attachEvent){ \n   var r = obj.attachEvent(\"on\"+evType, fn); \n   return r; \n } else { \n   return false; \n } \n}\n\naddEvent(window, 'load',\n    function() {\n        document.getElementById('github_notice').style.display='none';\n    }\n);\n</script>\n\nNarwhal\n=======\n\nA general purpose JavaScript platform\n-------------------------------------\n\nNarwhal is a cross-platform, multi-interpreter, general purpose JavaScript\nplatform. It aims to provide a solid foundation for building JavaScript\napplications, primarily outside the web browser. Narwhal includes a package\nmanager, module system, and standard library for multiple JavaScript\ninterpreters. Currently Narwhal's [Rhino](http://www.mozilla.org/rhino/)\nsupport is the most complete, but [other engines](engines.html) are available\ntoo.\n\nNarwhal's standard library conforms to the [CommonJS\nstandard](http://wiki.commonjs.org). It is designed to work with multiple\nJavaScript interpreters, and to be easy to add support for new interpreters.\nWherever possible, it is implemented in pure JavaScript to maximize reuse of\ncode among engines.\n\nCombined with [Jack](http://jackjs.org/), a\n[Rack](http://rack.rubyforge.org/)-like\n[JSGI](http://jackjs.org/jsgi-spec.html) compatible library, Narwhal provides a\nplatform for creating server-side JavaScript web applications and frameworks\nsuch as [Nitro](http://www.nitrojs.org/).\n\n\n### Homepage:\n\n* [http://narwhaljs.org/](http://narwhaljs.org/)\n\n### Source & Download:\n\n* [http://github.com/tlrobinson/narwhal/](http://github.com/tlrobinson/narwhal/)\n\n### Mailing list:\n\n* [http://groups.google.com/group/narwhaljs](http://groups.google.com/group/narwhaljs)\n\n### IRC:\n\n* [\\#narwhal on irc.freenode.net](http://webchat.freenode.net/?channels=narwhal)\n\n\nDocumentation\n-------------\n\n<div id=\"github_notice\">\n<strong>Note:</strong> If you are viewing this on GitHub, the links below will\nnot work. Find the pages listed below in the <strong>docs/</strong> directory\nof this repository.\n</div>\n\n* [Quick Start](quick-start.html)\n* [Packages](packages.html)\n* [How to Install Packages](packages.html)\n* [How to Build Packages](packages-howto.html)\n* [Modules](modules.html)\n* [Virtual Environments / Seas](sea.html)\n* [How to Build Engines](engines.html)\n* [How Narwhal Works](narwhal.html)\n\n### Quick Start\n\nDownload Narwhal.\n\n* download and extract the\n  [zip](http://github.com/280north/narwhal/zipball/0.2) or\n  [tar](http://github.com/tlrobinson/narwhal/tarball/0.2) archive, or\n* `git clone git://github.com/280north/narwhal.git`\n\nPut Narwhal on your `PATH` environment variable.\n\n* `export PATH=$PATH:~/narwhal/bin`, or\n* `source narwhal/bin/activate`\n\nRun `narwhal` or `js` (they are equivalent).\n\n* `js narwhal/examples/hello`\n\nLook at the options for Narwhal.\n\n* `js --help`\n\nAnd for Tusk, the package manager and virtual environment tool.\n\n* `tusk help`\n\n### My First Web Server\n\nCreate a project \"hello-web\".\n\n    tusk init hello-web\n    cd hello-web\n\nEnter your project as a \"virtual environment\" using `activate` or `sea` so that\nits libraries, binaries, and packages get automatically installed when you run\nNarwhal.\n\n    source bin/activate\n\nor\n\n    bin/sea\n\nInstall some packages you will need, like Jack, the JSGI standard library for\ninteroperable web services.\n\n    tusk install jack\n\nTusk gets downloaded and installed at \"hello-web/packages/jack\".\n\nCreate your `jackconfig.js`.\n\n    exports.app = function(env) {\n        var text = \"Hello, Web!\";\n        return {\n            status : 200,\n            headers : {\n                \"Content-Type\" : \"text/plain\",\n                \"Content-Length\" : String(text.length)\n            },\n            body : [text]\n        };\n    };\n\nRun it!\n\n    jackup\n\n`jackup` looks for a file called `jackconfig.js` in the current directory, or\nyou can specify a path to a Jack application.\n\nOpen [http://localhost:8080/](http://localhost:8080/) in your web browser.\n\n### Module System Basics\n\nNarwhal \"scripts\" are [CommonJS](http://wiki.commonjs.org/wiki/Modules/1.1)\ncompatible modules, much like Python or Ruby modules.  You do not have to use\nmodule pattern boilerplate; every module has its own local scope.  You can get\nthe exports object of another module by calling `require`.\n\n    var FS = require(\"file\");\n    FS.isFile(\"foo.txt\");\n\nModule identifiers for `require` come in three flavors: \"top-level\",\n\"relative\", and \"absolute\".  In the above case, `file` is a \"top-level\"\nidentifier, so it will load any module called `file.js` in the `lib` directory\nof whichever package comes first in the load path.  Relative identifiers have\n`.` or `..` as their first term, and terms are delimited with `/`.  So, in the\n`foo/bar` module, `require('./baz')` will load `foo/baz`.  Absolute module\nidentifiers should not be used directly, but are produced when you execute a\nprogram module outside the module path.  The module is identified by its\nfully-qualified path, starting with `/`.\n\nYou can export an object by assigning it to `exports`.\n\n    exports.foo = function () {\n        return \"Hello\";\n    };\n\nIn a module, you also get a `module` object that has `module.id` and\n`module.path` properties so you can inspect your own top-level module\nidentifier, and the path of your own module file.  You also get a\n`require.main` property that tells you the top-level module identifier of the\nmodule that started the program.\n\n    if (require.main == module)\n        main();\n\n    var settings = require(require.main);\n\n    var FS = require(\"file\");\n    var path = FS.path(module.path);\n    var indexHtml = path.resolve(\"./template/index.html\").read();\n\nBeyond the CommonJS specification, you also get the `print` function and the\n`system` module object for free.  The `print` function accepts variadic\narguments and writes a single line containing the arguments delimited by spaces\nto standard output and flushes.  The `system` module can be explicitly required\nwith `require(\"system\")` as is encouraged since it is necessary for CommonJS\ncompliance.  Do not use `print` or `system` in standard libraries.\n\n\n### Summary of Included Modules\n\n * `system`: `args`, `env`, `stdin`, `stdout`, `stderr`\n * `io`: `ByteIO` (`read`, `write`, `toByteString`, `toString`), `StringIO`\n   (`read`, `write`, `copy`, `flush`, `iterator`, `forEach`, `readLine`,\n   `readLines`, `next`, `print`, `toString`, `substring`, `slice`, `substr`), `IO`\n   (`read`, `write`, `copy`, `flush`, `close`, `isatty`), `TextInputStream`\n   (`raw`, `readLine`, `next`, `iterator`, `forEach`, `close`), `TextOutputStream`\n   (`write`, `writeLine`, `writeLines`, `print`, `flush`, `close`)\n * `file`: `open`, `read`, `write`, `copy`, `link`, `symlink`, `rename`,\n   `move`, `remove`, `mkdir`, `mkdirs`, `rmdir`, `rmtree`, `touch`, `chmod`,\n   `chown`, `list`, `listTree`, `listDirectoryTree`, `copyTree`, `isAbsolute`,\n   `isRelative`, `isDrive`, `isReadable`, `isWritable`, `glob`, `globPaths`,\n   `fnmatch`, `match`, `cwd`, `cwdPath`, `join`, `split`, `resolve`,\n   `relative`, `absolute`, `normal`, `canonical`, `root`, `dirname`,\n   `basename`, `extension`, `path`, `new Path` (`to`, `from`, ...)\n * `os`: `exit`, `sleep`, `popen` (`wait`, `stdin`, `stdout`, `stderr`,\n   `communicate` (`status`, `stdin`, `stdout`, `stderr`)), `system`, `command`,\n   `status`, `enquote`\n * `binary`: `Binary` (`toArray`, `toByteArray`, `toByteString`, `indexOf`,\n   `lastIndexOf`, `valueOf`), `ByteString` (`length`, `toString`, `split`,\n   `slice`, `substr`, `substring`, `toSource`), `ByteArray` (`toString`, `pop`,\n   `push`, `extendRight`, `unshift`, `extendLeft`, `reverse`, `slice`,\n   `splice`, `split`, `forEach`, `every`, `some`, `map`, `reduce`,\n   `reduceRight`, `displace`, `toSource`)\n * `assert`: `AssertionError`, `fail`, `ok`, `equal`, `notEqual`, `deepEqual`,\n   `notDeepEqual`, `strictEqual`, `notStrictEqual`, `throws`, `Assert` (`pass`,\n   `error`, `section`)\n * `test`: `run`, `Log` (`flush`, `pass`, `fail`, `error`, `begin`, `end`,\n   `report`, `print`, `section`, `Assert`), `Section` (`print`)\n * `util`: `operator`, `no`, `object`, `array`, `string`, `apply`, `copy`,\n   `deepCopy`, `repr`, `keys`, `values`, `items`, `len`, `has`, `get`, `set`,\n   `getset`, `cut`, `put`, `first`, `last`, `update`, `deepUpdate`, `complete`,\n   `deepComplete`, `remove`, `range`, `forEach`, `forEachApply`, `map`,\n   `mapApply`, `every`, `some`, `all`, `any`, `reduce`, `reduceRight`, `zip`,\n   `transpose`, `enumerate`, `is`, `eq`, `ne`, `lt`, `gt`, `le`, `ge`, `mul`,\n   `by`, `compare`, `sort`, `sorted`, `reverse`, `reversed`, `hash`, `unique`,\n   `escape`, `enquote`, `expand`, `trim`, `trimBegin`, `trimEnd`, `padBegin`,\n   `padEnd`, `splitName`, `joinName`, `lower`, `upper`, `camel`, `title`\n * `http`: `open`, `read`\n * `sha`, `sha256`, `md5`, `md4`, `crc32`: `hash`\n * `utf8`, `base64`, `base16`: `encode`, `decode`\n * `jsmin`: `encode`\n * `jsonpath`: `resolve`\n * `logger`: `Logger` (`add`, `format`)\n * `args`: `Parser` (`parse`, `option`, (`_`, `__`, `name`, `displayName`,\n   `getName`, `getDisplayName`, `action`, `set`, `push`, `inc`, `dec`,\n   `choices`, `def`, `validate`, `input`, `output`, `number`, `oct`, `hex`,\n   `integer`, `natural`, `whole`, `bool`, `todo`, `inverse`, `help`, `halt`,\n   `hidden`), `group` (`option`), `def`, `reset`, `command`, `arg`, `args`,\n   `act`, `action`, `helpful`, `usage`, `help`, `printHelp`, `printUsage`,\n   `printCommands`, `printOption`, `printOptions`, `error`, `exit`, `print`,\n   `check`), `UsageError`, `ConfigurationError`\n * `term`: `Stream` (`enable`, `disable`, `writeCode`, `print`, `printError`,\n   `write`, `update`, `moveTo`, `moveBy`, `home`, `clear`, `clearUp`,\n   `clearDown`, `clearLine`, `clearRight`, `error` (`print`, `write`)),\n   `colors`, `stream`\n * `uuid`: `uuid`\n * `mime`: `bestMatch`, `parseMimeType`, `parseMediaRange`,\n   `fitnessAndQualityParsed`, `qualityParsed`, `quality`\n * `html`: `escapeHTML`, `stripTags`\n * `ref-send`, `promise`, `events`: `when`, `defer` (`resolve`, `reject`,\n   `promise`),\n * `event-loop`: `enqueue`\n * `printf`: `printf`, `fprintf`, `sprintf`\n * `querystring`: `unescape`, `escape`, `stringify`, `parseQuery`\n * `sandbox`: `Sandbox`\n * `loader`: `Loader` (`resolve`, `resolvePkg`, `find`, `fetch`, `load`,\n   `reload`, `isLoaded`, `hasChanged`, `paths`, `extensions`), `resolve`,\n   `resolvePkg`\n * `packages`: `order`, `catalog`\n * `interpreter`: `Context` (`eval`, `importScript`, `importScripts`, `Module`,\n   `Function`)\n * `zip`: `unzip`, `Unzip` (`iterator`, `forEach`, `close`), `Entry`\n   (`getName`, `isDirectory`, `open`, `read`, `copy`)\n\nContributors\n------------\n\n* [Tom Robinson](http://tlrobinson.net/)\n* [Kris Kowal](http://askawizard.blogspot.com/)\n* [George Moschovitis](http://www.gmosx.com/)\n* [Kevin Dangoor](http://www.blueskyonmars.com/)\n* Hannes Wallnöfer\n* Sébastien Pierre\n* Irakli Gozalishvili\n* [Christoph Dorn](http://www.christophdorn.com/)\n* Zach Carter\n* Nathan L. Smith\n* Jan Varwig\n* Mark Porter\n* [Isaac Z. Schlueter](http://blog.izs.me/)\n* [Kris Zyp](http://www.sitepen.com/blog/author/kzyp/)\n* [Nathan Stott](http://nathan.whiteboard-it.com/)\n* [Toby Ho](http://tobyho.com)\n* Abhinav Gupta\n\n\nLicense\n-------\n\nCopyright (c) 2009, 280 North Inc. <[280north.com](http://280north.com/)\\>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\nTHE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
}
