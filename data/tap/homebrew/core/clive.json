{
  "name": "clive",
  "full_name": "clive",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Automates terminal operations",
  "license": "MIT",
  "homepage": "https://github.com/koki-develop/clive",
  "versions": {
    "stable": "0.12.7",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/koki-develop/clive/archive/refs/tags/v0.12.7.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "808d05ba49c827a449117fc80082bf7df7708e9c46db630364fc292f239165b1"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clive/blobs/sha256:b7992bc1cfebdd02d7c0251f115485d9bc11f7062dc2eb91c3f48199bd3120e7",
          "sha256": "b7992bc1cfebdd02d7c0251f115485d9bc11f7062dc2eb91c3f48199bd3120e7"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clive/blobs/sha256:b7992bc1cfebdd02d7c0251f115485d9bc11f7062dc2eb91c3f48199bd3120e7",
          "sha256": "b7992bc1cfebdd02d7c0251f115485d9bc11f7062dc2eb91c3f48199bd3120e7"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clive/blobs/sha256:b7992bc1cfebdd02d7c0251f115485d9bc11f7062dc2eb91c3f48199bd3120e7",
          "sha256": "b7992bc1cfebdd02d7c0251f115485d9bc11f7062dc2eb91c3f48199bd3120e7"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clive/blobs/sha256:61a1ab51613a33005f9ae8c097687c1d3c4eea6794825b45653504f987284e31",
          "sha256": "61a1ab51613a33005f9ae8c097687c1d3c4eea6794825b45653504f987284e31"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clive/blobs/sha256:61a1ab51613a33005f9ae8c097687c1d3c4eea6794825b45653504f987284e31",
          "sha256": "61a1ab51613a33005f9ae8c097687c1d3c4eea6794825b45653504f987284e31"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clive/blobs/sha256:61a1ab51613a33005f9ae8c097687c1d3c4eea6794825b45653504f987284e31",
          "sha256": "61a1ab51613a33005f9ae8c097687c1d3c4eea6794825b45653504f987284e31"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clive/blobs/sha256:1384d4c49fd10647b17d95dc22fd4f38358de2b5d1f7da5c20101cf94aabb0c7",
          "sha256": "1384d4c49fd10647b17d95dc22fd4f38358de2b5d1f7da5c20101cf94aabb0c7"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [
    "ttyd"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/clive.rb",
  "ruby_source_checksum": {
    "sha256": "358bd604b24cea04560cabb73be141da5edf3310ac27b5ba4c0485e4354147be"
  },
  "date_added": "2023-05-19T12:39:38+09:00",
  "readme": "<p align='center'>\n<img src=\"./assets/logo_light.svg#gh-light-mode-only\" />\n<img src=\"./assets/logo_dark.svg#gh-dark-mode-only\" />\n</p>\n\n<p align=\"center\">\nAutomates terminal operations.\n</p>\n\n<p align='center'>\n<a href=\"https://github.com/koki-develop/clive/releases/latest\"><img alt=\"GitHub release (latest by date)\" src=\"https://img.shields.io/github/v/release/koki-develop/clive?style=flat\"></a>\n<a href=\"https://github.com/koki-develop/clive/releases/latest\"><img alt=\"GitHub all releases\" src=\"https://img.shields.io/github/downloads/koki-develop/clive/total?style=flat\"></a>\n<a href=\"./LICENSE\"><img src=\"https://img.shields.io/github/license/koki-develop/clive?style=flat\" /></a>\n<a href=\"https://github.com/koki-develop/clive/actions/workflows/ci.yml\"><img alt=\"GitHub Workflow Status\" src=\"https://img.shields.io/github/actions/workflow/status/koki-develop/clive/ci.yml?branch=main&logo=github&style=flat\" /></a>\n<a href=\"https://codeclimate.com/github/koki-develop/clive/maintainability\"><img alt=\"Code Climate maintainability\" src=\"https://img.shields.io/codeclimate/maintainability/koki-develop/clive?logo=codeclimate&style=flat\" /></a>\n<a href=\"https://goreportcard.com/report/github.com/koki-develop/clive\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/koki-develop/clive\" /></a>\n<a href=\"https://codecov.io/github/koki-develop/clive\"><img alt=\"Codecov\" src=\"https://img.shields.io/codecov/c/github/koki-develop/clive?logo=codecov\" /></a>\n</p>\n\n![](./examples/demo/demo.gif)\n\n<p align=\"center\">\nEnglish | <a href=\"./README.ja.md\">日本語</a>\n</p>\n\n# cLive\n\n- [Prerequisite](#information_source-prerequisite)\n- [Installation](#zap-installation)\n- [Getting Started](#beginner-getting-started)\n- [Commands](#rocket-commands)\n  - [`init`](#clive-init)\n  - [`start`](#clive-start)\n  - [`validate`](#clive-validate)\n  - [`completion`](#clive-completion)\n- [Configuration](#gear-configuration)\n  - [`actions`](#actions)\n  - [`settings`](#settings)\n- [Examples](#book-examples)\n- [License](#memo-license)\n\n## :information_source: Prerequisite\n\ncLive requires [ttyd](https://tsl0922.github.io/ttyd/) (version `1.7.0` or higher) to be installed.  \nFor example, if you are using homebrew, you can install it with `brew install`.\n\n```sh\n$ brew install ttyd\n```\n\nSee the [ttyd documentation](https://github.com/tsl0922/ttyd#installation) for more information.\n\n## :zap: Installation\n\n> **Note**\n> There are prerequisites for using cLive. See [`Prerequisite`](#information_source-prerequisite) for details.\n\n### Homebrew\n\n```sh\n$ brew install clive\n```\n\n### Homebrew Tap\n\n```sh\n$ brew install koki-develop/tap/clive\n```\n\n### `go install`\n\n```sh\n$ go install github.com/koki-develop/clive@latest\n```\n\n### Releases\n\nDownload the binary from the [releases page](https://github.com/koki-develop/clive/releases/latest).\n\n## :beginner: Getting Started\n\nFirst, run `clive init`.\n\n```sh\n$ clive init\nCreated ./clive.yml\n```\n\nA file named `clive.yml` will then be created with the following contents:\n\n```yaml\n# documentation: https://github.com/koki-develop/clive#settings\nsettings:\n  loginCommand: [\"bash\", \"--login\"]\n  fontSize: 22\n  defaultSpeed: 10\n\n# documentation: https://github.com/koki-develop/clive#actions\nactions:\n  - pause\n  - type: echo 'Welcome to cLive!'\n  - key: enter\n```\n\nFinally, run `clive start` to launch the browser and start cLive.\n\n```sh\n$ clive start\n```\n\n## :rocket: Commands\n\nAvailable commands:\n\n- [`init`](#clive-init) - Create a config file.\n- [`start`](#clive-start) - Start cLive actions.\n- [`validate`](#clive-validate) - Validate a config file.\n- [`completion`](#clive-completion) - Generate the autocompletion script for the specified shell.\n\n### `clive init`\n\nCreate a config file.\n\n```sh\n$ clive init\n```\n\n| Flag             | Default       | Description       |\n| ---------------- | ------------- | ----------------- |\n| `-c`, `--config` | `./clive.yml` | Config file name. |\n\n### `clive start`\n\nStart cLive actions.\nSee [`Configuration`](#gear-configuration) for the config file.\n\n```sh\n$ clive start\n```\n\n| Flag             | Default       | Description       |\n| ---------------- | ------------- | ----------------- |\n| `-c`, `--config` | `./clive.yml` | Config file name. |\n\n### `clive validate`\n\nValidate a config file.\n\n```sh\n$ clive validate\n```\n\n| Flag             | Default       | Description       |\n| ---------------- | ------------- | ----------------- |\n| `-c`, `--config` | `./clive.yml` | Config file name. |\n\n### `clive completion`\n\nGenerate the autocompletion script for clive for the specified shell.  \nSee each sub-command's help for details on how to use the generated script.\n\n```sh\n$ clive completion <shell>\n\n# e.g.\n$ clive completion bash\n$ clive completion bash --help\n```\n\nAvailable shells:\n\n- bash\n- fish\n- powershell\n- zsh\n\n## :gear: Configuration\n\nThe config file consists of `actions` and `settings`.\n\n- [`actions`](#actions) - Actions to run.\n- [`settings`](#settings) - Basic settings (font size, default speed, etc.) .\n\n### `actions`\n\nActions to run.  \nAvailable actions:\n\n- [`type`](#type) - Type characters.\n- [`key`](#key) - Enter special keys.\n- [`ctrl`](#ctrl) - Press the Ctrl key with other keys.\n- [`sleep`](#sleep) - Sleep for a specified number of milliseconds.\n- [`pause`](#pause) - Pause actions.\n- [`screenshot`](#screenshot) - Take a screenshot.\n\n#### `type`\n\nType characters.\n\n| Field   | Required | Default | Description                                 |\n| ------- | -------- | ------- | ------------------------------------------- |\n| `type`  | **Yes**  | N/A     | Characters to type.                         |\n| `count` | No       | `1`     | Number of times to repeat the action.       |\n| `speed` | No       | `10`    | Interval between key typing (milliseconds). |\n\n```yaml\n# e.g.\nactions:\n  - type: echo 'Hello World'\n    count: 10 # Optional\n    speed: 100 # Optional\n```\n\n#### `key`\n\nEnter special keys.  \nAvailable keys:\n\n- `esc`\n- `backspace`\n- `tab`\n- `enter`\n- `left`\n- `up`\n- `right`\n- `down`\n- `space`\n\n| Field   | Required | Default | Description                                 |\n| ------- | -------- | ------- | ------------------------------------------- |\n| `key`   | **Yes**  | N/A     | Special key to type.                        |\n| `count` | No       | `1`     | Number of times to repeat the action.       |\n| `speed` | No       | `10`    | Interval between key typing (milliseconds). |\n\n```yaml\n# e.g.\nactions:\n  - key: enter\n    count: 10 # Optional\n    speed: 100 # Optional\n```\n\n#### `ctrl`\n\nPress the Ctrl key with other keys.\n\n| Field   | Required | Default | Description                                 |\n| ------- | -------- | ------- | ------------------------------------------- |\n| `ctrl`  | **Yes**  | N/A     | Characters to enter with the ctrl key.      |\n| `count` | No       | `1`     | Number of times to repeat the action.       |\n| `speed` | No       | `10`    | Interval between key typing (milliseconds). |\n\n```yaml\n# e.g.\nactions:\n  - ctrl: c # Ctrl+c\n    count: 10 # Optional\n    speed: 100 # Optional\n```\n\n#### `sleep`\n\nSleep for a specified number of milliseconds.\n\n| Field   | Required | Default | Description                   |\n| ------- | -------- | ------- | ----------------------------- |\n| `sleep` | **Yes**  | N/A     | Time to sleep (milliseconds). |\n\n```yaml\n# e.g.\nactions:\n  - sleep: 3000 # Sleep for 3 seconds.\n```\n\n#### `pause`\n\nPause actions.  \nPress enter to continue.\n\n```yaml\n# e.g.\nactions:\n  - pause\n```\n\n#### `screenshot`\n\nTake a screenshot.  \nScreenshots are saved in `screenshots/`.  \nThe directory to save the screenshots can be changed in [`settings.screenshotsDir`](#screenshotsdir).\n\n| Field        | Required | Default                               | Description                  |\n| ------------ | -------- | ------------------------------------- | ---------------------------- |\n| `screenshot` | No       | `<ACTION_INDEX>_<yyyymmddHHMMSS>.png` | File name of the screenshot. |\n\n```yaml\n# e.g.\nactions:\n  - screenshot\n  - screenshot: foobar.png # Optional\n```\n\n### `settings`\n\nBasic settings.  \nAvailable settings:\n\n- [`loginCommand`](#logincommand) - Login command and args.\n- [`fontSize`](#fontsize) - Font size.\n- [`fontFamily`](#fontfamily) - Font family.\n- [`defaultSpeed`](#defaultspeed) - Default interval between key typing.\n- [`skipPauseBeforeQuit`](#skippausebeforequit) - Whether to skip pausing before quitting.\n- [`screenshotsDir`](#screenshotsdir) - Directory to save screenshots.\n- [`browserBin`](#browserbin) - Path to an executable browser binary.\n- [`headless`](#headless) - Whether to run the browser in headless mode.\n- [`width`](#width) - Window width.\n- [`height`](#height) - Window height.\n\n#### `loginCommand`\n\nLogin command and args.  \nDefault: `[\"bash\", \"--login\"]`.\n\n```yaml\n# e.g.\nsettings:\n  loginCommand: [\"zsh\", \"--login\"]\n```\n\n#### `fontSize`\n\nFont size.  \nDefault: `22`\n\n```yaml\n# e.g.\nsettings:\n  fontSize: 36\n```\n\n#### `fontFamily`\n\nFont family.\n\n```yaml\n# e.g.\nsettings:\n  fontFamily: monospace\n```\n\n#### `defaultSpeed`\n\nDefault interval between key typing.  \nDefault: `10`\n\n```yaml\n# e.g.\nsettings:\n  defaultSpeed: 100\n```\n\n#### `skipPauseBeforeQuit`\n\nWhether to skip pausing before quitting.  \nDefault: `false`\n\n```yaml\n# e.g.\nsettings:\n  skipPauseBeforeQuit: true\n```\n\n#### `screenshotsDir`\n\nDirectory to save screenshots.  \nDefault: `screenshots`\n\n```yaml\n# e.g.\nsettings:\n  screenshotsDir: path/to/pictures\n```\n\n#### `browserBin`\n\nPath to an executable browser binary.  \nSee the [go-rod documentation](https://github.com/go-rod/go-rod.github.io/blob/master/compatibility.md#supported-browsers) for supported browsers.\n\n```yaml\n# e.g.\nsettings:\n  browserBin: /Applications/Sidekick.app/Contents/MacOS/Sidekick # use Sidekick\n```\n\n#### `headless`\n\nWhether to run the browser in headless mode.  \nDefault: `false`\n\n```yaml\n# e.g.\nsettings:\n  headless: true\n```\n\n#### `width`\n\nWindow width.\n\n```yaml\n# e.g.\nsettings:\n  width: 1600\n```\n\n#### `height`\n\nWindow height.\n\n```yaml\n# e.g.\nsettings:\n  height: 800\n```\n\n## :book: Examples\n\nFor more examples see the [`examples/`](./examples/) directory.\n\n## :memo: License\n\n[MIT License](./LICENSE)"
}
