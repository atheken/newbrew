{
  "name": "fuego-firestore",
  "full_name": "fuego-firestore",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Command-line client for the Firestore database",
  "license": "GPL-3.0-only",
  "homepage": "https://github.com/sgarciac/fuego",
  "versions": {
    "stable": "0.33.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/sgarciac/fuego/archive/refs/tags/0.33.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "25281f2242fe41b0533255a0d4f0450b1f3f8622d1585f8ae8cda1b116ca75d0"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fuego-firestore/blobs/sha256:2872ea1f2d75bf1fefab9c7865e37f875ba0441734ce0b70666e394d4c10efed",
          "sha256": "2872ea1f2d75bf1fefab9c7865e37f875ba0441734ce0b70666e394d4c10efed"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fuego-firestore/blobs/sha256:dc240ed9789e51dd98fc97fdf57ef8efd0e958a1d4cdcc0ca04e0e64514428c5",
          "sha256": "dc240ed9789e51dd98fc97fdf57ef8efd0e958a1d4cdcc0ca04e0e64514428c5"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fuego-firestore/blobs/sha256:40f3d2090e79cdb60d7dd33c6e73770b95315104946b4bf3c92411818440f26e",
          "sha256": "40f3d2090e79cdb60d7dd33c6e73770b95315104946b4bf3c92411818440f26e"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fuego-firestore/blobs/sha256:51cd39fc722f623c19f313938fe4d361e180ec432e4e90f5941c6144e8a30f3b",
          "sha256": "51cd39fc722f623c19f313938fe4d361e180ec432e4e90f5941c6144e8a30f3b"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fuego-firestore/blobs/sha256:d9b1c188b58dcf13c0739fb9d28ee1c5120896b8c102aaf021116fd95ab8808e",
          "sha256": "d9b1c188b58dcf13c0739fb9d28ee1c5120896b8c102aaf021116fd95ab8808e"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fuego-firestore/blobs/sha256:74a6937a4934a46b957dcfc32647258e6a6cd5e6f3ab169daa8289323eadce36",
          "sha256": "74a6937a4934a46b957dcfc32647258e6a6cd5e6f3ab169daa8289323eadce36"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fuego-firestore/blobs/sha256:700165708e3a16b6d3abb5da34713a92b34dbb1acbb5b212c23165192938748f",
          "sha256": "700165708e3a16b6d3abb5da34713a92b34dbb1acbb5b212c23165192938748f"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fuego-firestore/blobs/sha256:3cdf98e557eef00cb0e50546607d62df01656e47f1834b270041755b64693045",
          "sha256": "3cdf98e557eef00cb0e50546607d62df01656e47f1834b270041755b64693045"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/fuego-firestore.rb",
  "ruby_source_checksum": {
    "sha256": "dc09221d3ab7262ad310305f78f60d0e86a586e18e869bcbd564deddb69e9dbe"
  },
  "date_added": "2022-09-19T21:38:40+00:00",
  "readme": " *PLEASE READ THE [STABLE VERSION DOCUMENTATION](https://sgarciac.github.io/fuego/) IF YOU ONLY WANT TO USE FUEGO*\n\n# fuego\n\n[![Mentioned in Awesome Firebase](https://awesome.re/mentioned-badge.svg)](https://github.com/jthegedus/awesome-firebase)\n\nA command-line firestore client.\n\n## Installation\n\n### Precompiled binaries\n\nDownload one of the precompiled binaries from the [latest\nrelease](https://github.com/sgarciac/fuego/releases). (builds available for\nwindows, Linux, Macintosh/Darwin)\n\n### Snap\n\nLinux users can install fuego via snap. However, you'll probably need to install it using --devmode for it to be able to access\nto your GOOGLE_APPLICATION_CREDENTIALS file.\n\n```sh\nsnap install fuego --devmode\n```\n\n### Building it locally\n\nIf you are comfortable building programs, you can build fuego yourself using [go](https://golang.org/dl/):\n\n```sh\ngit clone https://github.com/sgarciac/fuego.git\ncd fuego\ngo build . # and 'go install .' if you want\n./fuego --help\n```\n\n## Usage\n\n### Authentication\n\nYou'll need a Service Account key file to be able to access your project's\nfirestore database. To create a service account private key file, if you don't\nhave one, go to your firebase project console, then _Project settings_ and then\nclick on the _Service accounts_ tab and generate a new private key.\n\nOnce you have your service account key file, fuego will be able to find it using\none of the following options:\n\n1. Use the ```--credentials``` flag every time you execute fuego, i.e.:\n\n```sh\nfuego --credentials ./my-account-service-private-key.json get mycollection mydocumentid\n```\n\nor\n\n2. Via the GOOGLE_APPLICATION_CREDENTIALS environment variable:\n\n```sh\nexport GOOGLE_APPLICATION_CREDENTIALS=./my-account-service-private-key.json\nfuego get mycollection mydocumentid\n```\n\n### Project\n\nFirestore databases belong to projects. The google application credentials file\nusually define the project that firestore will work on. You can however, if\nnecessary, define the project using the global option ```--projectid```.\n\n### Firestore emulator usage\n\nIf you need to use fuego with the firestore emulator instead of a real firestore\ndatabase, set the FIRESTORE_EMULATOR_HOST environment variable to something\nappropriate (usually, localhost:8080). **NOTE**: When using the emulator, you\nare likely not using a GOOGLE_APPLICATION_CREDENTIALS file. Therefore, no\nproject will be defined. **You can set a project** using the global option\n```--projectid```, otherwise it will use 'default' as the project identifier.\n\n### List collections\n\n```sh\nfuego collections\n```\n\nWill return the list of project's collections.\n\n### Writing and reading data\n\nYou can add new documents, using JSON:\n\n```sh\nfuego add people '{\"name\": \"sergio\", \"age\": 41}'\n# Rv7ZfnLQWprdXuulqMdf <- fuego prints the ID of the newly created document\n```\n\nOf fetch them, using the ID:\n\n```sh\nfuego get people Rv7ZfnLQWprdXuulqMdf\n# {\n#     \"CreateTime\": \"2021-08-22T23:53:31.439821Z\",\n#     \"Data\": {\n#         \"age\": 41,\n#         \"name\": \"sergio\"\n#     },\n#     \"ID\": \"Rv7ZfnLQWprdXuulqMdf\",\n#     \"ReadTime\": \"2021-08-23T01:57:12.30626Z\",\n#     \"UpdateTime\": \"2021-08-22T23:53:31.439821Z\"\n# }\n\n\n```\n\nOr fetch them using multiple ids:\n```sh\nfuego  getall people WkVlcPgEJIXzdyQS6H5d f2TbJA5DIhBfXwKrMbHP\n[\n# {\n#     \"CreateTime\": \"2021-08-22T23:53:31.439821Z\",\n#     \"Data\": {\n#         \"age\": 41,\n#         \"name\": \"sergio\"\n#     },\n#     \"ID\": \"WkVlcPgEJIXzdyQS6H5d\",\n#     \"ReadTime\": \"2021-08-23T01:57:12.30626Z\",\n#     \"UpdateTime\": \"2021-08-22T23:53:31.439821Z\"\n# },\n# {\n#     \"CreateTime\": \"2021-08-22T23:53:31.439821Z\",\n#     \"Data\": {\n#         \"age\": 23,\n#         \"name\": \"rohan\"\n#     },\n#     \"ID\": \"f2TbJA5DIhBfXwKrMbHP\",\n#     \"ReadTime\": \"2021-08-23T01:57:12.30626Z\",\n#     \"UpdateTime\": \"2021-08-22T23:53:31.439821Z\"\n# }\n# ]\n```\n\nYou can also replace an existing document:\n\n```\nfuego set people/Rv7ZfnLQWprdXuulqMdf '{\"name\": \"sergio\", \"age\": 42}' # It's my birthday!\n```\n\n*Note*: we can either use the arguments ```collection-path document-id\njson-data``` or ```document-path json-data```. This is also the case for the\ndelete and the get commands.\n\nIn both ```add``` and ```set``` commands, the document argument can be either a\nJSON string (if it starts with the character ```{```) or a path to a JSON file, i.e.:\n\n```sh\nfuego add animals ./dog.json\n```\n\nTo delete a document:\n\n```sh\nfuego delete people/Rv7ZfnLQWprdXuulqMdf\n```\n\nnote: this won't delete any subcollection under the document.\n\nTo delete a document including subcollections, use the ```--recursive, -r``` flag.\nUsing the ```-r``` flag will also delete missing documents. A missing document is a \ndocument that does not exist but has sub-documents.\n```sh\nfuego delete -r people/Rv7ZfnLQWprdXuulqMdf\n```\n\nIt's also possible to delete multiple documents without transaction\n```sh\nfuego delete people Rv7ZfnLQWprdXuulqMdf,Rv7ZfnLQWprdXuulqMde\n```\n\n\nTo update an existing document:\n\n```sh\nfuego set --merge people Rv7ZfnLQWprdXuulqMdf '{\"location\": \"unknown\"}'\n# Rv7ZfnLQWprdXuulqMdf <- fuego prints the ID of the updated document\nfuego get people Rv7ZfnLQWprdXuulqMdf\n\n# {\n#     \"CreateTime\": \"2021-08-22T23:53:31.439821Z\",\n#     \"Data\": {\n#         \"age\": 41,\n#         \"name\": \"sergio\",\n#         \"location\": \"unknown\"\n#     },\n#     \"ID\": \"Rv7ZfnLQWprdXuulqMdf\",\n#     \"ReadTime\": \"2021-08-23T01:57:12.30626Z\",\n#     \"UpdateTime\": \"2021-08-22T23:53:31.439821Z\"\n# }\n\n```\n\n### Advanced types\n\nOur examples here use only basic JSON to represent firestore documents. However,\nJSON types are not enough to represent some of firestore types, for instance\ngeo-locations or timestamps.\n\nPlease read the [TYPES](TYPES.md) documentation if you want to know how fuego\nmaps JSON documents to firestore documents, and how to express the more advanced\ntype system using our 'extended JSON'.\n\n### Subcollections\n\nYou can work on sub-collections using the full path with \"/\"s as separators. For\nexample:\n\n```sh\nfuego query countries/france/cities\n```\n\n### Queries\n\nLet's explain queries by example. First, we'll create a collection of physics\nNobel laureates,\n\n```sh\nfuego add nobel '{\"name\": \"Arthur Ashkin\", \"year\": 2018, \"birthplace\": {\"country\":\"USA\", \"city\": \"New York\"}}'\nfuego add nobel '{\"name\": \"Gerard Mourou\", \"year\": 2018, \"birthplace\": {\"country\":\"FRA\", \"city\": \"Albertville\"}}'\nfuego add nobel '{\"name\": \"Donna Strickland\", \"year\": 2018, \"birthplace\": {\"country\":\"CAN\", \"city\": \"Guelph\"}}'\nfuego add nobel '{\"name\": \"Rainer Weiss\", \"year\": 2017, \"birthplace\": {\"country\":\"DEU\", \"city\": \"Berlin\"}}'\nfuego add nobel '{\"name\": \"Kip Thorne\", \"year\": 2017, \"birthplace\": {\"country\":\"USA\", \"city\": \"Logan\"}}'\nfuego add nobel '{\"name\": \"Barry Barish\", \"year\": 2017, \"birthplace\": {\"country\":\"USA\", \"city\": \"Omaha\"}}'\nfuego add nobel '{\"name\": \"David Thouless\", \"year\": 2016, \"birthplace\": {\"country\":\"GBR\", \"city\": \"Bearsden\"}}'\n```\n\nWe can query the full collection:\n\n```sh\nfuego query nobel\n# Prints all our nobel laureates like this:\n# [\n#    {\n#        \"CreateTime\": \"2019-02-26T02:39:45.293936Z\",\n#        \"Data\": {\n#            \"birthplace\": {\n#                \"city\": \"Bearsden\",\n#                \"country\": \"GBR\"\n#            },\n#            \"name\": \"David Thouless\",\n#            \"year\": 2016\n#        },\n#        \"ID\": \"BJseSVoBatOOt8gcwZWx\",\n#        \"ReadTime\": \"2019-02-26T02:55:19.419627Z\",\n#        \"UpdateTime\": \"2019-02-26T02:39:45.293936Z\"\n#    },\n# .... etc\n```\n\nWhich will fetch and display the documents in the collection, unfiltered. By default, fuego will fetch only 100 documents. You can change the limit using the ```--limit``` flag.\n\nYou can also order the results using the ```--orderby``` and ```--orderdir```\nflags. For example, to sort our Nobel laureates by country of origin, in\nascending order:\n\n```sh\nfuego query --orderby birthplace.country --orderdir ASC nobel\n```\n\nYou can add filters, using the firestore supported operators :\n\n```\n>, <, >=, <=, ==, !=, <in>, <not-in>, <array-contains> or <array-contains-any>\n```\n\nYou can combine several filters in a\nsingle query. For example, to get the 2018 Nobel laureates from the USA:\n\n```sh\nfuego query nobel 'birthplace.country == \"USA\"' 'year == 2018'\n```\n\nwhich will print:\n\n```json\n[\n    {\n        \"CreateTime\": \"2019-02-26T02:14:02.692077Z\",\n        \"Data\": {\n            \"birthplace\": {\n                \"city\": \"New York\",\n                \"country\": \"USA\"\n            },\n            \"name\": \"Arthur Ashkin\",\n            \"year\": 2018\n        },\n        \"ID\": \"glHCUu7EZ3gkuDaVlXqv\",\n        \"ReadTime\": \"2019-02-26T03:00:15.576398Z\",\n        \"UpdateTime\": \"2019-02-26T02:59:55.889775Z\"\n    }\n]\n\n```\n\n\nOr USA and Germany.\n\n```sh\nfuego query nobel 'birthplace.country <in> [\"USA\",\"DEU\"]' 'year == 2018'\n```\n\n\n\nLet's say we want to find the least recent Nobel from the USA, we can write the following query:\n\n```sh\nfuego query --limit 1 --orderby year --orderdir ASC nobel \"birthplace.country == 'USA'\"\n```\n\noops, we get the following error from the server, because our query needs an index to work:\n\n```\nrpc error: code = FailedPrecondition desc = The query requires an index.\nYou can create it here:\nhttps://console.firebase.google.com/project/myproject/database/firestore/indexes?create_index=EgVub2JlbBoWChJiaXJ0aH....\n```\n\nAfter creating the index, we re-run the query and now we obtain:\n\n```json\n[\n    {\n        \"CreateTime\": \"2019-02-26T02:39:44.458647Z\",\n        \"Data\": {\n            \"birthplace\": {\n                \"city\": \"Omaha\",\n                \"country\": \"USA\"\n            },\n            \"name\": \"Barry Barish\",\n            \"year\": 2017\n        },\n        \"ID\": \"ainH3nkOA2xusEBON2An\",\n        \"ReadTime\": \"2019-02-26T03:12:07.156643Z\",\n        \"UpdateTime\": \"2019-02-26T02:39:44.458647Z\"\n    }\n]\n```\n#### Value and field path types in filters\n\nI our previous examples, all the segments of the path part of a filter contained\nalphanumeric or the _ character and did not start with a number. When this\nconditions are met, they can be written unquoted. Otherwise, they need to be\nunquoted.\n\n```sh\nfuego query weirdcollection 'really.\"    \".strage.\" but valid \".fieldname == \"even blank keys are valid\"'\n```\n\nAs for values, numeric, string, boolean (true or false) and timestamp values are supported in\nfilters. Examples of queries:\n\n\"age >= 34\", \"name == 'paul'\", \"married == true\", and \"birthday == 1977-06-28T04:00:00Z\"\n\nNote that timestamps values should use the RFC3339 format and should not be\nquoted. Boolean values are represented by the unquoted *true* and *false*\nstrings.\n\nArrays values should be expressed as in the following example. Notice that items\nare separated by space:\n\n```sh\nfuego query cities 'name <in> [\"bogota\" \"cali\" \"medellin\"]'\n```\n\n\n#### Selecting specific fields\n\nUse the --select flag to explicitely ask for the specific fields you want to be\nretrieved (you can define many using several --select)\n\n```sh\nfuego query --select name --select year --limit 1 --orderby year --orderdir ASC nobel \"birthplace.country == 'USA'\"\n```\n\n#### Pagination of query results\nIf necessary, you can use the firestore pagination parameters to manually page through results.\nCombining --limit with the flags --startat, --startafter, --endat, and --endbefore,\nwhich all accept the ID of a document.\n\n#### Group queries\n\nYou can make [group\nqueries](https://firebase.google.com/docs/firestore/query-data/queries) to query all the subcollections sharing a common ID by using\nthe -g flag.\n\n```sh\nfuego add cities/france/landmarks '{\"name\": \"The Eiffel Tower\"}'\nfuego add cities/sf/landmarks '{\"name\": \"Golden Gate Bridge\"}'\nfuego query -g landmarks\n```\n\n### Copying\nBasic usage\n```sh\nfuego copy source target\n```\n#### Copying collection\nWe can copy a collection and its sub collections\n```sh\nfuego copy countries/france/cities countries/germany/cities\n```\nBy default, existing documents in target collection will be skipped. If you want to overwrite the existing document, just use --overwrite\n```sh\nfuego copy countries/france/cities countries/germany/cities --overwrite\n```\nAlso, using flag --merge let us can use merging mode to overwrite the existing documents\n```sh\nfuego copy countries/france/cities countries/germany/cities --overwrite --merge\n```\n\n#### Copying document\nWe can copy a document and its sub collections.\n```sh\nfuego copy countries/france countries/germany\n```\nParameters --merge and --overwrite can also be used to specify the copying behavior.\n\n#### Cross projects copying\nWe may have firestore in different Google projects. We can specify the source project credential by using `--src-credentials` (or `-sc`) and target project credential by using `--dest-credentials` (or `-dc`).\nThe default value of the `--src-credentials` and `--dest-credentials` is our current working project.\n```sh\nfuego copy countries/france countries/germany --src-credentials ./project-a-key.json --dest-credentials ./project-b-key.json --overwrite --merge\nfuego copy countries/france/cities countries/germany/cities --src-credentials ./project-a-key.json --dest-credentials ./project-b-key.json\n```\nWe may also have a credential that has access to different projects. We can specify the source project ID by `--src-projectid` (or `-sp`) and target project ID by using `--dest-projectid` (or `-dp`).\nThe default value of the `--src-prjectid` and `--dest-prjectid` is the ID of our current working project.\n```sh\nfuego copy countries/france countries/germany --src-projectid project-a --dest-projectid project-b --overwrite --merge\nfuego copy countries/france/cities countries/germany/cities --dest-projectid prject-c\n```\n\n## Contributing\n\nSee the [HACKING](HACKING.md) file for some guidance on how to contribute."
}
