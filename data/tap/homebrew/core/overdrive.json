{
  "name": "overdrive",
  "full_name": "overdrive",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Bash script to download mp3s from the OverDrive audiobook service",
  "license": "MIT",
  "homepage": "https://github.com/chbrown/overdrive",
  "versions": {
    "stable": "2.3.3",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/chbrown/overdrive/archive/2.3.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "ebd1ddb07fbf8a0fa7961eeb37f13a4a9d15857dae5426cb087e9ecc77a4d452"
    },
    "head": {
      "url": "https://github.com/chbrown/overdrive.git",
      "branch": "master"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/overdrive/blobs/sha256:7dccf8e85a0bac71098738482cbdd9977475d7ff59eeb16bad4f650e535c9ac6",
          "sha256": "7dccf8e85a0bac71098738482cbdd9977475d7ff59eeb16bad4f650e535c9ac6"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "tidy-html5",
    "openssl@3",
    "util-linux"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "curl",
    "libxml2"
  ],
  "uses_from_macos_bounds": [
    {},
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/overdrive.rb",
  "ruby_source_checksum": {
    "sha256": "55341d21c7f8f9011e50a331fd86de8f2867d4e764516dad8e1b843a576e7c10"
  },
  "date_added": "2020-11-13T14:13:43+00:00",
  "readme": "# OverDrive\n\nOverDrive is great and distributes DRM-free MP3s instead of some fragile DRM-ridden format, which is awesome.\nWay to go, Rakuten / OverDrive, fight the man!\n\nTheir \"OverDrive Media Console\" application for macOS is pretty simple,\nbut I like to automate things,\nso I wrote a bash script, [`overdrive.sh`](overdrive.sh),\nwhich takes one or more `.odm` files,\nand downloads the audio content files locally, just like the app.\n\nThen they stopped supporting macOS altogether after Mojave (10.14),\nleaving Catalina (10.15), Big Sur (11), and Monterey (12) users with no choice but to find a third-party option,\nsuch as this script üòâ\n\nBtw, it works on Linux too!\n\n## Libby\n\nThis script _will_ stop working when OverDrive finally decides to stop supporting the \"classic\" OverDrive app.\n\n**You don't have to worry about this as long as you can download `.odm` files from your library!**\n\n<details>\n<summary>But if you do want to worry about it sooner rather than later, you can expand this...</summary>\n\n### On Libby <sub>and the impending <sub>demise of OverDrive</sub></sub> ü§™\n\nOverDrive has been making it harder to use the `.odm` flow for a while now,\nfirst [removing their OverDrive app from all app stores](https://company.overdrive.com/2021/08/09/important-update-regarding-libby-and-the-overdrive-app/),\nthen adding [various hurdles](#hidden-download-link) around accessing the `.odm` file for a loan from your library's website.\n\nThey've been threatening to shut it down for what seems like years,\nso ü§û they keep that up for years to come.\nBut lately it does sound like they're getting more serious;\ntheir [Libby propaganda page](https://resources.overdrive.com/libby/) reads:\n\n> To help your library welcome more users to Libby,\n> **the legacy OverDrive app is being discontinued in early 2023**.\n\nThat and I've been getting more issues/notes about it,\nso here's my position:\n\n* This repo is not called `libby` and will not be retrofitted to accommodate Libby (if that's even possible).\n* This project has no interest in circumventing DRM or aiding others to circumvent DRM. Never has, never will.\n* I too am a user of this script, and I too regret the forced migration to Libby.\n* If/when OverDrive fully shuts down, I'll be on the hunt for another way to consume audiobooks from my local public library (‚ù§Ô∏è) in a format that fits my lifestyle.\n* If I find a good solution, I'll link to it from this README.\n\nI'm going to enjoy OverDrive while it lasts, and move on when it doesn't.\n\n[r/audiobooks](https://www.reddit.com/r/audiobooks/) seems like a nice community. Let's hang out there?\n</details>\n\n## Instructions\n\nFirst, install the script and make it executable:\n\n```sh\nmkdir -p ~/.local/bin\ncurl https://chbrown.github.io/overdrive/overdrive.sh -o ~/.local/bin/overdrive\nchmod +x ~/.local/bin/overdrive\n```\n\n(You only need to do that ‚òùÔ∏è step once!\nIt is also idempotent ‚Äî you can run it multiple times no problem.)\n\nNow download an OverDrive loan file from your library or wherever.\nI'll assume that yours is called `Novel.odm`.\nAssuming you've downloaded it to your `~/Downloads` folder, simply run the following command:\n\n```sh\ncd ~/Downloads\n~/.local/bin/overdrive download Novel.odm\n```\n\nThis will display a couple dozen lines as it downloads the book,\nmost of which are only relevant/useful if something goes wrong.\n\nAssuming that you decided to listen to Blake Crouch's _Recursion_,\nonce the script finishes you will have a new folder called `Blake Crouch - Recursion` (inside your \"Downloads\" folder),\ninside which will be several MP3s: `Part01.mp3`, `Part02.mp3`, _etc._\n(these \"parts\" don't necessarily correspond to actual chapters in the book;\nthere may be multiple chapters in a single part, or a single chapter spread out over multiple parts),\nand the cover art: `folder.jpg`.\n\nAnd that's it, you're done! üéâ\n\nThe rest of this README describes\n[how to debug various issues](#debugging) people run into\nand [some automation tips](#advanced);\nif your book downloaded just fine, you don't need to worry about any of that üòÅ\n\n\n## Debugging\n\nIf you have trouble getting the script to run successfully, add the `--verbose` flag and retry, e.g.:\n\n```sh\n~/.local/bin/overdrive download Novel.odm --verbose\n```\n\nThis will call `set -x` to turn bash's `xtrace` option on,\nwhich causes a trace of all commands to be printed to standard error,\nprefixed with one or more `+` signs.\nIt will also set all `curl` calls to not be silent.\n\n### Common errors\n\n###### Permission denied (executable flag)\n\nIf you get an error message like `-bash: ~/.local/bin/overdrive: Permission denied` or `zsh: permission denied: overdrive`,\nyou installed `overdrive` to the right place üëç, but didn't set the executable flag üòü.\nTry running the `chmod +x` command from the [Instructions](#instructions).\n\n###### Folder access\n\nIf you see a line that reads `I/O error : Operation not permitted`,\nyou probably didn't [allow Terminal / iTerm2 to access your Downloads folder](https://www.google.com/search?q=allow+terminal+access+downloads+folder+macos).\n\n###### Syntax error (HTML vs. source)\n\nIf calling the script with any combination of options produces an error message like\n```console\n.local/bin/overdrive: line 1: syntax error near unexpected token `newline'\n.local/bin/overdrive: line 1: `<!DOCTYPE html>'\n```\nthis indicates you installed the script incorrectly.\nYou most likely saved the GitHub webpage that displays the source code, instead of just the source code.\nTo fix, follow the [Instructions](#instructions) _exactly_ as shown.\n\nIf you are security conscious üßê (good for you!), feel free to `cat -n ~/.local/bin/overdrive` after installing, but before executing the script for the first time.\n\n###### SSL certificate\n\nIf the script fails right after a `curl` call, and then you rerun it with `--verbose` and get an error message like `curl: (60) SSL certificate problem: certificate has expired`,\nthat indicates the OverDrive server cannot be verified from your system's certificate authority.\nYou can bypass the security check by adding `--insecure` when calling the `overdrive` script.\n\n###### Expired / used license\n\nIf you see a message like `The requested license is either invalid or already acquired`,\nyou'll need to go back to your library and download a fresh ODM file.\n\n###### Hidden download link\n\nIf your library doesn't show you the link to \"Download MP3 audiobook\" (i.e., the `.odm` file),\nthe easiest way to get it to (re)appear is to pretend to use an OS that they do support ‚Äî\nby editing the \"User Agent\" that your browser presents itself as:\n\n1. Install a [Chrome](https://chrome.google.com/webstore/detail/djflhoibgkdhkhhcedjiklpkjnoahfmg) or Firefox extension to customize your user agent.\n2. [Pick some mainstream value](https://techblog.willshouse.com/2012/01/03/most-common-user-agents/) for Windows or pre-Catalina.\n3. Configure your extension to use that value.\n4. Refresh your \"Loans\" page.\n\n**New** (as of 2022-02):\nyou must now also click the \"Do you have the OverDrive app? >\" disclosure/dropdown\nto get the \"Download MP3 audiobook\" link to show up.\n\n###### Dependencies\n\nI call this a \"standalone\" script,\nbut it actually depends on several executables being available on your `PATH`:\n\n* `curl`\n* `uuidgen`\n* `xmllint`\n* `iconv`\n* `openssl`\n* `base64`\n\nIf you get an error like `-bash: xmllint: command not found`,\nyou're evidently missing one of those;\nthe following package manager one-liners should help:\n\n| Command | OS |\n|:--------|:---|\n| _N/A_<sup>‚Ä†</sup> | # macOS\n| `apt-get install curl uuid-runtime libxml2-utils libc-bin openssl coreutils` | # Debian / Ubuntu\n| `apk add bash curl util-linux libxml2-utils openssl` | # Alpine\n| `pacman -S curl util-linux libxml2 openssl coreutils` | # Arch\n| `dnf install curl glibc-common util-linux libxml2 openssl coreutils` | # Fedora\n| (_please create a [PR](https://github.com/chbrown/overdrive/pulls) to contribute a new OS!_)\n\n<sup>‚Ä†</sup>All required commands are installed by default on macOS 10.14 (Mojave), 10.15 (Catalina), 12.6 (Monterey),\nand probably everywhere in between ‚Äî those are just the versions I've personally tested.\nIt also works with the latest version of OpenSSL,\nso if you want, `brew install openssl`.\n\n###### Issues not emails\n\nIf none of that solves your problem,\nyou can [open an issue](https://github.com/chbrown/overdrive/issues/new),\nincluding the full debug output (optimally as a [gist](https://gist.github.com/)),\nand I'll try to help you out.\n\n* If you email me asking for technical help with this script (or any of my GitHub projects),\n  I will redirect you to create a GitHub issue.\n  Don't have an account? [Create one](https://github.com/signup), they're free. \\\n  Sure I could help you over email, but then the solution would be siloed away in our inboxes;\n  by corresponding in an issue, other users will be able to find it.\n* You _can_ email me cute little thank you notes; those are always fun to read üòÄ\n\n\n## Advanced\n\n### `PATH`\n\nAll the basic examples above invoke the script using its full path,\n(hopefully) to avoid `PATH`-related headaches for new users.\n<!-- Seriously, I feel like half the time I've spent answering issues is trying to mindread what they've done to their PATH and the most likely way to fix it. -->\nBut if installed as [instructed](#instructions),\nyou should be able to call just `overdrive [...]` instead of `~/.local/bin/overdrive [...]`,\nsince `~/.local/bin` is commonly used for tools like this,\nand many default init scripts automatically add it to your `PATH` if it exists.\n\nHowever, if calling `overdrive` produces the error message `-bash: overdrive: command not found`,\nyou'll can easily add `~/.local/bin` to your `PATH`. One way to do this:\n\n```sh\nprintf 'export PATH=$HOME/.local/bin:$PATH\\n' >> ~/.bashrc\nsource ~/.bashrc\n```\n\nOr if you're using `zsh` instead of `bash`, run this instead:\n\n```sh\nprintf 'export PATH=$HOME/.local/bin:$PATH\\n' >> ~/.zshrc\nsource ~/.zshrc\n```\n\n### Early Return\n\nEarly return is entirely optional,\nand AFAICT, equivalent to clicking \"Return\" on the library's OverDrive website,\nbut if you want, you can \"return\" a loan using this script, e.g.:\n\n    overdrive return Novel.odm\n\n\n## License\n\nCopyright ¬© 2017‚Äì2021 Christopher Brown.\n[MIT Licensed](https://chbrown.github.io/licenses/MIT/#2017-2021)."
}
