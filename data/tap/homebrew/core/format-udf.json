{
  "name": "format-udf",
  "full_name": "format-udf",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Bash script to format a block device to UDF",
  "license": "GPL-2.0",
  "homepage": "https://github.com/JElchison/format-udf",
  "versions": {
    "stable": "1.8.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/JElchison/format-udf/archive/1.8.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "52854097db9044d729fbd7cff012f4b554df01c15225ee17ec159c71da174c8d"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/format-udf/blobs/sha256:b108eb2ba15d5bcf6458a29f6f05e57f9629370d4677f4e09930aad406f92da6",
          "sha256": "b108eb2ba15d5bcf6458a29f6f05e57f9629370d4677f4e09930aad406f92da6"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/format-udf.rb",
  "ruby_source_checksum": {
    "sha256": "01abc587120033ff5c81536ca1a9f81b41693da2ef1fa067a3b1b6669d93ee4c"
  },
  "date_added": "2016-06-01T13:03:58+01:00",
  "readme": "��"
}
