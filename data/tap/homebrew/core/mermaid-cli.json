{
  "name": "mermaid-cli",
  "full_name": "mermaid-cli",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Command-line interface (CLI) for mermaid",
  "license": "MIT",
  "homepage": "https://github.com/mermaid-js/mermaid-cli",
  "versions": {
    "stable": "8.11.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://registry.npmjs.org/@mermaid-js/mermaid-cli/-/mermaid-cli-8.11.0.tgz",
      "tag": null,
      "revision": null,
      "checksum": "9fa34462054938ad996887a0e4081421c159728761e30254b0c0bae5b77df291"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mermaid-cli/blobs/sha256:00f8dbde25e1d468f6a7f2b03126e0739e490486aefcf47cda68626f1768257f",
          "sha256": "00f8dbde25e1d468f6a7f2b03126e0739e490486aefcf47cda68626f1768257f"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mermaid-cli/blobs/sha256:b97919f1f15b8c36004a484cfe8ab6820a09e7f42bec6a493ecc2da5c8778a5c",
          "sha256": "b97919f1f15b8c36004a484cfe8ab6820a09e7f42bec6a493ecc2da5c8778a5c"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mermaid-cli/blobs/sha256:b97919f1f15b8c36004a484cfe8ab6820a09e7f42bec6a493ecc2da5c8778a5c",
          "sha256": "b97919f1f15b8c36004a484cfe8ab6820a09e7f42bec6a493ecc2da5c8778a5c"
        },
        "mojave": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mermaid-cli/blobs/sha256:b97919f1f15b8c36004a484cfe8ab6820a09e7f42bec6a493ecc2da5c8778a5c",
          "sha256": "b97919f1f15b8c36004a484cfe8ab6820a09e7f42bec6a493ecc2da5c8778a5c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "node"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": true,
  "disable_date": "2023-03-07",
  "disable_reason": "installs a pre-built copy of Chromium",
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/mermaid-cli.rb",
  "ruby_source_checksum": {
    "sha256": "595597cc7fa01b48eba62d14d59212db88afd28ee78edb224a972126d1e367c4"
  },
  "date_added": "2020-12-30T21:36:57+00:00",
  "readme": "# mermaid-cli\n\n[![npm version](https://img.shields.io/npm/v/@mermaid-js/mermaid-cli)](https://www.npmjs.com/package/@mermaid-js/mermaid-cli)\n[![node-lts (scoped)](https://img.shields.io/node/v-lts/@mermaid-js/mermaid-cli)](https://www.npmjs.com/package/@mermaid-js/mermaid-cli)\n[![Docker Image Version (latest semver)](https://img.shields.io/docker/v/minlag/mermaid-cli?label=Dockerhub)](https://hub.docker.com/r/minlag/mermaid-cli)\n[![Build, test and deploy mermaid-cli Docker image](https://github.com/mermaid-js/mermaid-cli/actions/workflows/compile-mermaid.yml/badge.svg)](https://github.com/mermaid-js/mermaid-cli/actions/workflows/compile-mermaid.yml)\n[![This project is using Percy.io for visual regression testing.](https://percy.io/static/images/percy-badge.svg)](https://percy.io/Mermaid/mermaid-cli)\n[![Join our Slack!](https://img.shields.io/static/v1?message=join%20chat&color=9cf&logo=slack&label=slack)](https://join.slack.com/t/mermaid-talk/shared_invite/enQtNzc4NDIyNzk4OTAyLWVhYjQxOTI2OTg4YmE1ZmJkY2Y4MTU3ODliYmIwOTY3NDJlYjA0YjIyZTdkMDMyZTUwOGI0NjEzYmEwODcwOTE)\n\nThis is a command-line interface (CLI) for [mermaid](https://mermaid-js.github.io/). It takes a mermaid definition file as input and generates an svg/png/pdf file as output.\n\n## Installation\n\n```sh\nnpm install -g @mermaid-js/mermaid-cli\n```\n\n## Usage\n\nConvert Mermaid mmd Diagram File To SVG\n\n```sh\nmmdc -i input.mmd -o output.svg\n```\n\n> **Note**\n>\n> See [Alternative installations](#alternative-installations) if you don't want to install the package globally.\n>\n> Locate how to call the mmdc executable for your preferred method\n> i.e. Docker, Yarn, NPM, local install, etc.\n\n## Examples\n\n### Create A PNG With A Dark Theme And Transparent Background\n\n```sh\nmmdc -i input.mmd -o output.png -t dark -b transparent\n```\n\n### Animating an SVG file with custom CSS\n\nThe `--cssFile` option can be used to inline some custom CSS.\n\nPlease see [./test-positive/flowchart1.css](test-positive/flowchart1.css) for an example of a CSS file that has animations.\n\n**Warning**: If you want to override `mermaid`'s [`themeCSS`](https://mermaid-js.github.io/mermaid/#/Setup?id=theme), we recommend instead adding `{\"themeCSS\": \"...\"})` to your mermaid `--configFile`. You may also need to use [`!important`](https://developer.mozilla.org/en-US/docs/Web/CSS/important) to override mermiad's `themeCSS`.\n\n**Warning**: Inline CSS files may be blocked by your browser, depending on the [HTTP Content-Security-Policy header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) of the website that hosts your SVG.\n\n```sh\nmmdc --input test-positive/flowchart1.mmd --cssFile test-positive/flowchart1.css -o docs/animated-flowchart.svg\n```\n\n<details>\n  <summary>Example output: docs/animated-flowchart.svg</summary>\n\n  ![docs/animated-flowchart.svg](docs/animated-flowchart.svg)\n</details>\n\n### Transform a markdown file with mermaid diagrams\n\n```sh\nmmdc -i readme.template.md -o readme.md\n```\n\nThis command transforms a markdown file itself. The mermaid-cli will find the mermaid diagrams, create SVG files from them and refer to those in the markdown output.\n\nThis:\n\n~~~md\n### Some markdown\n```mermaid\ngraph\n   [....]\n```\n\n### Some more markdown\n```mermaid\nsequenceDiagram\n   [....]\n```\n\n### Mermaid with custom title/desc\n```mermaid\ngraph\n   accTitle: My title here\n   accDescr: My description here\n   A-->B\n```\n~~~\n\nBecomes:\n\n```md\n### Some markdown\n![diagram](./readme-1.svg)\n\n### Some more markdown\n![diagram](./readme-2.svg)\n\n### Mermaid with custom title/desc\n![My description here](./readme-3.svg \"My title here\")\n```\n\n### Piping from stdin\n\nYou can easily pipe input from stdin. This example shows how to use a heredoc to\nsend a diagram as stdin to mermaid-cli (mmdc).\n\n```sh\ncat << EOF  | mmdc --input -\n    graph TD\n    A[Client] --> B[Load Balancer]\nEOF\n```\n\n### See All Available Options\n\n```sh\nmmdc -h\n```\n\n# Alternative installations\n\n## Use Docker/Podman:\n\n```sh\ndocker pull minlag/mermaid-cli\n```\n\nor pull from Github Container Registry\n\n```sh\ndocker pull ghcr.io/mermaid-js/mermaid-cli/mermaid-cli\n```\n\nor e.g. version 8.8.0\n\n```sh\ndocker pull minlag/mermaid-cli:8.8.0\n```\n\nThe container looks for input files in `/data`. So for example, if you have a\ndiagram defined on your system in `/path/to/diagrams/diagram.mmd`, you can use\nthe container to generate an SVG file as follows:\n\n```sh\ndocker run --rm -u `id -u`:`id -g` -v /path/to/diagrams:/data minlag/mermaid-cli -i diagram.mmd\n```\n\nOr, if using [Podman](https://podman.io/), instead do:\n\n```sh\npodman run --userns keep-id --user ${UID} --rm -v /path/to/diagrams:/data:z ghcr.io/mermaid-js/mermaid-cli/mermaid-cli -i diagram.mmd\n```\n\nThe key differences in the podman command versus the docker command are:\n\n- The addition of the `--userns keep-id` argument. This allows the container to keep the same UID as the current user's UID in the container namespace instead of mapping to a subuid. Docs can be found [here](https://docs.podman.io/en/latest/markdown/options/userns.container.html)\n- The addition of `:z` to the end of the volume mapping. This instructs podman to relabel the files in the volume with the SELinux label `container_file_t`, which allows processes in the container to access the files. See the \"Labeling Volume Mounts\" section [here](https://docs.podman.io/en/latest/markdown/podman-run.1.html#volume-v-source-volume-host-dir-container-dir-options) for more info.\n\nIn previous version, the input files were mounted in `/home/mermaidcli`. You can\nrestore this behaviour with the `--workdir` option:\n\n```sh\ndocker run [...] --workdir=/home/mermaidcli minlag/mermaid-cli [...]\n```\n\n\n## Use Node.JS API\n\nIt's possible to call `mermaid-cli` via a Node.JS API.\nPlease be aware that **the NodeJS API is not covered by semver**, as `mermaid-cli` follows\n`mermaid`'s versioning.\n\n```js\nimport { run } from \"@mermaid-js/mermaid-cli\"\n\nawait run(\n   \"input.mmd\", \"output.svg\", // {optional options},\n)\n```\n\n## Install locally\n\nSome people are [having issues](https://github.com/mermaidjs/mermaid.cli/issues/15)\ninstalling this tool globally. Installing it locally is an alternative solution:\n\n```\nyarn add @mermaid-js/mermaid-cli\n./node_modules/.bin/mmdc -h\n```\n\nOr use NPM:\n\n```\nnpm install @mermaid-js/mermaid-cli\n./node_modules/.bin/mmdc -h\n```\n\n### Run with npx\n\n[`npx`](https://www.npmjs.com/package/npx) is installed by default with NPM. It\ndownloads and runs commands at the same time.  To use Mermaid CLI with npx, you\nneed to use the `-p` flag because the package name is different than the command\nit installs (`mmdc`).  `npx -p @mermaid-js/mermaid-cli mmdc -h`\n\n\n## Install with [brew](https://brew.sh)\n\n> **Warning**\n>\n> This method of installation is no longer supported.\n> For more details, see the [discussion](https://github.com/mermaid-js/mermaid-cli/issues/288).\n> An old version of mermaid-cli can be installed with brew.\n> ```sh\n> brew install mermaid-cli\n> ```\n\n\n## Known issues\n\n1. [Linux sandbox issue](docs/linux-sandbox-issue.md)\n2. [Docker permission denied issue](docs/docker-permission-denied.md)\n3. [How to setup up mermaid to use already installed chromium?](docs/already-installed-chromium.md)\n\n## For contributors\n\nContributions are welcome. See the [contribution guide](CONTRIBUTING.md)."
}
