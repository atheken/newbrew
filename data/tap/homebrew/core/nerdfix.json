{
  "name": "nerdfix",
  "full_name": "nerdfix",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Find/fix obsolete Nerd Font icons",
  "license": "MIT or Apache-2.0",
  "homepage": "https://github.com/loichyan/nerdfix",
  "versions": {
    "stable": "0.3.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/loichyan/nerdfix/archive/refs/tags/v0.3.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "c1e4264db7de66666c5ddd73b90d7aa32fe5e7afd8a2eb8fe781288e84f93f27"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nerdfix/blobs/sha256:bb5c87ddeac8dc0f6f3e8af968db9b2063b2d74ec77df0f415b67c2c27898da3",
          "sha256": "bb5c87ddeac8dc0f6f3e8af968db9b2063b2d74ec77df0f415b67c2c27898da3"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nerdfix/blobs/sha256:adddcea0e3438970fe8966db87e6645e8c5ad637b232eb511653de0800f13d34",
          "sha256": "adddcea0e3438970fe8966db87e6645e8c5ad637b232eb511653de0800f13d34"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nerdfix/blobs/sha256:9817e8b6e248e9db23bd10db514522f09b28adc285c7ab3c72f0e4028bec912b",
          "sha256": "9817e8b6e248e9db23bd10db514522f09b28adc285c7ab3c72f0e4028bec912b"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nerdfix/blobs/sha256:8e4377979365a134dbfe6ceb713986fb920c44ac101a8733a43b74bc6b597688",
          "sha256": "8e4377979365a134dbfe6ceb713986fb920c44ac101a8733a43b74bc6b597688"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nerdfix/blobs/sha256:6af6516e2d93ccafae14ea25399d491ee2bb972a66d17370337f57781da8aa7b",
          "sha256": "6af6516e2d93ccafae14ea25399d491ee2bb972a66d17370337f57781da8aa7b"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nerdfix/blobs/sha256:8e97877cb970fac207f9389544f52977ac28cb526b911bb4ba76d6655b6e65a0",
          "sha256": "8e97877cb970fac207f9389544f52977ac28cb526b911bb4ba76d6655b6e65a0"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nerdfix/blobs/sha256:a491cd9e012e1075c7f034cb53fd6c8c22c4d9f5baa8e4416b72b0e12b579099",
          "sha256": "a491cd9e012e1075c7f034cb53fd6c8c22c4d9f5baa8e4416b72b0e12b579099"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/nerdfix.rb",
  "ruby_source_checksum": {
    "sha256": "4a72a725b4ea28a87b42021c5609a6b15086d99750d597882cd16244061d16d8"
  },
  "date_added": "2023-05-06T14:05:21-04:00",
  "readme": "# üî£ nerdfix\n\n![GitHub release](https://img.shields.io/github/v/release/loichyan/nerdfix)\n![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/loichyan/nerdfix/release.yaml)\n\n`nerdfix` helps you to find/fix obsolete\n[Nerd Font](https://github.com/ryanoasis/nerd-fonts) icons in your project.\n\n## üí≠ Why\n\nNerd Fonts is used in many projects for a beautiful UI. It provides more than\n10,000 icons, but some codepoints conflict with other fonts (especially CJK\nfonts). To ensure that the icons remain in the private use area, Nerd Fonts has\nchanged the codepoints of some icons in recent releases, for example, `mdi-*`\nicons (including over 2,000 icons) are deprecated since\n[v2.3.3](https://github.com/ryanoasis/nerd-fonts/releases/tag/v2.3.3) and will\nbe removed in v3.\n\nThese icons are marked as obsolete in\n[the official cheat sheet](https://www.nerdfonts.com/cheat-sheet) and it's\nrecommended to replace them with the new ones. However, you may find it boring\nto check all the used icons one by one, so `nerdfix` was written to index the\ncheat sheet and find obsolete icons in your project.\n\n## ‚öôÔ∏è Installation\n\nYou can download the pre-built binaries from\n[the release page](https://github.com/loichyan/nerdfix/releases/latest) or\nmanually build this project manually from source.\n\nIn addition, the binaries come with a recently updated cheat sheet and you can\noverwrite it with the latest one using `nerdfix -i /path/to/your/file` (follow\n[this link](https://github.com/ryanoasis/nerd-fonts/blob/gh-pages/_posts/2017-01-04-icon-cheat-sheet.md)\nto get the latest file).\n\n### Install from source\n\nYou can build and install from the source code with `cargo`:\n\n```sh\ncargo install --git https://github.com/loichyan/nerdfix.git\n```\n\nOr with `nix`:\n\n```sh\nnix run github:loichyan/nerdfix\n```\n\n## üìã Note\n\nPlease make sure you're using Nerd Fonts after v2.3.3, otherwise the replaced\nnew icons may not be displayed correctly. If you are a plugin author, it's also\nrecommended to notify this in updates.\n\n## üîç Usage\n\nThe `check` command checks input files and reports obsolete icons with some\nsuggestions (sorted by similarity) that you could replace them with.\n\n```sh\nnerdfix check test/test-data.txt\n```\n\nYou get the output as follows:\n\n```text\nwarning: Found obsolete icon U+F752\n  ‚îå‚îÄ tests/test-data.txt:1:27\n  ‚îÇ\n1 ‚îÇ mdi-folder_multiple = \"Ôùí\"\n  ‚îÇ                           ^ Icon 'mdi-folder_multiple' is marked as obsolete\n  ‚îÇ\n  = You could replace it with:\n        1. Û∞âì U+F0253 md-folder_multiple\n        2. Û±èì U+F13D3 md-folder_star_multiple\n        ...\n```\n\n### Interactive patching\n\nThe `fix` command reports the same information as `check` and displays a prompt\nasking the user to input a new icon to replace the obsolete one.\n\n```text\nwarning: Found obsolete icon U+F719\n  ‚îå‚îÄ tests/test-data.txt:4:29\n  ‚îÇ\n4 ‚îÇ mdi-file_document_box = \"Ôúô\"\n  ‚îÇ                             ^ Icon 'mdi-file_document_box' is marked as obsolete\n  ‚îÇ\n  = You could replace it with:\n        1. Û∞àô U+F0219 md-file_document\n        2. Û∞∑à U+F0DC8 md-file_document_edit\n        ...\n> Input an icon: 1\n# Your input: Û∞àô\n```\n\nThe prompt accepts several types of input:\n\n| Type              | Example            |\n| ----------------- | ------------------ |\n| Suggestion number | `1`                |\n| Codepoint         | `U+F0219`          |\n| Icon name         | `md-file_document` |\n| Icon character    | `Û∞àô`                |\n\n### Fuzzy autocompletion/search\n\nThe prompt also provides fuzzy matching suggestions when you type the icon name:\n\n```text\n> Input an icon: documentmultiple\n  Û±îó md-file_document_multiple\n  Û±îò md-file_document_multiple_outline\n  Û∞°ü md-comment_multiple\n  ...\n```\n\nYou can also use the `search` command to call the prompt directly for a fuzzy\nsearch.\n\n### Autofix\n\n`nerdfix` provides some features to automatically patch obsolete icons:\n\n- The last user input is picked if an icon appears twice.\n- Use `fix --replace FROM,TO` to replace the prefix of an icon name with\n  another, e.g. `mdi-tab` is replaced with `md-tab` when `--replace mdi-,md-` is\n  specified.\n\n### Structured output\n\nYou can use `check --format json` to get structured output for further use.\n`nerdfix` prints diagnostics with the following fields line by line:\n\n| Field       | Description                                             |\n| ----------- | ------------------------------------------------------- |\n| `severity`  | Severity of a diagnostic                                |\n| `path`      | Source file of a diagnostic                             |\n| `type`      | Diagnostic type, currently only `obsolete` is supported |\n| `span`      | Byte index span of an obsolete icon                     |\n| `name`      | Icon name                                               |\n| `codepoint` | Icon codepoint                                          |\n\n## üí¨ FAQ\n\n### How can I find all files that contain obsolete icons?\n\n```sh\nnerdfix check --format=json -r /path/to/root 2>/dev/null |\n  jq -s -r '[.[].path] | sort | unique | .[]'\n```\n\n### How can I save patched content to a file other than the input? ([#7](https://github.com/loichyan/nerdfix/pull/7))\n\n```sh\nnerdfix fix /path/to/input:/path/to/output\n```\n\n### How can I recursively traverse all directories? ([#5](https://github.com/loichyan/nerdfix/issues/5))\n\n```sh\nnerdfix fix --recursive /path/to/root\n# Or use fd/find\nnerdfix fix $(fd -t f . /path/to/root)\n```\n\n### How can I skip interactive prompts? ([#3](https://github.com/loichyan/nerdfix/issues/3))\n\n```sh\nnerdfix fix --write --select-first /path/to/file\n```\n\n## ‚öñÔ∏è License\n\nLicensed under either of\n\n- Apache License, Version 2.0 ([LICENSE-APACHE](LICENSE-APACHE) or\n  <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT license ([LICENSE-MIT](LICENSE-MIT) or\n  <http://opensource.org/licenses/MIT>)\n\nat your option."
}
