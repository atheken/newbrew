{
  "name": "gnu-getopt",
  "full_name": "gnu-getopt",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Command-line option parsing utility",
  "license": "GPL-2.0-or-later",
  "homepage": "https://github.com/util-linux/util-linux",
  "versions": {
    "stable": "2.39.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/v2.39/util-linux-2.39.1.tar.xz",
      "tag": null,
      "revision": null,
      "checksum": "890ae8ff810247bd19e274df76e8371d202cda01ad277681b0ea88eeaa00286b"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gnu-getopt/blobs/sha256:8b1d5a34f4173e378efff2e2d2f77d9a817259548558bfe40bd4c18740f99ed6",
          "sha256": "8b1d5a34f4173e378efff2e2d2f77d9a817259548558bfe40bd4c18740f99ed6"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gnu-getopt/blobs/sha256:ad2d4903fae9b13cbacb8091fdd2555c8ee2bf9ff4d665b92a7eb4242b7c139d",
          "sha256": "ad2d4903fae9b13cbacb8091fdd2555c8ee2bf9ff4d665b92a7eb4242b7c139d"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gnu-getopt/blobs/sha256:375e7abe811e322fd6db77e27dcd732daa081908affc1ffad72a972bf94d9968",
          "sha256": "375e7abe811e322fd6db77e27dcd732daa081908affc1ffad72a972bf94d9968"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gnu-getopt/blobs/sha256:d103ac1b953fae8d9edb145aa1a22d0599f32b38591adc613da26da02ad450a9",
          "sha256": "d103ac1b953fae8d9edb145aa1a22d0599f32b38591adc613da26da02ad450a9"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gnu-getopt/blobs/sha256:22d5eca1331582a051a5370c093969d219880641c5f1501b96b76f592fc422ab",
          "sha256": "22d5eca1331582a051a5370c093969d219880641c5f1501b96b76f592fc422ab"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gnu-getopt/blobs/sha256:cd9962ac153ce0142d90c46e0add261fe01927377b7e803bf606a64809237620",
          "sha256": "cd9962ac153ce0142d90c46e0add261fe01927377b7e803bf606a64809237620"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gnu-getopt/blobs/sha256:1466fbd1137ebc2d3c58f2c2256501400b94bf2aad6fb4cf23bfe6b1cea16348",
          "sha256": "1466fbd1137ebc2d3c58f2c2256501400b94bf2aad6fb4cf23bfe6b1cea16348"
        }
      }
    }
  },
  "keg_only": true,
  "keg_only_reason": {
    "reason": "conflicts with util-linux",
    "explanation": ""
  },
  "options": [],
  "build_dependencies": [
    "asciidoctor",
    "autoconf",
    "automake",
    "pkg-config"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/gnu-getopt.rb",
  "ruby_source_checksum": {
    "sha256": "68c3524c374a598955431b27ad56ad293b20f4837dec71cd9cc9b1426cb2a796"
  },
  "date_added": "2010-07-10T09:40:29-07:00",
  "readme": "\n\t\t\t\t  util-linux\n\n\t\tutil-linux is a random collection of Linux utilities\n\n     Note: for the years 2006-2010 this project was named \"util-linux-ng\".\n\nCOMPILE & INSTALL:\n\n      See Documentation/howto-compilation.txt.\n\nMAILING LIST:\n\n      E-MAIL:  util-linux@vger.kernel.org\n      URL:     http://vger.kernel.org/vger-lists.html#util-linux\n      ARCHIVE: https://lore.kernel.org/util-linux/\n\n      The mailing list will reject email messages that contain:\n       - more than 100K characters\n       - html\n       - spam phrases/keywords\n      See: http://vger.kernel.org/majordomo-info.html#taboo\n\nIRC CHANNEL:\n\n      #util-linux at libera.chat:\n\n      irc://irc.libera.chat/util-linux\n\n      The IRC channel and Mailing list are for developers and project\n      maintainers. For end users it is recommended to utilize the\n      distribution's support system.\n\nBUG REPORTING:\n\n      E-MAIL: util-linux@vger.kernel.org\n      Web:    https://github.com/util-linux/util-linux/issues\n\n      Bug reports with sensitive or private information: Karel Zak <kzak@redhat.com>\n\n      This project has no resources to provide support for distribution specific\n      issues. For end users it is recommended to utilize the distribution's\n      support system.\n\nNLS (PO TRANSLATIONS):\n\n      PO files are maintained by:\n\t  https://translationproject.org/domain/util-linux.html\n\nVERSION SCHEMA:\n\n      Standard releases:\n\t  <major>.<minor>[.<maint>]\n\t     major = fatal and deep changes\n\t     minor = typical release with new features\n\t     maint = maintenance releases; bug fixes only\n\n      Development releases:\n\t <major>.<minor>-rc<N>\n\nSOURCE CODE:\n\n Download archive:\n\t  https://www.kernel.org/pub/linux/utils/util-linux/\n\n See also:\n     Documentation/howto-contribute.txt\n     Documentation/howto-build-sys.txt\n     Documentation/howto-pull-request.txt\n\n SCM (Source Code Management) Repository:\n\n    Primary repository:\n\t  git clone git://git.kernel.org/pub/scm/utils/util-linux/util-linux.git\n\n    Backup repository:\n\t  git clone git://github.com/util-linux/util-linux.git\n\n    Web interfaces:\n\t  https://git.kernel.org/cgit/utils/util-linux/util-linux.git\n\t  https://github.com/util-linux/util-linux\n\n      Note: the GitHub repository may contain temporary development branches too.\n\n      The kernel.org repository contains master (current development) and stable/*\n      (maintenance) branches only. All master or stable/* changes are always pushed\n      to both repositories at the same time.\n\n    Repository Branches: 'git branch -a'\n\t  master branch\n\t   - current development\n\t   - the source for stable releases when deemed ready.\n\t   - day-to-day status is: 'it works for me'. This means that its\n\t     normal state is useful but not well tested.\n\t   - long-term development or invasive changes in active development are\n\t     forked into separate 'topic' branches from the tip of 'master'.\n\n\t  stable/ branches\n\t   - public releases\n\t   - branch name: stable/v<major>.<minor>.\n\t   - created from the 'master' branch after two or more release\n\t     candidates and the final public release. This means that the stable\n\t     releases are committed, tagged, and reachable in 'master'.\n\t   - these branches then become forked development branches. This means\n\t     that any changes made to them diverge from the 'master' branch.\n\t   - maintenance releases are part of, and belong to, their respective\n\t     stable branch. As such, they are tags(<major>.<minor>.<maint>) and\n\t     not branches of their own. They are not part of, visible in, or\n\t     have anything to do with the 'master' development branch. In git\n\t     terminology: maintenance releases are not reachable from 'master'.\n\t   - when initially cloned (as with the 'git clone' command given above)\n\t     these branches are created as 'remote tracking branches' and are\n\t     only visible by using the -a or -r options to 'git branch'. To\n\t     create a local branch use the desired tag with this command:\n\t     'git checkout -b v2.29.2 v2.29.2'\n\n    Tags: 'git tag'\n\t   - a new tag object is created for every release.\n\t   - tag name: v<version>.\n\t   - all tags are signed by the maintainer's PGP key.\n\n    Known Bugs:\n\t- don't use tag v2.13.1 (created and published by mistake),\n\t  use v2.13.1-REAL instead.\n\nWORKFLOW EXAMPLE:\n\n 1) development (branch: <master>)\n\n 2) master release (tags: v2.29-rc1, v2.29-rc2, v2.29, branch: <master>)\n\n 3) development (work on v2.30, branch: <master>)\n\n 4) fork -- create a new branch <stable/v2.29> based on tag v2.29\n\n     4a) new patches or cherry-pick patches from <master> (branch: <stable/v2.29>)\n\n     4b) stable release (tag: v2.29.1, branch: <stable/v2.29>)\n\n     4c) more patches; another release (tag: v2.29.2, branch: <stable/v2.29>)\n\n 5) master release v2.30 (branch: <master>)\n    ...\n\nwhere 3) and 4) happen simultaneously."
}
