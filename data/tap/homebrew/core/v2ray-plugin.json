{
  "name": "v2ray-plugin",
  "full_name": "v2ray-plugin",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "SIP003 plugin based on v2ray for shadowsocks",
  "license": "MIT",
  "homepage": "https://github.com/shadowsocks/v2ray-plugin",
  "versions": {
    "stable": "1.3.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/shadowsocks/v2ray-plugin/archive/v1.3.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "86d37a8ecef82457b4750a1af9e8d093b25ae0d32ea7dcc2ad5c0068fe2d3d74"
    },
    "head": {
      "url": "https://github.com/shadowsocks/v2ray-plugin.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/v2ray-plugin/blobs/sha256:451c0d3013468c460f7f829d45fd5f2f91ccc20da50156f5a7b09244eff82636",
          "sha256": "451c0d3013468c460f7f829d45fd5f2f91ccc20da50156f5a7b09244eff82636"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/v2ray-plugin/blobs/sha256:72e881a144403b3d336c0d652601342580a9f67724647e46e2eaaa36e8408c70",
          "sha256": "72e881a144403b3d336c0d652601342580a9f67724647e46e2eaaa36e8408c70"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/v2ray-plugin/blobs/sha256:8ff4ac95fa05cc7d11429495c27eb499a6b2539fc6306eda02593a3dbd2c3b9a",
          "sha256": "8ff4ac95fa05cc7d11429495c27eb499a6b2539fc6306eda02593a3dbd2c3b9a"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/v2ray-plugin/blobs/sha256:8f0b131b6f8bf64ed0c8ad43730e4d73bbd6d6fee0bf835ce8ebf826454af7a3",
          "sha256": "8f0b131b6f8bf64ed0c8ad43730e4d73bbd6d6fee0bf835ce8ebf826454af7a3"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/v2ray-plugin/blobs/sha256:73aac43594414ae1109fbf9715166544d0a6acb6d1f6a98d725eed932ed14840",
          "sha256": "73aac43594414ae1109fbf9715166544d0a6acb6d1f6a98d725eed932ed14840"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/v2ray-plugin/blobs/sha256:6a3064ead8cb35a8951619e5899f4ddbeff48a0e504bf156d8325079fe5c642a",
          "sha256": "6a3064ead8cb35a8951619e5899f4ddbeff48a0e504bf156d8325079fe5c642a"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/v2ray-plugin/blobs/sha256:891f541e150a393ff20caa78eb79ef12f60929fb9e5b35826e2e639c46a61dc2",
          "sha256": "891f541e150a393ff20caa78eb79ef12f60929fb9e5b35826e2e639c46a61dc2"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/v2ray-plugin/blobs/sha256:cb8ff7b812aa561f9e23935461968ba1c26cbe393c599aab4e1753b37702748b",
          "sha256": "cb8ff7b812aa561f9e23935461968ba1c26cbe393c599aab4e1753b37702748b"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/v2ray-plugin/blobs/sha256:f11b330c3dc9c445b757188057c93ce94de89f03f4adfa1a8c6405f5ba66b400",
          "sha256": "f11b330c3dc9c445b757188057c93ce94de89f03f4adfa1a8c6405f5ba66b400"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/v2ray-plugin/blobs/sha256:8ad295c462b215b5a36d4b8087f03675ef1e0e1508d53dfb96c63bc0be688d8c",
          "sha256": "8ad295c462b215b5a36d4b8087f03675ef1e0e1508d53dfb96c63bc0be688d8c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/v2ray-plugin.rb",
  "ruby_source_checksum": {
    "sha256": "45e6b235ccd24b78a9b26ab58243e9f356509e1df3d98556a4de3fade19fb3a2"
  },
  "date_added": "2019-03-03T18:16:37+01:00",
  "readme": "## Yet another SIP003 plugin for shadowsocks, based on [v2ray](https://github.com/v2fly/v2ray-core)\n\n[![CircleCI](https://circleci.com/gh/shadowsocks/v2ray-plugin.svg?style=shield)](https://circleci.com/gh/shadowsocks/v2ray-plugin)\n[![Releases](https://img.shields.io/github/downloads/shadowsocks/v2ray-plugin/total.svg)](https://github.com/shadowsocks/v2ray-plugin/releases)\n[![Language: Go](https://img.shields.io/badge/go-1.13+-blue.svg)](https://github.com/shadowsocks/v2ray-plugin/search?l=go)\n[![Go Report Card](https://goreportcard.com/badge/github.com/shadowsocks/v2ray-plugin)](https://goreportcard.com/report/github.com/shadowsocks/v2ray-plugin)\n[![License](https://img.shields.io/github/license/shadowsocks/v2ray-plugin.svg)](LICENSE)\n\n## Build\n\n* `go build`\n* Alternatively, you can grab the latest nightly from Circle CI by logging into Circle CI or adding `#artifacts` at the end of URL like such: https://circleci.com/gh/shadowsocks/v2ray-plugin/20#artifacts\n\n## Usage\n\nSee command line args for advanced usages.\n\n### Shadowsocks over websocket (HTTP)\n\nWarning: HTTP only provides a moderate (but lightweight) traffic obfuscation. Cautious users should refrain from using this mode.\n\nOn your server\n\n```sh\nss-server -c config.json -p 80 --plugin v2ray-plugin --plugin-opts \"server\"\n```\n\nOn your client\n\n```sh\nss-local -c config.json -p 80 --plugin v2ray-plugin\n```\n\n### Shadowsocks over websocket (HTTPS)\n\nOn your server\n\n```sh\nss-server -c config.json -p 443 --plugin v2ray-plugin --plugin-opts \"server;tls;host=mydomain.me\"\n```\n\nOn your client\n\n```sh\nss-local -c config.json -p 443 --plugin v2ray-plugin --plugin-opts \"tls;host=mydomain.me\"\n```\n\n### Shadowsocks over quic\n\nOn your server\n\n```sh\nss-server -c config.json -p 443 --plugin v2ray-plugin --plugin-opts \"server;mode=quic;host=mydomain.me\"\n```\n\nOn your client\n\n```sh\nss-local -c config.json -p 443 --plugin v2ray-plugin --plugin-opts \"mode=quic;host=mydomain.me\"\n```\n\n### Issue a cert for TLS and QUIC\n\n`v2ray-plugin` will look for TLS certificates signed by [acme.sh](https://github.com/acmesh-official/acme.sh) by default.\nHere's some sample commands for issuing a certificate using CloudFlare.\nYou can find commands for issuing certificates for other DNS providers at acme.sh.\n\n```sh\ncurl https://get.acme.sh | sh\n~/.acme.sh/acme.sh --issue --dns dns_cf -d mydomain.me\n```\n\nAlternatively, you can specify path to your certificates using option `cert` and `key`.\n\n### Use `certRaw` to pass certificate\n\nInstead of using `cert` to pass the certificate file, `certRaw` could be used to pass in PEM format certificate, that is the content between `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----` without the line breaks."
}
