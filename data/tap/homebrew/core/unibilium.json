{
  "name": "unibilium",
  "full_name": "unibilium",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Very basic terminfo library",
  "license": "LGPL-3.0-or-later",
  "homepage": "https://github.com/neovim/unibilium",
  "versions": {
    "stable": "2.1.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/neovim/unibilium/archive/v2.1.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "6f0ee21c8605340cfbb458cbd195b4d074e6d16dd0c0e12f2627ca773f3cabf1"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unibilium/blobs/sha256:a09c64419c3bfd241682b2b866845c47e14fb34f2ec4c00432a0ffd94552088b",
          "sha256": "a09c64419c3bfd241682b2b866845c47e14fb34f2ec4c00432a0ffd94552088b"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unibilium/blobs/sha256:61e46223a65d53ff12dbae623c31b6bf6cf5814e3ef378172a76e157f11a8327",
          "sha256": "61e46223a65d53ff12dbae623c31b6bf6cf5814e3ef378172a76e157f11a8327"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unibilium/blobs/sha256:949ec76abe1f8f7c3804028793133d68036734b326ee9d30db2132fbc02e7f4e",
          "sha256": "949ec76abe1f8f7c3804028793133d68036734b326ee9d30db2132fbc02e7f4e"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unibilium/blobs/sha256:f7105a9bffd1de736ef229c6079bd2d535516ebb9bf7a6b3efb7332423c2925e",
          "sha256": "f7105a9bffd1de736ef229c6079bd2d535516ebb9bf7a6b3efb7332423c2925e"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unibilium/blobs/sha256:4293a007fa231e58f31aa1fee7cd1f08ab901678c80adbea2e4efaa49d7cb3ca",
          "sha256": "4293a007fa231e58f31aa1fee7cd1f08ab901678c80adbea2e4efaa49d7cb3ca"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/unibilium/blobs/sha256:d437072bceb93b39d6231dc1132f10284c7033690e2e8fe85193670157c680a2",
          "sha256": "d437072bceb93b39d6231dc1132f10284c7033690e2e8fe85193670157c680a2"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/unibilium/blobs/sha256:713531ec3ccf93b6f4ae8e5d5efadf15a2c985176a2086b5607d33598e4de45d",
          "sha256": "713531ec3ccf93b6f4ae8e5d5efadf15a2c985176a2086b5607d33598e4de45d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "libtool"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/unibilium.rb",
  "ruby_source_checksum": {
    "sha256": "dac3756661f0508e3ea93e360ad0e43d9d09e6bec1dd02f21e4e09e747f16f4b"
  },
  "date_added": "2015-08-28T18:16:50+08:00",
  "readme": "Overview\n========\n\nUnibilium is a very basic terminfo library. It can read and write\nncurses-style terminfo files, and it can interpret terminfo format strings.\nIt doesn't depend on curses or any other library. It also doesn't use global\nvariables, so it should be thread-safe.\n\n\nBuilding and installing\n=======================\n\nPrerequisites\n-------------\n\n- a C compiler (technically this is all you need, but if you want to use the\n  included `Makefile`, read on)\n- GNU make (the included `Makefile` was written for GNU make; if it works in\n  anything else, it's by accident)\n- GNU libtool (for building shared libraries)\n- a unix-ish shell (sh, that is)\n- Perl (specifically, `pod2man` for creating the man pages and `prove` for\n  running the test suite)\n- gzip (for compressing the man pages)\n\nConfigure\n---------\n\nTo generate the `configure` script run:\n\n    autoreconf -fi\n\nTo list the `configure` options run:\n\n    ./configure --help\n\nTo generate the `Makefile` run:\n\n    ./configure --prefix=...\n\nBuilding\n--------\n\nCompile `unibilium.c`, `uninames.c`, and `uniutil.c` into a library.\n\nThe generated `Makefile` does this for you:\n\n    make\n\nor\n\n    make all\n\ncreates the library files, generates the man pages, and compiles the test\nsuite.\n\nThere is a number of variables you can specify on the `make` command line to\noverride the default behavior:\n\n- `TERMINFO_DIRS`: A C string literal containing a colon-separated list of\n  directories where unibilium should look for compiled terminfo files at\n  runtime (e.g. `make TERMINFO_DIRS='\"/etc/terminfo:/usr/share/terminfo\"'`).\n  This depends on how your ncurses library was configured.\n  Defaults to `\"\"` on Windows; everywhere else the local ncurses installation\n  is queried (by trying `ncursesw6-config`, `ncurses6-config`,\n  `ncursesw5-config`, `ncurses5-config` in turn) and if that fails, a\n  hardcoded list of likely directory names is used.\n- `PREFIX`: The target directory where files should be installed. This\n  variable is only used to set the defaults for `LIBDIR`, `INCDIR`, and\n  `MANDIR`, i.e. you don't need to set `PREFIX` if you set the other three\n  directly. Defaults to `/usr/local`.\n- `LIBDIR`, `INCDIR`, `MANDIR`: Where the resulting library files, header\n  files, and man pages should be installed. They default to `${PREFIX}/lib`,\n  `${PREFIX}/include`, and `${PREFIX}/share/man`, respectively.\n- `LIBTOOL`: The name of the GNU libtool script on your platform. Defaults to\n  `glibtool` on Mac OS and `libtool` everywhere else.\n- `CC`: The name of the C compiler that should be used (e.g. use\n  `make CC=clang` to build with `clang`). Defaults to whatever `make` sets\n  `CC` to by default (probably `cc`).\n- `CFLAGS`: C compiler (optimization) flags. Defaults to `-O2`.\n- `DEBUG`: Specify `make DEBUG=1` to build with debugging information.\n  Defaults to unset.\n- `CFLAGS_DEBUG`: C compiler debugging flags. Empty by default unless\n  `DEBUG=1` is specified, in which case `-ggdb -DDEBUG` is used.\n\nTesting\n-------\n\nRun\n\n    make test\n\nto run the included test suite. If that fails, please report it at\nhttps://github.com/neovim/unibilium/issues.\n\nInstalling\n----------\n\nRun\n\n    make install\n\nto install the library, header files, man pages, and pkg-config file. Take\ncare to specify the same `PREFIX`, `LIBDIR`, `INCDIR`, and `MANDIR` settings\nyou used for building.\n\n`make install` supports one additional variable:\n\n- `DESTDIR`: Acts as an additional prefix for the final installation step. For\n  example, if you do\n  `./configure --prefix=/usr && make && make install DESTDIR=/tmp`, then the\n  library will be configured for installation under `/usr`, but the actual\n  files will be copied to `/tmp/usr`. Defaults to empty.\n\n\nLicense\n=======\n\nSee the `LICENSE` file for licensing information."
}
