{
  "name": "kqwait",
  "full_name": "kqwait",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Wait for events on files or directories on macOS",
  "license": "BSD-2-Clause",
  "homepage": "https://github.com/sschober/kqwait",
  "versions": {
    "stable": "1.0.3",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/sschober/kqwait/archive/kqwait-v1.0.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "878560936d473f203c0ccb3d42eadccfb50cff15e6f15a59061e73704474c531"
    },
    "head": {
      "url": "https://github.com/sschober/kqwait.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kqwait/blobs/sha256:3747581e5e96f01908dc6bc5b5368e1f40e714821c69ea8884ced4cace9b0fc8",
          "sha256": "3747581e5e96f01908dc6bc5b5368e1f40e714821c69ea8884ced4cace9b0fc8"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kqwait/blobs/sha256:647d43de225f13a8d44c1b496bea51d180645b5c51cee5de9c82484117549d7b",
          "sha256": "647d43de225f13a8d44c1b496bea51d180645b5c51cee5de9c82484117549d7b"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kqwait/blobs/sha256:cfd6026d7a40557bb6e2e660af989426984359a1a18af842237b46a7b8af10b7",
          "sha256": "cfd6026d7a40557bb6e2e660af989426984359a1a18af842237b46a7b8af10b7"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kqwait/blobs/sha256:46fdfbeb3a8961f18b4da5e0d1b94ae232b45ea789a701d963317a496c5542a8",
          "sha256": "46fdfbeb3a8961f18b4da5e0d1b94ae232b45ea789a701d963317a496c5542a8"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kqwait/blobs/sha256:f348cb75f4cc2ebc25a690de447dee670a144707256a08a252454d27fe52a042",
          "sha256": "f348cb75f4cc2ebc25a690de447dee670a144707256a08a252454d27fe52a042"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kqwait/blobs/sha256:d628f1544a08964c38352d12b7d7c8eab0317391e7eceab195d11882852b4ee3",
          "sha256": "d628f1544a08964c38352d12b7d7c8eab0317391e7eceab195d11882852b4ee3"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kqwait/blobs/sha256:a126094dabbb2fd9a2c539b1515657c1855bb0c971492ca0d6c56aa97bfebe48",
          "sha256": "a126094dabbb2fd9a2c539b1515657c1855bb0c971492ca0d6c56aa97bfebe48"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kqwait/blobs/sha256:474c5ae5f69ca9a2a239d601733b88ad2eeca8701bae1b5431385bb05fff6b24",
          "sha256": "474c5ae5f69ca9a2a239d601733b88ad2eeca8701bae1b5431385bb05fff6b24"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kqwait/blobs/sha256:dff2354e240808ec604ebd457c45ca9f2fe540fc235fc30c71c7d4effae5d0a3",
          "sha256": "dff2354e240808ec604ebd457c45ca9f2fe540fc235fc30c71c7d4effae5d0a3"
        },
        "sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kqwait/blobs/sha256:cdf423b95df66f4875df6355e1bef51c41132d1de83205d2a1f87663be5edfb8",
          "sha256": "cdf423b95df66f4875df6355e1bef51c41132d1de83205d2a1f87663be5edfb8"
        },
        "el_capitan": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kqwait/blobs/sha256:889401570c96026d7e343d48165cd2bc61735678e0125902e7d36680fa64d9a9",
          "sha256": "889401570c96026d7e343d48165cd2bc61735678e0125902e7d36680fa64d9a9"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/kqwait.rb",
  "ruby_source_checksum": {
    "sha256": "703c7e71001f887fbe93e29e393e1a7d05976825a34f285df8e254f8cb189446"
  },
  "date_added": "2014-01-21T14:31:40-08:00",
  "readme": "# kqwait\n\nWaits for write, rename and delete events on files and file creation and\ndeletion events in directories and returns. Please note, that simply \ntouching a file will not trigger a return.\n\nSupports waiting on multiple files and directories.  When waiting on a\ndirectory, adding a file, or deleting a file will trigger a return.\nEverything else (like touching or writing) will not trigger a return.\n\nThis tool is inspired by [inotifywait][1], the original [kqueue\npaper][2], and the lack of anything similar (to the best of my\nknowledge) on Mac OS X.\n\n## Requirements\n\n### Mac OS X\n\n - Xcode (Command Line Tools suffice)\n\n### Linux\n\n - http://mark.heily.com/libkqueue/\n\nWaiting on directories does not work on Linux at the moment.\n\n## Build\n\nTo build this just type:\n\n    make\n\nIf you want to check that everything is working correctly on your\nmachine use:\n\n    make test\n\nThis requires perl, with modules `IPC::Run` and `Test::More` installed. \n\n## Usage\n\nCall it like this:\n\n    kqwait [-d] [-v] [-h] <file|dir>[ <file|dir>]+\n\n### Options\n\n - `d` - enable debug output on stderr\n - `v` - print version and exit\n - `h` - print help\n\n### Operation\n\nThe tool prints the file or directory that caused the tool to wake up,\nand returns `0`, if the expected event occured, `1` otherwise.\n\nWhen waiting on a directory, a `+` character is prepended if a file was\nadded, a `-` if a file was deleted.\n\nUse it in a shell script like this:\n\n    while ./kqwait text.txt; do\n       # do some stuff on write\n    done\n\nOr watch directories like this:\n\n    $ while ./kqwait somedir someotherdir; do true; done\n    + somedir/a_file_was_added.txt\n    - someotherdir/a_file_was_deleted.txt\n\n*When watching directories, write events concerning existing files\ncurrently won't trigger a return.* Only creation and deletion will do\nthat. If you would like to track all events at the same time you can use\nshell mechanisms to do that:\n\n    while ./kqwait dir1/ dir1/*; do\n      # something\n    done\n\nIf you want to use the file that caused the return, you can assign the\noutput to a variable:\n\n    while file=`./kqwait dir1/`; do\n      echo \"Event on $file\"\n    done\n\nSee a more advanced script, that does some simple dispatch based on file\nending under `samples/`.\n\n## Note\n\nThere is (at least) one race condition in this code, when waiting\nfor changes on directories. If several events happen on a directory\nin quick succession, this tool might catch an intermediate snapshot\nof that chain of events.\n\n# Author\n\nSven Schober <sv3sch@gmail.com>\n\n[1]: https://github.com/rvoicilas/inotify-tools/wiki/\n[2]: http://people.freebsd.org/~jlemon/papers/kqueue.pdf\n\n# License\n\n````\nCopyright (c) 2020, Sven Schober\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\nRedistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n````"
}
