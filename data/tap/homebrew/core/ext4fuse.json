{
  "name": "ext4fuse",
  "full_name": "ext4fuse",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Read-only implementation of ext4 for FUSE",
  "license": "GPL-2.0",
  "homepage": "https://github.com/gerard/ext4fuse",
  "versions": {
    "stable": "0.1.3",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/gerard/ext4fuse/archive/v0.1.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "550f1e152c4de7d4ea517ee1c708f57bfebb0856281c508511419db45aa3ca9f"
    },
    "head": {
      "url": "https://github.com/gerard/ext4fuse.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ext4fuse/blobs/sha256:5dc94c281e33bde87ef6c239f7ac37ad6653e72d002359ffb01d0f50f1e8278c",
          "sha256": "5dc94c281e33bde87ef6c239f7ac37ad6653e72d002359ffb01d0f50f1e8278c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "pkg-config"
  ],
  "dependencies": [
    "libfuse@2"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "linux",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/ext4fuse.rb",
  "ruby_source_checksum": {
    "sha256": "b2f24f7c7035bd23cfde2d5e3aa99afd0710dc99eacde17fc6fb65d4ddec0ed2"
  },
  "date_added": "2013-01-04T16:29:06-08:00",
  "readme": "ext4fuse \n======\nThis is a read-only implementation of ext4 for FUSE.  The main reason this\nexists is to be able to read linux partitions from OSX.  However, it should\nwork on top of any FUSE implementation.  Linux and FreeBSD have been tested to\nsome point and I've heard that OpenSolaris should also work.\n\nWrite support will only come if I get the time, knowledge, patience and nerve\nto support it.  Most of them I lack, so it's a long shot.  However, the fact\nthat ext4fuse is read-only also means that it's completely safe to use.\n\n## Installation\n### OS X \nIf you use OS X I suggest you rely on the [homebrew project](http://mxcl.github.com/homebrew/).\n\nOnce you have homebrew installed, simply type the following two commands:\n\n`$ brew cask install osxfuse`\n\n`$ brew install ext4fuse`\n\nAt least on Leopard, you need to add your user to the operator group so you can\nhave readonly permissions to the disks.  Use this:\n\n`$ sudo dscl . append /Groups/operator GroupMembership <your-user>`\n\nAlso, you will need to know the <device> name of your ext4 partition.  Take a\nlook at the Mac Disk Utility.  It should be something _like_ `/dev/disk0s5`.\n\n### FreeBSD \nSimply install it through the ports tree:\n\n`$ cd /usr/ports/sysutils/fusefs-ext4fuse && make install clean`\n\nRemember that you need the fuse module loaded.  In my experience it doesn't\nload automatically, but then again, I have nearly zero experience with FreeBSD.\n\n### Compiling from source\nIf you prefer bleeding edge, get the source, untar it and compile using:\n\n`$ make`\n\nor in case you are on FreeBSD:\n\n`$ gmake`\n\nYou need to have pkg-config for the compilation to work as well as the FUSE\nkernel module.  For OSX you should use fuse4x (notice that fuse4x is also\navailable via `brew install`).\n\n## Mounting \nYou can mount a filesystem like this:\n\n`$ ext4fuse <device> <mountpoint>`\n\nIf you compiled from source, and you haven't manually installed `ext4fuse` in\nyour $PATH, go to the directory where you did the compilation and run this\n\n`$ ./ext4fuse <device> <mountpoint>`\n\nThe <device> should be the partition device and the <mountpoint> is the\ndirectory where you want to mount your partition.\n\n> On macOS Sierra (10.12) or later, when mounting a filesystem with `sudo`, you need to add the option `-o allow_other` to allow non-root accounts access to the mount. See [this issue](https://github.com/gerard/ext4fuse/issues/36) for details.\n\n## Reporting bugs \nIf you notice a problem, please file a [bug report](http://github.com/gerard/ext4fuse/issues).\n\nIf you have a reproducible problem the easiest for debugging is to share the\nfilesystem.  First of all, umount the partition, then you can create a backup\nlike this:\n\n`$ dd if=<device> bs=64K | gzip -c > filesystem.backup.gz`\n\nThen, just upload the .gz file somewhere.\n\nHowever, I understand that you generally do *not* want to do that.  In that\ncase you can also generate a log file.  Notice that the log file still contains\nthe directory listings.\n\nTo get a logfile, you can run ext4fuse like this:\n\n`$ ext4fuse <device> <mountpoint> -o logfile=/dev/stdout`\n\nIf you do not want to share the logfile, another option is to provide a\nbacktrace with gdb or a coredump (a coredump might contain file data).\n\nFinally, you can always drop a mail:\n  * gerard.lledo@gmail.com\n\n## Limitations\n * All code is religiously Little Endian only.  If you don't know what this\n   means, you are probably OK (ie, you are using an intel or amd cpu).  The\n   code should be better tested on x86-64, you should not be using anything\n   else on modern hardware anyway.\n * Block numbers over 32 bits aren't supported.  You hit those when you reach\n   around the terabyte, and I don't have any way to test that.  It should be\n   quite easy to fix, but I don't feel like spending time on something that\n   neither has a use for me or can be proved to be correct.  I don't have such\n   big disks :P."
}
