{
  "name": "admesh",
  "full_name": "admesh",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Processes triangulated solid meshes",
  "license": "GPL-2.0",
  "homepage": "https://github.com/admesh/admesh",
  "versions": {
    "stable": "0.98.5",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/admesh/admesh/releases/download/v0.98.5/admesh-0.98.5.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0d7994bfa587c4e958b2ac7c7d2fb90dfb6c5463d32513ada169cf710a438535"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/admesh/blobs/sha256:574b1956bd94a641fac2f06a85f9cfe3aaf5969a14ec3d88a5431230cbd36e49",
          "sha256": "574b1956bd94a641fac2f06a85f9cfe3aaf5969a14ec3d88a5431230cbd36e49"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/admesh/blobs/sha256:3c0ddb99e13c88ae4197e0822e1bb616f1c681f38a907da42099f0bcb763f3a7",
          "sha256": "3c0ddb99e13c88ae4197e0822e1bb616f1c681f38a907da42099f0bcb763f3a7"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/admesh/blobs/sha256:7fc9a0d3002aa670461964731d21e8e32e080dd6447c6bac9f0bd13a23074040",
          "sha256": "7fc9a0d3002aa670461964731d21e8e32e080dd6447c6bac9f0bd13a23074040"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/admesh/blobs/sha256:45c04648928137181b483df0a17cef9b5d254e6f49d089861436930bed9f6a1a",
          "sha256": "45c04648928137181b483df0a17cef9b5d254e6f49d089861436930bed9f6a1a"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/admesh/blobs/sha256:d2741e200d97e2528ea4e5d2449ae474a793218891db0bdd568d7bca314f0149",
          "sha256": "d2741e200d97e2528ea4e5d2449ae474a793218891db0bdd568d7bca314f0149"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/admesh/blobs/sha256:b9f6d7b1b242abeb35ce180f190f56acdbb10b547bc3f90a07b0c380bde3727f",
          "sha256": "b9f6d7b1b242abeb35ce180f190f56acdbb10b547bc3f90a07b0c380bde3727f"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/admesh/blobs/sha256:d741e030b9ae1a2022dad2e17a2e98dc6516bae9df607fb3841d6397317b8e83",
          "sha256": "d741e030b9ae1a2022dad2e17a2e98dc6516bae9df607fb3841d6397317b8e83"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/admesh/blobs/sha256:6d06691e618a708b7c30459acdc5e70f2abed11d5a2f8c7622b1fc6f8ef353f8",
          "sha256": "6d06691e618a708b7c30459acdc5e70f2abed11d5a2f8c7622b1fc6f8ef353f8"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/admesh.rb",
  "ruby_source_checksum": {
    "sha256": "b3aa740583036e394fb6743f67d1f2b9af1f7d3c0b94e05e3ceebf25b4b17fb6"
  },
  "date_added": "2014-09-20T21:11:18-07:00",
  "readme": "About this release and repository:\n----------------------------------\n\nADMesh was released as an application in 1995/96. Not much happened since then.\nAs the code of this project might bring use for others, this \"fork\" was created\nto provide a shared library. Once done that, I've collected lots of bugfixes\nfrom the world around us.\n\nNo further development will be done, but bugs will be resolved, if possible.\n\nDon't patch this project downstream but use this code, so all can benefit from\nthe changes. Pull requests are welcome, but be sure to generate no warnings.\n\nGrab the 0.98.5 tarball:\nhttps://github.com/admesh/admesh/releases/download/v0.98.5/admesh-0.98.5.tar.gz\n\nAbout ADMesh:\n-------------\n\nADMesh is a program for processing triangulated solid meshes. Currently,\nADMesh only reads the STL file format that is used for rapid prototyping\napplications, although it can write STL, VRML, OFF, and DXF files.\n\nAdditional information regarding the underlying algorithms of ADMesh\ncan be found in Anthony Martin's Masters Thesis available from here:\n\nhttp://www.varlog.com/admesh-htm/ADMeshThesis.zip\n\nFeatures:\n---------\n\n * Read and write binary and ASCII STL files\n * Check STL files for flaws (i.e. unconnected facets, bad normals)\n * Repair facets by connecting nearby facets that are within a given tolerance\n * Fill holes in the mesh by adding facets.\n * Repair normal directions (i.e. facets should be CCW)\n * Repair normal values (i.e. should be perpendicular to facet with length=1)\n * Remove degenerate facets (i.e. facets with 2 or more vertices equal)\n * Translate in x, y, and z directions\n * Rotate about the x, y, and z axes\n * Mirror about the xy, yz, and xz planes\n * Scale the part by a factor\n * Merge 2 STL files into one\n * Write an OFF file \n * Write a VRML file \n * Write a DXF file \n * Calculate the volume of a part\n\nADMesh outputs the following statistics after processing:\n\n````\n================= Results produced by ADMesh version 0.98.5 =================\nInput file         : sphere.stl\nFile type          : Binary STL file\nHeader             : Processed by ADMesh version 0.98.5\n============== Size ==============\nMin X = -1.334557, Max X = 1.370952\nMin Y = -1.377953, Max Y = 1.377230\nMin Z = -1.373225, Max Z = 1.242838\n========= Facet Status ========== Original ============ Final ====\nNumber of facets                 :  3656                3656\nFacets with 1 disconnected edge  :    18                   0\nFacets with 2 disconnected edges :     3                   0\nFacets with 3 disconnected edges :     0                   0\nTotal disconnected facets        :    21                   0\n=== Processing Statistics ===     ===== Other Statistics =====\nNumber of parts       :     1        Volume   :  10.889216\nDegenerate facets     :     0\nEdges fixed           :    24\nFacets removed        :     0\nFacets added          :     0\nFacets reversed       :     0\nBackwards edges       :     0\nNormals fixed         :     0\n````\n\nThere are two different algorithms used for fixing unconnected facets.  The\nfirst algorithm finds an unconnected edge, and then checks nearby within a\ngiven tolerance for another unconnected edge.  It then fixes edges within\ntolerance.  Some meshes can be completely fixed just using this method.  If\nthere are still unconnected facets after this \"nearby check\" has been done,\nthen a second algorithm is used.  This algorithm just fills any holes in the\nmesh by adding facets until all of the holes are filled.  Using these two\nalgorithms, almost any imperfect STL file can be \"fixed\" 100% so that there\nare 0 unconnected facets.  Whether the resulting mesh is what you really\nwant is another question since there is no way for ADMesh to add information\nthat isn't there.\n\nAt this point ADMesh is only command-line driven and has no windowing\ncapabilities.  This should make it extremely easy to port to any UNIX-like\nsystem, and it shouldn't have any problems compiling on Windows NT, and some\npeople have had success compiling it under DOS or Windows using DJGPP.\n\nADMesh was developed on a 486/66 with 16Mb running the Linux operating system.\nIt has also been compiled and run on the following systems:\nSunOS 4.1.3\nIRIX  5.2\nPlease let me know about successes or failures with other systems.\n\nOn my Linux system with 16Mb of memory, I can easily process files that have\nup to about 200,000 facets.  Files larger than this can be processed, but\nthe system begins to slow down significantly due to swapping.  A system with\nmore memory will be able to process greater numbers of facets more easily.\nFollowing are some indications of process times:\n\n * 40,000  facets: 10 seconds\n * 80,000  facets: 20 seconds\n * 160,000 facets: 50 seconds\n * 320,000 facets: 13 minutes (heavy swapping occurred)\n\nNote that those times were calculated around 1996.\n\nADMesh is free but copyrighted software.  It is distributed under the terms\nof the GNU General Public License (GPL). Details of the GPL are in the file\nCOPYING that comes with the ADMesh software package."
}
