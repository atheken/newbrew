{
  "name": "cig",
  "full_name": "cig",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "CLI app for checking the state of your git repositories",
  "license": "MIT",
  "homepage": "https://github.com/stevenjack/cig",
  "versions": {
    "stable": "0.1.5",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/stevenjack/cig/archive/v0.1.5.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "545a4a8894e73c4152e0dcf5515239709537e0192629dc56257fe7cfc995da24"
    },
    "head": {
      "url": "https://github.com/stevenjack/cig.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 3,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cig/blobs/sha256:e3b74f7b2d3b2d121ccb6946718893b4f0c09d6bae5e5a6a7d48b8144da9b452",
          "sha256": "e3b74f7b2d3b2d121ccb6946718893b4f0c09d6bae5e5a6a7d48b8144da9b452"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cig/blobs/sha256:48e80e3f418f825caceccd69e9ec911f5c03b8fa7f38883edfd66d353f70a481",
          "sha256": "48e80e3f418f825caceccd69e9ec911f5c03b8fa7f38883edfd66d353f70a481"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cig/blobs/sha256:2d4f345393a0553e40003b46523a07e2bb0162bba0309ca9c0d322f606e73b76",
          "sha256": "2d4f345393a0553e40003b46523a07e2bb0162bba0309ca9c0d322f606e73b76"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cig/blobs/sha256:340790bf6ab897640e1a1f350d8c106d3bc2835ad71cec69b7a717894749cc35",
          "sha256": "340790bf6ab897640e1a1f350d8c106d3bc2835ad71cec69b7a717894749cc35"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cig/blobs/sha256:fbca3e3336ec9a9848091d2b1845a48dc915ae798da5e1d54fe6aa4ee2261da6",
          "sha256": "fbca3e3336ec9a9848091d2b1845a48dc915ae798da5e1d54fe6aa4ee2261da6"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cig/blobs/sha256:c41c70e517158f1a31bb4b29a6fa01b12570001353b8800d55aadd4ddc99080e",
          "sha256": "c41c70e517158f1a31bb4b29a6fa01b12570001353b8800d55aadd4ddc99080e"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cig/blobs/sha256:3ccce3238efd259041dbb0f0427d5ac06cc4dfafdfbfd336ddd0023e02e9dd7d",
          "sha256": "3ccce3238efd259041dbb0f0427d5ac06cc4dfafdfbfd336ddd0023e02e9dd7d"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cig/blobs/sha256:9cf50d9418885990bed7e23b0c2987918d63bef3e7f3e27589c521b6b73160bf",
          "sha256": "9cf50d9418885990bed7e23b0c2987918d63bef3e7f3e27589c521b6b73160bf"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cig/blobs/sha256:3cda091fe20f715097967b89ee16f611d3f26faac9eb4d3f7861ec5d9cb91201",
          "sha256": "3cda091fe20f715097967b89ee16f611d3f26faac9eb4d3f7861ec5d9cb91201"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/cig.rb",
  "ruby_source_checksum": {
    "sha256": "c5a4a4d88395ae1cb5dec4b06f867ebe981f869f4f901b0b109ffda7c34b435c"
  },
  "date_added": "2015-06-18T08:36:16+01:00",
  "readme": "<h1 align=\"center\">cig</h1>\n\n<p align=\"center\">\n  <a href=\"https://github.com/stevenjack/cig/releases\" target=\"_blank\"><img src=\"https://img.shields.io/github/release/stevenjack/cig.svg?style=flat-square\"></a>\n  <a href=\"https://travis-ci.org/stevenjack/cig\" target=\"_blank\"><img src=\"http://img.shields.io/travis/stevenjack/cig.svg?style=flat-square\"></a>\n  <a href=\"https://gitter.im/stevenjack/cig?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\" target=\"_blank\"><img src=\"https://img.shields.io/badge/GITTER-join%20chat-green.svg?style=flat-square\"></a>\n  <a href=\"http://godoc.org/github.com/stevenjack/cig\" target=\"_blank\"><img src=\"http://img.shields.io/badge/api-Godoc-blue.svg?style=flat-square\"></a>\n</p>\n\n<p align=\"center\">\n\tCan I go? CLI app for checking the state of your git repositories.\n</p>\n\n![cig](https://cloud.githubusercontent.com/assets/527874/7220202/faaedf0c-e6b6-11e4-9cb8-bf62295f4128.png)\n\n### Installation\n\nTo install cig, follow the instructions for your OS below:\n\n#### GO\n\nIf you have [go](http://golang.org/) installed and the bin folder added to your path, just run:\n\n```bash\n$: go get github.com/stevenjack/cig\n```\n\n#### OSX\n\nMake sure you have [homebrew](https://www.github.com/homebrew/homebrew) installed, then run the\nfollowing:\n\n`$: brew install cig`\n\n> Alternatively you can follow the install instructions for `Linux` below if you don't have or\nwant to install homebrew.\n\n#### Linux\n\n##### One line install\n\n```bash\ncurl -L https://bit.ly/cig-install | sudo bash\n```\n\n> Note: this command downloads the binary and changes the execute permission on it\n\n##### Manual install\n\n```bash\ncurl -L https://github.com/stevenjack/cig/releases/download/v0.1.5/cig_`uname -s`_x86_64 > /usr/local/bin/cig\nchmod +x /usr/local/bin/cig\n```\n\n### Windows\n\nDownload the following binary:\n\n* [64bit](https://github.com/stevenjack/cig/releases/download/v0.1.5/cig_windows_x86_64.exe)\n\nOnce you have the binary, run it via your cmd prompt:\n\n```\nC: cig_windows_amd64.exe\n```\n\n### Setup\n\nCreate a `.cig.yaml` configuration file within your home directory:\n\n#### Linux\n\n> ~/.cig.yaml\n\n```yaml\nwork: /path/to/work/repos\npersonal: /path/to/personal/repos\n```\n\n#### Windows\n\n> ~/Users/Steven Jack/.cig.yaml\n\n```yaml\nwork: C:\\path\\to\\work\\repos\npersonal: C:\\path\\to\\personal\\repos\n```\n\nThe configuration file defines the different folder locations that contain the `.git` repos you want cig to check for you.\n\n### Usage\n\nSimply run:\n\n`$: cig`\n\nOnce executed, cig will check all your repos and the following information will be displayed:\n\n* Repos that need pushing up to the origin: `P`\n* Repos that have new, unstaged and staged changes: `M(10)`\n\n> Note: the values will soon be replaced with something similar to:  \n> `(S)taged, (M)odified, (N)ew`  \n> Please see the [issues page](https://github.com/stevenjack/cig/issues) for full details\n\n#### Filters\n\nIf you just want to check your 'work' repos for changes:\n\n`$: cig -t work`\n\nTo filter them based on a certain string such as 'steve':\n\n`$: cig -f steve`\n\nYou can also combine them, so to only show 'work' repos with 'steve' \nin the path:\n\n`$: cig -t work -f steve`\n\n### TODO\n\nPlease see [issues](https://www.github.com/stevenjack/cig/issues?utf8=âœ“&q=is%3Aissue+is%3Aopen+label%3ATODO)\n\n### Contributing\n\n1. Fork it ( http://github.com/stevenjack/cig/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request"
}
