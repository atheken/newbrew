{
  "name": "tealdeer",
  "full_name": "tealdeer",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Very fast implementation of tldr in Rust",
  "license": "Apache-2.0 or MIT",
  "homepage": "https://github.com/dbrgn/tealdeer",
  "versions": {
    "stable": "1.6.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/dbrgn/tealdeer/archive/v1.6.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d42db25a56a72faec173c86192656c5381281dc197171f385fccffd518930430"
    },
    "head": {
      "url": "https://github.com/dbrgn/tealdeer.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tealdeer/blobs/sha256:03ed6d8a46dfaaad1f0f4198fa9479d6925f6bfd58f6d3c95b2d21f832360c00",
          "sha256": "03ed6d8a46dfaaad1f0f4198fa9479d6925f6bfd58f6d3c95b2d21f832360c00"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tealdeer/blobs/sha256:fedd60d1a623724b3c66b436c8d1336f8978d6b1e0bf5b87c1891b63f72368cd",
          "sha256": "fedd60d1a623724b3c66b436c8d1336f8978d6b1e0bf5b87c1891b63f72368cd"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tealdeer/blobs/sha256:04aaa793695beba680085500b1c45ef336561f50743e6360b560eda2338fcbcd",
          "sha256": "04aaa793695beba680085500b1c45ef336561f50743e6360b560eda2338fcbcd"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tealdeer/blobs/sha256:d0ab45756b657907f05358c558e235e850394ec9d3bbdcb17fa288d1c0a22e5f",
          "sha256": "d0ab45756b657907f05358c558e235e850394ec9d3bbdcb17fa288d1c0a22e5f"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tealdeer/blobs/sha256:833df803c5b64bfcbf2689da129632ade502d00fb83582ee322059cef358b3f2",
          "sha256": "833df803c5b64bfcbf2689da129632ade502d00fb83582ee322059cef358b3f2"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tealdeer/blobs/sha256:fb53881e8ff4d1a74d70bcd2a80c05fe2b34b350eb82c2bcca3ea4002826bf4a",
          "sha256": "fb53881e8ff4d1a74d70bcd2a80c05fe2b34b350eb82c2bcca3ea4002826bf4a"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tealdeer/blobs/sha256:1968452b9b39f7b2581864a4547e45c07785aa307e48ee5416cfb7387fd5e3da",
          "sha256": "1968452b9b39f7b2581864a4547e45c07785aa307e48ee5416cfb7387fd5e3da"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tealdeer/blobs/sha256:faacf0de290cdd866297f164e841e4ea31e5c3b930ec08caa13591f336b0d7e0",
          "sha256": "faacf0de290cdd866297f164e841e4ea31e5c3b930ec08caa13591f336b0d7e0"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [
    "tldr"
  ],
  "conflicts_with_reasons": [
    "both install `tldr` binaries"
  ],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/tealdeer.rb",
  "ruby_source_checksum": {
    "sha256": "682d20fda73c1f91d63af106b7f2ce85d1322133f9eb2373243e1d7663d47241"
  },
  "date_added": "2018-10-20T14:31:28+02:00",
  "readme": "# tealdeer\n\n![teal deer](docs/src/deer.png)\n\n|Crate|CI (Linux/macOS/Windows)|\n|:---:|:---:|\n|[![Crates.io][crates-io-badge]][crates-io]|[![GitHub CI][github-actions-badge]][github-actions]|\n\nA very fast implementation of [tldr](https://github.com/tldr-pages/tldr) in\nRust: Simplified, example based and community-driven man pages.\n\n<img src=\"docs/src/screenshot-default.png\" alt=\"Screenshot of tldr command\" width=\"600\">\n\nIf you pronounce \"tldr\" in English, it sounds somewhat like \"tealdeer\". Hence the project name :)\n\nIn case you're in a hurry and just want to quickly try tealdeer, you can find static\nbinaries on the [GitHub releases page](https://github.com/dbrgn/tealdeer/releases/)!\n\n\n## Docs (Installing, Usage, Configuration)\n\nUser documentation is available at <https://dbrgn.github.io/tealdeer/>!\n\nThe docs are generated using [mdbook](https://rust-lang.github.io/mdBook/index.html).\nThey can be edited through the markdown files in the `docs/src/` directory.\n\n\n## Goals\n\nHigh level project goals:\n\n- [x] Download and cache pages\n- [x] Don't require a network connection for anything besides updating the cache\n- [x] Command line interface similar or equivalent to the [NodeJS client][node-gh]\n- [x] Comply with the [tldr client specification][client-spec]\n- [x] Advanced highlighting and configuration\n- [x] Be fast\n\nA tool like `tldr` should be as frictionless as possible to use and show the\noutput as fast as possible.\n\nWe think that `tealdeer` reaches these goals. We put together a (more or less)\nreproducible benchmark that compiles a handful of clients from source and\nmeasures the execution times on a cold disk cache. The benchmarking is run in a\nDocker container using sharkdp's [`hyperfine`][hyperfine-gh]\n([Dockerfile][benchmark-dockerfile]).\n\n| Client (50 runs, 17.10.2021)      | Programming Language | Mean in ms | Deviation in ms | Comments                |\n| :---:                             | :---:                | :---:      | :---:           | :---:                   |\n| [`outfieldr`][outfieldr-gh]       | Zig                  | 9.1        | 0.5             | no user configuration   |\n| `tealdeer`                        | Rust                 | 13.2       | 0.5             |                         |\n| [`fast-tldr`][fast-tldr-gh]       | Haskell              | 17.0       | 0.6             | no example highlighting |\n| [`tldr-hs`][hs-gh]                | Haskell              | 25.1       | 0.5             | no example highlighting |\n| [`tldr-bash`][bash-gh]            | Bash                 | 30.0       | 0.8             |                         |\n| [`tldr-c`][c-gh]                  | C                    | 38.4       | 1.0             |                         |\n| [`tldr-python-client`][python-gh] | Python               | 87.0       | 2.4             |                         |\n| [`tldr-node-client`][node-gh]     | JavaScript / NodeJS  | 407.1      | 12.9            |                         |\n\nAs you can see, `tealdeer` is one of the fastest of the tested clients.\nHowever, we strive for useful features and code quality over raw performance,\neven if that means that we don't come out on top in this friendly competition.\nThat said, we are still optimizing the code, for example when the `outfieldr`\ndevelopers [suggested to switch][outfieldr-comment-tls] to a native TLS\nimplementation instead of the native libraries.\n\n## Development\n\nCreating a debug build with logging enabled:\n\n    $ cargo build --features logging\n\nRelease build without logging:\n\n    $ cargo build --release\n\nTo enable the log output, set the `RUST_LOG` env variable:\n\n    $ export RUST_LOG=tldr=debug\n\nTo run tests:\n\n    $ cargo test\n\nTo run lints:\n\n    $ rustup component add clippy\n    $ cargo clean && cargo clippy\n\n\n## MSRV (Minimally Supported Rust Version)\n\nWhen publishing a tealdeer release, the Rust version required to build it\nshould be stable for at least a month.\n\n\n## License\n\nLicensed under either of\n\n * Apache License, Version 2.0 ([LICENSE-APACHE](LICENSE-APACHE) or\n   http://www.apache.org/licenses/LICENSE-2.0)\n * MIT license ([LICENSE-MIT](LICENSE-MIT) or\n   http://opensource.org/licenses/MIT) at your option.\n\n\n### Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in the work by you, as defined in the Apache-2.0 license, shall\nbe dual licensed as above, without any additional terms or conditions.\n\nThanks to @severen for coming up with the name \"tealdeer\"!\n\n\n[node-gh]: https://github.com/tldr-pages/tldr-node-client\n[c-gh]: https://github.com/tldr-pages/tldr-c-client\n[hs-gh]: https://github.com/psibi/tldr-hs\n[fast-tldr-gh]: https://github.com/gutjuri/fast-tldr\n[bash-gh]: https://4e4.win/tldr\n[outfieldr-gh]: https://gitlab.com/ve-nt/outfieldr\n[python-gh]: https://github.com/tldr-pages/tldr-python-client\n\n[benchmark-dockerfile]: https://github.com/dbrgn/tealdeer/blob/main/benchmarks/Dockerfile\n[client-spec]: https://github.com/tldr-pages/tldr/blob/main/CLIENT-SPECIFICATION.md\n[hyperfine-gh]: https://github.com/sharkdp/hyperfine\n[outfieldr-comment-tls]: https://github.com/dbrgn/tealdeer/issues/129#issuecomment-833596765\n\n<!-- Badges -->\n[github-actions]: https://github.com/dbrgn/tealdeer/actions?query=branch%3Amain\n[github-actions-badge]: https://github.com/dbrgn/tealdeer/workflows/CI/badge.svg\n[crates-io]: https://crates.io/crates/tealdeer\n[crates-io-badge]: https://img.shields.io/crates/v/tealdeer.svg"
}
