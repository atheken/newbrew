{
  "name": "iblinter",
  "full_name": "iblinter",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Linter tool for Interface Builder",
  "license": "MIT",
  "homepage": "https://github.com/IBDecodable/IBLinter",
  "versions": {
    "stable": "0.5.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/IBDecodable/IBLinter/archive/0.5.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d1aafdca18bc81205ef30a2ee59f33513061b20184f0f51436531cec4a6f7170"
    },
    "head": {
      "url": "https://github.com/IBDecodable/IBLinter.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iblinter/blobs/sha256:b7feaf0f8989fa59389fb0788d91688ea5cac2ffeed12ee872aace5110f7bf8b",
          "sha256": "b7feaf0f8989fa59389fb0788d91688ea5cac2ffeed12ee872aace5110f7bf8b"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iblinter/blobs/sha256:83ffc3e0bd87735dce4868ce4540fb025d94c8a491e6b029d537f7594d653935",
          "sha256": "83ffc3e0bd87735dce4868ce4540fb025d94c8a491e6b029d537f7594d653935"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iblinter/blobs/sha256:1022dcabaa9a097c554000519d2ba6c424d7612a6cb344c8b2697477f7f40e2a",
          "sha256": "1022dcabaa9a097c554000519d2ba6c424d7612a6cb344c8b2697477f7f40e2a"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iblinter/blobs/sha256:63bd9e8532fa5e7b741e5ba07952ca62a51e1c14608f15c90871093b28664e6e",
          "sha256": "63bd9e8532fa5e7b741e5ba07952ca62a51e1c14608f15c90871093b28664e6e"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iblinter/blobs/sha256:c29c85d68c136f5c706167c47c79092facfbc4a5b02956233ea6d8617ac6aa05",
          "sha256": "c29c85d68c136f5c706167c47c79092facfbc4a5b02956233ea6d8617ac6aa05"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iblinter/blobs/sha256:aa478f72715391c8e25e31ead3a9b25503158eb37a6d4d4ae5ab222f5026c13a",
          "sha256": "aa478f72715391c8e25e31ead3a9b25503158eb37a6d4d4ae5ab222f5026c13a"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iblinter/blobs/sha256:558920fbd33ed70ba3ebe56543756dc51fbece752be655691e46ac33b8bec8e0",
          "sha256": "558920fbd33ed70ba3ebe56543756dc51fbece752be655691e46ac33b8bec8e0"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "xcode",
      "cask": null,
      "download": null,
      "version": "10.2",
      "contexts": [
        "build"
      ],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/iblinter.rb",
  "ruby_source_checksum": {
    "sha256": "1be08e7b706b3efd2286ad1ee36f37dd3910028f1ad263c6bc2b36bcce4e0484"
  },
  "date_added": "2020-02-21T17:23:16+00:00",
  "readme": "# IBLinter\n[![Build Status](https://travis-ci.org/IBDecodable/IBLinter.svg?branch=master)](https://travis-ci.org/IBDecodable/IBLinter)\n[![Swift 5.0](https://img.shields.io/badge/Swift-5.0-orange.svg?style=flat)](https://developer.apple.com/swift/)\n\n\nA linter tool to normalize `.xib` and `.storyboard` files. Inspired by [realm/SwiftLint](https://github.com/realm/SwiftLint)\n\n![](assets/warning.png)\n\n## Installation\n\n### Using [Homebrew](http://brew.sh/)\n\n```sh\n$ brew install iblinter\n```\n\n### Using [Mint](https://github.com/yonaskolb/Mint)\n\n```sh\n$ mint install IBDecodable/IBLinter\n```\n\n### Using [CocoaPods](https://cocoapods.org)\n\n```sh\npod 'IBLinter'\n```\n\nThis will download the IBLinter binaries and dependencies in `Pods/` during your next\n`pod install` execution and will allow you to invoke it via `${PODS_ROOT}/IBLinter/bin/iblinter`\nin your Script Build Phases.\n\n### Compiling from source\n\nYou can build from source by cloning this repository and running\n```\n$ make install\n```\n`iblinter` will be installed in `/usr/local/bin`.\n\n## Usage\n\nYou can see all description by `iblinter --help`\n\n```\n$ iblinter --help\nUSAGE: iblinter <subcommand>\n\nOPTIONS:\n  --version               Show the version.\n  -h, --help              Show help information.\n\nSUBCOMMANDS:\n  lint (default)          Print lint warnings and errors\n\n  See 'iblinter help <subcommand>' for detailed help.\n```\n\n### Xcode\n\nAdd a `Run Script Phase` to integrate IBLinter with Xcode\n\n```sh\nif which iblinter >/dev/null; then\n  iblinter lint\nelse\n  echo \"warning: IBLinter not installed, download from https://github.com/IBDecodable/IBLinter\"\nfi\n```\n\nAlternatively, if you've installed IBLinter via CocoaPods the script should look like this:\n\n```sh\n\"${PODS_ROOT}/IBLinter/bin/iblinter\"\n```\n\n## Requirements\n\nIBLinter requires Swift5.0 runtime. Please satisfy at least one of following requirements.\n\n - macOS 10.14.4 or later\n - Install `Swift 5 Runtime Support for Command Line Tools` from [More Downloads for Apple Developers](https://developer.apple.com/download/more/)\n\n## Rules\n\nAll rules are documented in [Rules.md](Rules.md)\n\nPull requests are encouraged.\n\n\n## Configuration\n\nYou can configure IBLinter by adding a `.iblinter.yml` file from project root directory.\n\n\n| key                  | description                 |\n|:---------------------|:--------------------------- |\n| `enabled_rules`      | Enabled rules id.           |\n| `disabled_rules`     | Disabled rules id.          |\n| `excluded`           | Path to ignore for lint.    |\n| `included`           | Path to include for lint.   |\n| `custom_module_rule` | Custom module rule configs. |\n| `use_base_class_rule`| Use base class rule configs.|\n| `view_as_device_rule`| View as device rule configs.|\n\n### CustomModuleConfig\n\nYou can configure `custom_module` rule by `CustomModuleConfig` list.\n\n| key        | description                                                                  |\n|:-----------|:---------------------------------------------------------------------------- |\n| `module`   | Module name.                                                                 |\n| `included` | Path to `*.swift` classes of the module for `custom_module` lint.            |\n| `excluded` | Path to ignore for `*.swift` classes of the module for `custom_module` lint. |\n\n### UseBaseClassConfig\n\nYou can configure `use_base_class` rule by `UseBaseClassConfig` list.\n\n| key               | description                        |\n|:------------------|:---------------------------------- |\n| `element_class`   | Element class name.                |\n| `base_classes`    | Base classes of the element class. |\n\n**Note:** UseBaseClassRule does not work for classes that inherit base class. You need to add all classes to `base_classes` to check.\n\n### ViewAsDeviceConfig\n\nYou can configure `view_as_device` rule by `ViewAsDeviceConfig`. If there are no config, `device_id` is set as `retina4_7`.  \n\n| key               | description                        |\n|:------------------|:---------------------------------- |\n| `device_id`       | Device id for device.              |\n\n**appx.** Table of mapping device name to `device_id` (on `Xcode 10.2`) \n\n| device name       | device id            |\n|:------------------|:-------------------- |\n| `iPhone 4s`       | `retina3_5`          |\n| `iPhone SE`       | `retina4_0`          |\n| `iPhone 8`        | `retina4_7`          |\n| `iPhone 8 Plus`   | `retina5_5`          |\n| `iPhone XS`       | `retina5_9`          |\n| `iPhone XR`       | `retina6_1`          |\n| `iPhone XS Max`   | `retina6_5`          |\n\n### UseTraitCollectionsConfig\n\nYou can configure `use_trait_collections` rule by `UseTraitCollectionsConfig`. If there is no config then use_trait_collections is set to true\n\n|    key   | description |\n|:---------------:|:---------------:|\n|   enabled  |  `true` |\n\n### HidesBottomBarConfig\n\nYou can configure `hides_bottom_bar` rule by `HidesBottomBarConfig` list.\n\n|    key   | description |\n|:---------------:|:---------------:|\n|   `excluded_view_controllers`  |  Controller's class name to ignore `hides_bottom_bar` rule. |\n\n```yaml\nenabled_rules:\n  - relative_to_margin\n  - use_trait_collections\n  - hides_bottom_bar\n  - has_single_view_controller\n  - has_initial_view_controller\ndisabled_rules:\n  - custom_class_name\nexcluded:\n  - Carthage\n  - App\nincluded:\n  - App/Views\ncustom_module_rule:\n  - module: UIComponents\n    included:\n      - UIComponents/Classes\n    excluded:\n      - UIComponents/Classes/Config/Generated\nuse_base_class_rule:\n  - element_class: UILabel\n    base_classes:\n      - PrimaryLabel\n      - SecondaryLabel\nview_as_device_rule:\n  device_id: retina4_0\nuse_trait_collections_rule:\n  enabled: false\nhides_bottom_bar_rule:\n  excluded_view_controllers:\n    - FirstViewController\n    - SecondViewController\n```"
}
