{
  "name": "lepton",
  "full_name": "lepton",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Tool and file format for losslessly compressing JPEGs",
  "license": "Apache-2.0",
  "homepage": "https://github.com/dropbox/lepton",
  "versions": {
    "stable": "1.2.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/dropbox/lepton/archive/1.2.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "c4612dbbc88527be2e27fddf53aadf1bfc117e744db67e373ef8940449cdec97"
    },
    "head": {
      "url": "https://github.com/dropbox/lepton.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lepton/blobs/sha256:cb17a68671e9858d6641f10ebb9ea40ae6351d9794254c71f9c394ea14ef232c",
          "sha256": "cb17a68671e9858d6641f10ebb9ea40ae6351d9794254c71f9c394ea14ef232c"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lepton/blobs/sha256:76ad15c6eea9edaf46a6dd3cad91d20c74c234001c1af3a46a9f7bbf4f44ff95",
          "sha256": "76ad15c6eea9edaf46a6dd3cad91d20c74c234001c1af3a46a9f7bbf4f44ff95"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lepton/blobs/sha256:588d9fa1928b1a90e9ff6e49b4558bc1e5e228b50cce311614e2f1ba65190b92",
          "sha256": "588d9fa1928b1a90e9ff6e49b4558bc1e5e228b50cce311614e2f1ba65190b92"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lepton/blobs/sha256:61424564a043a4a02ac9beab50a3c57dc454d4c301e536cf17d1457aac82bba9",
          "sha256": "61424564a043a4a02ac9beab50a3c57dc454d4c301e536cf17d1457aac82bba9"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lepton/blobs/sha256:5b3d88dced1ee91a38ba4a7ede4f21cac5e0ce2d9d5cc3b5f89775c36fbbb177",
          "sha256": "5b3d88dced1ee91a38ba4a7ede4f21cac5e0ce2d9d5cc3b5f89775c36fbbb177"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lepton/blobs/sha256:496840db331a445a5ba66475a58782a26d5a910b9d7ed8fb1aa2e0f9b98c68b9",
          "sha256": "496840db331a445a5ba66475a58782a26d5a910b9d7ed8fb1aa2e0f9b98c68b9"
        },
        "sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lepton/blobs/sha256:6713be0e881459057b561cbfd6902d167dc9601be856b8715e9abd6ffc02b605",
          "sha256": "6713be0e881459057b561cbfd6902d167dc9601be856b8715e9abd6ffc02b605"
        },
        "el_capitan": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lepton/blobs/sha256:a6a1a47dd2f80fe66d5dfbde97b91ba93d054f6934ba2a950ede603e405e6eed",
          "sha256": "a6a1a47dd2f80fe66d5dfbde97b91ba93d054f6934ba2a950ede603e405e6eed"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lepton/blobs/sha256:0fdd05b0bfb892d9f768134cc9c929ae9544137b8ac75a875f06d6f83d15607d",
          "sha256": "0fdd05b0bfb892d9f768134cc9c929ae9544137b8ac75a875f06d6f83d15607d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "arch",
      "cask": null,
      "download": null,
      "version": "x86_64",
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": true,
  "deprecation_date": "2023-01-29",
  "deprecation_reason": "repo_archived",
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/lepton.rb",
  "ruby_source_checksum": {
    "sha256": "265777d349d4a5eab5c7ae6602e7508ff28b1faf481b68d51442c6535f51cf4f"
  },
  "date_added": "2016-07-18T20:08:53+01:00",
  "readme": "<blockquote>\n<b>⚠️&nbsp;&nbsp;Deprecation Notice for the Dropbox Lepton project</b><br><br>\n\n<em>Dear Lepton users and developers,<br><br>\nThank you so much for using and contributing to Lepton over the years! We’ve recently realized that we no longer have sufficient resources to adequately support this project. This includes providing timely fixes to bugs and vulnerabilities such as those that were [recently reported to us](https://github.com/dropbox/lepton/issues/158). While we did ensure that the reported vulnerabilities don’t affect our internal use of Lepton, we unfortunately don’t have the capacity to properly fix these and future issues in this public repo. Therefore, after some consideration, we’ve decided to deprecate and archive the project. We apologize for any inconvenience and appreciate your understanding.<br><br>\n    \nIf you would like to continue using Lepton, please check out Microsoft’s [implementation of Lepton in Rust](https://github.com/microsoft/lepton_jpeg_rust) or alternatively consider switching to other lossless compression methods such as [Brotli](https://dropbox.tech/infrastructure/lossless-compression-with-brotli) or to modern image formats such as [WebP](https://en.wikipedia.org/wiki/WebP) or [JPEG XL](https://en.wikipedia.org/wiki/JPEG_XL).</em>\n</blockquote>\n\n# Lepton\n\nLepton is a tool and file format for losslessly compressing JPEGs by an average of 22%.\n\nThis can be used to archive large photo collections, or to serve images live and save 22% bandwidth.\n\n\n[![Build Status](https://travis-ci.org/dropbox/lepton.svg?branch=master)](https://travis-ci.org/dropbox/lepton)\n\n\n## Build directions\nUsing a single core\n\n    ./autogen.sh\n    ./configure\n    make\n    make check\n\nFor multiprocessor machines:\n\n    ./autogen.sh\n    ./configure\n    make -j8\n    make check -j8\n\nUsing CMAKE:\n\n    mkdir -p build\n    cd build\n    cmake ..\n    make -j8\n\nOn Windows\n\n    mkdir -p build\n    cd build\n    \"c:\\Program Files\\CMake\\bin\\cmake\" ..\n    start .\n    REM Double click the Visual Studio project\n\n## Usage\n\nTo roundtrip (compress and decompress) an image, `original.jpg`, do the following:\n\n    ./lepton original.jpg compressed.lep\n    ./lepton compressed.lep restored_original.jpg\n\nOr all at once:\n\n    ./lepton original.jpg compressed.lep && ./lepton compressed.lep restored_original.jpg && diff restored_original.jpg original.jpg && echo no differences\n\n\nLepton may also be used with pipes -- be sure to check the exit code when using pipes\nas if compression fails lepton will produce 0 bytes and return a nonzero exit code\n(failure). In this case do not assume the 0 byte file is representative of the original.\n\n    ./lepton - < original.jpg > compressed.lep\n    ./lepton - < compressed.lep > restored_original.jpg\n\n\nYou may specify higher memory limits than the default for lepton to handle bigger images:\n\n    ./lepton -memory=1024M -threadmemory=128M input_file output_file\n\nAdditionally you can configure lepton to process progressive jpegs.\nWarning: these take more memory to decode than normal JPEGs since the entire framebuffer\nmust be kept in memory for the duration of the decompression, instead of just 2 rows of blocks.\n\n    ./lepton -allowprogressive -memory=1024M -threadmemory=128M progressive.jpg compressedprogressive.lep\n\n\n## Submitting pull requests to lepton\n\nPlease begin by filling out the contributor form and asserting that\n\n    The code I'm contributing is mine, and I have the right to license it.\n    I'm granting you a license to distribute said code under the terms of this agreement.\n\nat this page:\nhttps://opensource.dropbox.com/cla/\n\nThen create a new pull request through the github interface\n\n## Debugging\n\nLepton is designed to be easy to debug, but a command line requirement is necessary to prevent\nthe standard forks that let it do a secure verification in a separate process.\n\nTo avoid setting follow fork flags, please pass -skipverify to the command line.\nThis will stop verification and let you debug the app as a single process application.\nIf the bug happens in single threaded mode, also you can pass -singlethread which makes\nit easier to step through the code without other threads hitting breakpoints.\n\n## Bindings for other languages\n\n* NodeJS: https://github.com/whitef0x0/node-lepton\n* PHP: https://github.com/gtuk/php-lepton\n\n## Acknowledgements\n\nMany thanks to Matthias Stirner and HTW Aalen University for the development of the [uncmpJPG](http://packjpg.encode.su/?page_id=178) library.\n\nThanks to the VPX authors for their highly tuned bool reader and bool writer implementations.\n\n## Related Work\n\nBe sure to read the groundbreaking research done by Matthias Stirner, Gehard Seelman and HTW Aalen University in their [2007 paper](http://www.elektronik.htw-aalen.de/packjpg/_notes/PCS2007_PJPG_paper_final.pdf) and check out their excellent [PackJPG](http://github.com/packjpg) repositories for compression of JPEG MP3 BMP and PMN formats.\n\nAlso the [paq](http://mattmahoney.net/dc/) algorithms combine for a highly compressed JPEG result when decompression time is less critical.\n\nWhen the compressed JPEG needs to also be a JPEG, there is [mozjpg](https://github.com/mozilla/mozjpeg) to explore as well.\n\n## License\n\nUnless otherwise noted:\n\n```\nCopyright (c) 2016 Dropbox, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```"
}
