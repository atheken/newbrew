{
  "name": "google-java-format",
  "full_name": "google-java-format",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Reformats Java source code to comply with Google Java Style",
  "license": "Apache-2.0",
  "homepage": "https://github.com/google/google-java-format",
  "versions": {
    "stable": "1.17.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/google/google-java-format/releases/download/v1.17.0/google-java-format-1.17.0-all-deps.jar",
      "tag": null,
      "revision": null,
      "checksum": "33068bbbdce1099982ec1171f5e202898eb35f2919cf486141e439fc6e3a4203"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/google-java-format/blobs/sha256:054e43aaed2400e8859c99041b1a5d60dfda0049f18e0c7e33746810867ff68b",
          "sha256": "054e43aaed2400e8859c99041b1a5d60dfda0049f18e0c7e33746810867ff68b"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/google-java-format/blobs/sha256:054e43aaed2400e8859c99041b1a5d60dfda0049f18e0c7e33746810867ff68b",
          "sha256": "054e43aaed2400e8859c99041b1a5d60dfda0049f18e0c7e33746810867ff68b"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/google-java-format/blobs/sha256:054e43aaed2400e8859c99041b1a5d60dfda0049f18e0c7e33746810867ff68b",
          "sha256": "054e43aaed2400e8859c99041b1a5d60dfda0049f18e0c7e33746810867ff68b"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/google-java-format/blobs/sha256:054e43aaed2400e8859c99041b1a5d60dfda0049f18e0c7e33746810867ff68b",
          "sha256": "054e43aaed2400e8859c99041b1a5d60dfda0049f18e0c7e33746810867ff68b"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/google-java-format/blobs/sha256:054e43aaed2400e8859c99041b1a5d60dfda0049f18e0c7e33746810867ff68b",
          "sha256": "054e43aaed2400e8859c99041b1a5d60dfda0049f18e0c7e33746810867ff68b"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/google-java-format/blobs/sha256:054e43aaed2400e8859c99041b1a5d60dfda0049f18e0c7e33746810867ff68b",
          "sha256": "054e43aaed2400e8859c99041b1a5d60dfda0049f18e0c7e33746810867ff68b"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/google-java-format/blobs/sha256:9cd1aff51148daf13a673de54db9a8c784abce912022214cadc682245f04f500",
          "sha256": "9cd1aff51148daf13a673de54db9a8c784abce912022214cadc682245f04f500"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "openjdk",
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/google-java-format.rb",
  "ruby_source_checksum": {
    "sha256": "18d0821c217ab78bc16ebe8c15b642328fdfa334cc25ecf92d3e1ffbdcdd0b77"
  },
  "date_added": "2016-11-28T08:54:45+00:00",
  "readme": "# google-java-format\n\n`google-java-format` is a program that reformats Java source code to comply with\n[Google Java Style][].\n\n[Google Java Style]: https://google.github.io/styleguide/javaguide.html\n\n## Using the formatter\n\n### from the command-line\n\n[Download the formatter](https://github.com/google/google-java-format/releases)\nand run it with:\n\n```\njava -jar /path/to/google-java-format-${GJF_VERSION?}-all-deps.jar <options> [files...]\n```\n\nThe formatter can act on whole files, on limited lines (`--lines`), on specific\noffsets (`--offset`), passing through to standard-out (default) or altered\nin-place (`--replace`).\n\nTo reformat changed lines in a specific patch, use\n[`google-java-format-diff.py`](https://github.com/google/google-java-format/blob/master/scripts/google-java-format-diff.py).\n\n***Note:*** *There is no configurability as to the formatter's algorithm for\nformatting. This is a deliberate design decision to unify our code formatting on\na single format.*\n\n### IntelliJ, Android Studio, and other JetBrains IDEs\n\nA\n[google-java-format IntelliJ plugin](https://plugins.jetbrains.com/plugin/8527)\nis available from the plugin repository. To install it, go to your IDE's\nsettings and select the `Plugins` category. Click the `Marketplace` tab, search\nfor the `google-java-format` plugin, and click the `Install` button.\n\nThe plugin will be disabled by default. To enable it in the current project, go\nto `File→Settings...→google-java-format Settings` (or `IntelliJ\nIDEA→Preferences...→Other Settings→google-java-format Settings` on macOS) and\ncheck the `Enable google-java-format` checkbox. (A notification will be\npresented when you first open a project offering to do this for you.)\n\nTo enable it by default in new projects, use `File→Other Settings→Default\nSettings...`.\n\nWhen enabled, it will replace the normal `Reformat Code` and `Optimize Imports`\nactions.\n\n#### IntelliJ JRE Config\n\nThe google-java-format plugin uses some internal classes that aren't available\nwithout extra configuration. To use the plugin, go to `Help→Edit Custom VM\nOptions...` and paste in these lines:\n\n```\n--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED\n```\n\nOnce you've done that, restart the IDE.\n\n### Eclipse\n\nThe latest version of the `google-java-format` Eclipse plugin can be downloaded\nfrom the [releases page](https://github.com/google/google-java-format/releases).\nDrop it into the Eclipse\n[drop-ins folder](http://help.eclipse.org/neon/index.jsp?topic=%2Forg.eclipse.platform.doc.isv%2Freference%2Fmisc%2Fp2_dropins_format.html)\nto activate the plugin.\n\nThe plugin adds a `google-java-format` formatter implementation that can be\nconfigured in `Window > Preferences > Java > Code Style > Formatter > Formatter\nImplementation`.\n\n### Third-party integrations\n\n*   Gradle plugins\n    *   [spotless](https://github.com/diffplug/spotless/tree/main/plugin-gradle#google-java-format)\n    *   [sherter/google-java-format-gradle-plugin](https://github.com/sherter/google-java-format-gradle-plugin)\n*   Apache Maven plugins\n    *   [spotless](https://github.com/diffplug/spotless/tree/main/plugin-maven#google-java-format)\n    *   [spotify/fmt-maven-plugin](https://github.com/spotify/fmt-maven-plugin)\n    *   [talios/googleformatter-maven-plugin](https://github.com/talios/googleformatter-maven-plugin)\n    *   [Cosium/maven-git-code-format](https://github.com/Cosium/maven-git-code-format):\n        A maven plugin that automatically deploys google-java-format as a\n        pre-commit git hook.\n*   SBT plugins\n    *   [sbt/sbt-java-formatter](https://github.com/sbt/sbt-java-formatter)\n*   [Github Actions](https://github.com/features/actions)\n    *   [googlejavaformat-action](https://github.com/axel-op/googlejavaformat-action):\n        Automatically format your Java files when you push on github\n\n### as a library\n\nThe formatter can be used in software which generates java to output more\nlegible java code. Just include the library in your maven/gradle/etc.\nconfiguration.\n\n`google-java-format` uses internal javac APIs for parsing Java source. The\nfollowing JVM flags are required when running on JDK 16 and newer, due to\n[JEP 396: Strongly Encapsulate JDK Internals by Default](https://openjdk.java.net/jeps/396):\n\n```\n--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED\n```\n\n#### Maven\n\n```xml\n<dependency>\n  <groupId>com.google.googlejavaformat</groupId>\n  <artifactId>google-java-format</artifactId>\n  <version>${google-java-format.version}</version>\n</dependency>\n```\n\n#### Gradle\n\n```groovy\ndependencies {\n  implementation 'com.google.googlejavaformat:google-java-format:$googleJavaFormatVersion'\n}\n```\n\nYou can then use the formatter through the `formatSource` methods. E.g.\n\n```java\nString formattedSource = new Formatter().formatSource(sourceString);\n```\n\nor\n\n```java\nCharSource source = ...\nCharSink output = ...\nnew Formatter().formatSource(source, output);\n```\n\nYour starting point should be the instance methods of\n`com.google.googlejavaformat.java.Formatter`.\n\n## Building from source\n\n```\nmvn install\n```\n\n## Contributing\n\nPlease see [the contributors guide](CONTRIBUTING.md) for details.\n\n## License\n\n```text\nCopyright 2015 Google Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not\nuse this file except in compliance with the License. You may obtain a copy of\nthe License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\nLicense for the specific language governing permissions and limitations under\nthe License.\n```"
}
