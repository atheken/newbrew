{
  "name": "fribidi",
  "full_name": "fribidi",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Implementation of the Unicode BiDi algorithm",
  "license": "GPL-2.0-or-later and LGPL-2.1-or-later",
  "homepage": "https://github.com/fribidi/fribidi",
  "versions": {
    "stable": "1.0.13",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/fribidi/fribidi/releases/download/v1.0.13/fribidi-1.0.13.tar.xz",
      "tag": null,
      "revision": null,
      "checksum": "7fa16c80c81bd622f7b198d31356da139cc318a63fc7761217af4130903f54a2"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/fribidi/blobs/sha256:0272f179bac6809467c56eb0b1fac7f1de88b4c012fd36e77411aec39e5f9b4f",
          "sha256": "0272f179bac6809467c56eb0b1fac7f1de88b4c012fd36e77411aec39e5f9b4f"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/fribidi/blobs/sha256:ad4a3ff427cd169933fcb3266e0b85c841d25cfa3d7883759bcf84f9655c59eb",
          "sha256": "ad4a3ff427cd169933fcb3266e0b85c841d25cfa3d7883759bcf84f9655c59eb"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/fribidi/blobs/sha256:d7c97dc2da426a3586d0c428f57d63300951ae23784769ebfdf3a4af0ab225f0",
          "sha256": "d7c97dc2da426a3586d0c428f57d63300951ae23784769ebfdf3a4af0ab225f0"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/fribidi/blobs/sha256:df4ec1000cdaac83d1b712c838e2eb32a93c8ec7c7d7d47e2d199fe96501a435",
          "sha256": "df4ec1000cdaac83d1b712c838e2eb32a93c8ec7c7d7d47e2d199fe96501a435"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/fribidi/blobs/sha256:d2642675b0e7340ef0cc954a694b0d80e80f2b0b8b4e04f2f7ffe7b82aed1cd2",
          "sha256": "d2642675b0e7340ef0cc954a694b0d80e80f2b0b8b4e04f2f7ffe7b82aed1cd2"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/fribidi/blobs/sha256:8ee3767e307b336a952f55d2c3c1a043bd2a8a88fc10889a7888e3c69207b105",
          "sha256": "8ee3767e307b336a952f55d2c3c1a043bd2a8a88fc10889a7888e3c69207b105"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fribidi/blobs/sha256:4771f18b9338c897f39328998452a0aa4d03b7a13021e5303a12376170f3fb7d",
          "sha256": "4771f18b9338c897f39328998452a0aa4d03b7a13021e5303a12376170f3fb7d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/fribidi.rb",
  "ruby_source_checksum": {
    "sha256": "96c11d2d617f6fd9a901a2383c6b24b47220a32cfff252fa17f26d0b37911e11"
  },
  "date_added": "2009-10-12T23:01:13+01:00",
  "readme": "# GNU FriBidi\n\nThe Free Implementation of the [Unicode Bidirectional Algorithm].\n\n## Background\n\nOne of the missing links stopping the penetration of free software in Middle\nEast is the lack of support for the Arabic and Hebrew alphabets. In order to\nhave proper Arabic and Hebrew support, the bidi algorithm needs to be implemented. It is our hope that this library will stimulate more free software in the Middle Eastern countries.\n\nSee [`HISTORY`](./HISTORY) on how the project started and evolved.\n\n\n## Audience\n\nIt is our hope that this library will stimulate the implementation of Hebrew and\nArabic support in lots of Free Software. \n\nGNU FriBidi is already being used in projects like Pango (resulting in [GTK+] and [GNOME] using GNU FriBidi), AbiWord, MLTerm, MPlayer, BiCon, and vlc.\n\nSee [`USERS`](./USERS) for a list of projects using GNU FriBidi.\n\n\n## Dependencies\n\nGNU FriBidi does not depend on any other library. It uses either the GNU Build System or meson for build and installation.\n\n\n## Downloading\n\nThe latest version of GNU FriBidi may be found at:\n<https://github.com/fribidi/fribidi>\n\n\n## Building\n\nStart with running the [`autogen.sh`](./autogen.sh) script and follow the\ninstructions. Alternatively use `meson`.\n\n\n## License\n\nGNU FriBidi is Free Software; you can redistribute it and/or modify it under the\nterms of the [GNU Lesser General Public License] as published by the Free Software\n\nFoundation; either version 2.1 of the License, or (at your option) any later\nversion.\n\nGNU FriBidi is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License along\nwith GNU FriBidi, in a file named COPYING; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\n### Commercial licensing\n\nFor commercial licensing options, contact <fribidi.license@gmail.com>.\n\n## Implementation\n\nThe library implements the algorithm described in the \"Unicode Standard Annex\n\\#9, The Bidirectional Algorithm\", available at\n<http://www.unicode.org/unicode/reports/tr9/>.\n\nThe library uses Unicode (UTF-32) entirely. The character properties are\nautomatically extracted from the Unicode data files, available from\n<http://www.unicode.org/Public/UNIDATA/>. This means that every Unicode\ncharacter is treated in strict accordance with the Unicode specification.\n\nThere is a limited support for character set conversion from/to the UTF-32\nencoding. Data in these character sets must be converted into UTF-32 before the\nlibrary may be used. iconv(3) can always do a better job on that, so you may\nfind that the character sets conversion code is typically turned off on POSIX\nmachines.\n\n\n### Conformance Status\n\nGNU FriBidi has been tested exhaustively against the [Unicode Reference Code],\nand to the best of our knowledge, it completely conforms to the specification,\nalways producing the same result as the Reference Code.\n\n\n### API\n\nThe simplest way of accessing the API is through the convenience function `fribidi_log2vis` which has the following signature:\n\n```c\nfribidi_boolean fribidi_log2vis(\n    /* input */\n    FriBidiChar     *str,\n    FriBidiStrIndex len,\n    FriBidiCharType *pbase_dir,\n    /* output */\n    FriBidiChar     *visual_str,\n    FriBidiStrIndex *position_L_to_V_list,\n    FriBidiStrIndex *position_V_to_L_list,\n    FriBidiLevel    *embedding_level_list\n)\n```\n\nWhere...\n\n* `str` is the Unicode input string.\n* `len` is the length of the Unicode string (`str`).\n* `pbase_dir` is the input and output base direction. If `pbase_dir ==\n  FRIBIDI_TYPE_ON` then `fribidi_log2vis()` calculates the base direction on its\n  own, according to the bidi algorithm.\n* `visual_str` is the reordered output unicode string.\n* `position_L_to_V_list` maps the positions in the logical string to positions\n  in the visual string.\n* `position_V_to_L_list` maps the positions in the visual string to the\n  positions in the logical string.\n* `embedding_level_list` returns the classification of each character. Here,\n  even numerical levels indicate LTR characters, and odd levels indicate RTL\n  characters. The main use of this list is in interactive applications where,\n  for example, the embedding level determines cursor display.\n\nIf any of the output pointers is equal to `NULL`, then that information is not\ncalculated.\n\nNote that a call to `fribidi_log2vis()` is a convenience function to calling the following three functions in order:\n\n1. `fribidi_get_bidi_types()`\n2. `fribidi_get_par_embedding_levels_ex()`\n3. `fribidi_reorder_line()`\n\n## How it looks like\n\nHave a look at [`test/`](./test) directory, to see some input and outputs.\n\nThe `CapRTL` charset means that CAPITAL letters are right to left, and digits\n6, 7, 8, 9 are Arabic digits, try 'fribidi --charsetdesc CapRTL' for the full\ndescription.\n\n\n## Executable\n\nThere is also a command-line utilitity called `fribidi` that loops over the text\nof a file and performs the bidi algorithm on each line, also used for testing\nthe algorithm.\n\nRun `fribidi --help` to learn about usage.\n\nThe command-line utility is known to have problems with line-breaking and\nlogical-to-vertical/vertical-to-logical lists.\n\n\n## Bug Reports and Feedback\n\nReport bugs and general feedback at: <https://github.com/fribidi/fribidi/issues>\n\nThe mailing list is the place for additional technical discussions and user\nquestions: <https://lists.freedesktop.org/mailman/listinfo/fribidi>\n\n\n## Maintainers and Contributors\n\n* Dov Grobgeld <dov.grobgeld@gmail.com> - Original author and current maintainer\n* Behdad Esfahbod <behdad@gnu.org> - Author of most of the code\n\nSee also [`AUTHORS`](./AUTHORS) and [`THANKS`](./THANKS) for the complete list\nof contributors.\n\n\n[Unicode Bidirectional Algorithm]: https://www.unicode.org/reports/tr9/\n[Unicode Reference Code]: https://www.unicode.org/reports/tr9/#Reference_Code\n[Mirroring]: https://www.unicode.org/reports/tr9/#Mirroring\n[GTK+]: https://www.gtk.org/\n[GNOME]: https://www.gnome.org/\n[GNU Lesser General Public License]: https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html"
}
