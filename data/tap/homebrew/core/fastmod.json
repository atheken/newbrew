{
  "name": "fastmod",
  "full_name": "fastmod",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Fast partial replacement for the codemod tool",
  "license": "Apache-2.0",
  "homepage": "https://github.com/facebookincubator/fastmod",
  "versions": {
    "stable": "0.4.3",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/facebookincubator/fastmod/archive/v0.4.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0c00d7e839caf123c97822542d7f16e6f40267ea0c6b54ce2c868e3ae21de809"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fastmod/blobs/sha256:7df620dfd7106cf71b1aab7d95a2d7e3b4e846fb65fad55a5a5b228539db1776",
          "sha256": "7df620dfd7106cf71b1aab7d95a2d7e3b4e846fb65fad55a5a5b228539db1776"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fastmod/blobs/sha256:dbdae4ac9ef2d408e51ed54b1e563090d2aaba5cd506cd6904cea7c2179f9a98",
          "sha256": "dbdae4ac9ef2d408e51ed54b1e563090d2aaba5cd506cd6904cea7c2179f9a98"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fastmod/blobs/sha256:805f57f5a490b223d51e9608ed10ccf31c3532964f3f7414d81cc012f3430a4f",
          "sha256": "805f57f5a490b223d51e9608ed10ccf31c3532964f3f7414d81cc012f3430a4f"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fastmod/blobs/sha256:ff90580cee3d30a722253377a55585c2914dbe4f7a64f765a4c3079ae3c505d0",
          "sha256": "ff90580cee3d30a722253377a55585c2914dbe4f7a64f765a4c3079ae3c505d0"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fastmod/blobs/sha256:1397b657ee59c43478553a2b0f6e37dfd2b92e10c74986e98e405185be759797",
          "sha256": "1397b657ee59c43478553a2b0f6e37dfd2b92e10c74986e98e405185be759797"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fastmod/blobs/sha256:89bcdaf3bc4230e1fea6b0d92da64a333d0ade90ed5ee3a8273842c8f7e3533a",
          "sha256": "89bcdaf3bc4230e1fea6b0d92da64a333d0ade90ed5ee3a8273842c8f7e3533a"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fastmod/blobs/sha256:4bab7bc93a1d1db35666012bf7717ac61017be6437d59e7e7adce89226ab4ed9",
          "sha256": "4bab7bc93a1d1db35666012bf7717ac61017be6437d59e7e7adce89226ab4ed9"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fastmod/blobs/sha256:322cb4173cf2ff8cbdac4a81c249df2b2216c79ef340eb0692e8728295033c07",
          "sha256": "322cb4173cf2ff8cbdac4a81c249df2b2216c79ef340eb0692e8728295033c07"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/fastmod.rb",
  "ruby_source_checksum": {
    "sha256": "f86164047f015bc3b36a51eedc8b921cf32fe1b1aa59bb1e28bed29c5c0219c8"
  },
  "date_added": "2019-09-14T20:15:47+02:00",
  "readme": "# fastmod\n`fastmod` is a fast partial replacement for\n[codemod](https://github.com/facebook/codemod). Like `codemod`, it is\na tool to assist you with large-scale codebase refactors, and it\nsupports most of `codemod`'s options. `fastmod`'s major philosophical\ndifference from `codemod` is that it is focused on improving the use\ncase \"I want to use interactive mode to make sure my regex is correct,\nand then I want to apply the regex everywhere\". For this use case, it\noffers much better performance than `codemod`. Accordingly, `fastmod`\ndoes not support `codemod`'s `--start`, `--end`, or `--count` options,\nnor does it support anything like `codemod`'s Python API.\n\n## Examples\n\nLet's say you're deprecating your use of the `<font>` tag. From the\ncommand line, you might make progress by running:\n\n```\nfastmod -m -d /home/jrosenstein/www --extensions php,html \\\n    '<font *color=\"?(.*?)\"?>(.*?)</font>' \\\n    '<span style=\"color: ${1};\">${2}</span>'\n```\n\nFor each match of the regex, you'll be shown a colored diff and asked\nif you want to accept the change (the replacement of the `<font>` tag\nwith a `<span>` tag), reject it, or edit the line in question in your\n`$EDITOR` of choice.\n\nNOTE: Whereas `codemod` uses Python regexes, `fastmod` uses the Rust\n[regex](https://github.com/rust-lang/regex) crate, which supports a\nslightly different regex syntax and does not support look around or\nbackreferences. In particular, use `${1}` instead of `\\1` to get the\ncontents of the first capture group, and use `$$` to write a literal\n`$` in the replacement string. See the regex crate's\n[documentation](https://docs.rs/regex/#syntax) for details.\n\nA consequence of this syntax is that the use of single quotes instead\nof double quotes around the replacement text is important, because the\n`bash` shell itself cares about the `$` character in double-quoted\nstrings. If you must double-quote your input text, be careful to\nescape `$` characters properly!\n\n`fastmod` also offers a usability improvement over `codemod`: it\naccepts files or directories to process as extra positional arguments\nafter the regex and substitution. For instance, the example above\ncould have been rewritten as\n\n```\nfastmod -m --extensions php,html \\\n    '<font *color=\"?(.*?)\"?>(.*?)</font>' \\\n    '<span style=\"color: ${1};\">${2}</span>' \\\n    /home/jrosenstein/www\n```\n\nThis makes it possible to use `fastmod` to process a list of files\nfrom somewhere else if needed. Note, however, that `fastmod` does its\nown parallel directory traversal internally, so doing `find ... |\nxargs fastmod ...` may be much slower than using `fastmod` by itself.\n\n## Requirements\n\n`fastmod` is primarily supported on macOS and Linux.\n\n`fastmod` has also been reported to work reasonably well on\nWindows. The major portability concerns are 1) the use of `$EDITOR`\nwith a fallback and 2) the console UI, which is descended from\n`codemod`'s ncurses-based text coloring & screen clearing\ncode. Windows-specific issues and PRs will be considered as long as\nthey aren't too invasive. For example, if something doesn't work on\nWindows because a Linux/Mac-specific API was used instead of\nequivalent POSIX or Rust standard library calls, we would be happy to\nfix that. On the other hand, we would like to avoid taking a direct\n`winapi` dependency or substantially increasing the size of our\ndependency graph for Windows-only enhancements.\n\n## Building `fastmod`\n\n`fastmod` is written in (stable) [Rust](https://www.rust-lang.org/)\nand compiles with Rust's `cargo` build system. To build:\n\n```\n$ git clone https://github.com/facebookincubator/fastmod.git\n$ cd fastmod\n$ cargo build --release\n$ ./target/release/fastmod --help\n...\n```\n\n## Installing fastmod\nThe easiest way to install fastmod is simply `cargo install\nfastmod`. If you have built `fastmod` from source following the\ndirections above, you can install your build with `cargo install`.\n\n## How `fastmod` works\n`fastmod` uses the\n[ignore](https://github.com/BurntSushi/ripgrep/tree/master/ignore)\ncrate to walk the given directory hierarchy using multiple threads in\nparallel while respecting `.gitignore`. It uses the\n[grep](https://github.com/BurntSushi/ripgrep/tree/master/crates/grep)\ncrate to match each file, reads matching files into memory, applies\nthe given regex substitution one match at a time, and uses the\n[diff](https://github.com/utkarshkukreti/diff.rs) crate to present the\nresulting changes as patches for human review.\n\n## Full documentation\n\nSee `fastmod --help`.\n\n## License\n`fastmod` is Apache-2.0-licensed."
}
