{
  "name": "markdownlint-cli",
  "full_name": "markdownlint-cli",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "CLI for Node.js style checker and lint tool for Markdown files",
  "license": "MIT",
  "homepage": "https://github.com/igorshubovych/markdownlint-cli",
  "versions": {
    "stable": "0.35.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://registry.npmjs.org/markdownlint-cli/-/markdownlint-cli-0.35.0.tgz",
      "tag": null,
      "revision": null,
      "checksum": "ab5c263cf3f82b6eec0449ad5f5bd6701940502bdbc99f78d42f0f6e726be2dc"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/markdownlint-cli/blobs/sha256:4f1f6f9fe527180d38e1125fd74fa92a84e6c9f560e99328b611dd838f7ccc63",
          "sha256": "4f1f6f9fe527180d38e1125fd74fa92a84e6c9f560e99328b611dd838f7ccc63"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/markdownlint-cli/blobs/sha256:4f1f6f9fe527180d38e1125fd74fa92a84e6c9f560e99328b611dd838f7ccc63",
          "sha256": "4f1f6f9fe527180d38e1125fd74fa92a84e6c9f560e99328b611dd838f7ccc63"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/markdownlint-cli/blobs/sha256:4f1f6f9fe527180d38e1125fd74fa92a84e6c9f560e99328b611dd838f7ccc63",
          "sha256": "4f1f6f9fe527180d38e1125fd74fa92a84e6c9f560e99328b611dd838f7ccc63"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/markdownlint-cli/blobs/sha256:78205ffb0175e0a541d348b30553ff8bc6d423e3161fffb40b39605ce3b55e76",
          "sha256": "78205ffb0175e0a541d348b30553ff8bc6d423e3161fffb40b39605ce3b55e76"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/markdownlint-cli/blobs/sha256:78205ffb0175e0a541d348b30553ff8bc6d423e3161fffb40b39605ce3b55e76",
          "sha256": "78205ffb0175e0a541d348b30553ff8bc6d423e3161fffb40b39605ce3b55e76"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/markdownlint-cli/blobs/sha256:78205ffb0175e0a541d348b30553ff8bc6d423e3161fffb40b39605ce3b55e76",
          "sha256": "78205ffb0175e0a541d348b30553ff8bc6d423e3161fffb40b39605ce3b55e76"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/markdownlint-cli/blobs/sha256:4f1f6f9fe527180d38e1125fd74fa92a84e6c9f560e99328b611dd838f7ccc63",
          "sha256": "4f1f6f9fe527180d38e1125fd74fa92a84e6c9f560e99328b611dd838f7ccc63"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "node"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/markdownlint-cli.rb",
  "ruby_source_checksum": {
    "sha256": "3f50b88c3d8dfb753553daec64b0ee4e9c5d26849c0c88a8e6e734a2c4551fff"
  },
  "date_added": "2020-11-05T14:07:15+00:00",
  "readme": "# markdownlint-cli\n\n[![GitHub Actions Build Status][actions-badge]][actions-url]\n\n> Command Line Interface for [MarkdownLint][markdownlint]\n\n## Installation\n\n```bash\nnpm install -g markdownlint-cli\n```\n\nOn macOS you can install via [Homebrew](https://brew.sh/):\n\n```bash\nbrew install markdownlint-cli\n```\n\n## Usage\n\n```bash\nmarkdownlint --help\n\n  Usage: markdownlint [options] <files|directories|globs>\n\n  MarkdownLint Command Line Interface\n\n  Options:\n    -V, --version                               output the version number\n    -c, --config [configFile]                   configuration file (JSON, JSONC, JS, or YAML)\n    -d, --dot                                   include files/folders with a dot (for example `.github`)\n    -f, --fix                                   fix basic errors (does not work with STDIN)\n    -i, --ignore [file|directory|glob]          file(s) to ignore/exclude (default: [])\n    -j, --json                                  write issues in json format\n    -o, --output [outputFile]                   write issues to file (no console)\n    -p, --ignore-path [file]                    path to file with ignore pattern(s)\n    -q, --quiet                                 do not write issues to STDOUT\n    -r, --rules  [file|directory|glob|package]  include custom rule files (default: [])\n    -s, --stdin                                 read from STDIN (does not work with files)\n    --enable [rules...]                         Enable certain rules, e.g. --enable MD013 MD041 --\n    --disable [rules...]                        Disable certain rules, e.g. --disable MD013 MD041 --\n    -h, --help                                  display help for command\n```\n\nOr run using [Docker](https://www.docker.com) and [GitHub Packages](https://github.com/features/packages):\n\n```bash\ndocker run -v $PWD:/workdir ghcr.io/igorshubovych/markdownlint-cli:latest \"*.md\"\n```\n\n> **Note**\n> Because `--enable` and `--disable` are [variadic arguments that accept multiple values][commander-variadic], it is necessary to end the list by passing `--` before the `<files|directories|globs>` argument like so: `markdownlint --disable MD013 -- README.md`.\n\n### Globbing\n\n`markdownlint-cli` supports advanced globbing patterns like `**/*.md` ([more information][globprimer]).\nWith shells like Bash, it may be necessary to quote globs so they are not interpreted by the shell.\nFor example, `--ignore *.md` would be expanded by Bash to `--ignore a.md b.md ...` before invoking `markdownlint-cli`, causing it to ignore only the first file because `--ignore` takes a single parameter (though it can be used multiple times).\nQuoting the glob like `--ignore '*.md'` passes it through unexpanded and ignores the set of files.\n\n#### Globbing examples\n\nTo lint all Markdown files in a Node.js project (excluding dependencies), the following commands might be used:\n\nWindows CMD: `markdownlint **/*.md --ignore node_modules`\n\nLinux Bash: `markdownlint '**/*.md' --ignore node_modules`\n\n### Ignoring files\n\nIf present in the current folder, a `.markdownlintignore` file will be used to ignore files and/or directories according to the rules for [gitignore][gitignore].\nIf the `-p`/`--ignore-path` option is present, the specified file will be used instead of `.markdownlintignore`.\n\nThe order of operations is:\n\n- Enumerate files/directories/globs passed on the command line\n- Apply exclusions from `-p`/`--ignore-path` (if specified) or `.markdownlintignore` (if present)\n- Apply exclusions from any `-i`/`--ignore` option(s) that are specified\n\n### Fixing errors\n\nWhen the `--fix` option is specified, `markdownlint-cli` tries to apply all fixes reported by the active rules and reports any errors that remain.\nBecause this option makes changes to the input files, it is good to make a backup first or work with files under source control so any unwanted changes can be undone.\n\n> Because not all rules include fix information when reporting errors, fixes may overlap, and not all errors are fixable, `--fix` will not usually address all errors.\n\n## Configuration\n\n`markdownlint-cli` reuses [the rules][rules] from `markdownlint` package.\n\nConfiguration is stored in JSON, JSONC, YAML, or INI files in the same [config format][config].\n\nA sample configuration file:\n\n```json\n{\n  \"default\": true,\n  \"MD003\": { \"style\": \"atx_closed\" },\n  \"MD007\": { \"indent\": 4 },\n  \"no-hard-tabs\": false,\n  \"whitespace\": false\n}\n```\n\nFor more examples, see [.markdownlint.jsonc][markdownlint-jsonc], [.markdownlint.yaml][markdownlint-yaml], or the [style folder][style-folder].\n\nThe CLI argument `--config` is not required.\nIf it is not provided, `markdownlint-cli` looks for the file `.markdownlint.jsonc`/`.markdownlint.json`/`.markdownlint.yaml`/`.markdownlint.yml` in current folder, or for the file `.markdownlintrc` in the current or all parent folders.\nThe algorithm is described in detail on the [`rc` package page][rc-standards].\nNote that when relying on the lookup of a file named `.markdownlintrc` in the current or parent folders, the only syntaxes accepted are INI and JSON, and the file cannot have an extension.\nIf the `--config` argument is provided, the file must be valid JSON, JSONC, JS, or YAML.\nJS configuration files contain JavaScript code, must have the `.js` or `.cjs` file extension, and must export (via `module.exports = ...`) a configuration object of the form shown above.\nIf your workspace _(project)_ is [ESM-only] _(`\"type\": \"module\"` set in the root `package.json` file)_, then the configuration file **should end with `.cjs` file extension**.\nA JS configuration file may internally `require` one or more npm packages as a way of reusing configuration across projects.\n\n`--enable` and `--disable` override configuration files; if a configuration file disables `MD002` and you pass `--enable MD002`, it will be enabled.\nIf a rule is passed to both `--enable` and `--disable`, it will be disabled.\n\n> JS configuration files must be provided via the `--config` argument; they are not automatically loaded because running untrusted code is a security concern.\n\n## Exit codes\n\n`markdownlint-cli` returns one of the following exit codes:\n\n- `0`: Program ran successfully\n- `1`: Linting errors\n- `2`: Unable to write `-o`/`--output` output file\n- `3`: Unable to load `-r`/`--rules` custom rule\n- `4`: Unexpected error (e.g. malformed config)\n\n## Use with pre-commit\n\nTo run `markdownlint-cli` as part of a [pre-commit][pre-commit] workflow, add something like the below to the `repos` list in the project's `.pre-commit-config.yaml`:\n\n```yaml\n- repo: https://github.com/igorshubovych/markdownlint-cli\n  rev: v0.35.0\n  hooks:\n  - id: markdownlint\n```\n\n> Depending on the environment this workflow runs in, it may be necessary to [override the language version of Node.js used by pre-commit][pre-commit-version].\n\n## Related\n\n- [markdownlint][markdownlint] - API for this module\n- [markdownlint-cli2][markdownlint-cli2] - Alternate CLI implementation\n- [glob][glob] - Pattern matching implementation\n- [ignore][ignore] - `.markdownlintignore` implementation\n\n## License\n\nMIT © Igor Shubovych\n\n[actions-badge]: https://github.com/igorshubovych/markdownlint-cli/workflows/CI/badge.svg?branch=master\n[actions-url]: https://github.com/igorshubovych/markdownlint-cli/actions?query=workflow%3ACI\n[commander-variadic]: https://github.com/tj/commander.js#variadic-option\n[markdownlint]: https://github.com/DavidAnson/markdownlint\n[markdownlint-cli2]: https://github.com/DavidAnson/markdownlint-cli2\n[markdownlint-jsonc]: https://github.com/DavidAnson/markdownlint/blob/main/schema/.markdownlint.jsonc\n[markdownlint-yaml]: https://github.com/DavidAnson/markdownlint/blob/main/schema/.markdownlint.yaml\n[rules]: https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md\n[config]: https://github.com/DavidAnson/markdownlint#optionsconfig\n[style-folder]: https://github.com/DavidAnson/markdownlint/tree/main/style\n[rc-standards]: https://www.npmjs.com/package/rc#standards\n[glob]: https://github.com/isaacs/node-glob\n[globprimer]: https://github.com/isaacs/node-glob/blob/master/README.md#glob-primer\n[ignore]: https://github.com/kaelzhang/node-ignore\n[gitignore]: https://git-scm.com/docs/gitignore\n[pre-commit]: https://pre-commit.com/\n[pre-commit-version]: https://pre-commit.com/#overriding-language-version\n[ESM-only]: https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c"
}
