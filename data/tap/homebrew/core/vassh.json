{
  "name": "vassh",
  "full_name": "vassh",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Vagrant Host-Guest SSH Command Wrapper/Proxy/Forwarder",
  "license": null,
  "homepage": "https://github.com/xwp/vassh",
  "versions": {
    "stable": "0.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/xwp/vassh/archive/0.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "dd9b3a231c2b0c43975ba3cc22e0c45ba55fbbe11a3e4be1bceae86561b35340"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/vassh/blobs/sha256:024883e4d57b626c8fd7d80f37b44c1cdee15bfb2b7f4f546cb40fdd09e79a08",
          "sha256": "024883e4d57b626c8fd7d80f37b44c1cdee15bfb2b7f4f546cb40fdd09e79a08"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/vassh.rb",
  "ruby_source_checksum": {
    "sha256": "53a98aeb411486cd3168db11f77686d68eee4dea335948c26064992b9120eda1"
  },
  "date_added": "2014-02-27T08:53:45+00:00",
  "readme": "The big pain of doing `vagrant ssh` is that it doesn’t drop you into the corresponding working directory in the Vagrant guest’s synced_folder, so you have to `cd` to the dir and then run whatever you needed to do (e.g. `wp core update`). This is the problem that `vassh` solves: it will make sure you start out in the corresponding directory. So if you’re in your WordPress project on your host machine, all you need to do is:\n\n```sh\n$ vassh wp core update\n```\n\nThere’s also a wrapper called `vasshin` which will shell you into Vagrant at the current directory, with a prompt for entering commands. This gets you colors and interactive TTY. You can also pass commands as arguments to `vasshin` to have them executed right away in the colorized TTY (with some additional Vagrant `.bash_login` echoes and SSH connection close):\n\n```sh\n$ vasshin wp post list # nice table!\n```\n\nYou can put these files anywhere, as long as you source them via your `.bashrc` or `.bash_profile`.  They aren't read by Vagrant, so they're independent. Example:\n\n```sh\ngit clone https://github.com/x-team/vassh.git ~/code/vassh\necho \"source ~/code/vassh/vassh.sh\" >> ~/.bash_profile\nsource ~/.bash_profile\n```\n\nInstallation is also now possible via Homebrew ([props @kanedo](https://github.com/x-team/vassh/issues/9)):\n\n```sh\nbrew update && brew install vassh\n```"
}
