{
  "name": "mdbtools",
  "full_name": "mdbtools",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Tools to facilitate the use of Microsoft Access databases",
  "license": "GPL-2.0-or-later",
  "homepage": "https://github.com/mdbtools/mdbtools/",
  "versions": {
    "stable": "1.0.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/mdbtools/mdbtools/releases/download/v1.0.0/mdbtools-1.0.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "3446e1d71abdeb98d41e252777e67e1909b186496fda59f98f67032f7fbcd955"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mdbtools/blobs/sha256:cd5023a5419a776cefa3e4bcd408536a696459f1fd3084822e22565e3cd75c39",
          "sha256": "cd5023a5419a776cefa3e4bcd408536a696459f1fd3084822e22565e3cd75c39"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mdbtools/blobs/sha256:c4502a9b481c4e40f0bc5c1767af43938cea64ea125a564dd1371e0cdad5729c",
          "sha256": "c4502a9b481c4e40f0bc5c1767af43938cea64ea125a564dd1371e0cdad5729c"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mdbtools/blobs/sha256:1f808f4f3574633bb4d3176046a4b98dd0f673291db20ef5f34357f8e04aa3f1",
          "sha256": "1f808f4f3574633bb4d3176046a4b98dd0f673291db20ef5f34357f8e04aa3f1"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mdbtools/blobs/sha256:f4bf3ad76af45f61c2d29418a66c2ec3ae61bf34cd02bec78e84195653ace158",
          "sha256": "f4bf3ad76af45f61c2d29418a66c2ec3ae61bf34cd02bec78e84195653ace158"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mdbtools/blobs/sha256:b11d8015632397cfcc11ce21225d3f5d5001bcf64f55996c20713ac9ddc48c46",
          "sha256": "b11d8015632397cfcc11ce21225d3f5d5001bcf64f55996c20713ac9ddc48c46"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mdbtools/blobs/sha256:705cecb093ad9dc51806e241b75389a4843b2ea57170a5653aa15face44323ba",
          "sha256": "705cecb093ad9dc51806e241b75389a4843b2ea57170a5653aa15face44323ba"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/mdbtools/blobs/sha256:472f8d9eb6f9608ef300715e1e7774625643c5433dfef4844eb8337c00a1cdfd",
          "sha256": "472f8d9eb6f9608ef300715e1e7774625643c5433dfef4844eb8337c00a1cdfd"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/mdbtools/blobs/sha256:941c3eae4065118abd7bf72a1a42da8c33d7d1c706f655622254a8989e4e0468",
          "sha256": "941c3eae4065118abd7bf72a1a42da8c33d7d1c706f655622254a8989e4e0468"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "autoconf",
    "automake",
    "bison",
    "gawk",
    "libtool",
    "pkg-config"
  ],
  "dependencies": [
    "glib",
    "readline"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/mdbtools.rb",
  "ruby_source_checksum": {
    "sha256": "13145dad21840c0832075af39cd5858531282f1e6be0334c99025f6b1bb27623"
  },
  "date_added": "2010-06-22T13:53:12-07:00",
  "readme": "[![Build Status](https://github.com/mdbtools/mdbtools/workflows/build/badge.svg)](https://github.com/mdbtools/mdbtools/actions)\n[![Build status](https://ci.appveyor.com/api/projects/status/22wwy5d0rrmk6e3c/branch/dev?svg=true)](https://ci.appveyor.com/project/evanmiller/mdbtools/branch/dev)\n[![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/mdbtools.svg)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:mdbtools)\n\nWelcome to the exciting world of MDB Tools! MDB Tools is a set of programs to\nhelp you extract data from Microsoft Access files in various settings. See the\n[NEWS](./NEWS) file for information about the latest release.\n\n## Components\n\nThe major pieces of MDB Tools are:\n\n### libmdb\n\nThe core library that allows access to MDB files programatically. See [mdbtools.h](./include/mdbtools.h.in) for the complete API.\n\n### libmdbsql\n\nBuilds on libmdb to provide a SQL engine (aka Jet). See [mdbsql.h](./include/mdbsql.h) for the complete API.\n\n### utils\n\nProvides command line utilities, including:\n\n| Command | Description |\n| ------- | ----------- |\n| `mdb-ver` | Prints the version (JET 3 or 4) of an mdb file. |\n| `mdb-schema` | Prints DDL for the specified table. |\n| `mdb-export` | Export table to CSV or SQL formats. |\n| `mdb-json` | Export table to JSON format. |\n| `mdb-tables` | A simple dump of table names to be used with shell scripts. |\n| `mdb-count` | A simple count of number of rows in a table, to be used in shell scripts and ETL pipelines. |\n| `mdb-sql` | A simple SQL engine (also used by ODBC and gmdb). |\n| `mdb-queries` | List and print queries stored in the database. |\n| `mdb-hexdump`\\* | (in [src/extras](./src/extras)) Simple hex dump utility to look at mdb files. |\n| `mdb-array`\\* | Export data in an MDB database table to a C array. |\n| `mdb-header`\\* | Generates a C header to be used in exporting mdb data to a C prog. |\n| `mdb-parsecsv`\\* | Generates a C program given a CSV file made with mdb-export. |\n\n\\* Deprecated\n\nSee the man page of each program for usage instructions.\n\nThe [src/util](./src/util) directory also contains a number of debugging tools, intended for developers. They are:\n\n| Command | Description |\n| ------- | ----------- |\n| `prcat` | Prints the catalog table from an mdb file. |\n| `prkkd` | Dump of information about design view data given the offset to it. |\n| `prtable` | Dump of a table definition. |\n| `prdata` | Dump of the data given a table name. |\n| `prole` | Dump of ole columns given a table name and sargs. |\n\nThese tools are not installed on the host system.\n\n### odbc\n\nAn ODBC driver for use with unixODBC or iODBC driver manager. Allows one to use MDB files with PHP for example.\n\n### gmdb2\n\nThe Gnome MDB File Viewer and debugger. Recently ported to GTK+3 and moved to [mdbtools/gmdb2](https://github.com/mdbtools/gmdb2).\n\n## License\n\nFiles in libmdb, libmdbsql, and libmdbodbc are licensed under LGPL and the\nutilities and gui program are under the GPL, see [COPYING.LIB](./COPYING.LIB)\nand [COPYING](./COPYING) files respectively.\n\n\n## Requirements\n\nFirst, you must have reasonably current installations of:\n\n* [libtool](https://www.gnu.org/software/libtool/)\n* [automake](https://www.gnu.org/software/automake/)\n* [autoconf](https://www.gnu.org/software/autoconf/) (version >= 2.64)\n\nIf you want to build the SQL engine, you'll need\n[bison](https://www.gnu.org/software/bison/) (version >= 3.0) or\n[byacc](https://invisible-island.net/byacc/byacc.html), and\n[flex](https://github.com/westes/flex).\n\nIf you want to build the ODBC driver, you'll need `unixodbc-dev` (version\n2.2.10 or above) or [iodbc](http://www.iodbc.org/dataspace/doc/iodbc/wiki/iodbcWiki/WelcomeVisitors).\n\nIf you want to build man pages, you'll need\n[GNU awk](https://www.gnu.org/software/gawk/).\n\n\n## Installation\n\nLatest version is available at https://github.com/mdbtools/mdbtools\n\n### Debian\n\n```\napt install mdbtools\n```\n\n### Homebrew\n\n```bash\nbrew install mdbtools\n```\n\n### MacPorts\n\n```bash\nport install mdbtools\n```\n\n### From source\n\nIf you have cloned the Git repository, you will first need to generate the\n`configure` file (skip this step if you have downloaded a formal release):\n\n```bash\n$ autoreconf -i -f\n```\n\nThen:\n\n```bash\n$ ./configure\n```\n\nOR for a complete install (requires bison, flex, and unixODBC):\n\n```bash\n$ ./configure --with-unixodbc=/usr/local\n```\n\nBy default, MDB Tools is linked against the copy of\n[GLib](https://developer.gnome.org/glib/) returned by pkg-config. You can\npoint to a different GLib installation using the `GLIB_CFLAGS` and `GLIB_LIBS`\nenivornment variables. Or, you can disable GLib entirely with the\n`--disable-glib` flag, in which case MDB Tools will use an internal\nimplementation of GLib's functions.\n\nconfigure can be passed any of the following flags to turn on other \ncapabilities.  Note that the options `--with-unixodbc` and `--with-iodbc` are\nmutually exclusive.\n\n```\n--with-unixodbc  specifies the location of the unixODBC driver manager and \n                 causes the unixODBC driver to be built.\n--with-iodbc     specifies the location of the iODBC driver manager and \n                 causes the iODBC driver to be built.\n```\n\nBy default, the ODBC driver will be installed as /usr/local/lib/odbc/libmdbodbc.so,\nwith a Unicode-capable driver at /usr/local/lib/odbc/libmdbodbcW.so.\n\nThe command `configure --help` will give you the list of mdbtools specific options.\n\n```bash\n$ make\n```\n\nOnce MDB Tools has been compiled, libmdb.[so|a] will be in the src/libmdb \ndirectory and the utility programs will be in the src/util directory.\n\nYou can then install (to /usr/local by default) by running the following as root:\n\n```bash\n$ make install\n```\n\nSome systems will also need the ld cache to be updated after installation;\nYou can do that running:\n\n```bash \n$ ldconfig\n```\n\n## Hacking\n\nIf you are interested in helping, read the [HACKING](./HACKING) file for a description of \nwhere the code stands and what has been gleened of the file format.\n\n## Contact\n\nPlease send bug reports to the new github repository.\nhttps://github.com/mdbtools/mdbtools/issues"
}
