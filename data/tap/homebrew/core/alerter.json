{
  "name": "alerter",
  "full_name": "alerter",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Send User Alert Notification on macOS from the command-line",
  "license": "MIT",
  "homepage": "https://github.com/vjeantet/alerter",
  "versions": {
    "stable": "004",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/vjeantet/alerter/archive/refs/tags/004.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "c4c16735e1a57ce04a5acfa762bd44ab8ef10884308725ab886b984b1de17bfe"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alerter/blobs/sha256:9bfb9d6b53d55393286a21be46b9581de60f7c2c1b30f487b8eb0762f9210925",
          "sha256": "9bfb9d6b53d55393286a21be46b9581de60f7c2c1b30f487b8eb0762f9210925"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alerter/blobs/sha256:3cf062e21dfc3c797838b9f8e7c47888aebb931358501929310756c9b692eb13",
          "sha256": "3cf062e21dfc3c797838b9f8e7c47888aebb931358501929310756c9b692eb13"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alerter/blobs/sha256:d7abf3c8dab9fc51147f7ba083115f39b2817a3a79861be861fb293ca0c176a4",
          "sha256": "d7abf3c8dab9fc51147f7ba083115f39b2817a3a79861be861fb293ca0c176a4"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alerter/blobs/sha256:c1fb85ecc81cf1e4e76b25f5847fa44dc76b8406787633a50e9fb612c93a191e",
          "sha256": "c1fb85ecc81cf1e4e76b25f5847fa44dc76b8406787633a50e9fb612c93a191e"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alerter/blobs/sha256:1651d372410551bb8d723b1d1bc98ded7bc15b4708be3a849e34929807f5fb81",
          "sha256": "1651d372410551bb8d723b1d1bc98ded7bc15b4708be3a849e34929807f5fb81"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/alerter/blobs/sha256:894f1e5649ce05f1413d4bab20b9faf97dc19800698472535907811b930fc498",
          "sha256": "894f1e5649ce05f1413d4bab20b9faf97dc19800698472535907811b930fc498"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "xcode",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [
        "build"
      ],
      "specs": [
        "stable"
      ]
    },
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": true,
  "deprecation_date": "2023-05-09",
  "deprecation_reason": "does_not_build",
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/alerter.rb",
  "ruby_source_checksum": {
    "sha256": "439e201427b22212f17c96af82def37c00d468d00a4331c886a7e8aa4fd5c4b9"
  },
  "date_added": "2021-07-23T22:45:58+00:00",
  "readme": "# Alerter\n\n<p align=\"center\">\n    <a href=\"LICENSE.md\"><img src=\"https://badgen.net/github/license/vjeantet/alerter\" /></a>\n</p>\n\nalerter is a command-line tool to send Mac OS X User Alerts (Notifications),\nwhich are available in Mac OS X 10.8 and higher. (even catalina)\nthe program ends when the alerter is activated or closed, writing the activated value to output (stdout), or a json object to describe the alert event.\n\nAlerts are OS X notifications that stay on screen unless dismissed.\n\n2 kinds of alert notification can be triggered : \"Reply Alert\" or \"Actions Alert\"\n\n## Reply alert\nOpen a notification in the top-right corner of your screen and display a \"Reply\" button, which opens a text input.\n\n## Actions alert\nOpen a notification in the top-right corner of your screen and display one or more actions to click on.\n\n## Features\n* set alert's icon, title, subtitle, image.\n* capture text typed by user in the reply type alert.\n* timeout : automatically close the alert notification after a delay.\n* change the close button label.\n* change the actions dropdown label.\n* play a sound while delivering the alert notification.\n* value or json output on alert's event (closed, timeout, replied, activated...)\n* close the alert notification on SIGINT, SIGTERM.\n\n## Installation\n\n1. Download the zipped precompiled binary from the\n[releases section](https://github.com/vjeantet/alerter/releases).\n2. Extract the binary.\n3. Use as described below.\n\n### Adding to `$PATH`\n\nIf you don't want to have to specify the absolute/relative path to the binary, you can place the binary in any directory that is listed in your `$PATH` so that your system can automatically find it.\n\nIf you would like to see which directories are currently in your `$PATH`, you can run `echo $PATH`.\n\nYou can use the `cp` command to copy the binary to your chosen directory. For example:\n\n```shell\ncp ~/Downloads/alerter /path/to/directory/you/choose/\n```\n\n## Usage\n\n```\n$ ./alerter -[message|group|list] [VALUE|ID|ID] [options]\n```\n\nSome examples are:\n\nDisplay piped data with a sound\n\n```\n$ echo 'Piped Message Data!' | alerter -sound default\n```\n\n![Display piped data with a sound](/img1.png?raw=true \"\")\n\nMultiple actions and custom dropdown list\n```\n./alerter -message \"Deploy now on UAT ?\" -actions Now,\"Later today\",\"Tomorrow\" -dropdownLabel \"When ?\"\n```\n\n![Multiple actions and custom dropdown list](/img2.png?raw=true \"\")\n\nYes or No ?\n```\n./alerter -title ProjectX -subtitle \"new tag detected\" -message \"Deploy now on UAT ?\" -closeLabel No -actions Yes -appIcon http://vjeantet.fr/images/logo.png\n```\n\n![Yes or No](/img3.png?raw=true \"\")\n\nWhat is the name of this release ?\n```\n./alerter -reply -message \"What is the name of this release ?\" -title \"Deploy in progress...\"\n```\n\n![What is the name of this release](/img4.png?raw=true \"\")\n\n## Options\n\nAt a minimum, you have to specify either the `-message` , the `-remove`\nor the `-list` option.\n\n-------------------------------------------------------------------------------\n\n`-message VALUE`  **[required]**\n\nThe message body of the notification.\n\nNote that if this option is omitted and data is piped to the application, that\ndata will be used instead.\n\n-------------------------------------------------------------------------------\n\n`-reply`\n\nThe notification will be displayed as a reply type alert.\n\n-------------------------------------------------------------------------------\n\n`-actions VALUE1,VALUE2,\"VALUE 3\"`\n\nThe notification actions available.\nWhen you provide more than one value, a dropdown will be displayed.\nYou can customize this dropdown label with the next option.\nDoes not work when -reply is used.\n\n-------------------------------------------------------------------------------\n\n`-dropdownLabel VALUE`\n\nThe notification actions dropdown title (only when multiples -actions values are provided).\nDoes not work when -reply is used.\n\n-------------------------------------------------------------------------------\n\n`-closeLabel VALUE`\n\nThe notification \"Close\" button label.\n\n-------------------------------------------------------------------------------\n\n`-title VALUE`\n\nThe title of the notification. This defaults to ‘Terminal’.\n\n-------------------------------------------------------------------------------\n\n`-subtitle VALUE`\n\nThe subtitle of the notification.\n\n-------------------------------------------------------------------------------\n\n`-timeout NUMBER`\n\nAuto close the alert notification after NUMBER seconds.\n\n-------------------------------------------------------------------------------\n\n`-sound NAME`\n\nThe name of a sound to play when the notification appears. The names are listed\nin Sound Preferences. Use 'default' for the default notification sound.\n\n-------------------------------------------------------------------------------\n\n`-json`\n\nAlerter will output a json struct to describe what happened to the alert.\n\n-------------------------------------------------------------------------------\n\n`-group ID`\n\nSpecifies the ‘group’ a notification belongs to. For any ‘group’ only _one_\nnotification will ever be shown, replacing previously posted notifications.\n\nA notification can be explicitly removed with the `-remove` option, described\nbelow.\n\nExamples are:\n\n* The sender’s name to scope the notifications by tool.\n* The sender’s process ID to scope the notifications by a unique process.\n* The current working directory to scope notifications by project.\n\n-------------------------------------------------------------------------------\n\n`-remove ID`  **[required]**\n\nRemoves a notification that was previously sent with the specified ‘group’ ID,\nif one exists. If used with the special group \"ALL\", all message are removed.\n\n-------------------------------------------------------------------------------\n\n`-list ID` **[required]**\n\nLists details about the specified ‘group’ ID. If used with the special group\n\"ALL\", details about all currently active  messages are displayed.\n\nThe output of this command is a json array of alert notifications.\n\n-------------------------------------------------------------------------------\n\n`-sender ID`\n\nSpecifying this will make it appear as if the notification was send by that\napplication instead, including using its icon.\n\nUsing this option fakes the sender application, so that the notification system\nwill launch that application when the notification is clicked. Because of this\nit is important to note that you cannot combine this with options like\n`-execute`, `-open`, and `-activate` which depend on the sender of the\nnotification to be ‘alerter’ to perform its work.\n\nFor information on the `ID` see the `-activate` option.\n\n-------------------------------------------------------------------------------\n\n`-appIcon PATH` **[10.9+ only]**\n\nSpecifies The PATH or URL of an image to display instead of the application icon.\n\n**WARNING: This option is subject to change since it relies on a private method.**\n\n-------------------------------------------------------------------------------\n\n`-contentImage PATH` **[10.9+ only]**\n\nSpecifies The PATH or URL of an image to display attached inside the notification.\n\n**WARNING: This option is subject to change since it relies on a private method.**\n\n-------------------------------------------------------------------------------\n\n\n## Example usage with shell script\n```bash\nANSWER=\"$(./alerter -message 'Start now ?' -closeLabel No -actions YES,MAYBE,'one more action' -timeout 10)\"\ncase $ANSWER in\n    \"@TIMEOUT\") echo \"Timeout man, sorry\" ;;\n    \"@CLOSED\") echo \"You clicked on the default alert' close button\" ;;\n    \"@CONTENTCLICKED\") echo \"You clicked the alert's content !\" ;;\n    \"@ACTIONCLICKED\") echo \"You clicked the alert default action button\" ;;\n    \"MAYBE\") echo \"Action MAYBE\" ;;\n    \"NO\") echo \"Action NO\" ;;\n    \"YES\") echo \"Action YES\" ;;\n    **) echo \"? --> $ANSWER\" ;;\nesac\n```\n\n## Support & Contributors\n\n### Code Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n\nThis project is based on a fork of [terminal notifier](https://github.com/julienXX/terminal-notifier) by [@JulienXX](https://github.com/julienXX).\n\n## License\n\nAll the works are available under the MIT license.\n\nCopyright (C) 2012-2023 Valère Jeantet <valere.jeantet@gmail.com>, Eloy Durán <eloy.de.enige@gmail.com>, Julien Blanchard\n<julien@sideburns.eu>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
}
