{
  "name": "bandcamp-dl",
  "full_name": "bandcamp-dl",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Simple python script to download Bandcamp albums",
  "license": "Unlicense",
  "homepage": "https://github.com/iheanyi/bandcamp-dl",
  "versions": {
    "stable": "0.0.13",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/cb/6f/08d0e2b1819327e375ebf67af0689727b2d49db7c0d11d4829552ea01ae4/bandcamp-downloader-0.0.13.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "c7dbf489b2611406148a6ced25e5814b1fe666e3b3da6c744cfc3df2abe1b270"
    },
    "head": {
      "url": "https://github.com/iheanyi/bandcamp-dl.git",
      "branch": "master"
    }
  },
  "revision": 2,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bandcamp-dl/blobs/sha256:7b35a41cb419a5d31adac6bd30e6a55f97b2d58c54586763c0a5af978c814211",
          "sha256": "7b35a41cb419a5d31adac6bd30e6a55f97b2d58c54586763c0a5af978c814211"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bandcamp-dl/blobs/sha256:9a07d659ad389c097ee1321e2dcd8c56287e920088745377b3e7aab390734b04",
          "sha256": "9a07d659ad389c097ee1321e2dcd8c56287e920088745377b3e7aab390734b04"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bandcamp-dl/blobs/sha256:e8e92815c793f675a7512c242004df0f228e116e481953e8dfc52408a3e7e4a6",
          "sha256": "e8e92815c793f675a7512c242004df0f228e116e481953e8dfc52408a3e7e4a6"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bandcamp-dl/blobs/sha256:3d870213d362062af7f8174dab09b60b313db8f38a9533e8d0ceda03d91883e0",
          "sha256": "3d870213d362062af7f8174dab09b60b313db8f38a9533e8d0ceda03d91883e0"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bandcamp-dl/blobs/sha256:28fd00d351f5f1ada5d67a0a9a70922dcc8af991309e4f4271cebbba1923ba96",
          "sha256": "28fd00d351f5f1ada5d67a0a9a70922dcc8af991309e4f4271cebbba1923ba96"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bandcamp-dl/blobs/sha256:8bf0fe63e1507db453dd887224008c813f9bd1dec0e752bf1ab44e50b152e03c",
          "sha256": "8bf0fe63e1507db453dd887224008c813f9bd1dec0e752bf1ab44e50b152e03c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bandcamp-dl/blobs/sha256:73be2118c6b9f94805e5ebcdd3e574f82269ac991e22e095047635a82a90bb8b",
          "sha256": "73be2118c6b9f94805e5ebcdd3e574f82269ac991e22e095047635a82a90bb8b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11",
    "six"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "libxml2",
    "libxslt"
  ],
  "uses_from_macos_bounds": [
    {},
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/bandcamp-dl.rb",
  "ruby_source_checksum": {
    "sha256": "f4a8df2e0c4065f6addddc5123107b4b4ff8d26b2db53e29d8fa833fbcb3fa89"
  },
  "date_added": "2017-04-28T13:19:32+02:00",
  "readme": "bandcamp-dl\n===========\n\ndownload audio from BandCamp.com\n\nSynopsis\n--------\n\nbandcamp-dl URL\n\nInstallation\n------------\n\nFrom PyPI\n~~~~~~~~~\n\n``pip3 install bandcamp-downloader``\n\n\nSome linux distros may require that python3-pip is installed first.\n\nFrom Wheel\n~~~~~~~~~~\n\n1. Download the wheel (``.whl``) from PyPI or the Releases page\n2. ``cd`` to the directory containing the ``.whl`` file\n3. ``pip install <filename>.whl``\n\n[OSX] From Homebrew\n~~~~~~~~~~~~~~~~~~~\n\n``brew install bandcamp-dl``\n\n[Arch] From the AUR\n~~~~~~~~~~~~~~~~~~~\n\n``yay -S bandcamp-dl-git``\n\nFrom Source\n~~~~~~~~~~~\n\n1. Clone the project or `download and extract the zip <https://github.com/iheanyi/bandcamp-dl/archive/master.zip>`_\n2. ``cd`` to the project directory containing the ``setup.py``\n3. ``python setup.py install``\n\nDescription\n-----------\n\nbandcamp-dl is a small command-line app to download audio from\nBandCamp.com. It requires the Python interpreter, version 3.4 (or higher) and is\nnot platform specific. It is released to the public domain, which means\nyou can modify it, redistribute it or use it how ever you like.\n\nDetails\n-------\n\n::\n\n    Usage:\n        bandcamp-dl [options] [URL]\n\n    Arguments:\n        URL         Bandcamp album/track URL\n\nOptions\n-------\n\n::\n\n    Options:\n        -h --help               Show this screen.\n        -v --version            Show version.\n        -d --debug              Verbose logging.\n        --artist=<artist>       The artist's slug (from the URL, --track or --album is required)\n        --track=<track>         The track's slug (from the URL, for use with --artist)\n        --album=<album>         The album's slug (from the URL, for use with --artist)\n        --template=<template>   Output filename template.\n                                [default: %{artist}/%{album}/%{track} - %{title}]\n        --base-dir=<dir>        Base location of which all files are downloaded.\n        -f --full-album         Download only if all tracks are available.\n        -o --overwrite          Overwrite tracks that already exist. Default is False.\n        -n --no-art             Skip grabbing album art.\n        -e --embed-lyrics       Embed track lyrics (If available)\n        -g --group              Use album/track Label as iTunes grouping.\n        -r --embed-art          Embed album art (If available)\n        -y --no-slugify         Disable slugification of track, album, and artist names.\n        -c --ok-chars=<chars>   Specify allowed chars in slugify.\n                                [default: -_~]\n        -s --space-char=<char>  Specify the char to use in place of spaces.\n                                [default: -]\n        -a --ascii-only         Only allow ASCII chars (北京 (capital of china) -> bei-jing-capital-of-china)\n        -k --keep-spaces        Retain whitespace in filenames\n        -u --keep-upper         Retain uppercase letters in filenames\n\nFilename Template\n-----------------\n\nThe ``--template`` option allows users to indicate a template for the\noutput file names and directories. Templates can be built using special\ntokens with the format of ``%{artist}``. Here is a list of allowed\ntokens:\n\n-  ``trackartist``: The artist name.\n-  ``artist``: The album artist name.\n-  ``album``: The album name.\n-  ``track``: The track number.\n-  ``title``: The track title.\n-  ``date``: The album date.\n-  ``label``: The album label.\n\nThe default template is: ``%{artist}/%{album}/%{track} - %{title}``.\n\nBugs\n----\n\nBugs should be reported `here <https://github.com/iheanyi/bandcamp-dl/issues>`_.\nPlease include the URL and/or options used as well as the output when using the `--debug` option.\n\nFor discussions, join us in `Discord <https://discord.gg/nwdT4MP>`_.\n\nWhen you submit a request, please re-read it once to avoid a couple of\nmistakes (you can and should use this as a checklist):\n\nAre you using the latest version?\n---------------------------------\n\nThis should report that you're up-to-date. About 20% of the reports we\nreceive are already fixed, but people are using outdated versions. This\ngoes for feature requests as well.\n\nIs the issue already documented?\n--------------------------------\n\nMake sure that someone has not already opened the issue you're trying to\nopen. Search at the top of the window or at\n`Issues <https://github.com/iheanyi/bandcamp-dl/search?type=Issues>`_.\nIf there is an issue, feel free to write something along the lines of\n\"This affects me as well, with version 2015.01.01. Here is some more\ninformation on the issue: ...\". While some issues may be old, a new post\ninto them often spurs rapid activity.\n\nWhy are existing options not enough?\n------------------------------------\n\nBefore requesting a new feature, please have a quick peek at `the list\nof supported\noptions <https://github.com/iheanyi/bandcamp-dl/blob/master/README.rst#synopsis>`_.\nMany feature requests are for features that actually exist already!\nPlease, absolutely do show off your work in the issue report and detail\nhow the existing similar options do *not* solve your problem.\n\nDoes the issue involve one problem, and one problem only?\n---------------------------------------------------------\n\nSome of our users seem to think there is a limit of issues they can or\nshould open. There is no limit of issues they can or should open. While\nit may seem appealing to be able to dump all your issues into one\nticket, that means that someone who solves one of your issues cannot\nmark the issue as closed. Typically, reporting a bunch of issues leads\nto the ticket lingering since nobody wants to attack that behemoth,\nuntil someone mercifully splits the issue into multiple ones.\n\nIs anyone going to need the feature?\n------------------------------------\n\nOnly post features that you (or an incapable friend you can\npersonally talk to) require. Do not post features because they seem like\na good idea. If they are really useful, they will be requested by\nsomeone who requires them.\n\nIs your question about bandcamp-dl?\n-----------------------------------\n\nIt may sound strange, but some bug reports we receive are completely\nunrelated to bandcamp-dl and relate to a different or even the\nreporter's own application. Please make sure that you are actually using\nbandcamp-dl. If you are using a UI for bandcamp-dl, report the bug to\nthe maintainer of the actual application providing the UI. On the other\nhand, if your UI for bandcamp-dl fails in some way you believe is\nrelated to bandcamp-dl, by all means, go ahead and report the bug.\n\nDependencies\n------------\n\n-  `BeautifulSoup4 <https://pypi.python.org/pypi/beautifulsoup4>`_ - HTML Parsing\n-  `Demjson <https://pypi.python.org/pypi/demjson>`_- JavaScript dict to JSON conversion\n-  `Mutagen <https://pypi.python.org/pypi/mutagen>`_ - ID3 Encoding\n-  `Requests <https://pypi.python.org/pypi/requests>`_ - for retrieving the HTML\n-  `Unicode-Slugify <https://pypi.python.org/pypi/unicode-slugify>`_ - A slug generator that turns strings into unicode slugs.\n-  `Chardet <https://pypi.python.org/pypi/chardet>`_ - Character encoding detection\n-  `Docopt <https://pypi.python.org/pypi/docopt>`_ - CLI help\n-  `Six <https://pypi.python.org/pypi/six>`_ - Python 2-3 compatibility\n-  `Unidecode <https://pypi.python.org/pypi/unidecode>`_ - ASCII representation of Unicode text\n-  `Mock <https://pypi.python.org/pypi/mock>`_ - Library for Python unit testing\n-  `PBR <https://pypi.python.org/pypi/pbr>`_ - Setuptools injection library required by Mock\n\nCopyright\n---------\n\nbandcamp-dl is released into the public domain by the copyright holders\n\nThis README file was inspired by the\n`youtube-dl <https://github.com/rg3/youtube-dl/blob/master/README.md>`_\ndocs and is likewise released into the public domain."
}
