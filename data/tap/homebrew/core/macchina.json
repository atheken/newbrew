{
  "name": "macchina",
  "full_name": "macchina",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "System information fetcher, with an emphasis on performance and minimalism",
  "license": "MIT",
  "homepage": "https://github.com/Macchina-CLI/macchina",
  "versions": {
    "stable": "6.1.8",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/Macchina-CLI/macchina/archive/refs/tags/v6.1.8.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "e827f640b55fe47a6127dd0c276e76b597e3cb83916be37351cdd6a81d75311e"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/macchina/blobs/sha256:a84ad65d11dd14e60ee2c8edaed0b2e72d361962282a2ab6d1cfde6a3262c2ab",
          "sha256": "a84ad65d11dd14e60ee2c8edaed0b2e72d361962282a2ab6d1cfde6a3262c2ab"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/macchina/blobs/sha256:209d70fda58e9b2610d0c8feb9e04c7359f28850e76050b53c179b4ea15c24ea",
          "sha256": "209d70fda58e9b2610d0c8feb9e04c7359f28850e76050b53c179b4ea15c24ea"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/macchina/blobs/sha256:d9c48eb3d2043d04a82638cf91205e99dbcc197f3163640bbc0c03d93cd7cb65",
          "sha256": "d9c48eb3d2043d04a82638cf91205e99dbcc197f3163640bbc0c03d93cd7cb65"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/macchina/blobs/sha256:f381950c7974cfa9384ccb2800f883c73df3cb435c551d3b8469010c04d66c06",
          "sha256": "f381950c7974cfa9384ccb2800f883c73df3cb435c551d3b8469010c04d66c06"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/macchina/blobs/sha256:f87bff4db1b3732b9603af15c560cb0e386e5f2ac02ece28e71d941fab7b08aa",
          "sha256": "f87bff4db1b3732b9603af15c560cb0e386e5f2ac02ece28e71d941fab7b08aa"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/macchina/blobs/sha256:2551a0ae491d1d4f51d72ed804898faf5bacfd9e7db57cf6fd1452c1202275bf",
          "sha256": "2551a0ae491d1d4f51d72ed804898faf5bacfd9e7db57cf6fd1452c1202275bf"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/macchina/blobs/sha256:f8f175c9bcdeec3a3974cfb53c4324d1d9dd8dc6b0825182875773e2f6cea94d",
          "sha256": "f8f175c9bcdeec3a3974cfb53c4324d1d9dd8dc6b0825182875773e2f6cea94d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/macchina.rb",
  "ruby_source_checksum": {
    "sha256": "9dc410946b7ca1bcf3f3756c9f0983ca994cef62e11c6ca941e64225796e87ba"
  },
  "date_added": "2021-04-21T09:18:38+00:00",
  "readme": "<div align=\"center\">\n<h1>macchina</h1>\n\nFast, minimal and customizable system information frontend.\n\nLinux • macOS • Windows • NetBSD • FreeBSD • OpenWrt • Android\n\n<img src=\"assets/preview.png\" alt=\"Preview\" />\n</div>\n\n## About\n\n[macchina](https://crates.io/crates/macchina) lets you view system\ninformation, like your kernel version, uptime, memory usage, processor\nload and much more. _macchina_ is basic by default and extensible by\ndesign.\n\nIf you're interested in the library _macchina_ uses to fetch system\ninformation, have a look at [libmacchina]; fetching-related issues\nshould be filed on that repository.\n\n## Status\n\n_macchina_ is currently in **maintenance mode**, meaning bug fixes and\nlittle optimizations are much more prioritized over the addition of\nnew features. This is due to the fact that we (the authors) do not\nhave the time to focus on moving the project forward, or expanding on\nwhat is currently offered while keeping up with the demanding nature\nof our lives. _macchina_ will at some point (although I can't say\nwhen) leave this stage and implement all the bells and whistles the\ncommunity has been requesting.\n\nWe hope you understand our situation and continue to support _macchina_.\n\n## Benchmarks\n\nCheck out the [benchmarks wiki page](https://github.com/Macchina-CLI/macchina/wiki/Benchmarks).\n\n## Features\n\n### Themes\n\n_macchina_ has a theming system which you can use to customize pretty much any\nvisual aspect of the program. Themes live **outside** the configuration file,\nso you can create a bunch of them and switch between them at any time.\n\nWhy are they separate?\n\n- **Modularity** — themes are an engine of their own, and their sole purpose is\n  to provide an interface that allows for the modification of _macchina's_\n  visual components. It makes sense to separate them from the main\n  configuration file.\n\n- **Portability** — sure, the configuration file is shareable, but what if you\n  wanted to share the look of _your macchina_ and not its behavior? What if you\n  wanted to switch between dozens of themes that you very carefully designed?\n  The way we handle customization answers this need.\n\nLearn how to [make your own](#customization).\n\n### Doctor\n\nIn the event of fetching failures, which can occur for various reasons, the\n`--doctor` flag that can tell you why that might be happening.\n\n## Configuration\n\nSee the [configuration wiki page](https://github.com/Macchina-CLI/macchina/wiki/Configuration).\n\n## Customization\n\nHave a look at the [customization wiki page](https://github.com/Macchina-CLI/macchina/wiki/Customization).\n\n## Installation\n\nCheck out the [installation wiki page](https://github.com/Macchina-CLI/macchina/wiki/Installation). \nWe also provide [prebuilt binaries](https://github.com/grtcdr/macchina/releases) with every release.\n\n## Contributors\n\n_macchina_ like many other open source projects, would not be where it\nis right now without the help of its contributors. Whether you've\nhelped drive it forward by contributing to the codebase, packaged it\nso we didn't have to, or recommended it to someone you know — we truly\nappreciate your support!\n\nThe following is a list of awesome people that have truly shaped _macchina_:\n- [pin](https://pkgsrc.se/bbmaint.php?maint=pin@NetBSD.org): Provided\n  massive amounts of help, feedback and testing, and is currently\n  packaging _macchina_ on NetBSD.\n- [123marvin123](https://github.com/123marvin123): Co-author of _(lib)macchina_ and\n  author of countless high-quality contributions and primarily, support for\n  macOS and Windows.\n- [uttarayan21](https://github.com/uttarayan21): Co-author of _(lib)macchina_ and\n  author of numerous shipshape contributions and primarily, support for Android and OpenWrt.\n\nLooking to help? [Read this first.](.github/CONTRIBUTING.md)\n\n[libmacchina]: https://github.com/Macchina-CLI/libmacchina"
}
