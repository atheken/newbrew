{
  "name": "libaribcaption",
  "full_name": "libaribcaption",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Portable ARIB STD-B24 Caption Decoder/Renderer",
  "license": "MIT",
  "homepage": "https://github.com/xqq/libaribcaption",
  "versions": {
    "stable": "1.0.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/xqq/libaribcaption/archive/refs/tags/v1.0.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "6e4ff246155524e0e90d8657148b53e1322d5197d524e7b490bbee4ffcdc66c5"
    },
    "head": {
      "url": "https://github.com/xqq/libaribcaption.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libaribcaption/blobs/sha256:95f26086bd7441422b937c1b5669c83949002748c830f6c9169d99b8607f798f",
          "sha256": "95f26086bd7441422b937c1b5669c83949002748c830f6c9169d99b8607f798f"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libaribcaption/blobs/sha256:54e6fe96fd275bf48cd7855079e57f9db065b13236217d091672da5215d04d65",
          "sha256": "54e6fe96fd275bf48cd7855079e57f9db065b13236217d091672da5215d04d65"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libaribcaption/blobs/sha256:70938eafd08f1bdd3d350acc46a1cc2883d7bd7ab59443b8e4534978738f3469",
          "sha256": "70938eafd08f1bdd3d350acc46a1cc2883d7bd7ab59443b8e4534978738f3469"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libaribcaption/blobs/sha256:d98426fc8cf65f3a4b4c158e87502e011241027e407ba3e367d39b15b3b0bd92",
          "sha256": "d98426fc8cf65f3a4b4c158e87502e011241027e407ba3e367d39b15b3b0bd92"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libaribcaption/blobs/sha256:fabcf532d86466ffc3718a5be2aa9084ac0071832e859bb27dc4f9c589e7857e",
          "sha256": "fabcf532d86466ffc3718a5be2aa9084ac0071832e859bb27dc4f9c589e7857e"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libaribcaption/blobs/sha256:3cfe6d592c479f2196544b2b364b967b2d87e62a07dbcbb61b094e05f1ae039f",
          "sha256": "3cfe6d592c479f2196544b2b364b967b2d87e62a07dbcbb61b094e05f1ae039f"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libaribcaption/blobs/sha256:3f2162518abbdfb04a4b49310753e4e9df426f6fd83ba467ff8a725f049884f7",
          "sha256": "3f2162518abbdfb04a4b49310753e4e9df426f6fd83ba467ff8a725f049884f7"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake",
    "pkg-config"
  ],
  "dependencies": [
    "fontconfig",
    "freetype"
  ],
  "test_dependencies": [
    "pkg-config"
  ],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/libaribcaption.rb",
  "ruby_source_checksum": {
    "sha256": "bbcdc9d381cd79b1ec34ea2caa1f3000cc867a25006b68b88fb99a22fbe4fe4c"
  },
  "date_added": "2023-01-31T14:14:30+00:00",
  "readme": "libaribcaption\n======\n[日本語](README_ja.md)\n\nA portable caption decoder / renderer for handling ARIB STD-B24 based TV broadcast captions.\n\n## Background\nWhile **CEA-608/708** closed caption standards are used by the **ATSC** system in North America,\n**DVB Subtitles / DVB Teletext** defined in **DVB** standard are used in Europe and many parts of the world,\nJapan established its own TV broadcasting standard **ISDB** that includes a kind of caption service defined in **ARIB STD-B24**\nby the **A**ssociation of **R**adio **I**ndustries and **B**usinesses (ARIB).\n\nBrazil also adopted **ISDB-T** International for their broadcasting by establishing Brazilian version **SBTVD / ISDB-Tb** based on the Japanese standard,\nwhich has been widely used in South America countries and around the world.\nBrazilian version also includes a caption service for Latin languages defined in **ABNT NBR 15606-1** which is modified from **ARIB STD-B24** specification.\nPhilippines also adopted ISDB-T International based on the Brazilian standards,\nbut uses **UTF-8** for caption encoding based on the Japansese specification **ARIB STD-B24**.\n\nThough ISDB-based TV broadcasting has been operating for about 20 years, ARIB based caption is still lacking support in general players.\n\n## Overview\nlibaribcaption provides decoder and renderer for handling ARIB STD-B24 based broadcast captions,\nmaking it possible for general players to render ARIB captions with the same effect (or even better) as Television.\n\nlibaribcaption is written in C++17 but also provides C interfaces to make it easier to integrate into video players.\nIt is a lightweight library that only depends on libfreetype and libfontconfig in the worst case.\n\nlibaribcaption is a cross-platform library that works on various platforms, including but not limited to:\n- Windows 7+\n- Windows XP+  (libfreetype required)\n- Linux  (libfreetype and libfontconfig required)\n- Android 2.x+  (libfreetype required)\n- macOS\n- iOS\n\n## Screenshot\n![screenshot0.png](screenshots/screenshot0.png)\n\n## Features\n- Support captions in Japanese (ARIB STD-B24 JIS), Latin languages (ABNT NBR 15606-1) and Philippine (ARIB STD-B24 UTF-8)\n- Full support for rendering ARIB additional symbols (Gaiji) and DRCS characters\n- Lightweight and portable implementation that works on various platforms\n- Performance optimized (SSE2 on x86/x64) graphics rendering\n- Multiple text rendering backend driven by DirectWrite / CoreText / FreeType\n- Zero third-party dependencies on Windows (using DirectWrite) and macOS / iOS (using CoreText)\n- Built-in font fallback mechanism\n- Built-in DRCS converting table for replacing / rendering known DRCS characters into / by alternative Unicode\n\n## Build\nCMake 3.11+ and a C++17 compatible compiler will be necessary for building. Usually you just have to:\n```bash\ncd libaribcaption\nmkdir build\ncd build\ncmake .. -DCMAKE_BUILD_TYPE=Release\ncmake --build . -j8\ncmake --install .      # Optional\n```\n\nBy default libaribcaption is compiled as static library, indicate `ARIBCC_SHARED_LIBRARY:BOOL=ON` to build as a shared library:\n```bash\ncmake .. -DCMAKE_BUILD_TYPE=Release -DARIBCC_SHARED_LIBRARY:BOOL=ON    # or -DBUILD_SHARED_LIBS:BOOL=ON\n```\n\nlibaribcaption has several CMake options that can be specified:\n```bash\nARIBCC_BUILD_TESTS:BOOL            # Compile test codes inside /test. Default to OFF\nARIBCC_SHARED_LIBRARY:BOOL         # Compile as shared library. Default to OFF\nARIBCC_NO_EXCEPTIONS:BOOL          # Disable C++ Exceptions. Default to OFF\nARIBCC_NO_RTTI:BOOL                # Disable C++ RTTI. Default to OFF\nARIBCC_NO_RENDERER:BOOL            # Disable the renderer and leave only the decoder behind. Default to OFF\nARIBCC_IS_ANDROID:BOOL             # Indicate target platform is Android. Detected automatically by default.\nARIBCC_USE_DIRECTWRITE:BOOL        # Enable DirectWrite font provider & renderer. Default to ON on Windows\nARIBCC_USE_GDI_FONT:BOOL           # Enable GDI font provider which is necessary for WinXP support. Default to OFF.\nARIBCC_USE_CORETEXT:BOOL           # Enable CoreText font provider & renderer. Default to ON on macOS / iOS\nARIBCC_USE_FREETYPE:BOOL           # Enable FreeType based renderer. Default to ON on Linux / Android\nARIBCC_USE_EMBEDDED_FREETYPE:BOOL  # Use embedded FreeType instead of searching system library. Default to OFF\nARIBCC_USE_FONTCONFIG:BOOL         # Enable Fontconfig font provider. Default to ON on Linux and other platforms\n```\n\nBy default, libaribcaption only enables DirectWrite on Windows and CoreText on macOS / iOS without any third-party\ndependencies, But you can still enable the FreeType based text renderer by indicating\n`-DARIBCC_USE_FREETYPE:BOOL=ON`.\n\nFor Windows XP support, you have to turn off DirectWrite (which will result in a crash), enable GDI font provider and FreeType:\n```bash\ncmake .. -DCMAKE_BUILD_TYPE=Release -ARIBCC_USE_DIRECTWRITE:BOOL=OFF -DARIBCC_USE_GDI_FONT:BOOL=ON -DARIBCC_USE_FREETYPE:BOOL=ON\n```\n\nFor enabling FreeType text renderer on Windows, consider using `vcpkg` or `msys2` for accessing third-party libraries.\n\nIf you are under some kind of environment (like Android NDK or Windows) that is hard to prepare system-wide installed FreeType,\nconsider using embedded FreeType by indicating `-DARIBCC_USE_EMBEDDED_FREETYPE:BOOL=ON`.\nThis option will automatically fetch and compile a static-linked FreeType library internally.\n\n## Usage\nlibaribcaption could be imported through `find_package()` if you have installed it into system:\n```cmake\ncmake_minimum_required(VERSION 3.11)\nproject(testarib LANGUAGES C CXX)\n\nfind_package(aribcaption REQUIRED)\n\nadd_executable(testarib main.cpp)\n\ntarget_compile_features(testarib\n    PRIVATE\n        cxx_std_17\n)\n\ntarget_include_directories(testarib\n    PRIVATE\n        ${ARIBCAPTION_INCLUDE_DIR}\n)\n\ntarget_link_libraries(testarib\n    PRIVATE\n        aribcaption::aribcaption\n)\n```\n\nOr using `add_subdirectory()` to import source folder directly:\n\n```cmake\ncmake_minimum_required(VERSION 3.11)\nproject(testarib2 LANGUAGES C CXX)\n\nset(ARIBCC_USE_FREETYPE ON CACHE BOOL \"Enable FreeType\")    # Indicate options here (optional)\nadd_subdirectory(thirdparty/libaribcaption)\n\nadd_executable(testarib2 main.cpp)\n\ntarget_compile_features(testarib2\n    PRIVATE\n        cxx_std_17\n)\n\ntarget_link_libraries(testarib2\n    PRIVATE\n        aribcaption::aribcaption\n)\n```\n\nOr using pkg-config if you have installed it into system:\n```bash\n# Link to libaribcaption static library\ngcc main.c -o main `pkg-config --cflags --libs --static libaribcaption`\n\n# Link to libaribcaption shared library\ngcc main.c -o main `pkg-config --cflags --libs libaribcaption`\n```\n\n## Documents\nSee the comments in [public headers](include/aribcaption), and [sample code with ffmpeg](test/ffmpeg)\n\n## Hints\nlibaribcaption's C++ headers are also written in C++17. If your environment doesn't support C++17,\nconsider using the C API or switch to a newer compiler.\n\nThe C API ([public headers] with \".h\" extensions) could be useful for calling from Pure C or other languages,\nsee [capi sample](test/capi) for usage.\n\n[public headers]: include/aribcaption\n\n## Recommended fonts\nThese fonts are recommended for Japanese ARIB caption rendering:\n\nWindows TV MaruGothic\n\nHiragino Maru Gothic ProN (macOS)\n\n[Rounded M+ 1m for ARIB](https://www.axfc.net/u/3107925)\n\n[和田研中丸ゴシック2004ARIB](https://ja.osdn.net/projects/jis2004/wiki/FrontPage)\n\n## License\nlibaribcaption is released under MIT License. You should include the copyright notice and permission notice in your distribution.\n\n## References\n[ARIB STD-B24](https://www.arib.or.jp/english/std_tr/broadcasting/std-b24.html)\n\n[ARIB TR-B14](https://www.arib.or.jp/english/std_tr/broadcasting/tr-b14.html)\n\nABNT NBR 15606-1\n\n[ISDB-T Standards (Philippines)](https://ntc.gov.ph/wp-content/uploads/2018/MC/MC-07-12-2014-Attachment.pdf)\n\n## Other implementations\nlibaribcaption is heavily inspired by the following projects:\n\n[aribb24](https://github.com/nkoriyama/aribb24)\n\n[aribb24.js](https://github.com/monyone/aribb24.js)\n\n[TVCaptionMod2](https://github.com/xtne6f/TVCaptionMod2)"
}
