{
  "name": "osc-cli",
  "full_name": "osc-cli",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Official Outscale CLI providing connectors to Outscale API",
  "license": "BSD-3-Clause",
  "homepage": "https://github.com/outscale/osc-cli",
  "versions": {
    "stable": "1.11.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/02/cd/f1b796f5e7a301f6a3c0b910be07188cbfd329d2758e036d24ef26b4ee96/osc-sdk-1.11.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d3b71b326b0698da1b9a503cd511a992fe578375fd01b30bdec0d63d8328af66"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/osc-cli/blobs/sha256:8ee0050f6963c119000071249bb9c681cc6c71e8c90a61cf0c40d08e6932c6ca",
          "sha256": "8ee0050f6963c119000071249bb9c681cc6c71e8c90a61cf0c40d08e6932c6ca"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/osc-cli/blobs/sha256:8a2b486844a381705232fb6bea71a9aa945e5e5b6063544d794b1b7da60db287",
          "sha256": "8a2b486844a381705232fb6bea71a9aa945e5e5b6063544d794b1b7da60db287"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/osc-cli/blobs/sha256:f846c7f51aca97f2763e43ef568731ce1695ae8c9738c3f5d6e60096ec3ad007",
          "sha256": "f846c7f51aca97f2763e43ef568731ce1695ae8c9738c3f5d6e60096ec3ad007"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/osc-cli/blobs/sha256:258f8315964c631bb949bd1bdea8e6c53160fe906d890fbf576c769250af5e48",
          "sha256": "258f8315964c631bb949bd1bdea8e6c53160fe906d890fbf576c769250af5e48"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/osc-cli/blobs/sha256:5dd34ceb8ed738e7ff9e60484a857aaf971b03cbaea058efbe6a0d03e827b0be",
          "sha256": "5dd34ceb8ed738e7ff9e60484a857aaf971b03cbaea058efbe6a0d03e827b0be"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/osc-cli/blobs/sha256:ccc064892b4e525daa08dd20dc97cfb9fa6465e26848866173754941cea27849",
          "sha256": "ccc064892b4e525daa08dd20dc97cfb9fa6465e26848866173754941cea27849"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/osc-cli/blobs/sha256:7c521771b33f7e6fdda860a34eea2a39f7b807415ba2951cb901fcc38359935b",
          "sha256": "7c521771b33f7e6fdda860a34eea2a39f7b807415ba2951cb901fcc38359935b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python-typing-extensions",
    "python@3.11",
    "six"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/osc-cli.rb",
  "ruby_source_checksum": {
    "sha256": "65f8ecf6db4b9811cca3d0ad2efd201fb17561b07e03c8b8c0c71178cb401fcc"
  },
  "date_added": "2021-09-09T17:24:42+00:00",
  "readme": "[![Project Graduated](https://docs.outscale.com/fr/userguide/_images/Project-Graduated-green.svg)](https://docs.outscale.com/en/userguide/Open-Source-Projects.html)\n\n# Outscale CLI\n\nOfficial Outscale CLI providing connectors to Outscale API.\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n## Getting Started\n\n\n### Installing on Macos\n\nosc-cli is available on [brew](https://formulae.brew.sh/formula/osc-cli).\n\n### Installing on Linux\n\nosc-cli is pre-packaged for Linux as a standalone [AppImage](https://appimage.org/).\n- Download `osc-cli-x86_64.AppImage` from latest version in [releases](https://github.com/outscale/osc-cli/releases).\n- Allow file to be executed by running `chmod a+x osc-cli-x86_64.AppImage`\n- Run osc-cli: `./osc-cli-x86_64.AppImage`\n\nOptionally, you can install it for all users: `sudo mv osc-cli-x86_64.AppImage /usr/local/bin/osc-cli` and just run `osc-cli`.\n\nyou can also install `osc-cli-git` on Arch Linux using AUR: (`yay -S osc-cli-git`)\n\n#### Note:\n\nif you have this error (or one similar about fuse):\n```\nfuse: failed to exec fusermount: No such file or directory\n\nCannot mount AppImage, please check your FUSE setup.\nYou might still be able to extract the contents of this AppImage\nif you run it with the --appimage-extract option.\nSee https://github.com/AppImage/AppImageKit/wiki/FUSE\nfor more information\nopen dir error: No such file or directory\n```\n\nYou can either install fuse yourself, or execute the appimage with `--appimage-extract-and-run` option\n\nExample:\n```\n./osc-cli-x86_64.AppImage --appimage-extract-and-run osc-cli api ReadImages --profile=my\n```\n\nusing `appimage-extract-and-run` extract the content of the AppImage in a temporary directory and execute it,\nthis operation is a **lot** slower than using fuse, and the fuse solution should be use if posible.\n\n\n### Installing on Windows\n\n[Check dedicated documentation](windows-setup.md) regarding windows installation.\n\n### Installing from Python package\n\n#### Prerequisites\n\nYou will need [Python 3.6+](https://www.python.org/) or later. Earlier versions including Python 2 are not supported.\n\n#### Pip\n\nYou can get the package from [pypi](https://pypi.org/project/osc-sdk/):\n```\npip3 install osc-sdk\n```\n\nIf you are using Microsoft Windows, see [how to setup osc-cli on Windows](windows-setup.md).\n\n### Installing from sources\n\nIt is a good practice to create a [dedicated virtualenv](https://virtualenv.pypa.io/en/latest/) first. Even if it usually won't harm to install Python libraries directly on the system, better to contain dependencies in a virtual environment.\n\n```bash\npython3 -m venv .venv\nsource .venv/bin/activate\n```\n\nThen install osc-cli in your virtual env:\n```bash\npip install -e .\n```\n\n## Configure osc-cli\n\nThe CLI requires a configuration file in `~/.osc/config.json` The content must be a JSON whose contents look like this:\n/!\\ the old configuration path using `.osc_sdk` folder is **deprecated**. Please use the new one with `.osc`.\n```json\n{\"default\":\n    {\"access_key\": \"MYACCESSKEY\",\n     \"secret_key\": \"MYSECRETKEY\",\n     \"region\": \"eu-west-2\"\n    },\n  \"us\":\n    {\"access_key\": \"MYACCESSKEY\",\n     \"secret_key\": \"MYSECRETKEY\",\n     \"host\": \"outscale.com\",\n     \"https\": true,\n     \"method\": \"POST\",\n     \"region\": \"us-east-2\"\n    }\n}\n```\nYou can add several profiles for different regions or users.\n\nOptional parameters can be applied to each profile :\n* client_certificate: if you need additional security, your pem must include your private key and your certificate\n* version: if you want to query another version of the API\n\n```json\n{\"default\":\n    {\"access_key\": \"MYACCESSKEY\",\n     \"secret_key\": \"MYSECRETKEY\",\n     \"client_certificate\" : \"path_to_your_pem\",\n     \"host\": \"outscale.com\",\n     \"https\": true,\n     \"method\": \"POST\",\n     \"region\": \"eu-west-2\",\n     \"version\": \"2018-11-19\"\n    }\n}\n```\n\n## Get osc-cli version\n\n`--version` option will print osc-cli version and exit.\n```\nosc-cli --version\n```\n\n## Activate bash-completion\n\n### Activate the completion for the current bash session\n\n```\nsource <(osc-cli --bash_completion)\n```\n\n### Generate the file to add it in your bach rc:\n```\nosc-cli --bash_completion > ~/.osc/cli-completion.bash\n```\nthen in your bashrc add:\n\n```\nsource ~/.osc/cli-completion.bash\n```\n\n## Usage\n\n```\nosc-cli SERVICE CALL [PROFILE] [CALL-PARAMETERS]\n```\nor\n```\nosc-cli --service SERVICE --call CALL [PROFILE] [--CALL_PARAMS ...]\n```\nwith\n* SERVICE one of the [services](http://docs.outscale.com) provided by Outscale (`fcu`, `lbu`, `icu`, `eim`, `directlink`, `okms` and `api`)\n* CALL the call you request (ie ReadVms, DescribeInstances...)\n* PROFILE the profile you want to connect to (optional)\n* CALL_PARAMS call arguments which are case-sensitive (optional)\n\n\nHere is an example of a simple volume creation:\n```bash\nosc-cli fcu CreateVolume --AvailabilityZone eu-west-2a --Size 10\n{\n    \"CreateVolumeResponse\": {\n        \"@xmlns\": \"http://ec2.amazonaws.com/doc/2014-06-15/\",\n        \"requestId\": \"508f428a-9fd8-4a49-9fe6-d0bf311de3b4\",\n        \"volumeId\": \"vol-6a2aa442\",\n        \"size\": \"10\",\n        \"snapshotId\": null,\n        \"availabilityZone\": \"eu-west-2a\",\n        \"status\": \"creating\",\n        \"createTime\": \"2019-01-17T12:53:57.836Z\",\n        \"volumeType\": \"standard\"\n    }\n}\n```\n\nBe careful with your quotes ! If you want to pass the string `\"12345678\"` rather than the integer `12345678` you'll need to quote your quotes:\n```bash\n$ osc-cli icu CreateAccount --Email \"example@email.com\" \\\n\t\t\t    --FirstName \"Osc\" \\\n\t\t\t    --LastName \"Cli\" \\\n\t\t\t    --Password \"12345toto\" \\\n\t\t\t    --ZipCode '\"92000\"' \\\n\t\t\t    --Country \"France\" \\\n\t\t\t    --CustomerId '\"12345678\"'\n```\n\nAnother example with an array of strings into args:\n```bash\n$ osc-cli api CreateDhcpOptions --DomainName=\"toot.toot\" \\\n\t\t\t\t--DomainNameServers=\"['1.1.1.1']\" \\\n\t\t\t\t--NtpServers=\"['1.1.1.1']\"\n```\n\nExample with a complex structure:\n```bash\nosc-cli icu CreateListenerRule \\\n--Instances '[{\"InstanceId\": \"i-12345678\"}]' \\\n--ListenerDescription '{\"LoadBalancerName\": \"osc\", \"LoadBalancerPort\": 80}'\n--ListenerRuleDescription '{\"RuleName\": \"hello\", \"Priority\": 100, \"PathPattern\": \"/\"}'\n```\n\n**Argument Parsing**\n```bash\n$ osc-cli api example --obj=[1,2]    \t# list\n$ osc-cli api example --obj=10\t\t# int\n$ osc-cli api example --obj=\"10\"\t# int\n$ osc-cli api example --obj=\"'10'\"\t# str\n$ osc-cli api example --obj=\\\"10\\\"\t# str\n\n$ osc-cli api example --obj=\"hello\"\t# str\n$ osc-cli api example --obj=hello\t# str\n```\n**Warning** if you're adding a list which contain strings with specifics characteres, there is a workaround:\n```bash\n$ osc-cli api example --obj=\"['vol-12345678', 'vol-87654322']\"    \t# list\n```\n\n## Authentication\n\nYou API crendentials are composed of an Access Key and a Secret Key located in `.osc_sdk/config.json`.\nYou can list you access keys using your user and password:\n```bash\nosc-cli icu ListAccessKeys --authentication-method=password --login youremail@company.com --password=Y0URpAssOrd\n```\n## Contributing\nOSC-CLI is an **open source software** licensed under **BSD-3-Clause.**\n\nPatches and discussions are welcome about bugs you've found or features you think are missing. If you would like to help making **osc-cli** better, take a look to [CONTRIBUTING.md](https://github.com/outscale/osc-cli/blob/master/CONTRIBUTING.md) file."
}
