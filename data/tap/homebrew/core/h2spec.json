{
  "name": "h2spec",
  "full_name": "h2spec",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Conformance testing tool for HTTP/2 implementation",
  "license": "MIT",
  "homepage": "https://github.com/summerwind/h2spec",
  "versions": {
    "stable": "2.6.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/summerwind/h2spec.git",
      "tag": "v2.6.0",
      "revision": "70ac2294010887f48b18e2d64f5cccd48421fad1",
      "checksum": null
    },
    "head": {
      "url": "https://github.com/summerwind/h2spec.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/h2spec/blobs/sha256:85916701e8dd7c4caaef314e26c48344423369b3b2197bd80111141a9b526a38",
          "sha256": "85916701e8dd7c4caaef314e26c48344423369b3b2197bd80111141a9b526a38"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/h2spec/blobs/sha256:b2589ab8277cf827e7903a523b666e8ceb1b4fe5b494f0fcd52ac5b40706a5c6",
          "sha256": "b2589ab8277cf827e7903a523b666e8ceb1b4fe5b494f0fcd52ac5b40706a5c6"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/h2spec/blobs/sha256:90d9e00cce2bd7659510bb75cc6735b94d7488207a4aeb665fd9aedae3ed8ca1",
          "sha256": "90d9e00cce2bd7659510bb75cc6735b94d7488207a4aeb665fd9aedae3ed8ca1"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/h2spec/blobs/sha256:f64b879c82616e820a77e8c39c65a6fd6b957c069aabd31ef5f2478b14101d46",
          "sha256": "f64b879c82616e820a77e8c39c65a6fd6b957c069aabd31ef5f2478b14101d46"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/h2spec/blobs/sha256:512863844a450dba5025fa2d09c88fb9e86e72e62ac43d0a19d2cc020e0b8467",
          "sha256": "512863844a450dba5025fa2d09c88fb9e86e72e62ac43d0a19d2cc020e0b8467"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/h2spec/blobs/sha256:ee24c3ab807d25dc92116e1b794d319365b7ad7a801f9ef9089f2992844673aa",
          "sha256": "ee24c3ab807d25dc92116e1b794d319365b7ad7a801f9ef9089f2992844673aa"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/h2spec/blobs/sha256:c585fbaa7e8d101d280edafce5e26b4df57a1ac8ddbd7327f1efdc07d0ac17a0",
          "sha256": "c585fbaa7e8d101d280edafce5e26b4df57a1ac8ddbd7327f1efdc07d0ac17a0"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/h2spec/blobs/sha256:83ba531c3cfffe083ffc687cff9c7ad41eb30c6745994a6eca2bc9f245e7f00e",
          "sha256": "83ba531c3cfffe083ffc687cff9c7ad41eb30c6745994a6eca2bc9f245e7f00e"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/h2spec/blobs/sha256:d72f6c447db109aa6a6bceb41aed5fcc445ce1008633b8e236e457d686915990",
          "sha256": "d72f6c447db109aa6a6bceb41aed5fcc445ce1008633b8e236e457d686915990"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/h2spec.rb",
  "ruby_source_checksum": {
    "sha256": "66c73eb1aed989848bf0e09d4a18e4fedaaf5fee29c9bee6953a9cf1c7eb9995"
  },
  "date_added": "2020-12-25T21:30:26+00:00",
  "readme": "# h2spec\n\nh2spec is a conformance testing tool for HTTP/2 implementation.  \nThis tool is compliant with [RFC 7540 (HTTP/2)](http://www.rfc-editor.org/rfc/rfc7540.txt) and [RFC 7541 (HPACK)](http://www.rfc-editor.org/rfc/rfc7541.txt).\n\n## Install\n\nGo to the [releases page](https://github.com/summerwind/h2spec/releases), find the version you want, and download the zip file or tarball file. The docker image is also available in [Docker Hub](https://hub.docker.com/r/summerwind/h2spec/).\n\n## Your server\n\nYour server should respond on `GET /` or `POST /` requests with status 200 response with non-empty data.\n\n## Usage\n\n```\nConformance testing tool for HTTP/2 implementation.\n\nUsage:\n  h2spec [spec...] [flags]\n\nFlags:\n  -c, --ciphers string          List of colon-separated TLS cipher names\n      --dryrun                  Display only the title of test cases\n      --help                    Display this help and exit\n  -h, --host string             Target host (default \"127.0.0.1\")\n  -k, --insecure                Don't verify server's certificate\n  -j, --junit-report string     Path for JUnit test report\n      --max-header-length int   Maximum length of HTTP header (default 4000)\n  -P, --path string             Target path (default \"/\")\n  -p, --port int                Target port\n  -S, --strict                  Run all test cases including strict test cases\n  -o, --timeout int             Time seconds to test timeout (default 2)\n  -t, --tls                     Connect over TLS\n  -v, --verbose                 Output verbose log\n      --version                 Display version information and exit\n```\n\n### Running a specific test case\n\nYou can choose a test case to run by specifying the *Spec ID* as the command argument. For example, if you want to run test cases for HTTP/2, run h2spec as following:\n\n```\n$ h2spec http2\n```\n\nIf you add a section number after the *Spec ID*, test cases related to a specific section will be run. For example, if you want to run test cases related to 6.3 of HTTP/2, run h2spec as following:\n\n```\n$ h2spec http2/6.3\n```\n\nIf you add a test number after the section number, you can run the specific test case individually. For example, to run only the first test case related to 6.3 of HTTP/2 6.3, run h2spec as following:\n\n```\n$ h2spec http2/6.3/1\n```\n\nThe *Spec ID* can be specified multiple times.\n\n```\n$ h2spec http2/6.3 generic\n```\n\nCurrently supported *Spec IDs* are as follows. `generic` is the original spec of h2spec, includes generic test cases for HTTP/2 servers.\n\nSpec ID | Description\n--- | ---\nhttp2 | Test cases for RFC 7540 (HTTP/2)\nhpack | Test cases for RFC 7541 (HPACK)\ngeneric | Generic test cases for HTTP/2 servers\n\n### Dryrun Mode\n\nTo display the list of test cases to be run, use *Dryrun Mode* as follows:\n\n```\n$ h2spec --dryrun\n```\n\n### Strict Mode\n\nWhen *Strict Mode* is enabled, h2spec will run the test cases related to the contents requested with the `SHOULD` notation in each specification. It is useful for more rigorous verification of HTTP/2 implementation.\n\n```\n$ h2spec --strict\n```\n\n## Screenshot\n\n![Sceenshot](https://cloud.githubusercontent.com/assets/230145/22183160/9e9fbb4c-e0fa-11e6-9383-e2cc1ed6750a.png)\n\n## Build\n\nTo build from source, you need to install [Go](https://golang.org) and export `GO111MODULE=on` first.\n\nTo build:\n```\n$ make build\n```\n\nTo test:\n```\n$ make test\n```\n\n## License\n\nh2spec is made available under MIT license."
}
