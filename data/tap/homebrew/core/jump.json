{
  "name": "jump",
  "full_name": "jump",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Helps you navigate your file system faster by learning your habits",
  "license": "MIT",
  "homepage": "https://github.com/gsamokovarov/jump",
  "versions": {
    "stable": "0.51.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/gsamokovarov/jump/archive/v0.51.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "ce297cada71e1dca33cd7759e55b28518d2bf317cdced1f3b3f79f40fa1958b5"
    },
    "head": {
      "url": "https://github.com/gsamokovarov/jump.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jump/blobs/sha256:90378306728d3520372749d0632558adc2ee809652145a720545ffcc80328c92",
          "sha256": "90378306728d3520372749d0632558adc2ee809652145a720545ffcc80328c92"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jump/blobs/sha256:530e68bb757c889ad241551f9312b147bb349463c854d72708590dc128798227",
          "sha256": "530e68bb757c889ad241551f9312b147bb349463c854d72708590dc128798227"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jump/blobs/sha256:530e68bb757c889ad241551f9312b147bb349463c854d72708590dc128798227",
          "sha256": "530e68bb757c889ad241551f9312b147bb349463c854d72708590dc128798227"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jump/blobs/sha256:dbedde353648c54dffc593bef54f2a7e089d84bd8756d7913545baf8162cae91",
          "sha256": "dbedde353648c54dffc593bef54f2a7e089d84bd8756d7913545baf8162cae91"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jump/blobs/sha256:0065c059d901a155f99e532ff126ed58abfe27d27b9ab5e3decdf44dcf0ca06d",
          "sha256": "0065c059d901a155f99e532ff126ed58abfe27d27b9ab5e3decdf44dcf0ca06d"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jump/blobs/sha256:0065c059d901a155f99e532ff126ed58abfe27d27b9ab5e3decdf44dcf0ca06d",
          "sha256": "0065c059d901a155f99e532ff126ed58abfe27d27b9ab5e3decdf44dcf0ca06d"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jump/blobs/sha256:0065c059d901a155f99e532ff126ed58abfe27d27b9ab5e3decdf44dcf0ca06d",
          "sha256": "0065c059d901a155f99e532ff126ed58abfe27d27b9ab5e3decdf44dcf0ca06d"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jump/blobs/sha256:aa81693c6c5fe052474ea740a8e49610aea0f2a1fdfd319e9b4333ad17bda82f",
          "sha256": "aa81693c6c5fe052474ea740a8e49610aea0f2a1fdfd319e9b4333ad17bda82f"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/jump.rb",
  "ruby_source_checksum": {
    "sha256": "ed57f4bdbd1aa2fc56257dc662f6f00db3f47158a38a887dc27e5a0fcaffcde7"
  },
  "date_added": "2016-01-17T22:00:53+00:00",
  "readme": "<p align=\"right\">\n  <a href=\"https://github.com/gsamokovarov/jump/releases\">[releases]</a>\n</p>\n\n**Jump** integrates with your shell and learns about your navigational habits by\nkeeping track of the directories you visit. It gives you the most visited\ndirectory for the shortest search term you type.\n\n![Demo](./assets/demo.svg)\n\n## Installation\n\nJump comes in packages for the following platforms.\n\n| Platform | Command |\n| --- | --- |\n| macOS | `brew install jump` or `port install jump` |\n| Linux | `sudo snap install jump` |\n| Nix | `nix-env -iA nixpkgs.jump` |\n| Go | `go install github.com/gsamokovarov/jump@latest` |\n\n<details>\n<summary>Linux distribution specific packages</summary>\n\n| Distribution | Command |\n| --- | --- |\n| Void | `xbps-install -S jump` |\n| Ubuntu | `wget https://github.com/gsamokovarov/jump/releases/download/v0.51.0/jump_0.51.0_amd64.deb && sudo dpkg -i jump_0.51.0_amd64.deb` |\n| Debian | `wget https://github.com/gsamokovarov/jump/releases/download/v0.51.0/jump_0.51.0_amd64.deb && sudo dpkg -i jump_0.51.0_amd64.deb` |\n| Fedora | `wget https://github.com/gsamokovarov/jump/releases/download/v0.51.0/jump-0.51.0-1.x86_64.rpm && sudo rpm -i jump-0.51.0-1.x86_64.rpm` |\n\n</details>\n\n### Integration\n\nYou are using Jump through its shell helper function, `j`. To get it, you have\nto integrate Jump with your shell.\n\n#### bash / zsh\n\nAdd the line below in `~/.bashrc`, `~/bash_profile` or `~/.zshrc`:\n\n```bash\neval \"$(jump shell)\"\n```\n\n#### fish\n\nAdd the line below in `~/.config/fish/config.fish`:\n\n```\njump shell fish | source\n```\n\n#### PowerShell\n\nAdd the line below needs to your profile, located by typing `$PROFILE`:\n\n```\nInvoke-Expression (&jump shell pwsh | Out-String)\n```\n\nOnce integrated, jump will automatically monitor directory changes and start\nbuilding an internal database.\n\n### But `j` is not my favourite letter!\n\nThis is fine, you can bind jump to `z` with the following integration command:\n\n```bash\neval \"$(jump shell --bind=z)\"\n```\n\nTyping `z dir` would just work! This is only an example, you can bind it to\n_anything_. If you are one of those persons that likes to type a lot with their\nfingers, you can do:\n\n```bash\neval \"$(jump shell --bind=goto)\"\n```\n\nVoila! `goto dir` becomes a thing. The possibilities are endless!\n\n## Usage\n\nOnce integrated, **jump** introduces the **j** helper. It accepts only search\nterms and as a design goal there are no arguments to **j**. Whatever you give\nit, it's treated as search term.\n\n**Jump** uses fuzzy matching to find the desired directory to jump to. This\nmeans that your search terms are patterns that match the desired directory\napproximately rather than exactly. Typing **2** to **5** consecutive characters\nof the directory name is all that **jump** needs to find it.\n\n### Regular jump\n\nThe default search behavior of **jump** is to fuzzy match the\ndirectory name of a score. The match is case insensitive.\n\nIf you visit the directory `/Users/genadi/Development/rails/web-console` often,\nyou can jump to it by:\n\n```bash\n$ j wc      # or...\n$ j webc    # or...\n$ j console # or...\n$ j b-c     # or...\n```\n\nUsing jump is all about saving key strokes. However, if you made the effort to\ntype a directory base name exactly, **jump** will try to find the exact match,\nrather than fuzzy search.\n\n```bash\n$ j web-console\n$ pwd\n/Users/genadi/Development/rails/web-console\n```\n\n### Deep jump\n\nGiven the following directories:\n\n```bash\n/Users/genadi/Development/society/website\n/Users/genadi/Development/chaos/website\n```\n\nTyping `j site` matches only the base names of the directories. The base name\nof `/Users/genadi/Development/society/website` is `website`, the same as the\nother absolute path above. The jump above will land on the most scrored path,\nwhich is the `society` one, however what if we wanted to land on the `chaos`\nwebsite?\n\n```bash\n$ j ch site\n$ pwd\n/Users/genadi/Development/chaos/website\n```\n\nThis instructs **jump** to look for a `site` match inside that is preceded by a\n`ch` match in the parent directory. The search is normalized only on the last\ntwo parts of the target paths. This will ensure a better match, because of the\nshorter path to fuzzy match on.\n\nThere are no depth limitations though and a jump to\n`/Users/genadi/Development/society/website` can look like:\n\n```bash\n$ j dev soc web\n$ pwd\n/Users/genadi/Development/society/website\n```\n\nIn fact, every space passed to `j` is converted to an OS separator. The last\nsearch term can be expressed as:\n\n```bash\n$ j dev/soc/web\n$ pwd\n/Users/genadi/Development/society/website\n```\n\n## Reverse jump\n\nBad jumps happen. Sometimes we're looking for a directory that doesn't have the\nbest score at the moment. Let's work with the following following jump database:\n\n```bash\n/Users/genadi/Development/society/website\n/Users/genadi/Development/chaos/website\n/Users/genadi/Development/hack/website\n```\n\nTyping `j web` would lead to:\n\n```bash\n$ j web\n$ pwd\n/Users/genadi/Development/society/website\n```\n\nIf we didn't expect this result, instead of another search term, typing **j**\nwithout any arguments will instruct **jump** to go the second best match.\n\n```bash\n$ j\n$ pwd\n/Users/genadi/Development/chaos/website\n```\n\n### Case sensitive jump\n\nTo trigger a case-sensitive search, use a term that has a capital letter.\n\n```bash\n$ j Dev\n$ pwd\n/Users/genadi/Development\n```\n\nThe jump will resolve to `/Users/genadi/Development` even if there is\n`/Users/genadi/Development/dev-tools` that scores better.\n\n## Is it like autojump or z?\n\nYes, it is! You can import your datafile from `autojump` or `z` with:\n\n```bash\n$ jump import\n```\n\nThis will try `z` first then `autojump`, so you can even combine all the\nentries from both tools.\n\nThe command is safe to run on pre-existing jump database, because if an entry\nexist in jump already, it won't be imported and it's score will remain\nunchanged. You can be explicit and choose to import `autojump` or `z` with:\n\n```bash\n$ jump import autojump\n$ jump import z\n```\n\nIf you want to know more about the difference between Jump, z, and autojump,\ncheck-out this Twitter [conversation].\n\n## Thanks! 🙌\n\nThank you for stopping by and showing your interest in Jump!\n\n[man]: http://gsamokovarov.com/jump\n[Go workspace]: https://golang.org/doc/code.html#Workspaces\n[conversation]: https://twitter.com/hkdobrev/status/838398833419767808"
}
