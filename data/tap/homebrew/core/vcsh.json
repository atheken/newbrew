{
  "name": "vcsh",
  "full_name": "vcsh",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Config manager based on git",
  "license": "GPL-2.0-or-later",
  "homepage": "https://github.com/RichiH/vcsh",
  "versions": {
    "stable": "2.0.5",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/RichiH/vcsh/releases/download/v2.0.5/vcsh-2.0.5.tar.xz",
      "tag": null,
      "revision": null,
      "checksum": "01d01ebe864fa8ee5c740f909f9fe9b89ef92612c578d4f42c8777bf987ac32d"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/vcsh/blobs/sha256:4136305027b39b6c5106a8b598437be2700f60fea9ba422f5f58b3eb99a02cba",
          "sha256": "4136305027b39b6c5106a8b598437be2700f60fea9ba422f5f58b3eb99a02cba"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/vcsh.rb",
  "ruby_source_checksum": {
    "sha256": "b1454b44c301943db93bc6363ec355d9135636dc43acad94231c4dc9d4dc5e93"
  },
  "date_added": "2013-02-06T21:30:28-08:00",
  "readme": "vcsh - Version Control System for $HOME - multiple Git repositories in $HOME\n\n[![Test Status](https://github.com/RichiH/vcsh/actions/workflows/test.yml/badge.svg)](https://github.com/RichiH/vcsh/actions/workflows/test.yml)\n\n# Index\n\n1. [30 Second How-to](#30-second-how-to)\n2. [Introduction](#introduction)\n3. [Installation](#installation)\n4. [Detailed documentation](#detailed-documentation)\n5. [Contact](#contact)\n\n\n# 30 Second How-to\n\nWhile it may appear that there's an overwhelming amount of documentation and\nwhile the explanation of the concepts behind `vcsh` needs to touch a few gory\ndetails of `git` internals, getting started with `vcsh` is extremely simple.\n\nLet's say you want to version control your `vim` configuration:\n\n    vcsh init vim\n    vcsh vim add ~/.vimrc ~/.vim\n    vcsh vim commit -m 'Initial commit of my Vim configuration'\n    # optionally push your files to a remote\n    vcsh vim remote add origin <remote>\n    vcsh vim push -u origin master\n    # from now on you can push additional commits like this\n    vcsh vim push\n\nIf all that looks a _lot_ like standard `git`, that's no coincidence; it's\na design feature.\n\n\n# Introduction\n\n[vcsh][vcsh] allows you to maintain several Git repositories in one single\ndirectory. They all maintain their working trees without clobbering each other\nor interfering otherwise. By default, all Git repositories maintained via\n`vcsh` store the actual files in `$HOME` but you can override this setting if\nyou want to.\n\nAll this means that you can have one repository per application or application\nfamily, i.e. `zsh`, `vim`, `ssh`, etc. This, in turn, allows you to clone\ncustom sets of configurations onto different machines or even for different\nusers; picking and mixing which configurations you want to use where.\nFor example, you may not need to have your `mplayer` configuration on a server\nor available to root and you may want to maintain different configuration for\n`ssh` on your personal and your work machines.\n\n## Talks\n\nSome people found it useful to look at [slides](https://github.com/RichiH/talks/blob/main/2013/10-linuxcon-eu/linuxcon_eu-2013-10-gitify_your_life.pdf) and videos explaining how `vcsh`\nworks instead of working through the docs.\nAll slides, videos, and further information can be found\n[on the author's talk page][talks].\n\n# Installation\n\nA lot of modern UNIX-based systems offer packages for `vcsh`. In case yours\ndoes not, read [INSTALL.md](doc/INSTALL.md) for instructions on installing from\nsources or even create a package for your system. If you do end up packaging\n`vcsh` please let us know so we can document package availability.\n\n# Detailed documentation\n\nFor more information, consult the [detailed documentation](doc/README.md).\n\n# Contact\n\nThere are several ways to get in touch with the author and a small but committed\ncommunity around the general idea of version controlling your (digital) life.\n\n* IRC: #vcs-home on irc.oftc.net\n\n* Mailing list: [http://lists.madduck.net/listinfo/vcs-home][vcs-home-list]\n\n* Pull requests or issues on [https://github.com/RichiH/vcsh][vcsh]\n\n\n[myrepos]: http://myrepos.branchable.com/\n[talks]: https://github.com/RichiH/talks\n[vcsh]: https://github.com/RichiH/vcsh\n[vcs-home-list]: http://lists.madduck.net/listinfo/vcs-home"
}
