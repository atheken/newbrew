{
  "name": "rtags",
  "full_name": "rtags",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Source code cross-referencer like ctags with a clang frontend",
  "license": "GPL-3.0-or-later",
  "homepage": "https://github.com/Andersbakken/rtags",
  "versions": {
    "stable": "2.40",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/Andersbakken/rtags.git",
      "tag": "v2.40",
      "revision": "8597d6d2adbe11570dab55629ef9a684304ec3cd",
      "checksum": null
    },
    "head": {
      "url": "https://github.com/Andersbakken/rtags.git",
      "branch": "master"
    }
  },
  "revision": 2,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/rtags/blobs/sha256:2ec2449f1dcf791262ee62099508bf16f3f5e8df47903d39c8f193c0964f82ae",
          "sha256": "2ec2449f1dcf791262ee62099508bf16f3f5e8df47903d39c8f193c0964f82ae"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/rtags/blobs/sha256:c0add9226d0f17dd7e5af52d971bfc2cc34fd8ac287e4d10f74ab58943707e0b",
          "sha256": "c0add9226d0f17dd7e5af52d971bfc2cc34fd8ac287e4d10f74ab58943707e0b"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/rtags/blobs/sha256:433d1b112af6c1ce683cb70e4db8bf88f3e44ec8751b6e661cf48f7b5f8fbb42",
          "sha256": "433d1b112af6c1ce683cb70e4db8bf88f3e44ec8751b6e661cf48f7b5f8fbb42"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/rtags/blobs/sha256:cc469412590ba876a5e613cbe8262af7288bde3afb390c2cf297c3267a0b3cab",
          "sha256": "cc469412590ba876a5e613cbe8262af7288bde3afb390c2cf297c3267a0b3cab"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/rtags/blobs/sha256:99dc03192ec0a84923f9bf8fe19ad3d1395726bceb0d49295dc1ecb9109f7146",
          "sha256": "99dc03192ec0a84923f9bf8fe19ad3d1395726bceb0d49295dc1ecb9109f7146"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/rtags/blobs/sha256:5f59e2fe69f4fb60cf4f5517908f80998553fa0b9de2f9b7536a5740e7fffddb",
          "sha256": "5f59e2fe69f4fb60cf4f5517908f80998553fa0b9de2f9b7536a5740e7fffddb"
        },
        "x86_64_linux": {
          "cellar": "/home/linuxbrew/.linuxbrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/rtags/blobs/sha256:829f4a0e89e3fd837f0baa3ca0ab05244c7705222d9e75a2b81f2349390d4d64",
          "sha256": "829f4a0e89e3fd837f0baa3ca0ab05244c7705222d9e75a2b81f2349390d4d64"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "emacs",
    "llvm",
    "openssl@3"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": {
    "run": [
      "/home/linuxbrew/.linuxbrew/opt/rtags/bin/rdm",
      "--verbose",
      "--inactivity-timeout=300"
    ],
    "run_type": "immediate",
    "keep_alive": {
      "always": true
    },
    "log_path": "/home/linuxbrew/.linuxbrew/var/log/rtags.log",
    "error_log_path": "/home/linuxbrew/.linuxbrew/var/log/rtags.log"
  },
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/rtags.rb",
  "ruby_source_checksum": {
    "sha256": "9f66cf1dea00ff7afcbaebd100cd22ac1285c00665b4a01ef2b19c39e80121bf"
  },
  "date_added": "2015-08-02T13:18:37+01:00",
  "readme": "#+OPTIONS: ^:nil\n\n#+html: <div align=\"center\"><a href=\"https://travis-ci.org/Andersbakken/rtags\"><img alt=\"MELPA\" src=\"https://travis-ci.org/Andersbakken/rtags.svg?branch=master\"/></a> <a href=\"https://www.gnu.org/licenses/gpl-3.0.txt\"><img alt=\"MELPA\" src=\"https://img.shields.io/badge/license-GPL%203-brightgreen.svg\"/></a></div>\n#+html: <div align=\"center\"><table align=\"center\" style=\"width:100%\"><tr><th>rtags</th></tr><tr><td align=\"center\"><a href=\"https://melpa.org/#/rtags\"><img alt=\"MELPA\" src=\"https://melpa.org/packages/rtags-badge.svg\"/></a></td></tr></table></div>\n#+html: <table align=\"center\" style=\"width:100%\"><tr><th>rtags-xref</th><th>ac-rtags</th><th>company-rtags</th><th>flycheck-rtags</th><th>helm-rtags</th><th>ivy-rtags</th></tr><tr><td align=\"center\"><a href=\"https://melpa.org/#/rtags-xref\"><img alt=\"MELPA\" src=\"https://melpa.org/packages/rtags-xref-badge.svg\"/></a></td><td align=\"center\"><a href=\"https://melpa.org/#/ac-rtags\"><img alt=\"MELPA\" src=\"https://melpa.org/packages/ac-rtags-badge.svg\"/></a></td><td align=\"center\"><a href=\"https://melpa.org/#/company-rtags\"><img alt=\"MELPA\" src=\"https://melpa.org/packages/company-rtags-badge.svg\"/></a></td><td align=\"center\"><a href=\"https://melpa.org/#/flycheck-rtags\"><img alt=\"MELPA\" src=\"https://melpa.org/packages/flycheck-rtags-badge.svg\"/></a></td><td align=\"center\"><a href=\"https://melpa.org/#/helm-rtags\"><img alt=\"MELPA\" src=\"https://melpa.org/packages/helm-rtags-badge.svg\"/></a></td><td align=\"center\"><a href=\"https://melpa.org/#/ivy-rtags\"><img alt=\"MELPA\" src=\"https://melpa.org/packages/ivy-rtags-badge.svg\"/></a></td></tr></table>\n\n* Introduction\nRTags is a client/server application that indexes C/C++ code and keeps a\npersistent file-based database of references, declarations, definitions,\nsymbolnames etc. There's also limited support for ObjC/ObjC++. It allows you\nto find symbols by name (including nested class and namespace scope). Most\nimportantly we give you proper follow-symbol and find-references support. We\nalso have neat little things like rename-symbol, integration with clang's\n\"fixits\" (https://clang.llvm.org/diagnostics.html). We also integrate with\nflymake using clang's vastly superior errors and warnings. Since RTags\nconstantly will reindex \"dirty\" files you get live updates of compiler errors\nand warnings. Since we already know how to compile your sources we have a way\nto quickly bring up the preprocessed output of the current source file in a\nbuffer.\n\nWhile existing taggers like gnu global, cscope, etags, ctags etc do a decent\njob for C they often fall a little bit short for C++. With its incredible\nlexical complexity, parsing C++ is an incredibly hard task and we make no\nbones about the fact that the only reason we are able to improve on the\ncurrent tools is because of clang (https://clang.llvm.org/). RTags is named\nRTags in recognition of Roberto Raggi on whose C++ parser we intended to base\nthis project but he assured us clang was the way to go. The name stuck\nthough.\n\nTarball releases are available here:\nhttps://github.com/Andersbakken/rtags/releases/\n\n* TLDR Quickstart\nWe assume you have something to generate a [[https://sarcasm.github.io/notes/dev/compilation-database.html][JSON Compilation Database]]\nfor your project. Your build system probably has a way to generate it,\nor you can look at something like [[https://github.com/rizsotto/Bear][Bear]].\n\nBuild RTags\n\n#+BEGIN_SRC sh\ngit clone --recursive https://github.com/Andersbakken/rtags.git\ncd rtags\ncmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .\nmake\n#+END_SRC\n\nStart the RTags daemon (=rdm=)\n\n#+BEGIN_SRC sh\n./bin/rdm &\n#+END_SRC\n\nIndex the RTags project, and wait until =rdm= is silent\n\n#+BEGIN_SRC sh\n./bin/rc -J .\n#+END_SRC\n\nOpen source file in =emacs=\n\n#+BEGIN_SRC sh\nemacs +74:34 src/rdm.cpp\n#+END_SRC\n\nLoad =rtags.el=\n\n#+BEGIN_EXAMPLE\nM-: (load-file \"rtags.el\") RET\n#+END_EXAMPLE\n\nEnsure =rc= can be found\n\n#+BEGIN_EXAMPLE\nM-x set-variable RET rtags-path RET \"../bin\" RET\n#+END_EXAMPLE\n\nCall =rtags-find-symbol-at-point=\n\n#+BEGIN_EXAMPLE\nM-x rtags-find-symbol-at-point RET\n#+END_EXAMPLE\n\nYour location is now on the definition of =Server::instance()=\n\n* Documentation\nThe documentation can be found in the [[https://github.com/Andersbakken/rtags/wiki][Wiki]].\n* Disclaimer\nRTags is still under development and is not the most stable piece of software\nyou'll ever find. We're constantly working to improve on it."
}
