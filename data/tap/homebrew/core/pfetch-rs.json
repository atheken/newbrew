{
  "name": "pfetch-rs",
  "full_name": "pfetch-rs",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Pretty system information tool written in Rust",
  "license": "MIT",
  "homepage": "https://github.com/Gobidev/pfetch-rs",
  "versions": {
    "stable": "2.8.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/Gobidev/pfetch-rs/archive/refs/tags/v2.8.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "5546d66fcd5b29526f2762c0a55b236be14573c1e9adee0425e425fd19b07411"
    },
    "head": {
      "url": "https://github.com/Gobidev/pfetch-rs.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pfetch-rs/blobs/sha256:e1fdb1dbe1230b64af06c2e620a03cd2f53413ab288f5dd8e954561ad466f95c",
          "sha256": "e1fdb1dbe1230b64af06c2e620a03cd2f53413ab288f5dd8e954561ad466f95c"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pfetch-rs/blobs/sha256:4d4866ff19fb0423a0ee1de124dd506f809a25eb3c982d861b2c0dd5b167cccb",
          "sha256": "4d4866ff19fb0423a0ee1de124dd506f809a25eb3c982d861b2c0dd5b167cccb"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pfetch-rs/blobs/sha256:66c49e16c55ece2d9e31eef29a1bc9b5343b4c4eb2c3690514c1cdb25a0926de",
          "sha256": "66c49e16c55ece2d9e31eef29a1bc9b5343b4c4eb2c3690514c1cdb25a0926de"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pfetch-rs/blobs/sha256:47e3f7ef56da69d6aef625a822aa177b817c8dcce4166bb715cc95bfd58df9b2",
          "sha256": "47e3f7ef56da69d6aef625a822aa177b817c8dcce4166bb715cc95bfd58df9b2"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pfetch-rs/blobs/sha256:073c0e7443a39b656ddddec860ae4daedb49fb5fd702ea46e9ccbe7f1d66eaf7",
          "sha256": "073c0e7443a39b656ddddec860ae4daedb49fb5fd702ea46e9ccbe7f1d66eaf7"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pfetch-rs/blobs/sha256:1906af7fefec5d4e35476b9a15ef06c1e8e93b06f03a7e2f9147d00f9e694226",
          "sha256": "1906af7fefec5d4e35476b9a15ef06c1e8e93b06f03a7e2f9147d00f9e694226"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pfetch-rs/blobs/sha256:8d69a7f85aa06f38ac3b17e129f7b0e9b19cf5710af92ecef123bca41028fd6c",
          "sha256": "8d69a7f85aa06f38ac3b17e129f7b0e9b19cf5710af92ecef123bca41028fd6c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/pfetch-rs.rb",
  "ruby_source_checksum": {
    "sha256": "0c9f7f85bcec67eb810f4a346578f5042d794b218c5f90ecbb969c4423695013"
  },
  "date_added": "2023-03-20T18:16:24+00:00",
  "readme": "<h1 align=\"center\">pfetch-rs</h1>\n<p align=\"center\">A rewrite of the pfetch system information tool by dylanaraps in Rust</p><br>\n<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/50576978/219375863-579c495d-8db8-4aa9-a4a6-348ecb2c849f.png\" width=\"350px\"></p>\n\n## About\n\nIf you are familiar with the [pfetch](https://github.com/dylanaraps/pfetch)\nsystem information tool by [dylanaraps](https://github.com/dylanaraps), this\ndoes the exact same thing, but with an about _10x faster_ runtime. _pfetch_ is\nsimple by design with some (but not many) configuration options and a\nminimalistic look.\n\n**Supported Platforms:** Linux, Android, macOS, Windows, FreeBSD, NetBSD\n\n**Included Logos:** Alma Linux _(new)_, Alpine Linux, Android, AmogOS _(new)_,\nArch Linux, ArcoLinux, Artix Linux, Bedrock Linux, Buildroot, CelOS, CentOS,\nCrystal Linux, dahliaOS, Debian, Devuan, DietPi _(new)_, DragonflyBSD,\nElementary OS, EndeavourOS, Fedora, Fiwix _(new)_, FreeBSD, Garuda Linux, Gentoo\nLinux, Gnu, Guix, Haiku, HydroOS, Hyperbola, instantOS, IRIX, KDE neon, Linux\nLite, Linux, Mint, macOS, Mageia, Manjaro, Minix, MorphOS _(new)_, MX Linux,\nNetBSD, NixOS, Nobara Project _(new)_, OpenBSD, openSUSE Tumbleweed, openSUSE\nLeap, OpenWrt, Oracle Linux _(new)_, Parabola, Pop!\\_OS _(updated)_, PureOS,\nRaspbian, Rocky Linux _(new)_, SerenityOS, Slackware, Solus, SteamOS _(new)_,\nSolaris, Ubuntu, Vanilla OS _(new)_, Void Linux, Windows _(new)_, Xeonix Linux\n\nFor all other distributions, a penguin will be displayed.\n\n_Credit to [the original pfetch](https://github.com/dylanaraps/pfetch) and\n[its contributors](https://github.com/dylanaraps/pfetch/graphs/contributors)._\n\nIf you want a logo to be added, feel free to open an issue or a PR.\n\n## Installation\n\n_Note: On openSUSE, install the `rpm-devel` package for faster package count._\n\n### Binary\n\nDownload a binary from the\n[latest release](https://github.com/Gobidev/pfetch-rs/releases/latest).\n\n### Cargo\n\n```sh\ncargo install pfetch\n```\n\n### Homebrew\n\n```sh\nbrew install pfetch-rs\n```\n\n### Nixpkgs\n\nInstall the [pfetch-rs](https://search.nixos.org/packages?channel=unstable&show=pfetch-rs) Nix package.\n\n### AUR\n\nInstall the [pfetch-rs](https://aur.archlinux.org/packages/pfetch-rs) or\n[pfetch-rs-bin](https://aur.archlinux.org/packages/pfetch-rs-bin) AUR package.\n\n## Performance\n\nBenchmarks performed on an AMD Ryzen 5 3600. Execution time is measured using\n[hyperfine](https://github.com/sharkdp/hyperfine) with `-w 4 -m 500 -N` flags.\n\n|  Implementation   | Mean [ms]  | Min [ms] | Max [ms] |\n| :---------------: | :--------: | :------: | :------: |\n| POSIX `sh` (bash) | 23.7 ± 0.9 |   22.3   |   29.3   |\n| POSIX `sh` (dash) | 15.9 ± 0.3 |   15.1   |   18.2   |\n|   Rust (v2.3.0)   | 2.2 ± 0.2  |   1.8    |   3.9    |\n\n_Note: This is with `pacman` and `flatpak` being the only installed package\nmanagers. For more info, see [Improving Performance](#imp_perf)._\n\n<a name=\"imp_perf\"></a>\n\n### Improving Performance\n\nThe by far slowest part of the `pfetch` execution time is counting the installed\npackages. For most package managers this is still very fast, but there are some\n(currently `nix` (and `zypper`, if `rpm-devel` is not installed)) that take\n~500ms to report installed packages, which takes away all performance benefits\nof the Rust version. If you have one or more of these installed, you can skip\ncounting them by setting the `PF_FAST_PKG_COUNT` environment variable to any\nvalue.\n\n## Configuration\n\nLike the original `pfetch`, `pfetch-rs` is configured through environment\nvariables. Your existing config will probably still work, the main difference is\nhow padding is configured.\n\nIf you want to display a custom logo, use the `PF_CUSTOM_LOGOS` option, an\nexample for a custom logos file can be found below.\n\n```sh\n# Which information to display.\n# Default: first example below\n# Valid: space separated string\n#\n# OFF by default: shell editor wm de palette cpu\nPF_INFO=\"ascii title os host kernel uptime pkgs memory\"\n\n# Example: Only ASCII.\nPF_INFO=\"ascii\"\n\n# Example: Only Information.\nPF_INFO=\"title os host kernel uptime pkgs memory\"\n\n# A file containing environment variables to source before running pfetch\n# Default: unset\n# Valid: A shell script\nPF_SOURCE=\"\"\n\n# A file containing pfetch logos to overwrite default logos or add new logos\n# Default: unset\n# Valid: Path to a file containing pfetch logos (example below)\nPF_CUSTOM_LOGOS=\"~/.config/pfetch_logos\"\n\n# Separator between info name and info data.\n# Default: unset\n# Valid: string\nPF_SEP=\":\"\n\n# Enable/Disable colors in output:\n# Default: 1\n# Valid: 1 (enabled), 0 (disabled)\nPF_COLOR=1\n\n# Color of info names:\n# Default: unset (auto)\n# Valid: 0-9\nPF_COL1=4\n\n# Color of info data:\n# Default: unset (auto)\n# Valid: 0-9\nPF_COL2=9\n\n# Color of title data:\n# Default: unset (auto)\n# Valid: 0-9, COL1 (copies COL1 value)\nPF_COL3=1\n\n# Alignment paddings (this is different to the original version).\n# Default: unset (auto)\n# Valid: int\nPF_PAD1=\"\"\nPF_PAD2=\"\"\nPF_PAD3=\"\"\n\n# Which ascii art to use.\n# Default: unset (auto)\n# Valid: string\nPF_ASCII=\"openbsd\"\n\n# The below environment variables control more\n# than just 'pfetch' and can be passed using\n# 'HOSTNAME=cool_pc pfetch' to restrict their\n# usage solely to 'pfetch'.\n\n# Which user to display.\nUSER=\"\"\n\n# Which hostname to display.\nHOSTNAME=\"\"\n\n# Skip package managers that take \"long\" to query package count (like nix)\nPF_FAST_PKG_COUNT=1\n```\n\nA file containing custom pfetch logos could look like this (also found under\n`custom_logos_example`). This will turn the Arch Linux logo red, the Debian Logo\nblue and the Fedora logo yellow:\n\n```\n[Aa]rch*)\n\tread_ascii 1 <<- EOF\n\t\t\t${c1}       /\\\\\n\t\t\t${c1}      /  \\\\\n\t\t\t${c1}     /\\\\   \\\\\n\t\t\t${c1}    /      \\\\\n\t\t\t${c1}   /   ,,   \\\\\n\t\t\t${c1}  /   |  |  -\\\\\n\t\t\t${c1} /_-''    ''-_\\\\\n\t\tEOF\n\t;;\n[Dd]ebian*)\n\tread_ascii 4 <<- EOF\n\t\t\t${c4}  _____\n\t\t\t${c4} /  __ \\\\\n\t\t\t${c4}|  /    |\n\t\t\t${c4}|  \\\\___-\n\t\t\t${c4}-_\n\t\t\t${c4}  --_\n\t\tEOF\n\t;;\n[Ff]edora*)\n    read_ascii 3 <<- EOF\n\t\t\t        ${c3},'''''.\n\t\t\t       ${c3}|   ,.  |\n\t\t\t       ${c3}|  |  '_'\n\t\t\t${c3}  ,....|  |..\n\t\t\t${c3}.'  ,_;|   ..'\n\t\t\t${c3}|  |   |  |\n\t\t\t${c3}|  ',_,'  |\n\t\t\t${c3} '.     ,'\n\t\t\t   ${c3}'''''\n\t\tEOF\n```\n\n_Note: Make sure to use tabs for indentation and separate logos with `;;`, as\nseen above. You only need to add the logos you want to overwrite/add, the\ndefault logos will stay available. The included logos can be found at\n`./pfetch-extractor/logos.sh`._"
}
