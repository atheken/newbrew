{
  "name": "create-dmg",
  "full_name": "create-dmg",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Shell script to build fancy DMGs",
  "license": "MIT",
  "homepage": "https://github.com/create-dmg/create-dmg",
  "versions": {
    "stable": "1.1.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/create-dmg/create-dmg/archive/v1.1.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d50e14a00b73a3f040732b4cfa11361f5786521719059ce2dfcccd9088d3bf32"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/create-dmg/blobs/sha256:d5e0bef6c032eb5a47e84887ac1f04e48441f9056144169a2bfdf32e94adf4a3",
          "sha256": "d5e0bef6c032eb5a47e84887ac1f04e48441f9056144169a2bfdf32e94adf4a3"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/create-dmg.rb",
  "ruby_source_checksum": {
    "sha256": "b4f9644e7d1580769d3bc59410cabbe672e3c0bb847a8b4c69822e11743febbe"
  },
  "date_added": "2018-10-20T11:41:33+02:00",
  "readme": "create-dmg\n==========\n\nA shell script to build fancy DMGs.\n\nStatus and contribution policy\n------------------------------\n\nCreate-dmg is mostly maintained by [@aonez](https://github.com/aonez) and the contributors who send pull requests.\nThe project home page is <https://github.com/create-dmg/create-dmg>.\n\nWe will merge any pull request that adds something useful and does not break existing things.\n\nIf you're an active user and want to be a maintainer, or just want to chat, please ping us on Gitter at [gitter.im/create-dmg/Lobby](https://gitter.im/create-dmg/Lobby), or [email Andrew directly](floss@apjanke.net).\n\nCreate-dmg was originally created by [Andrey Tarantsov](https://github.com/andreyvit).\nIn May 2020 [Andrew Janke](https://github.com/apjanke) helped vastly with the project.\n\nInstallation\n------------\n\n- You can install this script using [Homebrew](https://brew.sh):\n\n  ```sh\n  brew install create-dmg\n  ```\n\n- You can download the [latest release](https://github.com/create-dmg/create-dmg/releases/latest) and install it from there:\n\n  ```sh\n  make install\n  ```\n\n- You can also clone the entire repository and run it locally from there:\n\n  ```sh\n  git clone https://github.com/create-dmg/create-dmg.git\n  ```\n\nUsage\n-----\n\n```sh\ncreate-dmg [options ...] <output_name.dmg> <source_folder>\n```\n\nAll contents of source\\_folder will be copied into the disk image.\n\n**Options:**\n\n- **--volname \\<name\\>:** set volume name (displayed in the Finder sidebar and window title)\n- **--volicon \\<icon.icns\\>:** set volume icon\n- **--background \\<pic.png\\>:** set folder background image (provide png, gif, jpg)\n- **--window-pos \\<x\\> \\<y\\>:** set position the folder window\n- **--window-size \\<width\\> \\<height\\>:** set size of the folder window\n- **--text-size \\<text_size\\>:** set window text size (10-16)\n- **--icon-size \\<icon_size\\>:** set window icons size (up to 128)\n- **--icon \\<file_name\\> \\<x\\> \\<y\\>:** set position of the file's icon\n- **--hide-extension \\<file_name\\>:** hide the extension of file\n- **--custom-icon \\<file_name|custom_icon|sample_file\\> \\<x\\> \\<y\\>:** set position and -tom icon\n- **--app-drop-link \\<x\\> \\<y\\>:** make a drop link to Applications, at location x, y\n- **--ql-drop-link \\<x\\> \\<y\\>:** make a drop link to /Library/QuickLook, at location x, y\n- **--eula \\<eula_file\\>:** attach a license file to the dmg\n- **--rez \\<rez_path\\>:** specify custom path to Rez tool used to include license file\n- **--no-internet-enable:** disable automatic mount&copy\n- **--format:** specify the final image format (UDZO|UDBZ|ULFO|ULMO) (default is UDZO)\n- **--filesystem:** specify the image filesystem (HFS+|APFS) (default is HFS+, APFS supports macOS 10.13 or newer)\n- **--add-file \\<target_name\\> \\<file|folder\\> \\<x\\> \\<y\\>:** add additional file or folder (can be used multiple times)\n- **--disk-image-size \\<x\\>:** set the disk image size manually to x MB\n- **--hdiutil-verbose:** execute hdiutil in verbose mode\n- **--hdiutil-quiet:** execute hdiutil in quiet mode\n- **--bless:** bless the mount folder (deprecated, needs macOS 12.2.1 or older, [#127](https://github.com/create-dmg/create-dmg/pull/127))\n- **--codesign \\<signature\\>:** codesign the disk image with the specified signature\n- **--notarize \\<credentials>:** notarize the disk image (waits and staples) with the keychain stored credentials\n    For more information check [Apple's documentation](https://developer.apple.com/documentation/security/notarizing_macos_software_before_distribution/customizing_the_notarization_workflow)\n- **--skip-jenkins:** skip Finder-prettifying AppleScript, useful in Sandbox and non-GUI environments, [#72](https://github.com/create-dmg/create-dmg/pull/72)\n- **--sandbox-safe:** hdiutil with sandbox compatibility, do not bless and do not execute the cosmetic AppleScript (not supported for APFS disk images)\n- **--version:** show tool version number\n- **-h, --help:** display the help\n\nExample\n-------\n\n```sh\n#!/bin/sh\ntest -f Application-Installer.dmg && rm Application-Installer.dmg\ncreate-dmg \\\n  --volname \"Application Installer\" \\\n  --volicon \"application_icon.icns\" \\\n  --background \"installer_background.png\" \\\n  --window-pos 200 120 \\\n  --window-size 800 400 \\\n  --icon-size 100 \\\n  --icon \"Application.app\" 200 190 \\\n  --hide-extension \"Application.app\" \\\n  --app-drop-link 600 185 \\\n  \"Application-Installer.dmg\" \\\n  \"source_folder/\"\n```\n\nSee the `examples` folder in the source tree for more examples.\n\nRequirements\n------------\n\nNothing except a standard installation of macOS/OS X is required.\n\nWe think this works in OS X 10.6 Snow Leopard and later.\n\nWe'd like to keep it working in as many versions as possible, but unfortunately, we just don't have test boxes running old versions of OS X adequate to make this happen. Development and testing mostly happens in the last 3-5 years' worth of macOS releases; as of 2020, this means macOS 10.12 and later.\n\nBut if you find a bug in an older version, go ahead and report it! We'll try to work with you to get it fixed.\n\nIf you're running OS X 10.5 or later, you're SOL. That's just too hard to deal with in 2020. ;)\n\nAlternatives\n------------\n\n- [node-appdmg](https://github.com/LinusU/node-appdmg)\n- [dmgbuild](https://pypi.python.org/pypi/dmgbuild)\n- see the [StackOverflow question](http://stackoverflow.com/questions/96882/how-do-i-create-a-nice-looking-dmg-for-mac-os-x-using-command-line-tools)"
}
