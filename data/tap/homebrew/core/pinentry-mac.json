{
  "name": "pinentry-mac",
  "full_name": "pinentry-mac",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Pinentry for GPG on Mac",
  "license": "GPL-2.0-or-later and GPL-3.0-or-later",
  "homepage": "https://github.com/GPGTools/pinentry",
  "versions": {
    "stable": "1.1.1.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/GPGTools/pinentry/archive/v1.1.1.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "1a414f2e172cf8c18a121e60813413f27aedde891c5955151fbf8d50c46a9098"
    },
    "head": {
      "url": "https://github.com/GPGTools/pinentry.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pinentry-mac/blobs/sha256:d074ebc5a9f85840c133efb2a023188d624f8f67b4111a32af645fcfbb4cef3c",
          "sha256": "d074ebc5a9f85840c133efb2a023188d624f8f67b4111a32af645fcfbb4cef3c"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pinentry-mac/blobs/sha256:7ebbe0d43dcdf88c28e7df80ddb21ca669968107beaf7dd224efc461cc25474b",
          "sha256": "7ebbe0d43dcdf88c28e7df80ddb21ca669968107beaf7dd224efc461cc25474b"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pinentry-mac/blobs/sha256:64958e3763e548e154a485382fdab8525e7df237c9198ce5b60e4966ba91fc41",
          "sha256": "64958e3763e548e154a485382fdab8525e7df237c9198ce5b60e4966ba91fc41"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pinentry-mac/blobs/sha256:b6bfaa395a1f59e0be3d481ac10cd33a287d68de10db2f87d014902d510a3718",
          "sha256": "b6bfaa395a1f59e0be3d481ac10cd33a287d68de10db2f87d014902d510a3718"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pinentry-mac/blobs/sha256:3951ca662de62018c9a82921a29f9a06989f0efe25f68c84107c12f3a485be88",
          "sha256": "3951ca662de62018c9a82921a29f9a06989f0efe25f68c84107c12f3a485be88"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pinentry-mac/blobs/sha256:44b9e026ae382505ac98e01aca3d97727deff1dc57e7a15e6aae08371142439c",
          "sha256": "44b9e026ae382505ac98e01aca3d97727deff1dc57e7a15e6aae08371142439c"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pinentry-mac/blobs/sha256:2957715c9a914da6774f4f28523962aa512eb89858aae57a35bc299d2458932c",
          "sha256": "2957715c9a914da6774f4f28523962aa512eb89858aae57a35bc299d2458932c"
        },
        "mojave": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pinentry-mac/blobs/sha256:e7a94a9c022f0996b24ff4da4b9e5cee34cf681a8571320b0f49e129d6fde8e0",
          "sha256": "e7a94a9c022f0996b24ff4da4b9e5cee34cf681a8571320b0f49e129d6fde8e0"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "autoconf",
    "automake",
    "libtool"
  ],
  "dependencies": [
    "gettext",
    "libassuan"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "xcode",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [
        "build"
      ],
      "specs": [
        "stable",
        "head"
      ]
    },
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": "You can now set this as your pinentry program like\n\n~/.gnupg/gpg-agent.conf\n    pinentry-program $HOMEBREW_PREFIX/bin/pinentry-mac\n",
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/pinentry-mac.rb",
  "ruby_source_checksum": {
    "sha256": "492d95c5dab1db7528ab4ef5db439bb508cdd5bb104dfe6f7f660661684f8f73"
  },
  "date_added": "2014-10-22T19:45:58-05:00",
  "readme": "PINEntry\n---------\n\nThis is a collection of PIN or passphrase entry dialogs which\nutilize the Assuan protocol as specified in the Libassuan manual.\n\nThere are programs for different toolkits available.  For all GUIs it\nis automatically detected which modules can be built, but it can also\nbe requested explicitly.\n\nGUI\t\tOPTION\t\t\t DEPENDENCIES\n--------------------------------------------------------------------------\nGTK+ V2.0\t--enable-pinentry-gtk2\t Gimp Toolkit Library, Version 2.0\n\t\t\t\t\t eg. libgtk-x11-2.0 and libglib-2.0\nGNOME           --enable-pinentry-gnome  GNOME\nQt\t\t--enable-pinentry-qt\t Qt (> 4.4.0)\nTQt\t\t--enable-pinentry-tqt\t Trinity Qt\nEnlightenment\t--enable-pinentry-efl\t EFL (>= 1.18)\nFLTK\t\t--enable-pinentry-fltk\t Fast Light Toolkit (>= 1.3)\nCurses\t\t--enable-pinentry-curses Curses library, for example ncurses\nTTY\t\t--enable-pinentry-tty\t Simple TTY version, no dependencies\n\nThe GTK+, GNOME, and Qt pinentries can fall back to curses mode.  The\noption to enable this is --enable-fallback-curses, but this is also\ndetected automatically in the same way --enable-pinentry-curses is.\nThe fallback to curses also works if --disable-pinentry-curses is\nspecified.  So to disable linking to curses completely you have to\npass --disable-fallback-curses to the configure script as well.\n\nExamples:\n* To only build the GTK+ pinentry with curses support:\n./configure --enable-pinentry-gtk2 --enable-fallback-curses \\\n\t--disable-pinentry-curses --disable-pinentry-qt\n\n* To build the Qt pinentry, and the other pinentries if they are\n  supported:\n./configure --enable-pinentry-qt\n\n* To build everything that is supported (complete auto-detection):\n./configure\n\nSome of the code is taken from Robert Bihlmeyer's Quintuple-Agent.\nFor security reasons, all internationalization has been removed.  The\nclient is expected to tell the PIN entry the text strings to be\ndisplayed.\n\n\nCurses Pinentry\n---------------\n\nThe curses pinentry supports colors if the terminal does.  The colors\ncan be specified by the --colors=FG,BG,SO option, which sets the\nforeground, background and standout colors respectively.  The standout\ncolor is used for error messages.  Colors can be named by any of\n\"black\", \"red\", \"green\", \"yellow\", \"blue\", \"magenta\", \"cyan\" and\n\"white\".  The foreground and standout color can be prefixed by\n\"bright-\", \"bright\", \"bold-\" and \"bold\", and any of these prefixes has\nthe same effect of making the color bolder or brighter.  Two special\ncolor names are defined as well: \"default\" chooses the default color,\nand \"none\" disables use of colors.  The name \"none\" is only meaningful\nfor the standout color and in this case a reversed effect is used for\nerror messages.  For the other colors, disabling colors means the same\nas using the defaults.  The default colors are as follows:\n\n\tForeground:\tTerminal default\n\tBackground:\tTerminal default\n\tStandout:\tBright red\n\nNote that color support is limited by the capabilities of the display\nterminal.  Some color combinations can be very difficult to read, and\nplease know that colors are perceived differently by different people."
}
