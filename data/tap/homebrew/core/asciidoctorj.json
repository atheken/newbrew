{
  "name": "asciidoctorj",
  "full_name": "asciidoctorj",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Java wrapper and bindings for Asciidoctor",
  "license": "Apache-2.0",
  "homepage": "https://github.com/asciidoctor/asciidoctorj",
  "versions": {
    "stable": "2.5.10",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctorj/2.5.10/asciidoctorj-2.5.10-bin.zip",
      "tag": null,
      "revision": null,
      "checksum": "292db5e831192982ce485d1a1ffa37590b17d5e3757f11052145f07b6d1161bd"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/asciidoctorj/blobs/sha256:902df3c34d2131f33bf18a26999e4e05b4700a8bb0224921ef06f9f583503774",
          "sha256": "902df3c34d2131f33bf18a26999e4e05b4700a8bb0224921ef06f9f583503774"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "openjdk"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/asciidoctorj.rb",
  "ruby_source_checksum": {
    "sha256": "c6cbacae9488a4fc4cb83171b3367d1c625b92309decf3490cb13dfe3f0cee77"
  },
  "date_added": "2017-10-17T21:28:32-04:00",
  "readme": "= AsciidoctorJ: Java bindings for Asciidoctor\nAlex Soto <https://github.com/lordofthejars[@lordofthejars]>; Dan Allen <https://github.com/mojavelinux[@mojavelinux]>; Robert Panzer <https://github.com/robertpanzer[@robertpanzer]>\n// Settings:\n:compat-mode!:\n:page-layout: base\n:toc: macro\n:toclevels: 2\nifdef::awestruct[:toclevels: 1]\n:experimental:\n//:table-caption!:\n:source-language: java\n:language: {source-language}\nifndef::env-github[:icons: font]\nifdef::env-github[]\n:badges:\n:!toc-title:\n:caution-caption: :fire:\n:important-caption: :exclamation:\n:note-caption: :paperclip:\n:tip-caption: :bulb:\n:warning-caption: :warning:\nendif::[]\n// Aliases:\n:dagger: &#8224;\n// URIs:\nifdef::awestruct[:uri-docs: link:/docs]\nifndef::awestruct[:uri-docs: https://asciidoctor.org/docs]\n:uri-asciidoctor: {uri-docs}/what-is-asciidoctor\n:uri-repo: https://github.com/asciidoctor/asciidoctorj\n:uri-issues: {uri-repo}/issues\n:uri-zulip: https://asciidoctor.zulipchat.com/\n:artifact-version: 2.5.7\n:asciidoctorj-epub3-version: 1.5.1\n:asciidoctorj-pdf-version: 1.6.2\n:uri-maven-artifact-query: http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.asciidoctor%22%20AND%20a%3A%22asciidoctorj%22%20AND%20v%3A%22{artifact-version}%22\n:uri-maven-artifact-detail: http://search.maven.org/#artifactdetails%7Corg.asciidoctor%7Casciidoctorj%7C{artifact-version}%7Cjar\n:uri-maven-artifact-file: http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctorj/{artifact-version}/asciidoctorj-{artifact-version}\n:uri-maven-artifact-api-query: http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.asciidoctor%22%20AND%20a%3A%22asciidoctorj-api%22%20AND%20v%3A%22{artifact-version}%22\n:uri-maven-artifact-api-detail: http://search.maven.org/#artifactdetails%7Corg.asciidoctor%7Casciidoctorj-api%7C{artifact-version}%7Cjar\n:uri-maven-artifact-api-file: http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctorj-api/{artifact-version}/asciidoctorj-api-{artifact-version}\n:uri-maven-guide: {uri-docs}/install-and-use-asciidoctor-maven-plugin\n:uri-gradle-guide: {uri-docs}/install-and-use-asciidoctor-gradle-plugin\n:uri-tilt: https://github.com/rtomayko/tilt\n:uri-font-awesome: http://fortawesome.github.io/Font-Awesome\n:uri-gradle: https://gradle.org\n:uri-chocolatey: https://chocolatey.org\n\n{uri-repo}[AsciidoctorJ] is the official library for running {uri-asciidoctor}[Asciidoctor] on the JVM.\nUsing AsciidoctorJ, you can convert AsciiDoc content or analyze the structure of a parsed AsciiDoc document from Java and other JVM languages.\n\nYou can find the documentation for integrating Asciidoctor in your JVM based language of choice at the https://docs.asciidoctor.org/asciidoctorj/latest/[Asciidoctor Docs site].\n\nifdef::badges[]\nimage:https://github.com/asciidoctor/asciidoctorj/workflows/Build%20Main/badge.svg?event=push[Build Status (Github Actions)]\nimage:https://img.shields.io/badge/zulip-join_chat-brightgreen.svg[project chat,link=https://asciidoctor.zulipchat.com/]\nendif::[]\n\nifdef::awestruct,env-browser[]\ntoc::[]\nendif::[]\n\n== Distribution\n\nAsciidoctorJ is published to Maven Central.\nThe artifact information can be found in the tables below.\n\n[cols=\"2,2,^2,4\"]\n.Artifact information for AsciidoctorJ in Maven Central\n|===\n|Group Id |Artifact Id |Version |Download\n\n|org.asciidoctor\n|{uri-maven-artifact-query}[asciidoctorj]\n|{uri-maven-artifact-detail}[{artifact-version}]\n|{uri-maven-artifact-file}.pom[pom] {uri-maven-artifact-file}.jar[jar] {uri-maven-artifact-file}-javadoc.jar[javadoc (jar)] {uri-maven-artifact-file}-sources.jar[sources (jar)] distribution ({uri-maven-artifact-file}-bin.zip[zip] {uri-maven-artifact-file}-bin.tar[tar])\n\n|org.asciidoctor\n|{uri-maven-artifact-api-query}[asciidoctorj-api]\n|{uri-maven-artifact-api-detail}[{artifact-version}]\n|{uri-maven-artifact-api-file}.pom[pom] {uri-maven-artifact-api-file}.jar[jar] {uri-maven-artifact-api-file}-javadoc.jar[javadoc (jar)] {uri-maven-artifact-api-file}-sources.jar[sources (jar)]\n\n|org.asciidoctor\n|asciidoctorj-epub3\n|{asciidoctorj-epub3-version}\n|{empty}\n\n|org.asciidoctor\n|asciidoctorj-pdf\n|{asciidoctorj-pdf-version}\n|{empty}\n|===\n\nCAUTION: The artifactId changed to `asciidoctorj` starting in 1.5.0.\n\n== Quick win: using the command line interface\n\nIf you download from a distribution link above (zip or tar), you can get started straight away from the command line.\n\nFirst, expand the downloaded file. That puts everything in directory `asciidoctorj-{artifact-version}`.\nWithin that directory are `bin` and `lib` directories.  `bin` contains the executables -- `asciidoctorj` for\nLinux and macOS, and `asciidoctorj.bat` for Windows.  `lib` contains the supporting libraries.\n\nVerify the application runs by specifying the appropriate executable with no parameters;\nit should display the various run options available (i.e., help).\n\n[source]\n[subs=\"specialcharacters,attributes,callouts\"]\n----\nLinux: asciidoctorj-{artifact-version}/bin/asciidoctorj\nWindows: asciidoctorj-{artifact-version}\\bin\\asciidoctorj.bat\n----\n\nNext, say you want to convert an ASCIIDOC (.adoc) file -- such as this README -- to a pdf.\n\n[source]\n[subs=\"specialcharacters,attributes,callouts\"]\n----\nLinux: asciidoctorj-{artifact-version}/bin/asciidoctorj -b pdf README.adoc\nWindows: asciidoctorj-{artifact-version}\\bin\\asciidoctorj.bat -b pdf README.adoc\n----\n\nBoom! That should convert the README to a PDF named README.pdf.\nTo create a PDF with a different name -- say, READTHIS.pdf -- just add the -o switch:\n\n[source]\n[subs=\"specialcharacters,attributes,callouts\"]\n----\nLinux: asciidoctorj-{artifact-version}/bin/asciidoctorj -b pdf -o READTHIS.pdf README.adoc\nWindows: asciidoctorj-{artifact-version}\\bin\\asciidoctorj.bat -b pdf -o READTHIS.pdf README.adoc\n----\n\nThe rest of the document addresses the asciidoctorj API, for doing more complex conversions\nfrom within a JVM-based application.\n\n== Installation\n\nTo start using AsciidoctorJ, you need to add the required dependency to the dependency management system of your choice, Maven, Gradle or Apache Ivy.\nIf you don't use a Dependency Management system please check the dependency graph and add all jars in it to your classpath.\n\n// SW: Need functional tests for a java maven project and a java gradle project\n\n[source,xml]\n[subs=\"specialcharacters,attributes,callouts\"]\n.Declaring the dependency in a Maven build file (i.e., pom.xml)\n----\n<dependencies>\n  <dependency>\n    <groupId>org.asciidoctor</groupId>\n    <artifactId>asciidoctorj</artifactId>\n    <version>{artifact-version}</version> <!--1-->\n  </dependency>\n</dependencies>\n----\n\n[source,groovy]\n[subs=\"specialcharacters,attributes,callouts\"]\n.Declaring the dependency in a Gradle build file (e.g., build.gradle)\n----\ndependencies {\n  compile 'org.asciidoctor:asciidoctorj:{artifact-version}'\n}\n----\n\n[source,scala]\n[subs=\"specialcharacters,attributes,callouts\"]\n.Declaring the dependency in an SBT build file (e.g., build.sbt)\n----\nlibraryDependencies += \"org.asciidoctor\" % \"asciidoctorj\" % \"{artifact-version}\" // <1>\n----\n\n<1> Specifying the version of AsciidoctorJ implicitly selects the version of Asciidoctor\n\n[source,clojure]\n[subs=\"specialcharacters,attributes,callouts\"]\n.Declaring the dependency in a Leiningen build file (e.g., project.clj)\n----\n:dependencies [[org.asciidoctor/asciidoctorj \"{artifact-version}\"]]\n----\n\n// DA: Should we mention how to download if you just want to use the asciidoctorj command?\n\n[TIP]\n====\nIn addition to using AsciidoctorJ directly, you can invoke it as part of your build using the Maven or Gradle plugin.\n\n- {uri-maven-guide}[How to Install and Use the Asciidoctor Maven Plugin]\n- {uri-gradle-guide}[How to Install and Use the Asciidoctor Gradle Plugin]\n====\n\n[NOTE]\nThe versions of Asciidoctor and AsciidoctorJ no longer align since version 1.6.0 of AsciidoctorJ.\nPlease check the corresponding release notes to find out which version of Asciidoctor is packaged if you are embedding the library.\nIf you use the distribution you can call `asciidoctorj --version` to get the version of Asciidoctor that is embedded in AsciidoctorJ.\n\n\n=== Windows Installation\n\nA {uri-chocolatey}[Chocolatey] package is available which installs the\nasciidoctorj-{artifact-version}-bin.zip Maven artifact along with a\nbinary shim in %ChocolateyInstall%\\bin which lets you run AsciidoctorJ\nfrom the command line.\n\n----\nC:\\> choco install asciidoctorj\nC:\\> where asciidoctorj\nC:\\ProgramData\\chocolatey\\bin\\asciidoctorj.exe\nC:\\> asciidoctorj -b pdf README.adoc\n----\n\n== Using a pre-release version\n\nPre-release versions of `AsciidoctorJ` are published to oss.sonatype.org.\nThe exact location of the repository will be announced.\nFinal releases are released to both Maven Central.\n\nHere's how to use a pre-release version in Maven:\n\n[source, xml]\n----\n    <repositories>\n        <repository>\n            <id>staging</id>\n            <url>https://oss.sonatype.org/content/repositories/orgasciidoctor-1234</url> <!--1-->\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n        </repository>\n    </repositories>\n----\n<1> The exact URL differs for every build\n\n== Using a snapshot version\n\nSnapshot versions will be published to https://oss.jfrog.org.\nTo use a snapshot version of the the AsciidoctorJ library add this repository to your project:\n\n[source,xml]\n----\n<repositories>\n    <repository>\n        <id>snapshots</id>\n        <snapshots>\n            <enabled>true</enabled>\n        </snapshots>\n        <releases>\n            <enabled>false</enabled>\n        </releases>\n        <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n    </repository>\n</repositories>\n----\n\nIf you build your project using {uri-gradle}[Gradle] add the repository like this to your build:\n\n[source,groovy]\n----\nrepositories {\n    maven {\n        url 'https://oss.sonatype.org/content/repositories/snapshots/'\n    }\n}\n----\n\n\n== Development\n\nAsciidoctorJ is built using {uri-gradle}[Gradle].\nThe project is structured as a multi-module build.\n\n=== Project layout\n\nThe root folder is the root project and there are several subproject folders, each prefixed with _asciidoctorj-_.\nEach subproject produces a primary artifact (e.g., jar or zip) and its supporting artifacts (e.g., javadoc, sources, etc).\n\nThe subprojects are as follows:\n\nasciidoctorj-api::\n  The common API for AsciidoctorJ.\n  Other implementations for different platforms than JRuby may reuse and implement this API.\n  Produces the asciidoctorj-api.jar\n\nasciidoctorj::\n  The main Java bindings for the Asciidoctor RubyGem (asciidoctor) running on JRuby.\n  Also bundles optional RubyGems needed at runtime, such as coderay, tilt, haml and slim.\n  Produces the asciidoctorj jar.\n\nasciidoctorj-cli::\n  `asciidoctorj` command Java components.\n  Produces the asciidoctorj-cli.\n\nasciidoctorj-distribution::\n  Produces the distribution zip that provides the standalone `asciidoctorj` command including Java components,\n  launch scripts and required libraries.\n\nasciidoctorj-arquillian-extension::\n  Bundles an Arquillian extension that allows to inject an Asciidoctor instance or other instances commonly used by Asciidoctor tests into a test case.\n\nasciidoctorj-test-support::\n  Contains some common test classes that are used by multiple other subprojects and the Arquillian extension.\n\nThe Gradle build is partitioned into the following files:\n\n....\nbuild.gradle\ngradle.properties\nsettings.gradle\ngradle/\n  wrapper/\n    ...\n  eclipse.gradle\n  providedConfiguration.gradle\n  publish.gradle\n  sign.gradle\nasciidoctorj-arquillian-extension/\n  build.gradle\nasciidoctorj-api/\n  build.gradle\nasciidoctorj-cli/\n  build.gradle\nasciidoctorj-core/\n  build.gradle\nasciidoctorj-distribution/\n  build.gradle\nasciidoctorj-test-support/\n  build.gradle\n....\n\n=== Build the project\n\nYou invoke Gradle on this project using the `gradlew` command (i.e., the Gradle Wrapper).\n\nTIP: We strongly recommend that you use Gradle via the https://www.timroes.de/2013/09/12/speed-up-gradle[Gradle daemon].\n\nTo clone the project, compile the source and build the artifacts (i.e., jars) locally, run:\n\n $ git clone https://github.com/asciidoctor/asciidoctorj\n   cd asciidoctorj\n   ./gradlew assemble\n\nYou can find the built artifacts in the [path]_asciidoctorj-*/build/libs_ folders.\n\nTo execute tests when running the build, use:\n\n $ ./gradlew build\n\nTo only execute the tests, run:\n\n $ ./gradlew check\n\nYou can also run tests for a single module:\n\n $ cd asciidoctorj-core\n   ../gradlew check\n\nTo run a single test in the asciidoctorj-core subproject, use:\n\n $ ../gradlew -Dsingle.test=NameOfTestClass test\n\nTo create the distribution, run:\n\n $ ./gradlew distZip\n\nYou can find the distribution in the [path]_asciidoctorj-distribution/build/distributions_ folder.\n\n=== Develop in an IDE\n\n==== IntelliJ IDEA\n\nTo import the project into IntelliJ IDEA 14, simply import the project using the import wizard.\nFor more information, see the https://www.jetbrains.com/idea/help/gradle.html[Gradle page] in the IntelliJ IDEA Web Help.\n\n==== Eclipse\n\nTo open the project in Eclipse, first generate the Eclipse project files:\n\n $ cd asciidoctorj-core\n   ./gradlew eclipse\n\nThen, import the project into Eclipse using menu:File[Import,General,Existing Project into Workspace].\n\n=== Continuous integration\n\nContinuous integration for the AsciidoctorJ project is performed by GitHub Actions.\nYou can find recent build results, including the build status of pull requests, on the https://github.com/asciidoctor/asciidoctorj/actions[asciidoctor/asciidoctorj] page.\n\n=== Release and publish the artifacts\n\nTo build and publish a release the following properties have to be set, for example in the file ~/.gradle/gradle.properties:\n\n.~/.gradle/gradle.properties\n[source,properties]\n----\nsigning.keyId=...              # <1>\nsigning.password=...\nsigning.secretKeyRingFile=/home/YOUR_USERNAME/.gnupg/secring.gpg\n\nsdkman_consumer_key=...        # <2>\nsdkman_consumer_token=...\n\nsonatypeUsername=...           # <3>\nsonatypePassword=...\n----\n<1> Settings for signing the artifacts\n<2> Credentials for publishing a new release to sdkman\n<3> Credentials for publishing artifacts to oss.sonatype.org\n\nThe following steps are necessary to build a new release:\n\n. Update the version in gradle.properties to a release version, i.e. from `2.4.4-SNAPSHOT` to `2.4.4`.\n. Build the release with\n+\n----\n# ./gradlew clean build\n----\n. After testing publish all artifacts to a local repository under `build/repos` with\n+\n----\n# ./gradlew publishAllPublicationsToLocalRepository -i\n----\n. When everything is fine publish the artifacts to a staging repository on https://oss.sonatype.org and close the repository:\n+\n----\n# ./gradlew publishAllPublicationsToSonatypeRepository -i\n# ./gradlew closeRepository -i\n----\n. Visit https://oss.sonatype.org/#stagingRepositories[] and check the staging repository.\nThe artifacts are not published yet.\nThe repository URL shown there can be used for testing this version before publishing to Maven central.\n. When everything is fine publish the artifacts in the staging repository by clicking the \"Release\" button.\nAlternatively you can release it with\n+\n----\n# ./gradlew releaseRepository\n----\n. Publish the new version to sdkman with\n+\n----\n# ./gradlew asciidoctorj-distribution:sdkMajorRelease\n----\n. Commit everything and assign a tag:\n+\n----\n# git commit -m \"Release v2.x.y\"\n# git tag v2.x.y\n----\n. Upgrade the version to the next version by changing the version property in gradle.properties to `version=2.x.y+1-SNAPSHOT` and commit:\n+\n----\ngit commit -m \"Prepare next release\"\n----\n\n== Resources\n\nThe source code for AsciidoctorJ, including the latest developments and issues, can be found in the project's {uri-repo}[repository] on GitHub.\nIf you identify an issue while using AsciidoctorJ, please don't hesitate to {uri-issues}[file a bug report].\nAlso, don't forget to join the {uri-zulip}[Asciidoctor Zulip community], where you can ask questions and leave comments."
}
