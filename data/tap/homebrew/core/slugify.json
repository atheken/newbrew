{
  "name": "slugify",
  "full_name": "slugify",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Convert filenames and directories to a web friendly format",
  "license": "MIT",
  "homepage": "https://github.com/benlinton/slugify",
  "versions": {
    "stable": "1.0.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/benlinton/slugify/archive/v1.0.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "f6873b062119d3eaa7d89254fc6e241debf074da02e3189f12e08b372af096e5"
    },
    "head": {
      "url": "https://github.com/benlinton/slugify.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/slugify/blobs/sha256:73fa2281dd5bc54549c488774feb2d262b0a4e80c4bedf2e017f90e74293076d",
          "sha256": "73fa2281dd5bc54549c488774feb2d262b0a4e80c4bedf2e017f90e74293076d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/slugify.rb",
  "ruby_source_checksum": {
    "sha256": "087c1e4f425157190beeabb2edb25aadaa0e8df3ffc7e14632033f96499c7911"
  },
  "date_added": "2016-01-25T00:09:16+01:00",
  "readme": "# Bash Command: Slugify\n\nSlugify is a bash command that converts filenames and directories to a web friendly format.\n\n## Usage Help\n\nSimply enter the slugify command without any arguments or with the -h option to view the usage help.\n\n    $ slugify\n    usage: slugify [-acdhintuv] source_file ...\n       -a: remove spaces immediately adjacent to dashes\n       -c: consolidate consecutive spaces into single space\n       -d: replace spaces with dashes (instead of default underscores)\n       -h: help\n       -i: ignore case\n       -n: dry run\n       -t: treat existing dashes as spaces\n       -u: treat existing underscores as spaces (useful with -a, -c, or -d)\n       -v: verbose\n\n## Usage Examples\n\nNote, most examples below are run in verbose mode (-v) to help illustrate the results.\n\nVerbose mode is unnecessary in real world scenarios.\n\n#### Provide escaped filenames:\n\n    $ slugify -v My\\ \\ file.txt\n    rename: My  file.txt -> my__file.txt\n\n#### Alternatively provide unescaped filenames inside quotes:\n\n    $ slugify -v \"My  file.txt\"\n    rename: My  file.txt -> my__file.txt\n\n#### Globs (like * and ?) work as well:\n\n    $ slugify -v *.txt\n    rename: My file.txt -> my_file.txt\n    ignore: my_web_friendly_filename.txt\n\n#### Provide an unlimited number of arguments:\n\n    $ slugify -v \"My first file.txt\" \"My second file.txt\"\n    rename: My first file.txt -> my_first_file.txt\n    rename: My second file.txt -> my_second_file.txt\n\n#### Directories are also supported:\n\n    $ slugify -v \"My Directory\"\n    rename: My Directory -> my_directory\n\n#### Consolidate consecutive spaces into single spaces:\n\n    $ slugify -vc \"My    consolidated    file.txt\"\n    rename: My    consolidated    file.txt -> my_consolidated_file.txt\n\n#### Replace spaces with dashes:\n\n    $ slugify -vd \"My dashed file.txt\"\n    rename: My dashed file.txt -> my-dashed-file.txt\n\nThe -d option replaces each space with a dash.\n\n    $ slugify -vd \"My  dashed  file.txt\"\n    rename: My  dashed  file.txt -> my--dashed--file.txt\n\nCombine -d with -c (consolidate spaces) for a single dash between each word.\n\n    $ slugify -vdc \"My  dashed  file.txt\"\n    rename: My  dashed  file.txt -> my-dashed-file.txt\n\n#### Ignore case:\n\n    $ slugify -vi \"UPPER CASE FILE.txt\"\n    rename: UPPER CASE FILE.txt -> UPPER_CASE_FILE.txt\n\n#### Play it safe with a dry run:\n\nDry run mode does not alter the filesystem in any way.\n\n    $ slugify -n *\n    --- Begin dry run mode.\n    rename: My file.txt -> my_file.txt\n    ignore: web_friendly_filename.txt\n    --- End dry run mode.\n\nDry run mode also allows you to test filenames that don't exist. Great for testing!\n\n    $ slugify -n \"Ghost File.txt\"\n    --- Begin dry run mode.\n    not found: Ghost File.txt\n    rename: Ghost File.txt -> ghost_file.txt\n    --- End dry run mode.\n\nDry run mode automatically enables verbose mode so there is no need to include the -v option with -n.\n\n#### Handle spaces adjacent to dashes:\n\nIn this example, without -a the dashes end up surrounded by underscores.\n\n    $ slugify -v \"The Beatles - Yellow Submarine.mp3\"\n    rename: The Beatles - Yellow Submarine.mp3 -> the_beatles_-_yellow_submarine.mp3\n\nBut with -a the adjacent spaces are removed.\n\n    $ slugify -va \"The Beatles - Yellow Submarine.mp3\"\n    rename: The Beatles - Yellow Submarine.mp3 -> the_beatles-yellow_submarine.mp3\n\nThe -a only removes spaces immediately adjacent to a dash, which may not be the desired effect (below three spaces on either side of the dash get converted into two underscores because of -a).\n\n    $ slugify -va \"The Beatles   -   Yellow Submarine.mp3\"\n    rename: The Beatles   -   Yellow Submarine.mp3 -> the_beatles__-__yellow_submarine.mp3\n\nBut -c consolidates spaces into a single space and then -a will remove the left over adjacent single spaces.\n\n    $ slugify -vac \"The Beatles   -   Yellow Submarine.mp3\"\n    rename: The Beatles - Yellow Submarine.mp3 -> the_beatles-yellow_submarine.mp3\n\n#### Convert existing underscores into dashes\n\nThe -u treats underscores as spaces and -d converts spaces into dashes.\n\n    $ slugify -vud \"Spaces Dashes-And_Underscores.txt\"\n    rename: Spaces Dashes-And_Underscores.txt -> spaces-dashes-and-underscores.txt\n\n#### Convert existing dashes into underscores\n\n    $ slugify -vt \"Spaces Dashes-And_Underscores.txt\"\n    rename: Spaces Dashes-And_Underscores.txt -> spaces_dashes_and_underscores.txt"
}
