{
  "name": "nativefier",
  "full_name": "nativefier",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Wrap web apps natively",
  "license": "MIT",
  "homepage": "https://github.com/nativefier/nativefier",
  "versions": {
    "stable": "50.1.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://registry.npmjs.org/nativefier/-/nativefier-50.1.1.tgz",
      "tag": null,
      "revision": null,
      "checksum": "11587e877bad9a6859bb14268d56a60548d44e550f0d5da6d8535d9051957207"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nativefier/blobs/sha256:b7ef04113db1fdd60343c43e57add0e37700c11054f0e3c77c0b3ee5bbf7d970",
          "sha256": "b7ef04113db1fdd60343c43e57add0e37700c11054f0e3c77c0b3ee5bbf7d970"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nativefier/blobs/sha256:b7ef04113db1fdd60343c43e57add0e37700c11054f0e3c77c0b3ee5bbf7d970",
          "sha256": "b7ef04113db1fdd60343c43e57add0e37700c11054f0e3c77c0b3ee5bbf7d970"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nativefier/blobs/sha256:b7ef04113db1fdd60343c43e57add0e37700c11054f0e3c77c0b3ee5bbf7d970",
          "sha256": "b7ef04113db1fdd60343c43e57add0e37700c11054f0e3c77c0b3ee5bbf7d970"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nativefier/blobs/sha256:25fdd3946dac8e03e6500bb749666c4e63ce20e5a1a30fdf13bd9d1ed3c0011f",
          "sha256": "25fdd3946dac8e03e6500bb749666c4e63ce20e5a1a30fdf13bd9d1ed3c0011f"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nativefier/blobs/sha256:25fdd3946dac8e03e6500bb749666c4e63ce20e5a1a30fdf13bd9d1ed3c0011f",
          "sha256": "25fdd3946dac8e03e6500bb749666c4e63ce20e5a1a30fdf13bd9d1ed3c0011f"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nativefier/blobs/sha256:25fdd3946dac8e03e6500bb749666c4e63ce20e5a1a30fdf13bd9d1ed3c0011f",
          "sha256": "25fdd3946dac8e03e6500bb749666c4e63ce20e5a1a30fdf13bd9d1ed3c0011f"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nativefier/blobs/sha256:b7ef04113db1fdd60343c43e57add0e37700c11054f0e3c77c0b3ee5bbf7d970",
          "sha256": "b7ef04113db1fdd60343c43e57add0e37700c11054f0e3c77c0b3ee5bbf7d970"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "node"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/nativefier.rb",
  "ruby_source_checksum": {
    "sha256": "7190d61dff59f390433dfef93ee8e35efd98f09f00728a54cbb1527f38747286"
  },
  "date_added": "2017-01-25T15:57:10-05:00",
  "readme": "# Nativefier\n\n![Example of Nativefier app in the macOS dock](.github/dock-screenshot.png)\n\nYou want to make a native-looking wrapper for WhatsApp Web (or any web page).\n\n```bash\nnativefier 'web.whatsapp.com'\n```\n\n![Walkthrough animation](.github/nativefier-walkthrough.gif)\n\nYou're done.\n\n## Introduction\n\nNativefier is a command-line tool to easily create a “desktop app” for any web site\nwith minimal fuss. Apps are wrapped by [Electron](https://www.electronjs.org/)\n(which uses Chromium under the hood) in an OS executable (`.app`, `.exe`, etc)\nusable on Windows, macOS and Linux.\n\nI built this because I grew tired of having to Alt-Tab to my browser and then search\nthrough numerous open tabs when using Messenger or\nWhatsapp Web ([HN thread](https://news.ycombinator.com/item?id=10930718)). Nativefier features:\n\n- Automatically retrieval of app icon / name\n- Injection of custom JS & CSS\n- Many more, see the [API docs](API.md) or `nativefier --help`\n\n## Installation\n\nInstall Nativefier globally with `npm install -g nativefier` . Requirements:\n\n- macOS 10.13+ / Windows / Linux\n- [Node.js](https://nodejs.org/) ≥ 16.9 and npm ≥ 7.10\n\nOptional dependencies:\n\n- [ImageMagick](http://www.imagemagick.org/) or [GraphicsMagick](http://www.graphicsmagick.org/) to convert icons.\n  Be sure `convert` + `identify` or `gm` are in your `$PATH`.\n- [Wine](https://www.winehq.org/) to build Windows apps from non-Windows platforms.\n  Be sure `wine` is in your `$PATH`.\n\n<details>\n  <summary>Or install with Docker (click to expand)</summary>\n\n  - Pull the image from [Docker Hub](https://hub.docker.com/r/nativefier/nativefier): `docker pull nativefier/nativefier`\n  - ... or build it yourself: `docker build -t local/nativefier .`\n    (in this case, replace `nativefier/` in the below examples with `local/`)\n\n  By default, `nativefier --help` will be executed.\n  To build e.g. a Gmail app into `~/nativefier-apps`,\n\n  ```bash\n  docker run --rm -v ~/nativefier-apps:/target/ nativefier/nativefier https://mail.google.com/ /target/\n  ```\n\n  You can pass Nativefier flags, and mount volumes to pass local files. E.g. to use an icon,\n\n  ```bash\n  docker run --rm -v ~/my-icons-folder/:/src -v $TARGET-PATH:/target nativefier/nativefier --icon /src/icon.png --name whatsApp -p linux -a x64 https://web.whatsapp.com/ /target/\n  ```\n</details>\n\n<details>\n  <summary>Or install with Snap & AUR (click to expand)</summary>\n\n  These repos are *not* managed by Nativefier maintainers; use at your own risk.\n  If using them, for your security, please inspect the build script.\n\n  - [Snap](https://snapcraft.io/nativefier)\n  - [AUR](https://aur.archlinux.org/packages/nodejs-nativefier)\n</details>\n\n## Usage\n\nTo create an app for medium.com, simply `nativefier 'medium.com'`\n\nNativefier will try to determine the app name, and well as other options that you\ncan override. For example, to override the name, `nativefier --name 'My Medium App' 'medium.com'`\n\n**Read the [API docs](API.md) or run `nativefier --help`**\nto learn about command-line flags and configure your app.\n\n## Troubleshooting\n\n**See [CATALOG.md](CATALOG.md) for site-specific ideas & workarounds contributed by the community**.\n\nIf this doesn’t help, go look at our [issue tracker](https://github.com/nativefier/nativefier/issues).\n\n## Development\n\nHelp welcome on [bugs](https://github.com/nativefier/nativefier/issues?q=is%3Aopen+is%3Aissue+label%3Abug) and\n[feature requests](https://github.com/nativefier/nativefier/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request)!\n\nDocs: [Developer / build / hacking](HACKING.md), [API / flags](API.md),\n[Changelog](CHANGELOG.md).\n\nLicense: [MIT](LICENSE.md)."
}
