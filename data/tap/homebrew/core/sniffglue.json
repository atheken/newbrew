{
  "name": "sniffglue",
  "full_name": "sniffglue",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Secure multithreaded packet sniffer",
  "license": "GPL-3.0-or-later",
  "homepage": "https://github.com/kpcyrd/sniffglue",
  "versions": {
    "stable": "0.15.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/kpcyrd/sniffglue/archive/v0.15.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "ac30c0748a4247d2a36b82d623e88863480c300d3f6bbbdc303077240a8292c5"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sniffglue/blobs/sha256:89e5d71d3cddef8835e55dfc9e5605d6cf55e3a2becd96ad4773e87af939d612",
          "sha256": "89e5d71d3cddef8835e55dfc9e5605d6cf55e3a2becd96ad4773e87af939d612"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sniffglue/blobs/sha256:a6f259b1ea3c567419536c66de207f2e2c382041f742c57f2cfc40d73d3076bc",
          "sha256": "a6f259b1ea3c567419536c66de207f2e2c382041f742c57f2cfc40d73d3076bc"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sniffglue/blobs/sha256:691236273406849e741183f18c1fc13de92fb4c99b24abfe3cd4a8b6cf79d925",
          "sha256": "691236273406849e741183f18c1fc13de92fb4c99b24abfe3cd4a8b6cf79d925"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sniffglue/blobs/sha256:c6d71697ecb9b1edde9b08f2a5566d73067859549f3900f012b89ce671e84a80",
          "sha256": "c6d71697ecb9b1edde9b08f2a5566d73067859549f3900f012b89ce671e84a80"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sniffglue/blobs/sha256:1c130fb065a2bfcac7396277ae4c8d22995202f800defb110915cff1db13a8ce",
          "sha256": "1c130fb065a2bfcac7396277ae4c8d22995202f800defb110915cff1db13a8ce"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sniffglue/blobs/sha256:69d676dd88ea3974acbfa8eb09c0bb34abfca2769d32a6d5ada2dfae45bdbcbf",
          "sha256": "69d676dd88ea3974acbfa8eb09c0bb34abfca2769d32a6d5ada2dfae45bdbcbf"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sniffglue/blobs/sha256:f95efe25bbdb5cdd8c9be45246342430ea56a944f93b2cbb93f382fdf345309a",
          "sha256": "f95efe25bbdb5cdd8c9be45246342430ea56a944f93b2cbb93f382fdf345309a"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sniffglue/blobs/sha256:676a1bb4a02fb1ef5ec6f08a229e2b276bd446b11b99388d592963e958aa8398",
          "sha256": "676a1bb4a02fb1ef5ec6f08a229e2b276bd446b11b99388d592963e958aa8398"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust",
    "scdoc"
  ],
  "dependencies": [
    "libseccomp"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "libpcap"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/sniffglue.rb",
  "ruby_source_checksum": {
    "sha256": "5c5780df6eab7baeaaa356835bf5e0ba5ffa02c80d5d66657a4d06e39cf189bc"
  },
  "date_added": "2019-12-27T13:10:16+01:00",
  "readme": "# sniffglue [![Build Status][travis-img]][travis] [![Crates.io][crates-img]][crates]\n\n[travis-img]:   https://travis-ci.org/kpcyrd/sniffglue.svg?branch=master\n[travis]:       https://travis-ci.org/kpcyrd/sniffglue\n[crates-img]:   https://img.shields.io/crates/v/sniffglue.svg\n[crates]:       https://crates.io/crates/sniffglue\n\nsniffglue is a network sniffer written in rust. Network packets are parsed concurrently\nusing a thread pool to utilize all cpu cores. Project goals are that you can\nrun sniffglue securely on untrusted networks and that it must not crash\nwhen processing packets. The output should be as useful as possible by default.\n\n![screenshot](docs/screenshot.png)\n\n## Usage\n\n    # sniff with default filters (dhcp, dns, tls, http)\n    sniffglue enp0s25\n    # increase the filter sensitivity (arp)\n    sniffglue -v enp0s25\n    # increase the filter sensitivity (cjdns, ssdp, dropbox, packets with valid utf8)\n    sniffglue -vv enp0s25\n    # almost everything\n    sniffglue -vvv enp0s25\n    # everything\n    sniffglue -vvvv enp0s25\n\n## Installation\n\n<a href=\"https://repology.org/project/sniffglue/versions\"><img align=\"right\" src=\"https://repology.org/badge/vertical-allrepos/sniffglue.svg\" alt=\"Packaging status\"></a>\n\n### Arch Linux\n\n    pacman -S sniffglue\n\n### Mac OSX\n\n    brew install sniffglue\n\n### Debian/Ubuntu/Kali\n\nFirst included in debian bullseye, ubuntu 21.04.\n\n    apt install sniffglue\n\n### Alpine\n\n    apk add sniffglue\n\n### Gentoo\n\n    layman -a pentoo\n    emerge --ask net-analyzer/sniffglue\n\n### NixOS\n\n    nix-env -i sniffglue\n\n### GNU Guix\n\n    guix install sniffglue\n\n### From source\n\nTo build from source make sure you have libpcap and libseccomp installed. On\ndebian based systems:\n\n    # install the dependencies\n    sudo apt install libpcap-dev libseccomp-dev\n    # install rust with rustup\n    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n    source $HOME/.cargo/env\n    # install sniffglue and test it\n    cargo install sniffglue\n    sniffglue --help\n\nOr you can build a Debian package via [cargo-deb](https://github.com/mmstick/cargo-deb):\n\n    cargo deb\n\n## Protocols\n\n- [X] ethernet\n- [X] ipv4\n- [X] ipv6\n- [X] arp\n- [X] tcp\n- [X] udp\n- [X] icmp\n- [X] http\n- [X] tls\n- [X] dns\n- [X] dhcp\n- [X] cjdns eth beacons\n- [X] ssdp\n- [X] dropbox beacons\n- [X] ppp\n- [ ] 802.11\n\n## Docker\n\nYou can build sniffglue as a docker image to debug container setups. The image\nis currently about 11.1MB. It is recommended to push it to your own registry.\n\n    docker build -t sniffglue .\n    docker run -it --init --rm --net=host sniffglue eth0\n\n### Building documentation\n\n    scdoc < docs/sniffglue.1.scd > docs/sniffglue.1\n\n## Security\n\nTo report a security issue please contact kpcyrd on ircs://irc.hackint.org.\n\n### Seccomp\n\nTo ensure a compromised process doesn't compromise the system, sniffglue uses\nseccomp to restrict the syscalls that can be used after the process started.\nThis is done in two stages, first at the very beginning (directly after\nenv\\_logger initialized) and once after the sniffer has been setup, but before\npackets are read from the network.\n\n### Hardening\n\nDuring the second stage, there's also some general hardening that is applied\nbefore all unneeded syscalls are finally disabled. Those are system specific,\nso a configuration file is read from `/etc/sniffglue.conf`. This config\nfile specifies an empty directory for `chroot` and an unprivileged account\nin `user` that is used to drop root privileges.\n\n### boxxy-rs\n\nThis project includes a small [boxxy-rs] based shell that can be used to\nexplore the sandbox at various stages during and after initialization. This is\nalso used by travis to ensure the sandbox actually blocks syscalls.\n\n    cargo run --example boxxy\n\n[boxxy-rs]: https://github.com/kpcyrd/boxxy-rs\n\n### Reproducible builds\n\nThis project is tested using reprotest. Currently the following variations are\nexcluded:\n\n- `-time` - needed because the crates.io cert expires in the future\n- `-domain_host` - requires root for unshare(2) and has been excluded\n\nDon't forget to install the build dependencies.\n\n    ci/reprotest.sh\n\n### Fuzzing\n\nThe packet processing of sniffglue can be fuzzed using [cargo-fuzz].\nEverything you should need is provided in the `fuzz/` directory that is\ndistributed along with its source code. Please note that this program links\nto libpcap which is not included in the current fuzzing configuration.\n\n    cargo fuzz run read_packet\n\n[cargo-fuzz]: https://github.com/rust-fuzz/cargo-fuzz\n\n## License\n\nGPLv3+"
}
