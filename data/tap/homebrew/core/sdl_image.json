{
  "name": "sdl_image",
  "full_name": "sdl_image",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Image file loading library",
  "license": "Zlib",
  "homepage": "https://github.com/libsdl-org/SDL_image",
  "versions": {
    "stable": "1.2.12",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://www.libsdl.org/projects/SDL_image/release/SDL_image-1.2.12.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0b90722984561004de84847744d566809dbb9daf732a9e503b91a1b5a84e5699"
    },
    "head": {
      "url": "https://github.com/libsdl-org/SDL_image.git",
      "branch": "SDL-1.2"
    }
  },
  "revision": 10,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/sdl_image/blobs/sha256:f78f67df35a9a855ad454eb949ae9c29cbf8e46d8194d14200fdb4cbfdbc654e",
          "sha256": "f78f67df35a9a855ad454eb949ae9c29cbf8e46d8194d14200fdb4cbfdbc654e"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/sdl_image/blobs/sha256:d62d62d599148f2192757454c619fd4da0c348ce2569b86724fc5a6690bc3875",
          "sha256": "d62d62d599148f2192757454c619fd4da0c348ce2569b86724fc5a6690bc3875"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/sdl_image/blobs/sha256:581f370aa1bc5aacca8e449936510213ece0d0aa6239609cfd2348f9b7117c82",
          "sha256": "581f370aa1bc5aacca8e449936510213ece0d0aa6239609cfd2348f9b7117c82"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/sdl_image/blobs/sha256:4a428361fb16f0234036e6d34dcdebd12c60a44c4ef298ade17e962ffaaf331b",
          "sha256": "4a428361fb16f0234036e6d34dcdebd12c60a44c4ef298ade17e962ffaaf331b"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/sdl_image/blobs/sha256:dbc80abd8e87a602aaa4c2b5fca7cb6819dcc05d667313cc5ef63cf762439923",
          "sha256": "dbc80abd8e87a602aaa4c2b5fca7cb6819dcc05d667313cc5ef63cf762439923"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/sdl_image/blobs/sha256:1d5d05a09f10fe88be79a45a4ad4e062949be49f98ab54b30674df945258c079",
          "sha256": "1d5d05a09f10fe88be79a45a4ad4e062949be49f98ab54b30674df945258c079"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sdl_image/blobs/sha256:018680e1d50e7dd54d71bdb8a8eb9978b8cbff05201a64d53724472c15f24b6c",
          "sha256": "018680e1d50e7dd54d71bdb8a8eb9978b8cbff05201a64d53724472c15f24b6c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "pkg-config"
  ],
  "dependencies": [
    "jpeg-turbo",
    "libpng",
    "libtiff",
    "sdl12-compat",
    "webp"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": true,
  "deprecation_date": "2023-02-05",
  "deprecation_reason": "deprecated_upstream",
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/sdl_image.rb",
  "ruby_source_checksum": {
    "sha256": "b6fe4c4ee407ace2b4aab058093bcab696b1b04180fb3c0d04847463f06cccf4"
  },
  "head_dependencies": {
    "build_dependencies": [
      "autoconf",
      "automake",
      "libtool",
      "pkg-config"
    ],
    "dependencies": [
      "jpeg-turbo",
      "libpng",
      "libtiff",
      "sdl12-compat",
      "webp"
    ],
    "test_dependencies": [],
    "recommended_dependencies": [],
    "optional_dependencies": [],
    "uses_from_macos": [],
    "uses_from_macos_bounds": []
  },
  "date_added": "2009-10-12T22:41:16+01:00",
  "readme": "\r\nSDL_image 3.0\r\n\r\nThe latest version of this library is available from GitHub:\r\nhttps://github.com/libsdl-org/SDL_image/releases\r\n\r\nThis is a simple library to load images of various formats as SDL surfaces.\r\nIt can load BMP, GIF, JPEG, LBM, PCX, PNG, PNM (PPM/PGM/PBM), QOI, TGA, XCF, XPM, and simple SVG format images. It can also load AVIF, JPEG-XL, TIFF, and WebP images, depending on build options (see the note below for details.)\r\n\r\nAPI:\r\n#include <SDL3_image/SDL_image.h>\r\n\r\n\tSDL_Surface *IMG_Load(const char *file);\r\nor\r\n\tSDL_Surface *IMG_Load_RW(SDL_RWops *src, SDL_bool freesrc);\r\nor\r\n\tSDL_Surface *IMG_LoadTyped_RW(SDL_RWops *src, SDL_bool freesrc, char *type);\r\n\r\nwhere type is a string specifying the format (i.e. \"PNG\" or \"pcx\").\r\nNote that IMG_Load_RW cannot load TGA images.\r\n\r\nTo create a surface from an XPM image included in C source, use:\r\n\r\n\tSDL_Surface *IMG_ReadXPMFromArray(char **xpm);\r\n\r\nAn example program 'showimage' is included, with source in examples/showimage.c\r\n\r\nDocumentation is also available online at https://wiki.libsdl.org/SDL_image\r\n\r\nThis library is under the zlib License, see the file \"LICENSE.txt\" for details.\r\n\r\nNote:\r\nSupport for AVIF, JPEG-XL, TIFF, and WebP are not included by default because of the size of the decode libraries, but you can get them by running external/download.sh\r\n- When building with CMake, you can enable the appropriate SDL3IMAGE_* options defined in CMakeLists.txt. SDL3IMAGE_VENDORED allows switching between system and vendored libraries.\r\n- When building with configure/make, you can build and install them normally and the configure script will detect and use them.\r\n- When building with Visual Studio, you will need to build the libraries and then add the appropriate LOAD_* preprocessor define to the Visual Studio project.\r\n- When building with Xcode, you can edit the config at the top of the project to enable them, and you will need to include the appropriate framework in your application.\r\n- For Android, you can edit the config at the top of Android.mk to enable them.\r"
}
