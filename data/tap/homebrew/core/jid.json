{
  "name": "jid",
  "full_name": "jid",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Json incremental digger",
  "license": "MIT",
  "homepage": "https://github.com/simeji/jid",
  "versions": {
    "stable": "0.7.6",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/simeji/jid/archive/v0.7.6.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0912050b3be3760804afaf7ecd6b42bfe79e7160066587fbc0afa5324b03fb48"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jid/blobs/sha256:2aa9387c65b9577a1e7d6fa2a73e9da8102809d2275fa1d97db02c0ed6622bc0",
          "sha256": "2aa9387c65b9577a1e7d6fa2a73e9da8102809d2275fa1d97db02c0ed6622bc0"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jid/blobs/sha256:af3284fbdac510d46260cd52b4b1db36cb2baa71f02ee68758bea6be4af5ffb3",
          "sha256": "af3284fbdac510d46260cd52b4b1db36cb2baa71f02ee68758bea6be4af5ffb3"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jid/blobs/sha256:37f25dc38d57a971fb609224c33802bfa4213b58d825b188a67eb653af1c9e2f",
          "sha256": "37f25dc38d57a971fb609224c33802bfa4213b58d825b188a67eb653af1c9e2f"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jid/blobs/sha256:0966f7f8749c7aa40838d6658054292523d414aa2edf01d9483c35092fac2d23",
          "sha256": "0966f7f8749c7aa40838d6658054292523d414aa2edf01d9483c35092fac2d23"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jid/blobs/sha256:ad33b70ab6cbfb324c1842d3b1294beb011b04c85086e9c8aa4fdfbe1c6aedc4",
          "sha256": "ad33b70ab6cbfb324c1842d3b1294beb011b04c85086e9c8aa4fdfbe1c6aedc4"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jid/blobs/sha256:703bee89d514891dec82186680f2ee9837b1599721c3d68405fd4c72d015a811",
          "sha256": "703bee89d514891dec82186680f2ee9837b1599721c3d68405fd4c72d015a811"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jid/blobs/sha256:0b45fe9c59facbc6b2bbacf4b52927934b09d6e2050ad3a5b5a32434a4bd4751",
          "sha256": "0b45fe9c59facbc6b2bbacf4b52927934b09d6e2050ad3a5b5a32434a4bd4751"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jid/blobs/sha256:2980bf16f4376b7bdfc27e0e6bbe45d9e1f8aca8a143f6f7b6fd939eb6892617",
          "sha256": "2980bf16f4376b7bdfc27e0e6bbe45d9e1f8aca8a143f6f7b6fd939eb6892617"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jid/blobs/sha256:d429ac5400fd67dcee12e5fe962e84f535858c7ecb3235ee01f8a54dc44e7a9e",
          "sha256": "d429ac5400fd67dcee12e5fe962e84f535858c7ecb3235ee01f8a54dc44e7a9e"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jid/blobs/sha256:2c2d04634a851f7ad8d10869571b6820cd31da2ef068a5c7fd6b03f512f5dc4c",
          "sha256": "2c2d04634a851f7ad8d10869571b6820cd31da2ef068a5c7fd6b03f512f5dc4c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/jid.rb",
  "ruby_source_checksum": {
    "sha256": "524d61c3f3d97b593be23252ad6b03ed829d2a3a2d6b2e8df20f6e4b3250eebe"
  },
  "date_added": "2016-12-11T16:15:05+00:00",
  "readme": "# jid\n\n[![Circle CI](https://circleci.com/gh/simeji/jid/tree/master.svg?style=shield)](https://circleci.com/gh/simeji/jid/tree/master)\n\nJson Incremental Digger\n\nIt's a very simple tool.  \nYou can drill down JSON interactively by using filtering queries like [jq](https://stedolan.github.io/jq/).\n\n**Suggestion** and **Auto completion** of this tool will provide you a very comfortable JSON drill down.\n\n## Demo\n\n![demo-jid-main](https://github.com/simeji/jid/wiki/images/demo-jid-main-640-colorize.gif)\n\n## Installation\n\n* [With HomeBrew (for macOS)](#with-homebrew-for-macos)  \n* [With MacPorts (for macOS)](#with-macports-for-macos)  \n* [With pkg (for FreeBSD)](#with-pkg-for-freebsd)\n* [With scoop (for Windows)](#with-scoop-for-windows)\n* [Other package management system](#other-package-management-systems)\n* [Simply use \"jid\" command](#simply-use-jid-command)  \n* [Build](#build)  \n\n### With HomeBrew (for macOS)\n\n```\nbrew install jid\n```\n\n### With MacPorts (for macOS)\n\n```\nsudo port install jid\n```\n\n### With pkg (for FreeBSD)\n\n```\npkg install jid\n```\n\n### With scoop (for Windows)\n\n```\nscoop install jid\n```\n\n### Other package management systems\n\nJid can install by package management systems of below OS.\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/jid.svg)](https://repology.org/metapackage/jid/versions)\n\n\n### Simply use \"jid\" command\n\nIf you simply want to use `jid` command, please download binary from below.\n\nhttps://github.com/simeji/jid/releases\n\n## Build\n\n```\ngo install github.com/simeji/jid/cmd/jid@latest\n```\n\n## Usage\n\n### Quick start\n\n* [simple json example](#simple-json-example)  \n* [simple json example2](#simple-json-example2)  \n* [with initial query](#with-initial-query)  \n* [with curl](#with-curl)  \n\n#### simple json example\n\nPlease execute the below command.\n\n```\necho '{\"aa\":\"2AA2\",\"bb\":{\"aaa\":[123,\"cccc\",[1,2]],\"c\":321}}'| jid\n```\n\nthen, jid will be running.\n\nYou can dig JSON data incrementally.\n\nWhen you enter `.bb.aaa[2]`, you will see the following.\n\n```\n[Filter]> .bb.aaa[2]\n[\n  1,\n  2\n]\n```\n\nThen, you press Enter key and output `[1,2]` and exit.\n\n#### simple json example2\n\nThis json is used by [demo section](https://github.com/simeji/jid#demo).\n```\necho '{\"info\":{\"date\":\"2016-10-23\",\"version\":1.0},\"users\":[{\"name\":\"simeji\",\"uri\":\"https://github.com/simeji\",\"id\":1},{\"name\":\"simeji2\",\"uri\":\"https://example.com/simeji\",\"id\":2},{\"name\":\"simeji3\",\"uri\":\"https://example.com/simeji3\",\"id\":3}],\"userCount\":3}}'|jid\n```\n\n#### With a initial query\n\nFirst argument of `jid` is initial query.\n(Use JSON same as [Demo](#demo))\n\n![demo-jid-with-query](https://github.com/simeji/jid/wiki/images/demo-jid-with-query-640.gif)\n\n#### with curl\n\nSample for using [RDAP](https://datatracker.ietf.org/wg/weirds/documents/) data.\n\n```\ncurl -s http://rdg.afilias.info/rdap/domain/example.info | jid\n```\n\n#### Load JSON from a file\n\n```\njid < file.json\n```\n\n## Keymaps\n\n|key|description|\n|:-----------|:----------|\n|`TAB` / `CTRL` + `I` |Show available items and choice them|\n|`CTRL` + `W` |Delete from the cursor to the start of the word|\n|`CTRL` + `U` |Delete whole query|\n|`CTRL` + `F` / Right Arrow (:arrow_right:)|Move cursor a character to the right|\n|`CTRL` + `B` / Left Arrow (:arrow_left:)|Move cursor a character to the left|\n|`CTRL` + `A`|To the first character of the 'Filter'|\n|`CTRL` + `E`|To the end of the 'Filter'|\n|`CTRL` + `J`|Scroll json buffer 1 line downwards|\n|`CTRL` + `K`|Scroll json buffer 1 line upwards|\n|`CTRL` + `G`|Scroll json buffer to bottom|\n|`CTRL` + `T`|Scroll json buffer to top|\n|`CTRL` + `N`|Scroll json buffer 'Page Down'|\n|`CTRL` + `P`|Scroll json buffer 'Page Up'|\n|`CTRL` + `L`|Change view mode whole json or keys (only object)|\n|`ESC`|Hide a candidate box|\n\n### Option\n\n|option|description|\n|:-----------|:----------|\n|First argument ($1) | Initial query|\n|-h | print a help|\n|-help | print a help|\n|-version | print the version and exit|\n|-q | Output query mode (for jq)|\n|-M | monochrome output mode|"
}
