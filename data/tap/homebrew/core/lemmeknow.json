{
  "name": "lemmeknow",
  "full_name": "lemmeknow",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Fastest way to identify anything!",
  "license": "MIT",
  "homepage": "https://github.com/swanandx/lemmeknow",
  "versions": {
    "stable": "0.8.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/swanandx/lemmeknow/archive/refs/tags/v0.8.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "46f42e80cf2c142641fc52826bcf73e00e26dbb93f20397a282e04b786a7cfe8"
    },
    "head": {
      "url": "https://github.com/swanandx/lemmeknow.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lemmeknow/blobs/sha256:90517e35b64697b70153db585ce845aa789762a3dd0aeec955a6ef4f516194f9",
          "sha256": "90517e35b64697b70153db585ce845aa789762a3dd0aeec955a6ef4f516194f9"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lemmeknow/blobs/sha256:67edad348c761e6fb74da22ecd3fcfa511eed0b3239a9eb5ed5ac4df71abdf4d",
          "sha256": "67edad348c761e6fb74da22ecd3fcfa511eed0b3239a9eb5ed5ac4df71abdf4d"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lemmeknow/blobs/sha256:293c3d179f7122f7eeefdde492a5c2a77024ca46c458d1f1186baa7078202062",
          "sha256": "293c3d179f7122f7eeefdde492a5c2a77024ca46c458d1f1186baa7078202062"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lemmeknow/blobs/sha256:8b5b5766ec6bb2c0392759b960b21613a46cbecdd4a06b696197fd2b18b63e69",
          "sha256": "8b5b5766ec6bb2c0392759b960b21613a46cbecdd4a06b696197fd2b18b63e69"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lemmeknow/blobs/sha256:d1999def59b9c186a9310cd18f6a55fd6ac565f4330b8c1800bdc6a1dc035aea",
          "sha256": "d1999def59b9c186a9310cd18f6a55fd6ac565f4330b8c1800bdc6a1dc035aea"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lemmeknow/blobs/sha256:9233947a40343e7512dbc090981151ef1e9fd009ca09fc60b9b510036b4e133a",
          "sha256": "9233947a40343e7512dbc090981151ef1e9fd009ca09fc60b9b510036b4e133a"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lemmeknow/blobs/sha256:c8d597d9d5a7512e3c5ccb9bca3efc519f1e9d1445cbac41ea4a9faea38caf7e",
          "sha256": "c8d597d9d5a7512e3c5ccb9bca3efc519f1e9d1445cbac41ea4a9faea38caf7e"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/lemmeknow.rb",
  "ruby_source_checksum": {
    "sha256": "85e8cfd0fb222947280579be127a9ba2937d416f25e4e4860761f85d65b715bf"
  },
  "date_added": "2022-12-27T17:08:25+00:00",
  "readme": "<h1 align=\"center\">\r\n    lemmeknow \r\n</h1>\r\n\r\n<div align=\"center\">\r\n  ‚ö° ü¶Ä üîç\r\n</div>\r\n<div align=\"center\">\r\n  <strong>Just ask \"lemmeknow\"!</strong>\r\n</div>\r\n<div align=\"center\">\r\n  The fastest way to identify anything\r\n</div>\r\n\r\n<br />\r\n\r\n<div align=\"center\">\r\n  <!-- Twitter -->\r\n  <a href=\"https://twitter.com/_swanandx\">\r\n    <img src=\"https://img.shields.io/badge/twitter-%40__swanandx-blue\"\r\n      alt=\"@_swanandx\" />\r\n  </a>\r\n  <!-- GitHub issues -->\r\n  <a href=\"https://github.com/swanandx/lemmeknow/issues\">\r\n    <img src=\"https://img.shields.io/github/issues/swanandx/lemmeknow\"\r\n      alt=\"GitHub issues\" />\r\n  </a>\r\n  <!-- GitHub stars -->\r\n  <a href=\"https://github.com/swanandx/lemmeknow/stargazers\">\r\n    <img src=\"https://img.shields.io/github/stars/swanandx/lemmeknow\"\r\n      alt=\"GitHub stars\" />\r\n  </a>\r\n  <!-- GitHub forks -->\r\n  <a href=\"https://github.com/swanandx/lemmeknow/network\">\r\n    <img src=\"https://img.shields.io/github/forks/swanandx/lemmeknow\"\r\n      alt=\"GitHub forks\" />\r\n  </a>\r\n  <!-- GitHub license -->\r\n  <a href=\"https://github.com/swanandx/lemmeknow/blob/main/LICENSE\">\r\n    <img src=\"https://img.shields.io/github/license/swanandx/lemmeknow\"\r\n      alt=\"GitHub license\" />\r\n  </a>\r\n</div>\r\n\r\n<div align=\"center\">\r\n  <sub>Built with ‚ù§Ô∏é by\r\n  <a href=\"https://twitter.com/_swanandx\">swanandx</a> and\r\n  <a href=\"https://github.com/swanandx/lemmeknow/graphs/contributors\">\r\n    contributors\r\n  </a>\r\n</div>\r\n\r\n<br />\r\n\r\n<!-- Thnx to choo for above README design <3 https://github.com/choojs/choo/blob/master/README.md -->\r\n\r\n`lemmeknow` can be used for identifying mysterious text or to analyze hard-coded strings from captured network packets, malwares, or just about anything.\r\n\r\n\r\n<div align=\"center\">\r\n  <strong>Try it online \r\n  <a href=\"https://swanandx.github.io/lemmeknow-frontend/\">here</a>\r\n  </strong>\r\n</div>\r\n\r\n<br />\r\n\r\n<div align=\"center\">\r\n  <strong>Watch the video on \r\n  <a href=\"https://youtu.be/n92YrzELBJU\">YouTube</a>\r\n  </strong>\r\n</div>\r\n\r\n<br />\r\n\r\n\r\n## üß∞ Usage\r\n\r\n```shell\r\nlemmeknow [OPTIONS] <TEXT/FILENAME>\r\n```\r\n<img align=\"center\" src=\"https://media.discordapp.net/attachments/869896750188625950/1032250968043171881/unknown.png\" alt=\"demo\"/>\r\n\r\n<details>\r\n<summary>\r\nJSON Output\r\n</summary>\r\n\r\nIf you want output in JSON format, then pass `-j / --json` flag.\r\n*e.g.* \r\n```shell\r\nlemmeknow UC11L3JDgDQMyH8iolKkVZ4w --json\r\n``` \r\n<img align=\"center\" src=\"https://media.discordapp.net/attachments/998569651183288351/1009151747194892288/lkjosn.png?width=1440&height=512\" alt=\"demo\" />\r\n</details>\r\n\r\n> Run `lemmeknow --help` for all options!\r\n\r\n\r\n\r\n<br />\r\n\r\n## üî≠ Installation\r\n---\r\n### Download executable üìà\r\n\r\n You can directly download executable and run it. No need for any installation.\r\n > Check releases [here](https://github.com/swanandx/lemmeknow/releases/).\r\n\r\n---\r\n### Using `cargo` ü¶Ä\r\n```shell\r\ncargo install lemmeknow\r\n```\r\n\r\n---\r\n### Using [Nix](https://nixos.org/nix) ‚ùÑÔ∏è\r\n```shell\r\nnix-env -iA nixpkgs.lemmeknow\r\n```\r\n\r\n---\r\n### Build it from source üéØ\r\n\r\nClone repository\r\n```shell\r\ngit clone https://github.com/swanandx/lemmeknow && cd lemmeknow\r\n```\r\n\r\nthen build and run\r\n\r\n```shell\r\ncargo run -- <TEXT/FILENAME> [OPTIONS]\r\n```\r\n\r\nOR\r\n\r\n```shell\r\ncargo build --release\r\ncd target/release/\r\n./lemmeknow <TEXT/FILENAME> [OPTIONS]\r\n```\r\n\r\n---\r\n<br />\r\n\r\n## üöÄ API  \r\n\r\nWant to use this as a crate in your project? or make a web api for it? No worries! Just add a entry in your `Cargo.toml`\r\n\r\n```toml\r\n[dependencies]\r\nlemmeknow = { version = \"0.7\", default-features = false }\r\n\r\n```\r\n\r\nOR \r\n\r\n```toml\r\n[dependencies]\r\nlemmeknow = { git = \"https://github.com/swanandx/lemmeknow\", default-features = false }\r\n\r\n```\r\n\r\n> Refer to [documentation](https://docs.rs/lemmeknow) for more info.\r\n\r\nlemmeknow supports webassembly, that is, it can be compiled for `wasm32-unknown-unknown` target!\r\ne.g. [lemmeknow-frontend](https://github.com/swanandx/lemmeknow-frontend)\r\n\r\n<br />\r\n\r\n## ‚öîÔ∏è Benchmarks\r\n\r\nlemmeknow is around **33x faster** than pywhat for a file of 8.7MB, and it is **3x faster** for a single string!\r\n\r\n| A file of 8.7MB | A single string |\r\n| ---  |  ---   |\r\n| *Summary*: `lemmeknow.exe floss.exe` ran **33.13 ¬± 9.74** times faster than `pywhat floss.exe` | *Summary*: `lemmeknow.exe 3FZ..Zc5` ran **3.29 ¬± 0.77** times faster than `pywhat 3FZ..Zc5` |\r\n| ![File benchmark](images/bench_file.png)     | ![String benchmark](images/bench_string.png)       |\r\n\r\n> Thanks to [SkeletalDemise](https://github.com/SkeletalDemise) for the benchmarks and the whisker plots ‚ú®\r\n\r\n<br />\r\n\r\n## üöß Contributing \r\n\r\nYou can contribute by adding new regex, improving current regex, improving code performance or fixing minor bugs! Just open a issue or submit a PR.\r\n\r\n<br />\r\n\r\n## üíñ Acknowledgement\r\n\r\n This project is inspired by [PyWhat](https://github.com/bee-san/pyWhat)!\r\n Thanks to developer of it for the awesome idea <3 .\r"
}
