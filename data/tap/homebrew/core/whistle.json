{
  "name": "whistle",
  "full_name": "whistle",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "HTTP, HTTP2, HTTPS, Websocket debugging proxy",
  "license": "MIT",
  "homepage": "https://github.com/avwo/whistle",
  "versions": {
    "stable": "2.9.56",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://registry.npmjs.org/whistle/-/whistle-2.9.56.tgz",
      "tag": null,
      "revision": null,
      "checksum": "a0abe63cb21690c35b3cee21200509bb7e39ffe7b7c27d3b4ef4eea902471312"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/whistle/blobs/sha256:b7f6fb9028b01b4c5c6e3a1029b5a6813da07ffecef2c2e4e5d66c358b752c49",
          "sha256": "b7f6fb9028b01b4c5c6e3a1029b5a6813da07ffecef2c2e4e5d66c358b752c49"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/whistle/blobs/sha256:b7f6fb9028b01b4c5c6e3a1029b5a6813da07ffecef2c2e4e5d66c358b752c49",
          "sha256": "b7f6fb9028b01b4c5c6e3a1029b5a6813da07ffecef2c2e4e5d66c358b752c49"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/whistle/blobs/sha256:b7f6fb9028b01b4c5c6e3a1029b5a6813da07ffecef2c2e4e5d66c358b752c49",
          "sha256": "b7f6fb9028b01b4c5c6e3a1029b5a6813da07ffecef2c2e4e5d66c358b752c49"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/whistle/blobs/sha256:87751d69739167903bd7868f12fe57425831adecde16bbf786cf44057bc03788",
          "sha256": "87751d69739167903bd7868f12fe57425831adecde16bbf786cf44057bc03788"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/whistle/blobs/sha256:87751d69739167903bd7868f12fe57425831adecde16bbf786cf44057bc03788",
          "sha256": "87751d69739167903bd7868f12fe57425831adecde16bbf786cf44057bc03788"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/whistle/blobs/sha256:87751d69739167903bd7868f12fe57425831adecde16bbf786cf44057bc03788",
          "sha256": "87751d69739167903bd7868f12fe57425831adecde16bbf786cf44057bc03788"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/whistle/blobs/sha256:f9f51f4f9f6d116ff0897f14aba497da00633212a1fb27bc4b5dd6a40d406f6d",
          "sha256": "f9f51f4f9f6d116ff0897f14aba497da00633212a1fb27bc4b5dd6a40d406f6d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "node"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/whistle.rb",
  "ruby_source_checksum": {
    "sha256": "cd65f0701043fbe4607260f2314613ea0820d65f9289171d2a2b24ffeee499a3"
  },
  "date_added": "2019-12-28T09:52:08-05:00",
  "readme": "<p align=\"center\">\n  <a href=\"https://avwo.github.io/whistle/\">\n    <img alt=\"whistle logo\" src=\"https://user-images.githubusercontent.com/11450939/168828068-99e38862-d5fc-42bc-b5ab-6262b2ca27d6.png\">\n  </a>\n</p>\n\n# whistle\n[![NPM version](https://img.shields.io/npm/v/whistle.svg?style=flat-square)](https://npmjs.org/package/whistle)\n[![node version](https://img.shields.io/badge/node.js-%3E=_8-green.svg?style=flat-square)](http://nodejs.org/download/)\n[![Test coverage](https://codecov.io/gh/avwo/whistle/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/avwo/whistle)\n[![npm download](https://img.shields.io/npm/dm/whistle.svg?style=flat-square)](https://npmjs.org/package/whistle)\n[![NPM count](https://img.shields.io/npm/dt/whistle.svg?style=flat-square)](https://www.npmjs.com/package/whistle)\n[![License](https://img.shields.io/npm/l/whistle.svg?style=flat-square)](https://www.npmjs.com/package/whistle)\n\n**Mac 或 Windows 系统推荐使用客户端版本：https://github.com/avwo/whistle-client**\n\nWhistle 是基于 Node 实现的跨平台抓包调试工具，其主要特点：\n1. **完全跨平台**：支持 Mac、Windows 等桌面系统，且支持服务端等命令行系统\n2. **功能强大（理论上可以对请求做任意修改）**：\n\t* 支持作为 HTTP、HTTPS、SOCKS 代理及反向代理\n\t* 支持抓包及修改 HTTP、HTTPS、HTTP2、WebSocket、TCP 请求\n\t* 支持重放及构造 HTTP、HTTPS、HTTP2、WebSocket、TCP 请求\n\t* 支持设置上游代理、PAC 脚本、Hosts、延迟（限速）请求响应等\n\t* 支持查看远程页面的 console 日志及 DOM 节点\n\t* 支持用 Node 开发插件扩展功能，也可以作为独立 npm 包引用\n3. **操作简单**：\n\t* 直接通过浏览器查看抓包、修改请求\n\t* 所有修改操作都可以通过配置方式实现（类似系统 Hosts），并支持分组管理\n\t* 项目可以自带代理规则配置并一键设置到本地 Whistle 代理，也可以通过定制插件简化操作\n\n# 一键安装\n> 已安装 `brew` 的 PC，可以省略以下 1、2 步骤，直接通过以下方式一键安装：`brew install whistle && w2 start --init`（arm64 平台尝试用 `brew install node && npm i -g whistle && w2 start --init`）\n1. 安装 Node（建议安装**最新的 LTS 版本**，如已安装忽略此步骤）：https://nodejs.org/\n2. 一键安装，在命令行执行以下命令：\n\t``` sh\n\tnpm i -g whistle && w2 start --init\n\t```\n\t> 上述命令会先全局安装 Whistle 的 npm 包后，启动 Whistle 并设置系统全局代理，以及安装系统根证书，目前一键安装只支持 Mac & Windows 系统，其它系统按照下面 **手动安装** 的方式操作。\n\t>\n\t> 如果安装过程时报错 `Bad CPU type in executable`，在命令执行 `arch -x86_64 zsh` 再重新执行一键安装命令。\n3. 一键安装过程中注意事项：\n\t* Mac 需要两次输入开机密码或指纹验证\n\t\t<p>\n\t\t\t<img alt=\"输入开机密码\" width=\"330\" src=\"https://user-images.githubusercontent.com/11450939/176977027-4a7b06a0-64f6-4580-b983-312515e9cd4e.png\">\n\t\t</p>\n\t\t<img alt=\"输入指纹\" width=\"330\" src=\"https://user-images.githubusercontent.com/11450939/168847123-e66845d0-6002-4f24-874f-b6943f7f376b.png\">\n\n\t* Windows 需要最后点击 “是(Y)” 确认\n\n\t\t<img alt=\"点击 是(Y)\" width=\"420\" src=\"https://user-images.githubusercontent.com/11450939/168846905-384e0540-e02f-46de-81d7-e395a496f032.jpeg\">\n\n如果需要自定义代理配置或根证书（如设置其它代理，根证书或代理白名单等）可以通过以下命令实现：\n1. `w2 proxy` 设置系统全局代理：https://wproxy.org/whistle/proxy.html\n2. `w2 ca` 设置系统根证书：https://wproxy.org/whistle/proxy.html\n\n也可以用下面 **手动安装** 方式。\n### 手动安装\n非 Mac & Windows 系统或一键安装失败可以按下面方式设置代理和安装根证书：\n\n1. 设置代理：https://wproxy.org/whistle/install.html\n2. 安装根证书：https://wproxy.org/whistle/webui/https.html\n\n# 快速上手\n安装成功后，用 Chrome 打开链接 http://local.whistlejs.com 即可看到 Whistle 的抓包配置界面：\n\n<img width=\"800\" alt=\"抓包界面\" src=\"https://user-images.githubusercontent.com/11450939/169521501-58e59e1b-1970-477c-a213-f28234628e4b.png\">\n\n<img width=\"800\" alt=\"image\" src=\"https://user-images.githubusercontent.com/11450939/169634452-64e7bf4b-4cb1-4289-9ba2-3c1913d6c2dd.png\">\n\n\n### 详细用法参见：[Whistle 帮助文档](https://wproxy.org/whistle/quickstart.html)\n\n# 通过 SwitchyOmega 设置代理\n### 安装 SwitchyOmega\n打开 Chrome 扩展商店进行安装 https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif\n\n### 配置 SwitchyOmega\n全局代理如果会影响到某些客户端的请求（客户端设置了 ssl pinning），也可以使用 Chrome 插件设置代理（只对 Chrome 生效）：\n> 可以通过 `w2 proxy off` 关闭全局代理\n\n1. 设置 Whistle 代理\n\n    <img src=\"https://user-images.githubusercontent.com/11450939/36636618-132bb09e-1a05-11e8-8514-813fd34a5454.png\" width=\"800\" />\n2. 选择 Whistle 代理\n\n    <img width=\"180\" alt=\"image\" src=\"https://user-images.githubusercontent.com/11450939/173984519-143615b2-2a99-4486-a22a-fec71fe00423.png\">\n\n# 安全设置\n1. 通过启动参数给管理界面设置用户名密码：`w2 restart -n yourusername -w yourpassword`\n2. 通过插件给经过代理的请求设置用户名密码：https://github.com/whistle-plugins/whistle.proxyauth\n\n# License\n[MIT](./LICENSE)"
}
