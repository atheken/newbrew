{
  "name": "json11",
  "full_name": "json11",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Tiny JSON library for C++11",
  "license": "MIT",
  "homepage": "https://github.com/dropbox/json11",
  "versions": {
    "stable": "1.0.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/dropbox/json11/archive/v1.0.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "bab960eebc084d26aaf117b8b8809aecec1e86e371a173655b7dffb49383b0bf"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/json11/blobs/sha256:812394b65215fb60f32f3b82697483a928e1784ea981fd3948ed07aae93e12fa",
          "sha256": "812394b65215fb60f32f3b82697483a928e1784ea981fd3948ed07aae93e12fa"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/json11/blobs/sha256:9b05e1c86fa167507521019951abafe352ab7ec786c9227d7816d860e5b370d8",
          "sha256": "9b05e1c86fa167507521019951abafe352ab7ec786c9227d7816d860e5b370d8"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/json11/blobs/sha256:07fe8500710d83ca7e6bc1b8cc3b081fbcc6ad45363bdd3bd346c42f712cf926",
          "sha256": "07fe8500710d83ca7e6bc1b8cc3b081fbcc6ad45363bdd3bd346c42f712cf926"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/json11/blobs/sha256:35c418041e5f90e2f6486b6ae047fc72166356082618940a319f85ac4939aa8b",
          "sha256": "35c418041e5f90e2f6486b6ae047fc72166356082618940a319f85ac4939aa8b"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/json11/blobs/sha256:cbdc55d054d0ba3060a8709b5b98c5c4c0601e7483b4ca2a62aab8a9fc630428",
          "sha256": "cbdc55d054d0ba3060a8709b5b98c5c4c0601e7483b4ca2a62aab8a9fc630428"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/json11/blobs/sha256:e0229fc7e70a26fdd945e3cf666e2608f73d186b20fcc2555d19466e78771d54",
          "sha256": "e0229fc7e70a26fdd945e3cf666e2608f73d186b20fcc2555d19466e78771d54"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": true,
  "disable_date": "2022-07-31",
  "disable_reason": "repo_archived",
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/json11.rb",
  "ruby_source_checksum": {
    "sha256": "62c3e9a8972e3889dc1a5f336b08f33002039a8a775e98c93ae838668c7526eb"
  },
  "date_added": "2018-08-27T02:42:17+01:00",
  "readme": "json11\n------\n\njson11 is a tiny JSON library for C++11, providing JSON parsing and serialization.\n\nThe core object provided by the library is json11::Json. A Json object represents any JSON\nvalue: null, bool, number (int or double), string (std::string), array (std::vector), or\nobject (std::map).\n\nJson objects act like values. They can be assigned, copied, moved, compared for equality or\norder, and so on. There are also helper methods Json::dump, to serialize a Json to a string, and\nJson::parse (static) to parse a std::string as a Json object.\n\nIt's easy to make a JSON object with C++11's new initializer syntax:\n\n    Json my_json = Json::object {\n        { \"key1\", \"value1\" },\n        { \"key2\", false },\n        { \"key3\", Json::array { 1, 2, 3 } },\n    };\n    std::string json_str = my_json.dump();\n\nThere are also implicit constructors that allow standard and user-defined types to be\nautomatically converted to JSON. For example:\n\n    class Point {\n    public:\n        int x;\n        int y;\n        Point (int x, int y) : x(x), y(y) {}\n        Json to_json() const { return Json::array { x, y }; }\n    };\n\n    std::vector<Point> points = { { 1, 2 }, { 10, 20 }, { 100, 200 } };\n    std::string points_json = Json(points).dump();\n\nJSON values can have their values queried and inspected:\n\n    Json json = Json::array { Json::object { { \"k\", \"v\" } } };\n    std::string str = json[0][\"k\"].string_value();\n\nFor more documentation see json11.hpp."
}
