{
  "name": "dasel",
  "full_name": "dasel",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "JSON, YAML, TOML, XML, and CSV query and modification tool",
  "license": "MIT",
  "homepage": "https://github.com/TomWright/dasel",
  "versions": {
    "stable": "2.3.4",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/TomWright/dasel/archive/v2.3.4.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "7c9a2f41d02f4d1717dcf0d9fb4b977308da89c074d2abcf064adf00980e5d0d"
    },
    "head": {
      "url": "https://github.com/TomWright/dasel.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dasel/blobs/sha256:185fffa565d45fe22ca6c85835d831cbdfb846e8478315e5a6047d8e8761dfe5",
          "sha256": "185fffa565d45fe22ca6c85835d831cbdfb846e8478315e5a6047d8e8761dfe5"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dasel/blobs/sha256:185fffa565d45fe22ca6c85835d831cbdfb846e8478315e5a6047d8e8761dfe5",
          "sha256": "185fffa565d45fe22ca6c85835d831cbdfb846e8478315e5a6047d8e8761dfe5"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dasel/blobs/sha256:185fffa565d45fe22ca6c85835d831cbdfb846e8478315e5a6047d8e8761dfe5",
          "sha256": "185fffa565d45fe22ca6c85835d831cbdfb846e8478315e5a6047d8e8761dfe5"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dasel/blobs/sha256:3bc2dbe89d7a51b642539c6be08604839d971fdef0a0a381a13a762f5f92f958",
          "sha256": "3bc2dbe89d7a51b642539c6be08604839d971fdef0a0a381a13a762f5f92f958"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dasel/blobs/sha256:3bc2dbe89d7a51b642539c6be08604839d971fdef0a0a381a13a762f5f92f958",
          "sha256": "3bc2dbe89d7a51b642539c6be08604839d971fdef0a0a381a13a762f5f92f958"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dasel/blobs/sha256:3bc2dbe89d7a51b642539c6be08604839d971fdef0a0a381a13a762f5f92f958",
          "sha256": "3bc2dbe89d7a51b642539c6be08604839d971fdef0a0a381a13a762f5f92f958"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dasel/blobs/sha256:863be6e1bce5d0fe6f87689dbcba5e3df2b8c10a192b6a6ed7c616d3d9afa24d",
          "sha256": "863be6e1bce5d0fe6f87689dbcba5e3df2b8c10a192b6a6ed7c616d3d9afa24d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/dasel.rb",
  "ruby_source_checksum": {
    "sha256": "d96bcd74ced490037b7ec8fe810a95a9379c3bea18eb398d6e94d0753c8d7b83"
  },
  "date_added": "2021-02-05T12:30:22+00:00",
  "readme": "# dasel\n\n[![Gitbook](https://badges.aleen42.com/src/gitbook_1.svg)](https://daseldocs.tomwright.me)\n[![Go Report Card](https://goreportcard.com/badge/github.com/TomWright/dasel)](https://goreportcard.com/report/github.com/TomWright/dasel)\n[![PkgGoDev](https://pkg.go.dev/badge/github.com/tomwright/dasel)](https://pkg.go.dev/github.com/tomwright/dasel)\n![Test](https://github.com/TomWright/dasel/workflows/Test/badge.svg)\n![Build](https://github.com/TomWright/dasel/workflows/Build/badge.svg)\n[![codecov](https://codecov.io/gh/TomWright/dasel/branch/master/graph/badge.svg)](https://codecov.io/gh/TomWright/dasel)\n[![Mentioned in Awesome Go](https://awesome.re/mentioned-badge.svg)](https://github.com/avelino/awesome-go)\n![GitHub All Releases Downloads](https://img.shields.io/github/downloads/TomWright/dasel/total)\n![GitHub License](https://img.shields.io/github/license/TomWright/dasel)\n[![GitHub tag (latest by date)](https://img.shields.io/github/v/tag/TomWright/dasel?label=latest%20release)](https://github.com/TomWright/dasel/releases/latest)\n[![Homebrew tag (latest by date)](https://img.shields.io/homebrew/v/dasel)](https://formulae.brew.sh/formula/dasel)\n\nDasel (short for data-selector) allows you to query and modify data structures using selector strings.\n\nComparable to [jq](https://github.com/stedolan/jq) / [yq](https://github.com/kislyuk/yq), but supports JSON, YAML, TOML, XML and CSV with zero runtime dependencies.\n\n## One tool to rule them all\n\nSay good bye to learning new tools just to work with a different data format.\n\nDasel uses a standard selector syntax no matter the data format. This means that once you learn how to use dasel you immediately have the ability to query/modify any of the supported data types without any additional tools or effort.\n\n![Update Kubernetes Manifest](update_kubernetes.gif)\n\n## Table of contents\n\n- [Dasel](#dasel)\n- [One tool to rule them all](#one-tool-to-rule-them-all)\n- [Quickstart](#quickstart)\n- [Completion](#completion)\n- [Issue vs discussion](#issue-vs-discussion)\n- [Features](#features)\n- [Table of contents](#table-of-contents)\n- [Documentation](#documentation)\n- [Playground](#playground)\n- [Benchmarks](#benchmarks)\n- [Pre-Commit](#pre-commit)\n\n## Quickstart\n\nDasel is available on [homebrew](https://daseldocs.tomwright.me/installation#homebrew), [ASDF](https://daseldocs.tomwright.me/installation#asdf), [scoop](https://daseldocs.tomwright.me/installation#scoop), [docker](https://daseldocs.tomwright.me/installation#docker), [Nix](https://daseldocs.tomwright.me/installation#nix) or as [compiled binaries](https://daseldocs.tomwright.me/installation#manual) from the [latest release](https://github.com/TomWright/dasel/releases/latest).\n\n```bash\nbrew install dasel\n```\n\nYou can also install a [development version](https://daseldocs.tomwright.me/installation#development-version) with:\n\n```bash\ngo install github.com/tomwright/dasel/v2/cmd/dasel@master\n```\n\nFor more information see the [installation documentation](https://daseldocs.tomwright.me/installation).\n\n### Select\n\n```bash\necho '{\"name\": \"Tom\"}' | dasel -r json 'name'\n\"Tom\"\n```\n\nSee [select documentation](https://daseldocs.tomwright.me/commands/select).\n\n### Convert json to yaml\n\n```bash\necho '{\"name\": \"Tom\"}' | dasel -r json -w yaml\nname: Tom\n```\n\nSee [select documentation](https://daseldocs.tomwright.me/commands/select).\n\n### Put\n\n```bash\necho '{\"name\": \"Tom\"}' | dasel put -r json -t string -v 'contact@tomwright.me' 'email'\n{\n  \"email\": \"contact@tomwright.me\",\n  \"name\": \"Tom\"\n}\n```\n\nSee [put documentation](https://daseldocs.tomwright.me/commands/put).\n\n### Delete\n\n```bash\necho '{\n  \"email\": \"contact@tomwright.me\",\n  \"name\": \"Tom\"\n}' | dasel delete -r json '.email'\n{\n  \"name\": \"Tom\"\n}\n```\n\nSee [delete documentation](https://daseldocs.tomwright.me/commands/delete).\n\n## Completion\n\nIf you want to use completion from the terminal you can do the following (using zsh in this example):\n\nAdd the following to `~/.zshrc` and reload your terminal.\n```bash\nexport fpath=(~/zsh/site-functions $fpath)\nmkdir -p ~/zsh/site-functions\ndasel completion zsh > ~/zsh/site-functions/_dasel\ncompinit\n```\n\n## Pre-Commit\n\nAdd `dasel` hooks to `.pre-commit-config.yaml` file\n\n```yaml\n- repo: https://github.com/TomWright/dasel\n  rev: v1.25.1\n  hooks:\n    - id: dasel-validate\n```\n\nfor a native execution of dasel, or use:\n\n- `dasel-validate-docker` pre-commit hook for executing dasel using the official [Docker images](https://daseldocs.tomwright.me/installation#docker)\n- `dasel-validate-bin` pre-commit hook for executing dasel using the official [binary](https://daseldocs.tomwright.me/installation)\n\n## Issue vs Discussion\n\nI have enabled [discussions](https://github.com/TomWright/dasel/discussions) on this repository.\n\nI am aware there may be some confusion when deciding where you should communicate when reporting issues, asking questions or raising feature requests so this section aims to help us align on that.\n\nPlease [raise an issue](https://github.com/TomWright/dasel/issues) if:\n\n- You find a bug.\n- You have a feature request and can clearly describe your request.\n\nPlease [open a discussion](https://github.com/TomWright/dasel/discussions) if:\n\n- You have a question.\n- You're not sure how to achieve something with dasel.\n- You have an idea but don't quite know how you would like it to work.\n- You have achieved something cool with dasel and want to show it off.\n- Anything else!\n\n## Features\n\n- [Query/select data from structured data files](https://daseldocs.tomwright.me/commands/select).\n- [Update data in structured data files](https://daseldocs.tomwright.me/commands/put).\n- Create data files.\n- [Supports multiple data formats/types](https://daseldocs.tomwright.me/supported-file-formats).\n- [Convert between data formats/types](https://daseldocs.tomwright.me/examples/change-file-format).\n- Uses a [standard query/selector syntax](https://daseldocs.tomwright.me/functions/selector-overview) across all data formats.\n- Zero runtime dependencies.\n- [Available on Linux, Mac and Windows](https://daseldocs.tomwright.me/installation).\n- Available to [import and use in your own projects](https://pkg.go.dev/github.com/tomwright/dasel/v2).\n- [Run via Docker](https://daseldocs.tomwright.me/installation#docker).\n- [Faster than jq/yq](#benchmarks).\n- [Pre-commit hooks](#pre-commit).\n\n## Documentation\n\nThe official dasel docs can be found at [daseldocs.tomwright.me](https://daseldocs.tomwright.me).\n\n## Playground\n\nYou can test out dasel commands using the [playground](https://dasel.tomwright.me).\n\nSource code for the playground can be found at [github.com/TomWright/daselplayground](https://github.com/TomWright/daselplayground).\n\n## Benchmarks\n\nIn my tests dasel has been up to 3x faster than jq and 15x faster than yq.\n\nSee the [benchmark directory](./benchmark/README.md).\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/TomWright/dasel.svg)](https://starchart.cc/TomWright/dasel)"
}
