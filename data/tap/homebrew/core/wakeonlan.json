{
  "name": "wakeonlan",
  "full_name": "wakeonlan",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Sends magic packets to wake up network-devices",
  "license": "Artistic-1.0-Perl",
  "homepage": "https://github.com/jpoliv/wakeonlan",
  "versions": {
    "stable": "0.42",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/jpoliv/wakeonlan/archive/v0.42.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "4f533f109f7f4294f6452b73227e2ce4d2aa81091cf6ae1f4fa2f87bad04a031"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wakeonlan/blobs/sha256:f541c4803bb947fd8bec2daa1ff9ddcc5c1f7aab2f2b1952cbae99bacea30d8c",
          "sha256": "f541c4803bb947fd8bec2daa1ff9ddcc5c1f7aab2f2b1952cbae99bacea30d8c"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wakeonlan/blobs/sha256:f541c4803bb947fd8bec2daa1ff9ddcc5c1f7aab2f2b1952cbae99bacea30d8c",
          "sha256": "f541c4803bb947fd8bec2daa1ff9ddcc5c1f7aab2f2b1952cbae99bacea30d8c"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wakeonlan/blobs/sha256:cd9429ee013c7d939887d72d5876a7f617855bc521f372a9d30dd393917e874d",
          "sha256": "cd9429ee013c7d939887d72d5876a7f617855bc521f372a9d30dd393917e874d"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wakeonlan/blobs/sha256:f541c4803bb947fd8bec2daa1ff9ddcc5c1f7aab2f2b1952cbae99bacea30d8c",
          "sha256": "f541c4803bb947fd8bec2daa1ff9ddcc5c1f7aab2f2b1952cbae99bacea30d8c"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wakeonlan/blobs/sha256:f541c4803bb947fd8bec2daa1ff9ddcc5c1f7aab2f2b1952cbae99bacea30d8c",
          "sha256": "f541c4803bb947fd8bec2daa1ff9ddcc5c1f7aab2f2b1952cbae99bacea30d8c"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wakeonlan/blobs/sha256:cd9429ee013c7d939887d72d5876a7f617855bc521f372a9d30dd393917e874d",
          "sha256": "cd9429ee013c7d939887d72d5876a7f617855bc521f372a9d30dd393917e874d"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wakeonlan/blobs/sha256:a54812034696435a392dd80980cd74b56c8dc2bc30a5d001b679637a00ce6b8e",
          "sha256": "a54812034696435a392dd80980cd74b56c8dc2bc30a5d001b679637a00ce6b8e"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wakeonlan/blobs/sha256:b1e0c7185796fd30b6592b244bcd1032fa019667e0dbc5fe92ea9ececf842f75",
          "sha256": "b1e0c7185796fd30b6592b244bcd1032fa019667e0dbc5fe92ea9ececf842f75"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "perl"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/wakeonlan.rb",
  "ruby_source_checksum": {
    "sha256": "14c050088eef5218f60cd84e5e14fafc4b5945513c3318845cd2902f9413b577"
  },
  "date_added": "2009-12-05T14:45:51+00:00",
  "readme": "# wakeonlan\n\nThis is some premature documentation for this project. Feel free to contact\nwith comments or additions (good or bad).\n\nAuthors:\n\n* José Pedro Oliveira ~~<jpo[at]di.uminho.pt>~~ <jose.p.oliveira.oss[at]gmail.com>\n* Ico Doornekamp <ico[at]edd.dhs.org>\n\nTable of contents:\n\n1. [What is wakeonlan](#1-what-is-wakeonlan)\n2. [How does WOL work?](#2-how-does-wol-work)\n3. [How is it implemented here?](#3-how-is-it-implemented-here)\n4. [Known to work hardware](#4-known-to-work-hardware)\n5. [References](#5-references)\n\n## 1. What is wakeonlan\n\nThis script sends 'magic packets' to wake-on-lan enabled ethernet\nadapters, in order to switch on the called PC.\n\n## 2. How does WOL work?\n\nWOL is based on the following principle :\n\nWhen the PC shuts down, the NIC still gets power, and keeps listening on\nthe network for a 'magic' packet to arrive. This packet must contain a\ncertain byte-sequence, but can be encapsulated in any kind of packet\n(IPX, IP, anything). Take a look at the code for the magic sequence.\n\nThis program uses UDP for sending the packet. The complete UDP packet, sent\nover an ethernet interface, looks something like this\n\n```text\n[Ethernet header][IP header][UDP header][Magic sequence][CRCS]\n```\n\nThe only goal of the script is to send this packet over the network. It\nexpects no returning data, since the NIC only listens, and does not reply\nanything.\n\nFor a more detailed description of the Magic Packet technology, check the\nAMD resources listed in the [references](#5-references) section.\n\n## 3. How is it implemented here?\n\nThe scripts takes 2 arguments, the MAC-address of the NIC, and an IP\naddress. The IP-address is tricky :\n\nFor a NIC on your local subnet, use the broadcast-address of this subnet.\n(e.g. subnet 192.168.10.0 with netmask 255.255.255.0, use 192.168.10.255)\n\nFor waking up a PC on a network behind one or more routers, some tricks must\nbe used. When the routers forward directed subnet broadcasts, it is possible\nto use the broadcast address of the destination network. The problem is that\nmany routers don't forward broadcast packets, so the packet will never arrive\nat the network.\n\nIt is possible to send the packet to the remote net however, by sending it\nto the IP address of another host on that network that's alive at that\nmoment. The remote hosts will probably ignore the packet, but it has been\nseen by the listening NIC that's also on the same subnet, and it will turn\non the computer... Feel free to experiment on this.\n\n## 4. Known-to-work hardware\n\n* 3Com 3c905B Cyclone 100baseTx on an Abit BP6 Motherboard;\n  (Ico Doornekamp)\n\n* Intel EtherExpress Pro (i82557) with management chip built onto an IBM\n  IntelliStation motherboard;\n  (Sean-Paul Rees)\n\n* Intel EtherExpress PRO/100+ (chipset 82559) with a PXE boot agent on\n  an ASUS P2B motherboard;\n  (José Pedro Oliveira)\n\n* Motherboard: ASUS TUSL2-C;\n  BIOS: Award BIOS / Power / Power Up Control / Wake On LAN or PCI Modem [Enable];\n  Network card: Intel Pro/100 S Desktop Adapter (chipset 82550)\n  with PXE boot agent v4.0.22;\n  (José Pedro Oliveira)\n\n* Motherboard: ASUS TUSL2-C;\n  BIOS: Award BIOS / Power / Power Up Control / Wake On LAN or PCI Modem [Enable]\n  Network card: 3Com Fast Etherlink TX 10/100 PCI (3C905C-TXM)\n  with Managed PC Boot Agent (MBA) v4.30 (build 3)\n  Pre-boot eXecution Environment (PXE) v2.20;\n  (José Pedro Oliveira)\n\n* nVidia Corporation nForce2 Ethernet Controller on ASUS and EPOX motherboards;\n  (Antoniu-George)\n\n* Macs: All Powerbooks;\n  Energy Prefs: Wake on ethernet network Administrator access;\n  (Denis Ahrens)\n\n## 5. References\n\n* [AMD - Magic Packet Technology](https://web.archive.org/web/20000414213425/http://www.amd.com/products/npd/overview/20212.html) - Internet Archive link\n* [AMD - Magic Packet Technology - White paper](https://www.amd.com/system/files/TechDocs/20213.pdf)\n* [Wireshark wiki - WakeOnLan](https://gitlab.com/wireshark/wireshark/-/wikis/WakeOnLan)\n* [Wikipedia - Wake-On-LAN](https://en.wikipedia.org/wiki/Wake-on-LAN)\n* [Old wakeonlan project page](https://web.archive.org/web/20140120212300/http://gsd.di.uminho.pt:80/jpo/software/wakeonlan/) - Internet Archive link\n* [Old Wake on LAN mini HOWTO](https://web.archive.org/web/20080321144028/http://gsd.di.uminho.pt/jpo/software/wakeonlan/mini-howto/wol-mini-howto.html) - Internet Archive link\n\n<!-- vim:set ai ts=4 sw=4 sts=4 et: -->"
}
