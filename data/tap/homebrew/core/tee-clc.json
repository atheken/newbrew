{
  "name": "tee-clc",
  "full_name": "tee-clc",
  "tap": "homebrew/core",
  "oldname": "team-explorer-everywhere",
  "oldnames": [
    "team-explorer-everywhere"
  ],
  "aliases": [
    "team-explorer-everywhere"
  ],
  "versioned_formulae": [],
  "desc": "Microsoft Team Explorer Everywhere command-line Client",
  "license": "MIT",
  "homepage": "https://github.com/Microsoft/team-explorer-everywhere",
  "versions": {
    "stable": "14.135.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/Microsoft/team-explorer-everywhere/releases/download/14.135.0/TEE-CLC-14.135.0.zip",
      "tag": null,
      "revision": null,
      "checksum": "efc51f9b7cd8178d8f9c4c6897c98363e84cc1e44be42b7647d803c0059cffe4"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tee-clc/blobs/sha256:9dd40c57c121a700b71b8b89136ec535c2783316d2be8b60f514dfeb9daab031",
          "sha256": "9dd40c57c121a700b71b8b89136ec535c2783316d2be8b60f514dfeb9daab031"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "openjdk"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    {
      "expect": "test"
    }
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [
    "tiny-fugue"
  ],
  "conflicts_with_reasons": [
    "both install a `tf` binary"
  ],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": true,
  "disable_date": "2022-10-25",
  "disable_reason": "unmaintained",
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/tee-clc.rb",
  "ruby_source_checksum": {
    "sha256": "458c36256d70af605b4ab9586ead07080f9e43eb38a7506a92b53eb09022f13b"
  },
  "date_added": "2013-02-01T10:50:05-08:00",
  "readme": "> **This project is no longer maintained.** To make changes, you may fork this repository and build your own version of Team Explorer Everywhere using instructions below.\n\n---\n\n# Team Explorer Everywhere Plug-in for Eclipse and Cross-platform Command-line Client for Team Foundation Server\nThis project contains:\n- Team Explorer Everywhere Plug-in for Eclipse\n- Cross-platform Command-line Client for Team Foundation Server and Team Services\n- Team Foundation Server/Team Services SDK for Java\n\n## What is Team Explorer Everywhere?\nTeam Explorer Everywhere is the official TFS plug-in for Eclipse from Microsoft. \nIt works on the operating system of your choice with your favorite Eclipse-based IDE \nand helps you collaborate across development teams using Team Foundation Server \nor Visual Studio Team Services. \n \nSupported on Linux, Mac OS X, and Windows.\nCompatible with IDEs that are based on Eclipse 4.2 to 4.6.\n\n## Where Can I Get This Eclipse Plug-in?\n\nManually download and install the plug-in\nfrom the [Releases](https://github.com/Microsoft/team-explorer-everywhere/releases) section of this GitHub repository.\nThen install it in Eclipse from where its zip/archive file is saved on disk.\nDetailed instructions for installing zip/archive plugins into Eclipse are found [here](https://stackoverflow.com/questions/5482554/how-to-install-plugin-for-eclipse-from-zip).\n\n## What is the Command-line Client for TFS?\nThe CLC for TFS allows you run version control commands from a console/terminal window against a TFS server on any operating system. \nThis tool is for use with Team Foundation Version Control (TFVC), a centralized version control system.\nIf you prefer to use Git, you can use any Git client with TFS or Team Services as well.\n\n## Where Can I Get The Command-line Client?\nDownload the TEE-CLC-*.zip file in the [Releases](https://github.com/Microsoft/team-explorer-everywhere/releases) area of this repo.\n\n## Building with Ant\n### Install Java 6\n1. We use JavaSE-1.6 as the minimal supported Java execution environment.\n1. Download and install the JDK for [JavaSE-1.6](http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase6-419409.html).\n1. Set the JAVA_HOME environment variable to point to the install, e.g.\n * (Windows) `SET JAVA_HOME=C:\\dev\\java\\jdk1.6.0_45`\n * (Linux) `JAVA_HOME=~/dev/java/jdk1.6.0_45`\n * (Mac) `JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home`\n1. Add JAVA_HOME bin directory to the path\n * (Windows) `SET PATH=%JAVA_HOME%\\bin;%PATH%`\n * (Linux) `PATH=$JAVA_HOME/bin:$PATH`\n * (Mac) `PATH=$JAVA_HOME/bin:$PATH`\n    \n### Install Ant \n1. If you do not already have it, download and install Apache Ant(TM) version 1.9.6 from [Ant Binary Distributions](http://ant.apache.org/bindownload.cgi).\n1. Add the full path of the Ant `bin` directory to the `PATH` system environment variable. You can find more Ant installation details [here](http://ant.apache.org/manual/install.html#installing).\n * (Windows) `SET PATH=C:\\dev\\apache-ant-1.9.6\\bin;%PATH%`\n * (Linux) `PATH=~/dev/apache-ant-1.9.6/bin:$PATH`\n * (Mac) `PATH=~/dev/apache-ant-1.9.6/bin:$PATH`\n    \n### Install the Eclipse Target Environment\nHistorically, we use Eclipse 3.5.2 as the base target Eclipse version.\n1. Download and install Eclipse Classic from [Eclipse 3.5.2](http://www.eclipse.org/downloads/packages/release/galileo/sr2). On Windows, you may want to use a third party ZIP tool to unzip the Eclipse archive.\n1. Install the [EGit 2.1.0](http://archive.eclipse.org/egit/updates-2.1) plug-in into that Eclipse instance.\n\n### Clone the Repository\nUse the Git tool of your choice to clone the repository into a local path.\nFor example, you could use git.exe from a Windows console window:\n```\nmkdir c:\\repos\npushd c:\\repos\ngit clone https://github.com/Microsoft/team-explorer-everywhere\n```\n\n### Build\nNote: The Eclipse target installation location is needed as a parameter for the Ant build variable `dir.machine.build-runtime`. For the samples below, we will assume that the target Eclipse version was installed into '\\dev\\eclipseTargets\\352'.\n1. From a terminal/console window, change to the `build` subfolder of the root folder of the team-explorer-everywhere repository\n1. Run ant -Ddir.machine.build-runtime=`<pathToEclipseTarget>`, for example, \n```\n(Windows) ant -Ddir.machine.build-runtime=c:\\Users\\<userId>\\dev\\eclipseTargets\\352\\\n(Linux) ant -Ddir.machine.build-runtime=/home/<userId>/dev/eclipseTargets/352/\n(Mac) ant -Ddir.machine.build-runtime=/Applications/eclipse-classic/\n``` \n1. Build results can be found in `build\\output`\n\n## Contributing\nWe welcome pull requests. Please fork this repo and send us your contributions.\nSee [Contributing](./Contributing.md) for details.\n\n## Localization / Translation\nYour language, your words, your plug-in for you!\n\nAlong with open-sourced Team Explorer Everywhere (TEE) source code, we are making it possible for anyone to contribute translations in your native language. With these changes, you can now improve existing translated resources, translate updated resources, or even provide new language support TEE did not have before. Your contribution will be part of the TEE Plug-in in your language for everyone to use. We highly appreciate your efforts, and we welcome your feedback and suggestions on the TEE community localization process. Your contribution could be in next release!\n\nPlease click [Localization](./Localization.md) for details on how to contribute in TEE community translation effort. Feel free to contact [us](mailto:kevinli@microsoft.com) if you have any questions.\n\n**Happy contributing!**\n\n\n## Frequently Asked Questions (FAQ)\n**Q: Is there a beginner's guide for TEE?**\n\n**A:** Absolutely.  You can find it on MSDN at <a href=\"https://msdn.microsoft.com/en-us/library/hh913026(v=vs.120).aspx\" target=\"_blank\">Team Foundation Server Plug-in for Eclipse - Beginner's Guide</a>.\n\n**Q: Is there a way to view local repos in TEE 2015 in Eclipse (Mars) or is it assumed one would use the other Git tooling for Eclipse?**\n\n**A:** It is expected that one would use the standard EGit tooling in Eclipse to view local repos, but TEE does have a \"Repositories\" view in which you can see which repos are available on the server.\n\n**Q: Also, is there an easy way (using TEE) to “import” a local Git repo and push it up to Team Services? Or is the Git command-line the way to do it?**\n\n**A:** There’s documentation on how to do it in TEE at <a href=\"https://msdn.microsoft.com/en-us/library/hh568708(v=vs.120).aspx\" target=\"_blank\">Sharing Eclipse Projects in Team Foundation Server</a>.\nThat article specifically shows TFVC but when you go to Share the project, you’ll be prompted to choose a repository type (Git or TFVC).\n\n**Q: Where can I get more help?**\n\n**A:** Log an issue or check the <a href=\"https://social.msdn.microsoft.com/Forums/vstudio/en-US/home?forum=tee\" target=\"_blank\">Team Explorer Everywhere forum</a>\n\n**Q: Where can I learn more about the Azure Toolkit for Eclipse?**\n\n**A:** Check the <a href=\"https://docs.microsoft.com/azure/azure-toolkit-for-eclipse\" target=\"_blank\">Azure Toolkit for Eclipse web page</a>\n\n**Q: The TEE Command Line Client has removed the \"tf profile\" command. How can I connect to TFS without having to repeatedly type my credentials?**\n\n**A:** You can use Kerberos for authentication to a TFS server. More information can be found <a href=\"https://msdn.microsoft.com/en-us/library/gg475929%28v=vs.120%29.aspx\" target=\"_blank\">here.</a> This article mentions the \"tf profile\" command because it still existed at that time this article was written but that step can be skipped now all together.\n\n**Q: How can I fix the \"Authentication not supported\" error when using Eclipse to perform Git operations with TFS?**\n\n**A:** Eclipse’s EGit is built on JGit, and unfortunately, recent versions of JGit actively reject NTLM authentication, resulting in “Authentication not supported” when connecting to on-premises installations of TFS that require NTLM.  We’re working to improve this situation in the next version of TEE, but until then, you can do one of the following:\n* Use <a href=\"http://cntlm.sourceforge.net/\" target=\"_blank\">Cntlm</a>, a locally-installed proxy that adds NTLM authentication on-the-fly\n* Use an older version of Eclipse/EGit/JGit\n* <a href=\"https://github.com/Microsoft/tfs-cli/blob/master/docs/configureBasicAuth.md\" target=\"_blank\">Enable</a> basic authentication with SSL in IIS on your TFS server\n* Enable Kerberos authentication in IIS on your TFS server (the default for the next version of TFS after TFS 2015):\n  1. In IIS manager, click on the TFS site on the left under Connections and open up the \"Authentication\" section under IIS.  Set “ASP.NET Impersonation” to Enabled and “Windows Authentication” to Enabled.\n  2. Under \"Windows Authentication\" right click and select \"Providers.\"  Add/enable the \"Negotiate\" and \"NTLM\" providers.\n  3. Under \"Windows Authentication\" right click and select \"Advanced Settings.\"  Uncheck \"Enable Kernel-mode\" because it is incompatible with Kerberos."
}
