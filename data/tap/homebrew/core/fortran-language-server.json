{
  "name": "fortran-language-server",
  "full_name": "fortran-language-server",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Language Server for Fortran",
  "license": "MIT",
  "homepage": "https://github.com/hansec/fortran-language-server",
  "versions": {
    "stable": "1.12.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/hansec/fortran-language-server/archive/refs/tags/v1.12.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "5cda6341b1d2365cce3d80ba40043346c5dcbd0b35f636bfa57cb34df789ff17"
    },
    "head": {
      "url": "https://github.com/hansec/fortran-language-server.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fortran-language-server/blobs/sha256:17c7e96365f45c2bc3f9bd8262cc4817665613c50cb50be547c35284027b3e36",
          "sha256": "17c7e96365f45c2bc3f9bd8262cc4817665613c50cb50be547c35284027b3e36"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fortran-language-server/blobs/sha256:17c7e96365f45c2bc3f9bd8262cc4817665613c50cb50be547c35284027b3e36",
          "sha256": "17c7e96365f45c2bc3f9bd8262cc4817665613c50cb50be547c35284027b3e36"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fortran-language-server/blobs/sha256:17c7e96365f45c2bc3f9bd8262cc4817665613c50cb50be547c35284027b3e36",
          "sha256": "17c7e96365f45c2bc3f9bd8262cc4817665613c50cb50be547c35284027b3e36"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fortran-language-server/blobs/sha256:59ed4a2e6b58298c6c0578ba43dffbeeb83e3f0a11287b1e6ca64a98aa9c2260",
          "sha256": "59ed4a2e6b58298c6c0578ba43dffbeeb83e3f0a11287b1e6ca64a98aa9c2260"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fortran-language-server/blobs/sha256:59ed4a2e6b58298c6c0578ba43dffbeeb83e3f0a11287b1e6ca64a98aa9c2260",
          "sha256": "59ed4a2e6b58298c6c0578ba43dffbeeb83e3f0a11287b1e6ca64a98aa9c2260"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fortran-language-server/blobs/sha256:59ed4a2e6b58298c6c0578ba43dffbeeb83e3f0a11287b1e6ca64a98aa9c2260",
          "sha256": "59ed4a2e6b58298c6c0578ba43dffbeeb83e3f0a11287b1e6ca64a98aa9c2260"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fortran-language-server/blobs/sha256:59ed4a2e6b58298c6c0578ba43dffbeeb83e3f0a11287b1e6ca64a98aa9c2260",
          "sha256": "59ed4a2e6b58298c6c0578ba43dffbeeb83e3f0a11287b1e6ca64a98aa9c2260"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fortran-language-server/blobs/sha256:5faf0297d9b3999acc76939265cafc7adbe5a2298ba0719f9a0969feb83784fd",
          "sha256": "5faf0297d9b3999acc76939265cafc7adbe5a2298ba0719f9a0969feb83784fd"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [
    "fortls"
  ],
  "conflicts_with_reasons": [
    "both install `fortls` binaries"
  ],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/fortran-language-server.rb",
  "ruby_source_checksum": {
    "sha256": "83d1ac5c790fe5d28f7fd88013019aee7fd922e3ff98fd1cdbd47b68587762e1"
  },
  "date_added": "2022-03-14T08:00:02+00:00",
  "readme": "Fortran Language Server\n=======================\n\n.. image:: https://travis-ci.org/hansec/fortran-language-server.svg?branch=master\n     :target: https://travis-ci.org/hansec/fortran-language-server\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/hansec/fortran-language-server?branch=master&svg=true\n     :target: https://ci.appveyor.com/project/hansec/fortran-language-server\n\n.. image:: https://img.shields.io/github/license/hansec/fortran-language-server.svg\n     :target: https://github.com/hansec/fortran-language-server/blob/master/LICENSE\n\nA Fortran implementation of the `Language Server Protocol <https://github.com/Microsoft/language-server-protocol>`_ using Python (2.7+ or 3.0+).\n\nEditor extensions using this language server to provide autocomplete and other IDE-like functionality are\navailable for `Atom <https://atom.io/packages/ide-fortran>`_,\n`Visual Studio Code <https://marketplace.visualstudio.com/items?itemName=hansec.fortran-ls>`_,\n`Visual Studio <https://github.com/michaelkonecny/vs-fortran-ls-client>`_,\n`(Neo)vim <https://github.com/hansec/fortran-language-server/wiki/Using-forts-with-vim>`_,\nand `Emacs <https://github.com/emacs-lsp/lsp-mode>`_.\n\nLanguage Server Features\n------------------------\n\n- Document symbols (``textDocument/documentSymbol``)\n- Auto-complete (``textDocument/completion``)\n- Signature help (``textDocument/signatureHelp``)\n- GoTo/Peek definition (``textDocument/definition``)\n- Hover (``textDocument/hover``)\n- GoTo implementation (``textDocument/implementation``)\n- Find/Peek references (``textDocument/references``)\n- Project-wide symbol search (``workspace/symbol``)\n- Symbol renaming (``textDocument/rename``)\n- Documentation parsing (`Doxygen <http://www.doxygen.org/>`_ and `FORD <https://github.com/Fortran-FOSS-Programmers/ford>`_ styles)\n- Diagnostics (limited)\n\n  - Multiple definitions with the same variable name\n  - Variable definition masks definition from parent scope\n  - Missing subroutine/function arguments\n  - Unknown user-defined type used in \"TYPE\"/\"CLASS\" definition (only if visible in project)\n  - Unclosed blocks/scopes\n  - Invalid scope nesting\n  - Unknown modules in \"USE\" statement\n  - Unimplemented deferred type-bound procedures\n  - Use of unimported variables/objects in interface blocks\n  - Statement placement errors (\"CONTAINS\", \"IMPLICIT\", \"IMPORT\")\n\n- Code actions (``textDocument/codeAction``) [Experimental]\n\n  - Generate type-bound procedures and implementation templates for deferred procedures\n\nNotes/Limitations:\n^^^^^^^^^^^^^^^^^^\n\n- Signature help is not available for overloaded subroutines/functions\n- Diagnostics are only updated when files are saved or opened/closed\n\nInstallation\n------------\n\n``pip install fortran-language-server``\n\nIf you get the following error:\n\n   ``'install_requires' must be a string or list of strings containing valid project/version requirement specifiers``\n\ntry updating setuptools:\n\n::\n\n    pip install -U setuptools\n    pip install fortran-language-server\n\nLanguage server settings\n------------------------\n\nThe following global settings can be used when launching the language server.\n\n* ``--nthreads`` Number of threads to use during workspace initialization (default: 4)\n* ``--notify_init`` Send notification message when workspace initialization is complete\n* ``--symbol_skip_mem`` Do not include type members in document symbol results\n* ``--incremental_sync`` Use incremental document synchronization\n* ``--autocomplete_no_prefix`` Do not filter autocomplete results by variable prefix\n* ``--autocomplete_no_snippets`` Do not use snippets with place holders in autocomplete results\n* ``--autocomplete_name_only`` Complete only the name of procedures and not the parameters\n* ``--lowercase_intrinsics`` Use lowercase for intrinsics and keywords in autocomplete requests\n* ``--use_signature_help`` Use signature help instead of snippets for subroutines/functions\n* ``--variable_hover`` Show hover information for variables (default: subroutines/functions only)\n* ``--hover_signature`` Show signature information in hover for argument (also enables '--variable_hover')\n* ``--preserve_keyword_order`` Display variable keywords information in original order (default: sort to consistent ordering)\n* ``--enable_code_actions`` Enable experimental code actions (default: false)\n* ``--disable_diagnostics`` Disable code diagnostics (default: false)\n* ``--max_line_length`` Maximum line length (default: none)\n* ``--max_comment_line_length`` Maximum comment line length (default: none)\n* ``--debug_log`` Write debug information to ``root_dir/fortls_debug.log`` (requires a specified ``root_dir`` during initialization)\n\nDebug settings:\n^^^^^^^^^^^^^^^\n\nThe following settings can be used to perform `standalone debug tests <https://github.com/hansec/fortran-language-server/wiki>`_ on the language server.\n\n* ``--debug_filepath=DEBUG_FILEPATH`` File path for language server tests\n* ``--debug_rootpath=DEBUG_ROOTPATH`` Root path for language server tests\n* ``--debug_line=DEBUG_LINE`` Line position for language server tests (1-indexed)\n* ``--debug_char=DEBUG_CHAR`` Character position for language server tests (1-indexed)\n* ``--debug_full_result`` Print full result object instead of condensed version\n* ``--debug_parser`` Test source code parser on specified file\n* ``--debug_diagnostics`` Test diagnostic notifications for specified file\n* ``--debug_symbols`` Test symbol request for specified file\n* ``--debug_workspace_symbols=QUERY_STRING`` Test workspace/symbol request for project-wide search\n* ``--debug_completion`` Test completion request for specified file and position\n* ``--debug_signature`` Test signatureHelp request for specified file and position\n* ``--debug_definition`` Test definition request for specified file and position\n* ``--debug_hover`` Test hover request for specified file and position\n* ``--debug_implementation`` Test implementation request for specified file and position\n* ``--debug_references`` Test references request for specified file and position\n* ``--debug_rename=RENAME_STRING`` Test rename request for specified file and position\n* ``--debug_actions`` Test codeAction request for specified file and position\n\nConfiguration\n-------------\n\nProject specific settings can be specified by placing a JSON file named ``.fortls`` (example below)\nin the ``root_dir`` directory.\n\n* ``lowercase_intrinsics`` Use lowercase for intrinsics and keywords in autocomplete requests (default: false)\n* ``debug_log`` Write debug information to ``root_dir/fortls_debug.log`` (default: false)\n* ``disable_diagnostics`` Disable diagnostics for this project only (default: false)\n* ``max_line_length`` Maximum line length (default: none)\n* ``max_comment_line_length`` Maximum comment line length (default: none)\n\nSetup source file search paths:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nBy default all files with the suffix ``F,F77,F90,F95,F03,F08,FOR,FPP`` (case-insensitive) in the\n``root_dir`` directory, specified during initialization, and all its sub-directories are parsed and included in\nthe project.\n\nDirectories and files can be excluded from the project by specifying their paths (relative to ``root_dir``) in\nthe ``excl_paths`` variable in the ``.fortls`` file. Excluded directories also exclude all sub-directories. Source\nfiles with a common suffix may also be excluded using the ``excl_suffixes`` variable.\n\nSource file directories can also be specified manually by specifying their paths (relative to ``root_dir``) in\nthe ``source_dirs`` variable in the ``.fortls`` file. When ``source_dirs`` is specified directories are not added\nrecursively, so any nested sub directories must be explicitly listed. However, ``root_dir`` does not need to\nbe specified manually as it is always included.\n\nExternal source files (ex. libraries) can also be included in language server results by specifying their paths\nin the ``ext_source_dirs`` variable in the ``.fortls`` file. These files will be parsed during initialization,\nbut will not be updated with any changes made until the language server is restarted. As with ``source_dirs``,\nspecified directories are not added recursively, so any nested sub directories must be explicitly listed.\n\n**Note:** The previous naming convention for source file directories (``mod_dirs``) is still supported\nbut has been deprecated.\n\nPreprocessing:\n^^^^^^^^^^^^^^\n\n**Note:** Preprocessor support is not \"complete\", see below. For preprocessed files the language server\nwill only analyze code within preprocessor conditional regions if the conditional test can be\nevaluated by the server or if the region is the *default* path (ie. a bare ``#else`` region).\n\n**Note:** Currently, ``#include`` statements are only used for preprocessing (ie. tracking definitions).\nFortran objects defined in these files will not be processed.\n\nFile suffixes for preprocessing can be controlled with the variable ``pp_suffixes`` in a workspace's\n``.fortls`` file. When this variable is used *only* those files with the specified suffixes will be\npreprocessed. If an empty array is specified then *no* preprocessing will be performed on any files.\nBy default, or if the variable is ommited or ``null``, only files with upper case suffixes are preprocessed.\n\nPreprocessor definitions can be set for each project, to improve support for Fortran files using conditional\ncompilation, using the ``pp_defs`` variable in the ``.fortls`` file. Preprocessing is performed *only* for files\nwhere the file extension is all caps (ie. \".F90\", \".F\", etc.). Currently, support for preprocessing is limited\nto variables declared in the project's ``.fortls`` file or in the source file of interest as ``#include`` files\nand inheritance through ``USE`` statements are yet not supported. Variable substitution is also performed\nwithin files, but is currently limited to non-recursive cases. For example, ``#define PP_VAR1 PP_VAR2`` will\ncause ``PP_VAR1`` to be replaced with the text ``PP_VAR2`` throughout the file, not that value of ``PP_VAR2``.\n\nInclude directories can be specified using the variable ``include_dirs`` in a workspace's ``.fortls`` file.\nThese directories are *only* used to search for preprocessor ``#include``'d files. The directory containing\nthe file where an ``#include`` statement is encountered is always searched. File search is performed starting\nwith the containing directory followed by the specified ``include_dirs`` specified paths, in order (left to right).\n\n\n::\n\n    {\n      \"source_dirs\": [\"subdir1\", \"subdir2\"],\n      \"excl_paths\": [\"subdir3\", \"subdir1/file_to_skip.F90\"],\n      \"excl_suffixes\": [\"_skip.f90\"],\n      \"pp_suffixes\": [\".f03\", \".F90\"],\n      \"pp_defs\": {\"HAVE_PACKAGE\": \"\"},\n      \"include_dirs\": [\"rel_include/dir_path\", \"/abs/include/dir/path\"],\n      \"ext_source_dirs\": [\"/path/to/fortran/library\"],\n      \"lowercase_intrinsics\": false,\n      \"debug_log\": false\n    }\n\nBug reports\n-----------\nWhen `filing bugs <https://github.com/hansec/fortran-language-server/issues/new>`_ please provide example code to reproduce the observed issue.\n\nLicense\n-------\n\nThis project is made available under the `MIT License <https://github.com/hansec/fortran-language-server/blob/master/LICENSE>`_.\n\nSupport\n-------\n\nIf you *really* like `this package <https://github.com/hansec/fortran-language-server>`_ you can `buy me a coffee <https://paypal.me/hansec>`_ to say thanks.\n\nEditor examples (Atom):\n-----------------------\n\nDocument symbols (``textDocument/documentSymbol``):\n\n.. image:: https://raw.githubusercontent.com/hansec/fortran-language-server/master/images/fortls_outline.png\n\nAuto-complete (``textDocument/completion``):\n\n.. image:: https://raw.githubusercontent.com/hansec/fortran-language-server/master/images/fortls_autocomplete.gif\n\nSignature help (``textDocument/signatureHelp``):\n\n.. image:: https://raw.githubusercontent.com/hansec/fortran-language-server/master/images/fortls_sigHelp.gif\n\nGoto definition (``textDocument/definition``):\n\n.. image:: https://raw.githubusercontent.com/hansec/fortran-language-server/master/images/fortls_gotodef.gif\n\nHover (``textDocument/hover``):\n\n.. image:: https://raw.githubusercontent.com/hansec/fortran-language-server/master/images/fortls_hover.gif\n\nFind references (``textDocument/references``):\n\n.. image:: https://raw.githubusercontent.com/hansec/fortran-language-server/master/images/fortls_refs.png\n\nDiagnostics:\n\n.. image:: https://raw.githubusercontent.com/hansec/fortran-language-server/master/images/fortls_diag.png"
}
