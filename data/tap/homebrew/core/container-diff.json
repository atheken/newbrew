{
  "name": "container-diff",
  "full_name": "container-diff",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Diff your Docker containers",
  "license": "Apache-2.0",
  "homepage": "https://github.com/GoogleContainerTools/container-diff",
  "versions": {
    "stable": "0.17.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/GoogleContainerTools/container-diff/archive/v0.17.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "b1d909c4eff0e3355ba45516daddef0adfa4cdcd0c8b41863060c66f524353f9"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/container-diff/blobs/sha256:0701c2558a655c78d45640ef027c31d09a2f173fdcfffebfb8829a569d0d1200",
          "sha256": "0701c2558a655c78d45640ef027c31d09a2f173fdcfffebfb8829a569d0d1200"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/container-diff/blobs/sha256:9df5a58421447c581cf17ec7b7ccd2f131156004bf9b7adb87f4fe6a6fd54bec",
          "sha256": "9df5a58421447c581cf17ec7b7ccd2f131156004bf9b7adb87f4fe6a6fd54bec"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/container-diff/blobs/sha256:e41a2030963aa17e984e444844f065e21f3db400500602dd9fb70c15fab6efd3",
          "sha256": "e41a2030963aa17e984e444844f065e21f3db400500602dd9fb70c15fab6efd3"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/container-diff/blobs/sha256:937a84ed7417bff521a353527870112b88c88525a59619b093c5dc49ab56597c",
          "sha256": "937a84ed7417bff521a353527870112b88c88525a59619b093c5dc49ab56597c"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/container-diff/blobs/sha256:0eea29192581a1dea12c189c7e8fc9a2a339cc721c12306676fffcb330f34bce",
          "sha256": "0eea29192581a1dea12c189c7e8fc9a2a339cc721c12306676fffcb330f34bce"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/container-diff/blobs/sha256:339c0ec5e9dbe0b5255a3ca87c316cc159741bb7b6ae43189a9d20af8fb5a63e",
          "sha256": "339c0ec5e9dbe0b5255a3ca87c316cc159741bb7b6ae43189a9d20af8fb5a63e"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/container-diff/blobs/sha256:7b09d72b8cea67e283520a37ffb5082b7070443a5da1f78584270488ea6f8f74",
          "sha256": "7b09d72b8cea67e283520a37ffb5082b7070443a5da1f78584270488ea6f8f74"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/container-diff/blobs/sha256:4c9f7078b38379711d7eb961e9ed670a13a3240ce0c1d99d910d8313daa412bc",
          "sha256": "4c9f7078b38379711d7eb961e9ed670a13a3240ce0c1d99d910d8313daa412bc"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/container-diff/blobs/sha256:0bd5bb07cb846d439d1e88afbdc6a9e88301f155b470465d1e8a0c8c015032d3",
          "sha256": "0bd5bb07cb846d439d1e88afbdc6a9e88301f155b470465d1e8a0c8c015032d3"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/container-diff.rb",
  "ruby_source_checksum": {
    "sha256": "e049d9b356e0c40671724344a99129cb29fcb1e2ba8e6c7d522fc0c9796d5e70"
  },
  "date_added": "2018-01-24T02:08:25-08:00",
  "readme": "# container-diff\n\n[![Build\nStatus](https://travis-ci.org/GoogleContainerTools/container-diff.svg?branch=master)](https://travis-ci.org/GoogleContainerTools/container-diff)\n\n## What is container-diff?\n\ncontainer-diff is a tool for analyzing and comparing container images. container-diff can examine images along several different criteria, including:\n- Docker Image History\n- Image file system\n- Image size\n- Apt packages\n- RPM packages\n- pip packages\n- npm packages\n\nThese analyses can be performed on a single image, or a diff can be performed on two images to compare. The tool can help users better understand what is changing inside their images, and give them a better look at what their images contain.\n\n**NOTE: container-diff is a Google project, but is not currently being officially supported by Google and is in maintenance mode. However, contributions are still welcome and encouraged!**\n\n## Installation\n\n### macOS\n```shell\ncurl -LO https://storage.googleapis.com/container-diff/latest/container-diff-darwin-amd64 && \\\nsudo install container-diff-darwin-amd64 /usr/local/bin/container-diff\n```\n\n### Linux\n```shell\ncurl -LO https://storage.googleapis.com/container-diff/latest/container-diff-linux-amd64 && \\\nsudo install container-diff-linux-amd64 /usr/local/bin/container-diff\n```\n\nOR, if you want to avoid using sudo:\n\n```shell\ncurl -LO https://storage.googleapis.com/container-diff/latest/container-diff-linux-amd64 && \\\nmkdir -p \"$HOME/bin\" && export PATH=\"$PATH:$HOME/bin\" && \\\ninstall container-diff-linux-amd64 $HOME/bin/container-diff\n```\n\nThere is also an [Arch Linux package](https://www.archlinux.org/packages/community/x86_64/container-diff/). You can install by running:\n\n```shell\npacman -S container-diff\n```\n\n### Windows\nDownload the [container-diff-windows-amd64.exe](https://storage.googleapis.com/container-diff/latest/container-diff-windows-amd64.exe) file, rename it to `container-diff.exe` and add it to your path\n\n\n## Quickstart\n\nTo use `container-diff analyze` to perform analysis on a single image, you need one Docker image (in the form of an ID, tarball, or URL from a repo). Once you have that image, you can run any of the following analyzers:\n\n```shell\ncontainer-diff analyze <img>     [Run default analyzers]\ncontainer-diff analyze <img> --type=history  [History]\ncontainer-diff analyze <img> --type=file  [File System]\ncontainer-diff analyze <img> --type=size  [Size]\ncontainer-diff analyze <img> --type=rpm  [RPM]\ncontainer-diff analyze <img> --type=pip  [Pip]\ncontainer-diff analyze <img> --type=apt  [Apt]\ncontainer-diff analyze <img> --type=node  [Node]\ncontainer-diff analyze <img> --type=apt --type=node  [Apt and Node]\n# --type=<analyzer1> --type=<analyzer2> --type=<analyzer3>,...\n```\n\nBy default, with no `--type` flag specified, container-diff will run image size analysis.\n\nTo use container-diff to perform a diff analysis on two images, you need two Docker images (in the form of an ID, tarball, or URL from a repo). Once you have those images, you can run any of the following differs:\n```shell\ncontainer-diff diff <img1> <img2>     [Run default differs]\ncontainer-diff diff <img1> <img2> --type=history  [History]\ncontainer-diff diff <img1> <img2> --type=file  [File System]\ncontainer-diff diff <img1> <img2> --type=size  [Size]\ncontainer-diff diff <img1> <img2> --type=rpm  [RPM]\ncontainer-diff diff <img1> <img2> --type=pip  [Pip]\ncontainer-diff diff <img1> <img2> --type=apt  [Apt]\ncontainer-diff diff <img1> <img2> --type=node  [Node]\n```\n\nYou can similarly run many analyzers at once:\n\n```shell\ncontainer-diff diff <img1> <img2> --type=history --type=apt --type=node\n```\n\nTo view the diff of an individual file in two different images, you can use the filename flag in conjuction with the file system diff analyzer.\n\n```shell\ncontainer-diff diff <img1> <img2> --type=file --filename=/path/to/file\n```\n\n## Image Sources\n\ncontainer-diff supports Docker images located in both a local Docker daemon and a remote registry. To explicitly specify a local image, use the `daemon://` prefix on the image name; similarly, for an explicitly remote image, use the `remote://` prefix.\n\n```shell\ncontainer-diff diff daemon://modified_debian:latest remote://gcr.io/google-appengine/debian8:latest\n```\n\nAdditionally, tarballs can be provided to the tool directly. Make sure your file has a valid tar extension (.tar, .tar.gz, .tgz).\n\n**Note**: container-diff does not support references images by Docker ID directly. If your image only has an ID in your local Docker daemon, you'll need to tag it using `docker tag` before using it with container-diff.\n\n### Authentication\n\nContainer-diff supports docker-credential-helpers for authentication when using a registry as an image source.\nMake sure you have your credential helper configured before using container-diff, and it should work automatically.\n\nFor the Google Container Registry, make sure you have the `docker-credential-gcr` binary configured and on your path, following these [instructions](https://github.com/GoogleCloudPlatform/docker-credential-gcr).\n\n\n## Other Flags\n\nTo get a JSON version of the container-diff output add a `-j` or `--json` flag.\n\n```shell\ncontainer-diff diff --type=file --json gcr.io/gcp-runtimes/multi-base gcr.io/gcp-runtimes/multi-modified\n```\n\nTo order files and packages by size (in descending order) when performing file system or package analyses/diffs, add a `-o` or `--order` flag.\n\n```shell\ncontainer-diff analyze remote://gcr.io/gcp-runtimes/multi-modified --type=pip --order\n```\n\nTo suppress output to stderr, add a `-q` or `--quiet` flag.\n```shell\ncontainer-diff analyze file1.tar --type=file --quiet\n```\n\n## Analysis Result Format\n\nJSON output for analysis results is in the following format:\n```json\n{\n    \"Image\": \"foo\",\n    \"AnalyzeType\": \"Apt\",\n    \"Analysis\": {}\n}\n```\nThe possible contents of the `Analysis` field are detailed below.\n\n### History Analysis\n\nThe history analyzer outputs a list of strings representing descriptions of how an image layer was created. This is the only analyzer that requires a working Docker daemon to run.\n\n### File System Analysis\n\nThe file system analyzer outputs a list of file system contents, including names, paths, and sizes.\n\n### Package Analysis\n\nPackage analyzers such as pip, apt, and node inspect the packages installed within the image provided. All package analyses leverage the `PackageOutput` struct, which contains the version and size for a given package instance (and a potential installation path for a specific instance of a package where multiple versions are allowed to be installed), as detailed below:\n```go\ntype PackageOutput struct {\n\tName    string\n\tPath    string\n\tVersion string\n\tSize    int64\n}\n```\n\n#### Single Version Package Analysis\n\nSingle version package analyzers (apt) have the following output structure: `[]PackageOutput`\n\nHere, the `Path` field is omitted because there is only one instance of each package.\n\n#### Multi Version Package Analysis\n\nMulti version package analyzers (pip, node) have the following output structure: `[]PackageOutput`\n\nHere, the `Path` field is included because there may be more than one instance of each package, and thus the path exists to pinpoint where the package exists in case additional investigation into the package instance is desired.\n\n\n## Diff Result Format\n\nJSON output for diff results is in the following format:\n```json\n{\n    \"Image1\": \"foo\",\n    \"Image2\": \"bar\",\n    \"DiffType\": \"Apt\",\n    \"Diff\": {}\n}\n```\nThe possible structures of the `Diff` field are detailed below.\n\n### History Diff\n\nThe history differ has the following output structure:\n\n```go\ntype HistDiff struct {\n\tAdds []string\n\tDels []string\n}\n```\n\n### File System Diff\n\nThe file system differ has the following output structure:\n\n```go\ntype DirDiff struct {\n\tAdds  []string\n\tDels  []string\n\tMods  []string\n}\n```\n\n### Package Diffs\n\nPackage differs such as pip, apt, and node inspect the packages contained within the images provided. All packages differs currently leverage the PackageInfo struct which contains the version and size for a given package instance, as detailed below:\n```go\ntype PackageInfo struct {\n\tVersion string\n\tSize\tstring\n}\n```\n\n#### Single Version Package Diffs\n\nSingle version differs (apt) have the following JSON output structure:\n\n```go\ntype PackageDiff struct {\n\tPackages1 []PackageOutput\n\tPackages2 []PackageOutput\n\tInfoDiff  []Info\n}\n```\n\nPackages1 and Packages2 detail which packages exist uniquely in Image1 and Image2, respectively, with package name, version and size info. InfoDiff contains a list of Info structs, each of which contains the package name (which occurred in both images but had a difference in size or version), and the PackageInfo struct for each package instance.\n\n#### Multi Version Package Diffs\n\nThe multi version differs (pip, node) support processing images which may have multiple versions of the same package. Below is the json output structure:\n\n```go\ntype MultiVersionPackageDiff struct {\n\tPackages1 []PackageOutput\n\tPackages2 []PackageOutput\n\tInfoDiff  []MultiVersionInfo\n}\n```\n\nPackages1 and Packages2 detail which packages exist uniquely in Image1 and Image2, respectively, with package name, installation path, version and size info.  InfoDiff here is exanded to allow for multiple versions to be associated with a single package. In this case, a package of the same name is considered to differ between two images when there exist one or more instances of it installed in one image but not the other (i.e. have a unique version and/or size).\n\n```go\ntype MultiVersionInfo struct {\n\tPackage string\n\tInfo1\t[]PackageInfo\n\tInfo2\t[]PackageInfo\n}\n```\n\n## User Customized Output\nUsers can customize the format of the output of diffs with the`--format` flag. The flag takes a Go template string, which specifies the format the diff should be output in. This template string uses the structs described above, depending on the differ used, to format output.  The default template strings container-diff uses can be found [here](https://github.com/GoogleContainerTools/container-diff/blob/master/util/template_utils.go).\n\nAn example using the pip package analyzer is shown below, in which only package names are printed (some are repeated because of version differences).\n\n```shell\n$ container-diff analyze gcr.io/google-appengine/python:latest --type=pip --format='\n-----{{.AnalyzeType}}-----\nPackages found in {{.Image}}:{{if not .Analysis}} None{{else}}\n{{range .Analysis}}{{\"\\n\"}}{{.Name}}{{end}}\n{{end}}\n'\nRetrieving image gcr.io/google-appengine/python:latest from source Cloud Registry\nRetrieving analyses\n\n-----Pip-----\nPackages found in gcr.io/google-appengine/python:latest:\n\nchardet\ncolorama\nhtml5lib\nmercurial\npip\npip\npip\nrequests\nsetuptools\nsetuptools\nsetuptools\nsix\nurllib3\nvirtualenv\nwheel\nwheel\n```\n\n## Known issues\n\nTo run container-diff using image IDs, docker must be installed.\nTarballs provided directly to the tool must be in the Docker format (i.e. have a manifest.json file for layer ordering)\n\n\n## Example Run\n\n```shell\n$ container-diff diff gcr.io/google-appengine/python:2017-07-21-123058 gcr.io/google-appengine/python:2017-06-29-190410 --type=apt --type=node --type=pip\n\n-----AptDiffer-----\n\nPackages found only in gcr.io/google-appengine/python:2017-07-21-123058: None\n\nPackages found only in gcr.io/google-appengine/python:2017-06-29-190410: None\n\nVersion differences:\nPACKAGE             IMAGE1 (gcr.io/google-appengine/python:2017-07-21-123058)        IMAGE2 (gcr.io/google-appengine/python:2017-06-29-190410)\n-libgcrypt20        1.6.3-2 deb8u4, 998K                                             1.6.3-2 deb8u3, 1002K\n\n-----NodeDiffer-----\n\nPackages found only in gcr.io/google-appengine/python:2017-07-21-123058: None\n\nPackages found only in gcr.io/google-appengine/python:2017-06-29-190410: None\n\nVersion differences: None\n\n-----PipDiffer-----\n\nPackages found only in gcr.io/google-appengine/python:2017-07-21-123058: None\n\nPackages found only in gcr.io/google-appengine/python:2017-06-29-190410: None\n\nVersion differences: None\n\n```\n\n```shell\n$ container-diff diff file1.tar file2.tar --type=file --filename=go/src/app/file.txt\nStarting diff on images file1.tar and file2.tar, using differs: [file]\nRetrieving image file2.tar from source Tar Archive\nRetrieving image file1.tar from source Tar Archive\nComputing diffs\n\n-----File-----\n\nThese entries have been added to file1.tar: None\n\nThese entries have been deleted from file1.tar: None\n\nThese entries have been changed between file1.tar and file2.tar:\nFILE                        SIZE1        SIZE2\n/go/src/app/file.txt        30B          30B\n\nComputing filename diffs\n\n-----Diff of go/src/app/file.txt-----\n\n\n--- file1.tar\n+++ file2.tar\n@@ -1 +1 @@\n-This is file 1\nThis is a file\n+This is file 2\nThis is a file\n```\n\n## Example Run with JSON post-processing\nThe following example demonstrates how one might selectively display the output of their diff, such that version differences are ignored and only package absence/presence is displayed and the packages present in only one image are sorted by size in descending order. A small piece of the JSON being post-processed can be seen below:\n```json\n[\n  {\n    \"DiffType\": \"AptDiffer\",\n    \"Diff\": {\n      \"Image1\": \"gcr.io/gcp-runtimes/multi-base\",\n      \"Packages1\": {},\n      \"Image2\": \"gcr.io/gcp-runtimes/multi-modified\",\n      \"Packages2\": {\n        \"dh-python\": {\n          \"Version\": \"1.20141111-2\",\n          \"Size\": \"277\"\n        },\n        \"libmpdec2\": {\n          \"Version\": \"2.4.1-1\",\n          \"Size\": \"275\"\n        }\n      }\n    }\n  }\n]\n```\nThe post-processing script used for this example is below:\n\n```python\nimport sys, json\n\ndef main():\n  data = json.loads(sys.stdin.read())\n  img1packages = []\n  img2packages = []\n  for differ in data:\n    diff = differ['Diff']\n\n    if len(diff['Packages1']) > 0:\n      for package in diff['Packages1']:\n        Size = package['Size']\n        img1packages.append((str(package), int(str(Size))))\n\n    if len(diff['Packages2']) > 0:\n      for package in diff['Packages2']:\n        Size = package['Size']\n        img2packages.append((str(package), int(str(Size))))\n\n    img1packages = reversed(sorted(img1packages, key=lambda x: x[1]))\n    img2packages = reversed(sorted(img2packages, key=lambda x: x[1]))\n\n\n    print \"Only in image1\\n\"\n    for pkg in img1packages:\n      print pkg\n    print \"Only in image2\\n\"\n    for pkg in img2packages:\n      print pkg\n    print\n\nif __name__ == \"__main__\":\n  main()\n```\n\nGiven the above python script to postprocess json output, you can produce the following behavior:\n```shell\ncontainer-diff gcr.io/gcp-runtimes/multi-base gcr.io/gcp-runtimes/multi-modified -a -j | python pyscript.py\n\nOnly in image1\n\nOnly in image2\n\n('libpython3.4-stdlib', 9484)\n('python3.4-minimal', 4506)\n('libpython3.4-minimal', 3310)\n('python3.4', 336)\n('dh-python', 277)\n('libmpdec2', 275)\n('python3-minimal', 96)\n('python3', 36)\n('libpython3-stdlib', 28)\n\n```\n## Make your own differ\n\nFeel free to develop your own analyzer leveraging the utils currently available. PRs are welcome!\n\n### Custom Analyzer Quickstart\n\nIn order to quickly make your own analyzer, follow these steps:\n\n1. Determine if you can use existing analyzing or diffing tools.  If you can make use of existing tools, you then need to construct the structs to feed into the tools by getting all of the packages for each image or the analogous quality to be analyzed.  To determine if you can leverage existing tools, think through these questions:\n- Are you trying to analyze packages?\n    - Yes: Does the relevant package manager support different versions of the same package on one image?\n        - Yes: Implement `getPackages` to collect all versions of all packages within an image in a `map[string]map[string]util.PackageInfo`. Use [`GetMultiVersionMapDiff`](https://github.com/GoogleContainerTools/container-diff/blob/0031c88993c9ac019e2d404815ef50c652d8d010/util/package_diff_utils.go#L119-L126) to diff map objects.  See [`differs/node_diff.go`](https://github.com/GoogleContainerTools/container-diff/blob/0031c88993c9ac019e2d404815ef50c652d8d010/differs/node_diff.go#L49-L93) or [`differs/pip_diff.go`](https://github.com/GoogleContainerTools/container-diff/blob/0031c88993c9ac019e2d404815ef50c652d8d010/differs/pip_diff.go#L48-L111) for examples.\n        -  No: Implement `getPackages` to collect all versions of all packages within an image in a `map[string]util.PackageInfo`. Use [`GetMapDiff`](https://github.com/GoogleContainerTools/container-diff/blob/31cec2304b54ae6ae444ccde4382b113d8e06097/util/package_diff_utils.go#L110-L117) to diff map objects.  See [`differs/apt_diff.go`](https://github.com/GoogleContainerTools/container-diff/blob/master/differs/apt_diff.go#L29).\n    - No: Look to [History](https://github.com/GoogleContainerTools/container-diff/blob/0031c88993c9ac019e2d404815ef50c652d8d010/differs/history_diff.go) and [File System](https://github.com/GoogleContainerTools/container-diff/blob/0031c88993c9ac019e2d404815ef50c652d8d010/differs/file_diff.go) differs as models for diffing.\n\n2. Write your analyzer driver in the `differs` directory, such that you have a struct for your analyzer type and two methods for that analyzer: `Analyze` for single image analysis and `Diff` for comparison between two images:\n\n```go\ntype YourAnalyzer struct {}\n\nfunc (a YourAnalyzer) Analyze(image util.Image) (util.Result, error) {...}\nfunc (a YourAnalyzer) Diff(image1, image2 util.Image) (util.Result, error) {...}\n```\nThe image arguments passed to your analyzer contain the path to the unpacked tar representation of the image, as well as certain configuration information (e.g. environment variables upon image creation and image history).\n\nIf using existing package tools, you should create the appropriate structs (e.g. `SingleVersionPackageAnalyzeResult` or `SingleVersionPackageDiffResult`) to analyze or diff.  Otherwise, create your own structs which should yield information to fill an AnalyzeResult or DiffResult as the return type for Analyze() and Diff(), respectively, and should implement the `Result` interface, as in the next step.\n\n3. Create a struct following the [`Result`](https://github.com/GoogleContainerTools/container-diff/blob/0031c88993c9ac019e2d404815ef50c652d8d010/util/analyze_output_utils.go#L27-L30) interface by implementing the following two methods.\n\n```go\ntype Result interface {\n\tOutputStruct() interface{}\n\tOutputText(resultType string, format string) error\n}\n```\n\nThis is where you define how your analyzer should output for a human readable format (`OutputText`) and as a struct which can then be written to a `.json` file.  See [`util/diff_output_utils.go`](https://github.com/GoogleContainerTools/container-diff/blob/0031c88993c9ac019e2d404815ef50c652d8d010/util/diff_output_utils.go) and [`util/analyze_output_utils.go`](https://github.com/GoogleContainerTools/container-diff/blob/0031c88993c9ac019e2d404815ef50c652d8d010/util/analyze_output_utils.go).\n\n4. Add your analyzer to the `Analyzers` map in [`differs/differs.go`](https://github.com/GoogleContainerTools/container-diff/blob/0031c88993c9ac019e2d404815ef50c652d8d010/differs/differs.go#L44-L50) with the corresponding Analyzer struct as the value."
}
