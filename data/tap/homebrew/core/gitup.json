{
  "name": "gitup",
  "full_name": "gitup",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Update multiple git repositories at once",
  "license": "MIT",
  "homepage": "https://github.com/earwig/git-repo-updater",
  "versions": {
    "stable": "0.5.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/7f/07/4835f8f4de5924b5f38b816c648bde284f0cec9a9ae65bd7e5b7f5867638/gitup-0.5.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "4f787079cd65d8f60c5842181204635e1b72d3533ae91f0c619624c6b20846dd"
    },
    "head": {
      "url": "https://github.com/earwig/git-repo-updater.git",
      "branch": "develop"
    }
  },
  "revision": 5,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 2,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitup/blobs/sha256:6110fff8fd46bffadb3b59d51a48eec76210962047600d867582004749110e73",
          "sha256": "6110fff8fd46bffadb3b59d51a48eec76210962047600d867582004749110e73"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitup/blobs/sha256:2912ddcf3ad3afa21a00a57c61d4cf6e91f399f8ca038883c5e18c34329f5b2c",
          "sha256": "2912ddcf3ad3afa21a00a57c61d4cf6e91f399f8ca038883c5e18c34329f5b2c"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitup/blobs/sha256:904c9403ba3d1debd7caae12b2022e8eebb1a0dab75d6d2c7937ec00177bd822",
          "sha256": "904c9403ba3d1debd7caae12b2022e8eebb1a0dab75d6d2c7937ec00177bd822"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitup/blobs/sha256:cc14ccaf85e55faf029a5cbdbfed3f242bc28054f0578989a5f073355a214807",
          "sha256": "cc14ccaf85e55faf029a5cbdbfed3f242bc28054f0578989a5f073355a214807"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitup/blobs/sha256:7128646ce0ed24a44a05193e7c6fff6725bf97b5cf76693945e8bc40027aad2e",
          "sha256": "7128646ce0ed24a44a05193e7c6fff6725bf97b5cf76693945e8bc40027aad2e"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitup/blobs/sha256:7172cbae00985c0f57a1b89b9f5026bd305455546a5266ba1b8d7c212b0fe3ea",
          "sha256": "7172cbae00985c0f57a1b89b9f5026bd305455546a5266ba1b8d7c212b0fe3ea"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gitup/blobs/sha256:45c09f68a85e5d32050da31f4f8364d930f08cadeb19d2002e9f05d1cd624435",
          "sha256": "45c09f68a85e5d32050da31f4f8364d930f08cadeb19d2002e9f05d1cd624435"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/gitup.rb",
  "ruby_source_checksum": {
    "sha256": "963b022e0d1d12a2399629762664575257963c7b08032ef0a7c80bc5511b25c1"
  },
  "date_added": "2015-05-28T20:08:48+01:00",
  "readme": "__gitup__ (the _git-repo-updater_)\n\n[![ci](https://github.com/earwig/git-repo-updater/actions/workflows/ci.yml/badge.svg)](https://github.com/earwig/git-repo-updater/actions/workflows/ci.yml)\n\ngitup is a tool for updating multiple git repositories at once. It is smart\nenough to handle several remotes, dirty working directories, diverged local\nbranches, detached HEADs, and more. It was originally created to manage a large\ncollection of projects and deal with sporadic internet access.\n\ngitup should work on macOS, Linux, and Windows. You should have the latest\nversion of git and either Python 2.7 or Python 3 installed.\n\n# Installation\n\nWith [pip](https://github.com/pypa/pip/):\n\n    pip install gitup\n\nWith [Homebrew](http://brew.sh/):\n\n    brew install gitup\n\n## From source\n\nFirst:\n\n    git clone git://github.com/earwig/git-repo-updater.git\n    cd git-repo-updater\n\nThen, to install for everyone:\n\n    sudo python setup.py install\n\nor for just yourself (make sure you have `~/.local/bin` in your PATH):\n\n    python setup.py install --user\n\nFinally, simply delete the `git-repo-updater` directory, and you're done!\n\n__Note:__ If you are using Windows, you may wish to add a macro so you can\ninvoke gitup in any directory. Note that `C:\\python27\\` refers to the\ndirectory where Python is installed:\n\n    DOSKEY gitup=c:\\python27\\python.exe c:\\python27\\Scripts\\gitup $*\n\n# Usage\n\nThere are two ways to update repos: you can pass them as command arguments,\nor save them as \"bookmarks\".\n\nFor example:\n\n    gitup ~/repos/foo ~/repos/bar ~/repos/baz\n\nwill automatically pull to the `foo`, `bar`, and `baz` git repositories.\nAdditionally, you can just type:\n\n    gitup ~/repos\n\nto automatically update all git repositories in that directory.\n\nTo add bookmarks, either of these will work:\n\n    gitup --add ~/repos/foo ~/repos/bar ~/repos/baz\n    gitup --add ~/repos\n\nThen, to update all of your bookmarks, just run gitup without args:\n\n    gitup\n\nDelete a bookmark:\n\n    gitup --delete ~/repos\n\nView your current bookmarks:\n\n    gitup --list\n\nYou can mix and match bookmarks and command arguments:\n\n    gitup --add ~/repos/foo ~/repos/bar\n    gitup ~/repos/baz            # update 'baz' only\n    gitup                        # update 'foo' and 'bar' only\n    gitup ~/repos/baz --update   # update all three!\n\nUpdate all git repositories in your current directory:\n\n    gitup .\n\nYou can control how deep gitup will look for repositories in a given directory,\nif that directory is not a git repo by itself, with the `--depth` (or `-t`)\noption. `--depth 0` will disable recursion entirely, meaning the provided paths\nmust be repos by themselves. `--depth 1` will descend one level (this is the\nold behavior from pre-0.5 gitup). `--depth -1` will recurse indefinitely,\nwhich is not recommended. The default is `--depth 3`.\n\nBy default, gitup will fetch all remotes in a repository. Pass `--current-only`\n(or `-c`) to make it fetch only the remote tracked by the current branch.\n\nAlso by default, gitup will try to fast-forward all branches that have\nupstreams configured. It will always skip branches where this is not possible\n(e.g. dirty working directory or a merge/rebase is required). Pass\n`--fetch-only` (or `-f`) to skip this step and only fetch remotes.\n\nAfter fetching, gitup will _keep_ remote-tracking branches that no longer exist\nupstream. Pass `--prune` (or `-p`) to delete them, or set `fetch.prune` or\n`remote.<name>.prune` in your git config to do this by default.\n\nFor a full list of all command arguments and abbreviations:\n\n    gitup --help"
}
