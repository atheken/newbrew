{
  "name": "aws2-wrap",
  "full_name": "aws2-wrap",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Script to export current AWS SSO credentials or run a sub-process with them",
  "license": "GPL-3.0-only",
  "homepage": "https://github.com/linaro-its/aws2-wrap",
  "versions": {
    "stable": "1.3.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/db/07/db4c98b4d44ee824ad21563910d198f0da2561a6c7cfeaef1b954979c5c6/aws2-wrap-1.3.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "cfaee18e42f538208537c259a020263a856923520d06097e66f0e41ef404cae7"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aws2-wrap/blobs/sha256:b674a21c0c093399bb3504de8754e55bf91f6048d09fbee714e6149b5e9592ed",
          "sha256": "b674a21c0c093399bb3504de8754e55bf91f6048d09fbee714e6149b5e9592ed"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aws2-wrap/blobs/sha256:afe746e339b4a0035b736be16c901ecce4cd3559db5c228bdebb37003df6bce5",
          "sha256": "afe746e339b4a0035b736be16c901ecce4cd3559db5c228bdebb37003df6bce5"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aws2-wrap/blobs/sha256:010f352e8abd3811461df22ce194c88d8af2d69815b9aacacc5eff6dec5b1204",
          "sha256": "010f352e8abd3811461df22ce194c88d8af2d69815b9aacacc5eff6dec5b1204"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aws2-wrap/blobs/sha256:3a16f4a02da618252eb33ca6d15c7f80128155e23774ccdd17ad14f67f833666",
          "sha256": "3a16f4a02da618252eb33ca6d15c7f80128155e23774ccdd17ad14f67f833666"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aws2-wrap/blobs/sha256:67da428ede437becefb978d6c57f798e9e6d0e9751e88c2a8f66ee012955d432",
          "sha256": "67da428ede437becefb978d6c57f798e9e6d0e9751e88c2a8f66ee012955d432"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aws2-wrap/blobs/sha256:2edae4d6d8b898ad8057b266256491615ac0832d09fed2209ca30acfebe9aa15",
          "sha256": "2edae4d6d8b898ad8057b266256491615ac0832d09fed2209ca30acfebe9aa15"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aws2-wrap/blobs/sha256:4e0c88329279ed6319346d0363bada116a907de02f65c56e4ebe4c8774c0995c",
          "sha256": "4e0c88329279ed6319346d0363bada116a907de02f65c56e4ebe4c8774c0995c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/aws2-wrap.rb",
  "ruby_source_checksum": {
    "sha256": "64fccce45db2548983b159b8c74a7454990a40cbb2cce2357703ea186e6bca8e"
  },
  "date_added": "2022-07-20T14:52:36+00:00",
  "readme": "# aws2-wrap\n\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=linaro-its_aws2-wrap&metric=alert_status)](https://sonarcloud.io/dashboard?id=linaro-its_aws2-wrap)\n\nThis is a simple script to make it easier to use AWS Single Sign On credentials with tools that don't understand the `sso` entries in an AWS profile.\n\nThe script provides the following capabilities:\n\n* Run a command using AWS SSO credentials\n* Generate a temporary profile in the $AWS_CONFIG_FILE and $AWS_SHARED_CREDENTIALS_FILE file\n* Exporting the AWS SSO credentials\n* Use the credentials via .aws/config\n* Assume a role via AWS SSO\n\nPlease note that the script is called `aws2-wrap` to show that it works with AWS CLI v2, even though the CLI tool is no longer called `aws2`.\n\n## Install\n\n### Using `pip`\n\n<https://pypi.org/project/aws2-wrap>\n\n```\npip3 install aws2-wrap\n```\n\n### Using `brew`\n\n```\nbrew install aws2-wrap\n```\n\n## Run a command using AWS SSO credentials\n\n`aws2-wrap [--profile <awsprofilename>] [--exec] <command>`\n\nNote that if you are using `--exec` and `<command>` contains spaces, it must be surrounded with double-quotation marks.\n\nYou can also specify the profile to be used via AWS_PROFILE which then allows the same profile to be used by subsequent tools and commands.\n\nExamples:\n\n`aws2-wrap --profile MySSOProfile terraform plan`\n\n`aws2-wrap --profile MySSOProfile --exec \"terraform plan\"`\n\n`AWS_PROFILE=MySSOProfile aws2-wrap terraform plan`\n\nIf you are having problems with the use of quotes in the command, you may find one of the other methods works better for you.\n\n## Generate a temporary profile in the $AWS_CONFIG_FILE and $AWS_SHARED_CREDENTIALS_FILE file\n\nThere are some utilities which work better with the configuration files rather than the environment variables. For example, if you need to access more than one profile at a time.\n\n`aws2-wrap --generate --profile $AWS_PROFILE --credentialsfile $AWS_SHARED_CREDENTIALS_FILE --configfile $AWS_CONFIG_FILE --outprofile $DESTINATION_PROFILE`\n\nOptionally, you can specify `--generatestdout` instead of `--generate`. `--outprofile` is still required in order to name the section but `--credentialsfile` and `--configfile` are ignored. With this command option, the generated credentials will then be output to the console.\n\n## Export the AWS SSO credentials\n\nThere may be circumstances when it is easier/better to set the appropriate environment variables so that they can be re-used by any `aws` command.\n\nSince the script cannot directly set the environment variables in the calling shell process, it is necessary to use the following syntax:\n\n`eval \"$(aws2-wrap [--profile <awsprofilename>] --export)\"`\n\nFor example:\n\n`eval \"$(aws2-wrap --profile MySSOProfile --export)\"`\n\nIf you are using PowerShell, the equivalent command is:\n\n`aws2-wrap --profile MySSOProfile --export | invoke-expression`\n\n## Use the credentials via .aws/config\n\nIf you are using a tool that works with normal AWS credentials but doesn't understand the new AWS SSO credentials, another option is to add a profile to `.aws/config` that calls the `aws2-wrap` script.\n\nFor example, add the following block to `.aws/config`:\n\n```text\n[profile Wrapped]\ncredential_process = aws2-wrap --process --profile <awsprofilename>\n```\n\nthen, after authentication, you can run any command that uses AWS credentials by specifying the \"Wrapped\" profile:\n\n```text\naws sso login --profile <awsprofilename>\nexport AWS_PROFILE=Wrapped\nexport AWS_SDK_LOAD_CONFIG=1\nterraform plan\n```\n\nNote that because the profile is being specified via `AWS_PROFILE`, it is sometimes necessary (as shown above) to set `AWS_SDK_LOAD_CONFIG` in order to get tools like `terraform` to successfully retrieve the credentials.\n\n## Assume a role via AWS SSO\n\nYour `.aws/config` file can look like this:\n\n```text\n[default]\nsso_start_url = xxxxxxxxxxxx\nsso_region = us-west-2\nsso_account_id = xxxxxxxxxxxx\nsso_role_name = SSORoleName\n\n[profile account1]\nrole_arn = arn:aws:iam::xxxxxxxxxxxx:role/role-to-be-assumed\nsource_profile = default\nregion = ap-northeast-1\n```\n\nallowing you to then run:\n\n`aws2-wrap --profile account1 <command>`\n\nand `<command>` will be run under `role-to-be-assumed`.\n\n## Contributing\n\nContributions are more than welcome, particularly if you are able to expand on the test code. Please ensure, though, that before you submit a Pull Request, you run `make test` to ensure that your changes don't break any of the existing tests and `make pylint` to ensure that the linter is happy. Please note that the CI/CD pylint test *may* use different pylint rules from your own local setup.\n\nPlease also note that `make pylint` will only report errors. You *may* want to explicitly run `python3 -m pylint setup.py aws2wrap`\n\n## Credits\n\nThanks to @nitrocode, @chenrui333, @l1n, @sodul, @damian-bisignano, @flyinprogrammer, @abeluck, @topu, @bigwheel, @krabbit, @jscook2345, @hieki, @blazdivjak, @fukushun1994, @johann8384, @ppezoldt, @atwoodjw, @lummish, @life36-vinny, @lukemassa and @axelri for their contributions."
}
