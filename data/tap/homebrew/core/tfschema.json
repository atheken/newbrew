{
  "name": "tfschema",
  "full_name": "tfschema",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Schema inspector for Terraform providers",
  "license": "MIT",
  "homepage": "https://github.com/minamijoyo/tfschema",
  "versions": {
    "stable": "0.7.5",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/minamijoyo/tfschema/archive/v0.7.5.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0642b125805e812675f542feb5f2ab54bdf5660c12c93f86e90469407b204a04"
    },
    "head": {
      "url": "https://github.com/minamijoyo/tfschema.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tfschema/blobs/sha256:a3f7e711f325ee58dda16f45d13187884c1b04f8e80d1c1d5fd3afbfb5105601",
          "sha256": "a3f7e711f325ee58dda16f45d13187884c1b04f8e80d1c1d5fd3afbfb5105601"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tfschema/blobs/sha256:b337919ffdcc2450e142cedfe51dfdd0ab91c5c97f451d047d024556430fe966",
          "sha256": "b337919ffdcc2450e142cedfe51dfdd0ab91c5c97f451d047d024556430fe966"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tfschema/blobs/sha256:a894518428d7803bb0d18617bed08805195eb02e7b56632c6202d730378c51aa",
          "sha256": "a894518428d7803bb0d18617bed08805195eb02e7b56632c6202d730378c51aa"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tfschema/blobs/sha256:17bed45c783f855c0ad44ae4c08319301ce56f1bbfaba05425bc4c9a6eb70f1f",
          "sha256": "17bed45c783f855c0ad44ae4c08319301ce56f1bbfaba05425bc4c9a6eb70f1f"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tfschema/blobs/sha256:a5945fcd8872038b39d1315cfef5c803cabcd2c9189db0909fe55f484566568d",
          "sha256": "a5945fcd8872038b39d1315cfef5c803cabcd2c9189db0909fe55f484566568d"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tfschema/blobs/sha256:cb2c432065da78390f6902797fd439ecf645f20f12aa6a7302382f6e2e5b8def",
          "sha256": "cb2c432065da78390f6902797fd439ecf645f20f12aa6a7302382f6e2e5b8def"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tfschema/blobs/sha256:a69cfd013aaf2f42bda4e899fe427a36a4f552afcaf86ce13da04d53024d5056",
          "sha256": "a69cfd013aaf2f42bda4e899fe427a36a4f552afcaf86ce13da04d53024d5056"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tfschema/blobs/sha256:b2215c0ed4688650a185e0dd4342ca5b89c6238a6ae46531a404dcdb2705a6fc",
          "sha256": "b2215c0ed4688650a185e0dd4342ca5b89c6238a6ae46531a404dcdb2705a6fc"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [
    "terraform"
  ],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/tfschema.rb",
  "ruby_source_checksum": {
    "sha256": "3a22b91d3b0a1cbc7eae8823186921920bfb21c9931a1e41d4f5bdb7d395de1b"
  },
  "date_added": "2022-01-31T04:31:20+00:00",
  "readme": "# tfschema\n[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](LICENSE)\n[![GitHub release](https://img.shields.io/github/release/minamijoyo/tfschema.svg)](https://github.com/minamijoyo/tfschema/releases/latest)\n[![GoDoc](https://godoc.org/github.com/minamijoyo/tfschema/tfschema?status.svg)](https://godoc.org/github.com/minamijoyo/tfschema)\n\nA schema inspector for Terraform providers.\n\n# Features\n\n- Get resource type definitions dynamically from Terraform providers via go-plugin protocol.\n- List available resource types.\n- Autocomplete resource types in bash/zsh.\n- Open official provider documents quickly by your system web browser.\n- Terraform v0.15 support (minimum requirements: Terraform >= v0.12)\n\n![demo](/images/tfschema-demo.gif)\n\n# Getting Started\n\n```\n$ brew install minamijoyo/tfschema/tfschema\n\n$ echo 'provider \"aws\" {}' > main.tf\n$ terraform init\n```\n\n```\n$ tfschema resource list aws | grep aws_iam_user\naws_iam_user\naws_iam_user_group_membership\naws_iam_user_login_profile\naws_iam_user_policy\naws_iam_user_policy_attachment\naws_iam_user_ssh_key\n```\n\n```\n$ tfschema resource show aws_iam_user\n+----------------------+-------------+----------+----------+----------+-----------+\n| ATTRIBUTE            | TYPE        | REQUIRED | OPTIONAL | COMPUTED | SENSITIVE |\n+----------------------+-------------+----------+----------+----------+-----------+\n| arn                  | string      | false    | false    | true     | false     |\n| force_destroy        | bool        | false    | true     | false    | false     |\n| id                   | string      | false    | true     | true     | false     |\n| name                 | string      | true     | false    | false    | false     |\n| path                 | string      | false    | true     | false    | false     |\n| permissions_boundary | string      | false    | true     | false    | false     |\n| tags                 | map(string) | false    | true     | false    | false     |\n| unique_id            | string      | false    | false    | true     | false     |\n+----------------------+-------------+----------+----------+----------+-----------+\n```\n\n# Install\n\nIf you are Mac OSX user:\n\n```\n$ brew install minamijoyo/tfschema/tfschema\n```\n\nor\n\nIf you have Go 1.17+ development environment:\n\n```bash\n$ git clone https://github.com/minamijoyo/tfschema\n$ cd tfschema\n$ go install\n```\n\nor\n\nDownload the latest compiled binaries and put it anywhere in your executable path.\n\nhttps://github.com/minamijoyo/tfschema/releases\n\n# Rules of finding provider's binary\nWhen `terraform init` command is executed, provider's binary is installed under the auto installed directory ( .terraform/providers/`<SOURCE ADDRESS>`/`<VERSION>`/`<OS>_<ARCH>` ) by default.\nThe tfschema can use the same provider's binary as terraform uses, so you can run `tfschema` command in the same directory where you run the `terraform` command\nAlternatively, you can set the environment variable `$TFSCHEMA_ROOT_DIR` to be this directory. If `$TFSCHEMA_ROOT_DIR` is not set, it will default to the current directory\n\nThe tfschema finds provider's binary under the following directories.\n\n1. `$TFSCHEMA_ROOT_DIR`\n2. same directory as `tfschema` executable\n3. user vendor directory ( `$TFSCHEMA_ROOT_DIR`/terraform.d/plugins/`<OS>_<ARCH>` )\n4. auto installed directory for Terraform v0.14+ ( `$TFSCHEMA_ROOT_DIR`/.terraform/providers/`<SOURCE ADDRESS>`/`<VERSION>`/`<OS>_<ARCH>` )\n5. auto installed directory for Terraform v0.13 ( `$TFSCHEMA_ROOT_DIR`/.terraform/plugins/`<SOURCE ADDRESS>`/`<VERSION>`/`<OS>_<ARCH>` )\n6. legacy auto installed directory for Terraform < v0.13 ( `$TFSCHEMA_ROOT_DIR`/.terraform/plugins/`<OS>_<ARCH>` )\n7. global plugin directory ( $HOME/.terraform.d/plugins )\n8. global plugin directory with os and arch ( $HOME/.terraform.d/plugins/`<OS>_<ARCH>` )\n9. gopath ( $GOPATH/bin )\n\nIf you are Mac OSX user, `<OS>_<ARCH>` is `darwin_amd64`.\nThe `<SOURCE ADDRESS>` is a fully qualified provider name in Terraform 0.13+. (e.g. `registry.terraform.io/hashicorp/aws`)\n\nNote that it doesn't have exactly the same behavior of Terraform because of some reasons:\n\n- Support multiple Terraform versions\n- Can't import internal packages of Terraform and it's too complicated to support\n- For debug\n\n# Autocomplete\n\nTo enable autocomplete, execute the following command:\n\n```\n$ tfschema -install-autocomplete\n```\n\nThe above command adds the following line to your ~/.bashrc and ~/.zshrc:\n\n.bashrc\n\n```bash\ncomplete -C </path/to/tfschema> tfschema\n```\n\n.zshrc\n\n```bash\nautoload -U +X bashcompinit && bashcompinit\ncomplete -o nospace -C </path/to/tfschema> tfschema\n```\n\nCheck your .bashrc and/or .zshrc and reload it.\n\n# Usage\n\n```\n$ tfschema --help\nUsage: tfschema [--version] [--help] <command> [<args>]\n\nAvailable commands are:\n    data\n    provider\n    resource\n```\n\n```\n$ tfschema resource --help\nThis command is accessed by using one of the subcommands below.\n\nSubcommands:\n    browse    Browse a documentation of resource\n    list      List resource types\n    show      Show a type definition of resource\n```\n\n```\n$ tfschema resource show --help\nUsage: tfschema resource show [options] RESOURCE_TYPE\n\nOptions:\n\n  -format=type    Set output format to table or json (default: table)\n```\n# Contributions\nAny feedback and contributions are welcome. Feel free to open an issue and submit a pull request.\n\n# Acknowledgments\nThe tfschema is built on Terraform and its providers. I'm sincerely grateful to those authors.\n\n# License\nMIT"
}
