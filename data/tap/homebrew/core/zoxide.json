{
  "name": "zoxide",
  "full_name": "zoxide",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Shell extension to navigate your filesystem faster",
  "license": "MIT",
  "homepage": "https://github.com/ajeetdsouza/zoxide",
  "versions": {
    "stable": "0.9.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/ajeetdsouza/zoxide/archive/v0.9.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "a6c2d993a02211c3d23b242c2c6faab9a2648be7a45ad1ff0586651ac827e914"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoxide/blobs/sha256:49f1719c65eec1a3657c6162bb1f768717101df99d7ca3441d305fd3c80fea51",
          "sha256": "49f1719c65eec1a3657c6162bb1f768717101df99d7ca3441d305fd3c80fea51"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoxide/blobs/sha256:d88fcbbcfb4ec79355338a1c908c921d32b918495fdaf52adf2494a35cbd7b86",
          "sha256": "d88fcbbcfb4ec79355338a1c908c921d32b918495fdaf52adf2494a35cbd7b86"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoxide/blobs/sha256:af613b9c960a8e755619f1f0397c897fd6f5d15c8f53ed7ffa12ec0202be7f7e",
          "sha256": "af613b9c960a8e755619f1f0397c897fd6f5d15c8f53ed7ffa12ec0202be7f7e"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoxide/blobs/sha256:167c8f49d8e8139de86afb96d825de815332adca5960ddb92260b4d51e464fd3",
          "sha256": "167c8f49d8e8139de86afb96d825de815332adca5960ddb92260b4d51e464fd3"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoxide/blobs/sha256:3176f2c6aa53131db5502c455495f5ebd3be869468621b2e37c53b054a37b28d",
          "sha256": "3176f2c6aa53131db5502c455495f5ebd3be869468621b2e37c53b054a37b28d"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoxide/blobs/sha256:43fea705f20177f4e8b8558a00679ee016199f3787389040e7c8d7944a545953",
          "sha256": "43fea705f20177f4e8b8558a00679ee016199f3787389040e7c8d7944a545953"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoxide/blobs/sha256:657c7e0554270cf878dfc3ab249ab7721842655464ecb302e48737c1a8f76f42",
          "sha256": "657c7e0554270cf878dfc3ab249ab7721842655464ecb302e48737c1a8f76f42"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/zoxide.rb",
  "ruby_source_checksum": {
    "sha256": "d3dd08a27ed9a62b7ab35fd978512db414b52be20473ae5475acc0ec23bc79c4"
  },
  "date_added": "2020-06-25T21:32:35+00:00",
  "readme": "<!-- markdownlint-configure-file {\n  \"MD013\": {\n    \"code_blocks\": false,\n    \"tables\": false\n  },\n  \"MD033\": false,\n  \"MD041\": false\n} -->\n\n<div align=\"center\">\n\n# zoxide\n\n[![crates.io][crates.io-badge]][crates.io]\n[![Downloads][downloads-badge]][releases]\n[![Built with Nix][builtwithnix-badge]][builtwithnix]\n\nzoxide is a **smarter cd command**, inspired by z and autojump.\n\nIt remembers which directories you use most frequently, so you can \"jump\" to\nthem in just a few keystrokes.<br />\nzoxide works on all major shells.\n\n[Getting started](#getting-started) •\n[Installation](#installation) •\n[Configuration](#configuration) •\n[Integrations](#third-party-integrations)\n\n</div>\n\n## Getting started\n\n![Tutorial][tutorial]\n\n```sh\nz foo              # cd into highest ranked directory matching foo\nz foo bar          # cd into highest ranked directory matching foo and bar\nz foo /            # cd into a subdirectory starting with foo\n\nz ~/foo            # z also works like a regular cd command\nz foo/             # cd into relative path\nz ..               # cd one level up\nz -                # cd into previous directory\n\nzi foo             # cd with interactive selection (using fzf)\n\nz foo<SPACE><TAB>  # show interactive completions (zoxide v0.8.0+, bash 4.4+/fish/zsh only)\n```\n\nRead more about the matching algorithm [here][algorithm-matching].\n\n## Installation\n\nzoxide can be installed in 4 easy steps:\n\n1. **Install binary**\n\n   zoxide runs on most major platforms. If your platform isn't listed below,\n   please [open an issue][issues].\n\n   <details>\n   <summary>Linux</summary>\n\n   > The recommended way to install zoxide is via the install script:\n   >\n   > ```sh\n   > curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash\n   > ```\n   >\n   > Or, you can use a package manager:\n   >\n   > | Distribution        | Repository              | Instructions                                                                                          |\n   > | ------------------- | ----------------------- | ----------------------------------------------------------------------------------------------------- |\n   > | **_Any_**           | **[crates.io]**         | `cargo install zoxide --locked`                                                                       |\n   > | _Any_               | [asdf]                  | `asdf plugin add zoxide https://github.com/nyrst/asdf-zoxide.git` <br /> `asdf install zoxide latest` |\n   > | _Any_               | [conda-forge]           | `conda install -c conda-forge zoxide`                                                                 |\n   > | _Any_               | [Linuxbrew]             | `brew install zoxide`                                                                                 |\n   > | _Any_               | [nixpkgs]               | `nix-env -iA nixpkgs.zoxide`                                                                          |\n   > | Alpine Linux 3.13+  | [Alpine Linux Packages] | `apk add zoxide`                                                                                      |\n   > | Arch Linux          | [Arch Linux Extra]  | `pacman -S zoxide`                                                                                    |\n   > | CentOS 7+           | [Copr]                  | `dnf copr enable atim/zoxide` <br /> `dnf install zoxide`                                             |\n   > | Debian 11+[^1]      | [Debian Packages]       | `apt install zoxide`                                                                                  |\n   > | Devuan 4.0+[^1]     | [Devuan Packages]       | `apt install zoxide`                                                                                  |\n   > | Fedora 32+          | [Fedora Packages]       | `dnf install zoxide`                                                                                  |\n   > | Gentoo              | [GURU Overlay]          | `eselect repository enable guru` <br /> `emerge --sync guru` <br /> `emerge app-shells/zoxide`        |\n   > | Manjaro             |                         | `pacman -S zoxide`                                                                                    |\n   > | openSUSE Tumbleweed | [openSUSE Factory]      | `zypper install zoxide`                                                                               |\n   > | Parrot OS[^1]       |                         | `apt install zoxide`                                                                                  |\n   > | Raspbian 11+[^1]    | [Raspbian Packages]     | `apt install zoxide`                                                                                  |\n   > | Slackware 15.0+     | [SlackBuilds]           | [Instructions][slackbuilds-howto]                                                                     |\n   > | Ubuntu 21.04+[^1]   | [Ubuntu Packages]       | `apt install zoxide`                                                                                  |\n   > | Void Linux          | [Void Linux Packages]   | `xbps-install -S zoxide`                                                                              |\n\n   </details>\n\n   <details>\n   <summary>macOS</summary>\n\n   > To install zoxide, use a package manager:\n   >\n   > | Repository      | Instructions                                                                                          |\n   > | --------------- | ----------------------------------------------------------------------------------------------------- |\n   > | **[crates.io]** | `cargo install zoxide --locked`                                                                       |\n   > | **[Homebrew]**  | `brew install zoxide`                                                                                 |\n   > | [asdf]          | `asdf plugin add zoxide https://github.com/nyrst/asdf-zoxide.git` <br /> `asdf install zoxide latest` |\n   > | [conda-forge]   | `conda install -c conda-forge zoxide`                                                                 |\n   > | [MacPorts]      | `port install zoxide`                                                                                 |\n   > | [nixpkgs]       | `nix-env -iA nixpkgs.zoxide`                                                                          |\n   >\n   > Or, run this command in your terminal:\n   >\n   > ```sh\n   > curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash\n   > ```\n\n   </details>\n\n   <details>\n   <summary>Windows</summary>\n\n   > The recommended way to install zoxide is via `winget`:\n   >\n   > ```sh\n   > winget install zoxide\n   > ```\n   >\n   > Or, you can use an alternative package manager:\n   >\n   > | Repository      | Instructions                          |\n   > | --------------- | ------------------------------------- |\n   > | **[crates.io]** | `cargo install zoxide --locked`       |\n   > | [Chocolatey]    | `choco install zoxide`                |\n   > | [conda-forge]   | `conda install -c conda-forge zoxide` |\n   > | [Scoop]         | `scoop install zoxide`                |\n   >\n   > If you're using Cygwin, Git Bash, or MSYS2, use the install script instead:\n   >\n   > ```sh\n   > curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash\n   > ```\n\n   </details>\n\n   <details>\n   <summary>BSD</summary>\n\n   > To install zoxide, use a package manager:\n   >\n   > | Distribution  | Repository      | Instructions                    |\n   > | ------------- | --------------- | ------------------------------- |\n   > | **_Any_**     | **[crates.io]** | `cargo install zoxide --locked` |\n   > | DragonFly BSD | [DPorts]        | `pkg install zoxide`            |\n   > | FreeBSD       | [FreshPorts]    | `pkg install zoxide`            |\n   > | NetBSD        | [pkgsrc]        | `pkgin install zoxide`          |\n\n   </details>\n\n   <details>\n   <summary>Android</summary>\n\n   > To install zoxide, use a package manager:\n   >\n   > | Repository | Instructions         |\n   > | ---------- | -------------------- |\n   > | [Termux]   | `pkg install zoxide` |\n\n   </details>\n\n2. **Setup zoxide on your shell**\n\n   To start using zoxide, add it to your shell.\n\n   <details>\n   <summary>Bash</summary>\n\n   > Add this to the **end** of your config file (usually `~/.bashrc`):\n   >\n   > ```sh\n   > eval \"$(zoxide init bash)\"\n   > ```\n\n   </details>\n\n   <details>\n   <summary>Elvish</summary>\n\n   > Add this to the **end** of your config file (usually `~/.elvish/rc.elv`):\n   >\n   > ```sh\n   > eval (zoxide init elvish | slurp)\n   > ```\n   >\n   > **Note**\n   > zoxide only supports elvish v0.18.0 and above.\n\n   </details>\n\n   <details>\n   <summary>Fish</summary>\n\n   > Add this to the **end** of your config file (usually\n   > `~/.config/fish/config.fish`):\n   >\n   > ```fish\n   > zoxide init fish | source\n   > ```\n\n   </details>\n\n   <details>\n   <summary>Nushell</summary>\n\n   > Add this to the **end** of your env file (find it by running `$nu.env-path`\n   > in Nushell):\n   >\n   > ```sh\n   > zoxide init nushell | save -f ~/.zoxide.nu\n   > ```\n   >\n   > Now, add this to the **end** of your config file (find it by running\n   > `$nu.config-path` in Nushell):\n   >\n   > ```sh\n   > source ~/.zoxide.nu\n   > ```\n   >\n   > **Note**\n   > zoxide only supports Nushell v0.73.0 and above.\n\n   </details>\n\n   <details>\n   <summary>PowerShell</summary>\n\n   > Add this to the **end** of your config file (find it by running\n   > `echo $profile` in PowerShell):\n   >\n   > ```powershell\n   > Invoke-Expression (& { (zoxide init powershell | Out-String) })\n   > ```\n\n   </details>\n\n   <details>\n   <summary>Xonsh</summary>\n\n   > Add this to the **end** of your config file (usually `~/.xonshrc`):\n   >\n   > ```python\n   > execx($(zoxide init xonsh), 'exec', __xonsh__.ctx, filename='zoxide')\n   > ```\n\n   </details>\n\n   <details>\n   <summary>Zsh</summary>\n\n   > Add this to the **end** of your config file (usually `~/.zshrc`):\n   >\n   > ```sh\n   > eval \"$(zoxide init zsh)\"\n   > ```\n   >\n   > For completions to work, the above line must be added _after_ `compinit` is\n   > called. You may have to rebuild your completions cache by running\n   > `rm ~/.zcompdump*; compinit`.\n\n   </details>\n\n   <details>\n   <summary>Any POSIX shell</summary>\n\n   > Add this to the **end** of your config file:\n   >\n   > ```sh\n   > eval \"$(zoxide init posix --hook prompt)\"\n   > ```\n\n   </details>\n\n3. **Install fzf** <sup>(optional)</sup>\n\n   [fzf] is a command-line fuzzy finder, used by zoxide for completions /\n   interactive selection. It can be installed from [here][fzf-installation].\n\n   > **Note**\n   > zoxide only supports fzf v0.33.0 and above.\n\n4. **Import your data** <sup>(optional)</sup>\n\n   If you currently use any of these plugins, you may want to import your data\n   into zoxide:\n\n   <details>\n   <summary>autojump</summary>\n\n   > Run this command in your terminal:\n   >\n   > ```sh\n   > zoxide import --from=autojump \"/path/to/autojump/db\"\n   > ```\n   >\n   > The path usually varies according to your system:\n   >\n   > | OS      | Path                                                                                 | Example                                                |\n   > | ------- | ------------------------------------------------------------------------------------ | ------------------------------------------------------ |\n   > | Linux   | `$XDG_DATA_HOME/autojump/autojump.txt` or `$HOME/.local/share/autojump/autojump.txt` | `/home/alice/.local/share/autojump/autojump.txt`       |\n   > | macOS   | `$HOME/Library/autojump/autojump.txt`                                                | `/Users/Alice/Library/autojump/autojump.txt`           |\n   > | Windows | `%APPDATA%\\autojump\\autojump.txt`                                                    | `C:\\Users\\Alice\\AppData\\Roaming\\autojump\\autojump.txt` |\n\n   </details>\n\n   <details>\n   <summary>fasd, z, z.lua, zsh-z</summary>\n\n   > Run this command in your terminal:\n   >\n   > ```sh\n   > zoxide import --from=z \"path/to/z/db\"\n   > ```\n   >\n   > The path usually varies according to your system:\n   >\n   > | Plugin           | Path                                                                                |\n   > | ---------------- | ----------------------------------------------------------------------------------- |\n   > | fasd             | `$_FASD_DATA` or `$HOME/.fasd`                                                      |\n   > | z (bash/zsh)     | `$_Z_DATA` or `$HOME/.z`                                                            |\n   > | z (fish)         | `$Z_DATA` or `$XDG_DATA_HOME/z/data` or `$HOME/.local/share/z/data`                 |\n   > | z.lua (bash/zsh) | `$_ZL_DATA` or `$HOME/.zlua`                                                        |\n   > | z.lua (fish)     | `$XDG_DATA_HOME/zlua/zlua.txt` or `$HOME/.local/share/zlua/zlua.txt` or `$_ZL_DATA` |\n   > | zsh-z            | `$ZSHZ_DATA` or `$_Z_DATA` or `$HOME/.z`                                            |\n\n   </details>\n\n   <details>\n   <summary>ZLocation</summary>\n\n   > Run this command in PowerShell:\n   >\n   > ```powershell\n   > $db = New-TemporaryFile\n   > (Get-ZLocation).GetEnumerator() | ForEach-Object { Write-Output ($_.Name+'|'+$_.Value+'|0') } | Out-File $db\n   > zoxide import --from=z $db\n   > ```\n\n   </details>\n\n## Configuration\n\n### Flags\n\nWhen calling `zoxide init`, the following flags are available:\n\n- `--cmd`\n  - Changes the prefix of the `z` and `zi` commands.\n  - `--cmd j` would change the commands to (`j`, `ji`).\n  - `--cmd cd` would replace the `cd` command (doesn't work on Nushell / POSIX shells).\n- `--hook <HOOK>`\n  - Changes how often zoxide increments a directory's score:\n    | Hook     | Description                       |\n    | -------- | --------------------------------- |\n    | `none`   | Never                             |\n    | `prompt` | At every shell prompt             |\n    | `pwd`    | Whenever the directory is changed |\n- `--no-cmd`\n  - Prevents zoxide from defining the `z` and `zi` commands.\n  - These functions will still be available in your shell as `__zoxide_z` and\n    `__zoxide_zi`, should you choose to redefine them.\n\n### Environment variables\n\nEnvironment variables[^2] can be used for configuration. They must be set before\n`zoxide init` is called.\n\n- `_ZO_DATA_DIR`\n  - Specifies the directory in which the database is stored.\n  - The default value varies across OSes:\n    | OS          | Path                                     | Example                                    |\n    | ----------- | ---------------------------------------- | ------------------------------------------ |\n    | Linux / BSD | `$XDG_DATA_HOME` or `$HOME/.local/share` | `/home/alice/.local/share`                 |\n    | macOS       | `$HOME/Library/Application Support`      | `/Users/Alice/Library/Application Support` |\n    | Windows     | `%LOCALAPPDATA%`                         | `C:\\Users\\Alice\\AppData\\Local`             |\n- `_ZO_ECHO`\n  - When set to 1, `z` will print the matched directory before navigating to\n    it.\n- `_ZO_EXCLUDE_DIRS`\n  - Excludes the specified directories from the database.\n  - This is provided as a list of [globs][glob], separated by OS-specific\n    characters:\n    | OS                  | Separator | Example                 |\n    | ------------------- | --------- | ----------------------- |\n    | Linux / macOS / BSD | `:`       | `$HOME:$HOME/private/*` |\n    | Windows             | `;`       | `$HOME;$HOME/private/*` |\n  - By default, this is set to `\"$HOME\"`.\n- `_ZO_FZF_OPTS`\n  - Custom options to pass to [fzf] during interactive selection. See\n    [`man fzf`][fzf-man] for the list of options.\n- `_ZO_MAXAGE`\n  - Configures the [aging algorithm][algorithm-aging], which limits the maximum\n    number of entries in the database.\n  - By default, this is set to 10000.\n- `_ZO_RESOLVE_SYMLINKS`\n  - When set to 1, `z` will resolve symlinks before adding directories to the\n    database.\n\n## Third-party integrations\n\n| Application           | Description                                  | Plugin                     |\n| --------------------- | -------------------------------------------- | -------------------------- |\n| [aerc]                | Email client                                 | Natively supported         |\n| [clink]               | Improved cmd.exe for Windows                 | [clink-zoxide]             |\n| [emacs]               | Text editor                                  | [zoxide.el]                |\n| [felix]               | File manager                                 | Natively supported         |\n| [joshuto]             | File manager                                 | Natively supported         |\n| [lf]                  | File manager                                 | See the [wiki][lf-wiki]    |\n| [nnn]                 | File manager                                 | [nnn-autojump]             |\n| [ranger]              | File manager                                 | [ranger-zoxide]            |\n| [telescope.nvim]      | Fuzzy finder for Neovim                      | [telescope-zoxide]         |\n| [t]                   | `tmux` session manager                       | Natively supported         |\n| [tmux-session-wizard] | `tmux` session manager                       | Natively supported         |\n| [vim] / [neovim]      | Text editor                                  | [zoxide.vim]               |\n| [xplr]                | File manager                                 | [zoxide.xplr]              |\n| [xxh]                 | Transports shell configuration over SSH      | [xxh-plugin-prerun-zoxide] |\n| [zabb]                | Finds the shortest possible query for a path | Natively supported         |\n| [zsh-autocomplete]    | Realtime completions for zsh                 | Natively supported         |\n\n[^1]:\n    Debian / Ubuntu derivatives update their packages very slowly. If you're\n    using one of these distributions, consider using the install script instead.\n\n[^2]:\n    If you're not sure how to set an environment variable on your shell, check\n    out the [wiki][wiki-env].\n\n[aerc]: https://github.com/rjarry/aerc\n[algorithm-aging]: https://github.com/ajeetdsouza/zoxide/wiki/Algorithm#aging\n[algorithm-matching]: https://github.com/ajeetdsouza/zoxide/wiki/Algorithm#matching\n[alpine linux packages]: https://pkgs.alpinelinux.org/packages?name=zoxide\n[arch linux extra]: https://archlinux.org/packages/extra/x86_64/zoxide/\n[asdf]: https://github.com/asdf-vm/asdf\n[builtwithnix-badge]: https://img.shields.io/badge/builtwith-nix-7d81f7?logo=nixos&logoColor=white&style=flat-square\n[builtwithnix]: https://builtwithnix.org/\n[chocolatey]: https://community.chocolatey.org/packages/zoxide\n[clink-zoxide]: https://github.com/shunsambongi/clink-zoxide\n[clink]: https://github.com/mridgers/clink\n[conda-forge]: https://anaconda.org/conda-forge/zoxide\n[copr]: https://copr.fedorainfracloud.org/coprs/atim/zoxide/\n[crates.io-badge]: https://img.shields.io/crates/v/zoxide?logo=rust&logoColor=white&style=flat-square\n[crates.io]: https://crates.io/crates/zoxide\n[debian packages]: https://packages.debian.org/stable/admin/zoxide\n[devuan packages]: https://pkginfo.devuan.org/cgi-bin/package-query.html?c=package&q=zoxide\n[downloads-badge]: https://img.shields.io/github/downloads/ajeetdsouza/zoxide/total?logo=github&logoColor=white&style=flat-square\n[dports]: https://github.com/DragonFlyBSD/DPorts/tree/master/sysutils/zoxide\n[emacs]: https://www.gnu.org/software/emacs/\n[fedora packages]: https://src.fedoraproject.org/rpms/rust-zoxide\n[felix]: https://github.com/kyoheiu/felix\n[freshports]: https://www.freshports.org/sysutils/zoxide/\n[fzf-installation]: https://github.com/junegunn/fzf#installation\n[fzf-man]: https://manpages.ubuntu.com/manpages/en/man1/fzf.1.html\n[fzf]: https://github.com/junegunn/fzf\n[glob]: https://man7.org/linux/man-pages/man7/glob.7.html\n[guru overlay]: https://github.com/gentoo-mirror/guru\n[homebrew]: https://formulae.brew.sh/formula/zoxide\n[issues]: https://github.com/ajeetdsouza/zoxide/issues/new\n[joshuto]: https://github.com/kamiyaa/joshuto\n[lf]: https://github.com/gokcehan/lf\n[lf-wiki]: https://github.com/gokcehan/lf/wiki/Integrations#zoxide\n[linuxbrew]: https://formulae.brew.sh/formula-linux/zoxide\n[macports]: https://ports.macports.org/port/zoxide/summary\n[neovim]: https://github.com/neovim/neovim\n[nixpkgs]: https://github.com/NixOS/nixpkgs/blob/master/pkgs/tools/misc/zoxide/default.nix\n[nnn-autojump]: https://github.com/jarun/nnn/blob/master/plugins/autojump\n[nnn]: https://github.com/jarun/nnn\n[opensuse factory]: https://build.opensuse.org/package/show/openSUSE:Factory/zoxide\n[pkgsrc]: https://pkgsrc.se/sysutils/zoxide\n[ranger-zoxide]: https://github.com/jchook/ranger-zoxide\n[ranger]: https://github.com/ranger/ranger\n[raspbian packages]: https://archive.raspbian.org/raspbian/pool/main/r/rust-zoxide/\n[releases]: https://github.com/ajeetdsouza/zoxide/releases\n[scoop]: https://github.com/ScoopInstaller/Main/tree/master/bucket/zoxide.json\n[slackbuilds-howto]: https://slackbuilds.org/howto/\n[t]: https://github.com/joshmedeski/t-smart-tmux-session-manager\n[telescope-zoxide]: https://github.com/jvgrootveld/telescope-zoxide\n[telescope.nvim]: https://github.com/nvim-telescope/telescope.nvim\n[termux]: https://github.com/termux/termux-packages/tree/master/packages/zoxide\n[tmux-session-wizard]: https://github.com/27medkamal/tmux-session-wizard\n[tutorial]: contrib/tutorial.webp\n[ubuntu packages]: https://packages.ubuntu.com/jammy/zoxide\n[vim]: https://github.com/vim/vim\n[void linux packages]: https://github.com/void-linux/void-packages/tree/master/srcpkgs/zoxide\n[wiki-env]: https://github.com/ajeetdsouza/zoxide/wiki/HOWTO:-set-environment-variables \"HOWTO: set environment variables\"\n[xplr]: https://github.com/sayanarijit/xplr\n[xxh-plugin-prerun-zoxide]: https://github.com/xxh/xxh-plugin-prerun-zoxide\n[xxh]: https://github.com/xxh/xxh\n[zabb]: https://github.com/Mellbourn/zabb\n[zoxide.el]: https://gitlab.com/Vonfry/zoxide.el\n[zoxide.vim]: https://github.com/nanotee/zoxide.vim\n[zoxide.xplr]: https://github.com/sayanarijit/zoxide.xplr\n[zsh-autocomplete]: https://github.com/marlonrichert/zsh-autocomplete"
}
