{
  "name": "plow",
  "full_name": "plow",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "High-performance and real-time metrics displaying HTTP benchmarking tool",
  "license": "Apache-2.0",
  "homepage": "https://github.com/six-ddc/plow",
  "versions": {
    "stable": "1.3.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/six-ddc/plow/archive/refs/tags/v1.3.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0ae69218fc61d4bc036a62f3cc8a4e5f29fad0edefe9e991f0446f71d9e6d9ba"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/plow/blobs/sha256:11c30ecb6a22b06e66440b72505506dc53b0e88e93a6c78aa6431ec01c695a7a",
          "sha256": "11c30ecb6a22b06e66440b72505506dc53b0e88e93a6c78aa6431ec01c695a7a"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/plow/blobs/sha256:95bcacbe5e2365ee02b20f50b0609284ec45c16735bf770e3d4d1e9780855456",
          "sha256": "95bcacbe5e2365ee02b20f50b0609284ec45c16735bf770e3d4d1e9780855456"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/plow/blobs/sha256:f0cef52ae418363789cabb8e8ebf61e0ed8b3e1583c2c824021af33e23d9adff",
          "sha256": "f0cef52ae418363789cabb8e8ebf61e0ed8b3e1583c2c824021af33e23d9adff"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/plow/blobs/sha256:4e044135f1da21cfe2ea2d2148ac796f6b5eb5945ddd1975e2efd65f0c5d967c",
          "sha256": "4e044135f1da21cfe2ea2d2148ac796f6b5eb5945ddd1975e2efd65f0c5d967c"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/plow/blobs/sha256:c7964c4b495698886328bfd10dd83c5295fe25e3c704725954713e7a0c46aff0",
          "sha256": "c7964c4b495698886328bfd10dd83c5295fe25e3c704725954713e7a0c46aff0"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/plow/blobs/sha256:bf726164d5c53c61efdd3087164201ebd3b8232a18dee414edd691a53b514f1b",
          "sha256": "bf726164d5c53c61efdd3087164201ebd3b8232a18dee414edd691a53b514f1b"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/plow/blobs/sha256:e3b8f6c2f84ab9b4d2bff2087c7daf59143f98141dac1d4d56e466a9c0839b1f",
          "sha256": "e3b8f6c2f84ab9b4d2bff2087c7daf59143f98141dac1d4d56e466a9c0839b1f"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/plow/blobs/sha256:43f1369e3579ddb48a31eb7b987543ee4dfdcc56d79238462c1285b91727c313",
          "sha256": "43f1369e3579ddb48a31eb7b987543ee4dfdcc56d79238462c1285b91727c313"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/plow.rb",
  "ruby_source_checksum": {
    "sha256": "7250ab49e752daaf2e5c4db2fa0c9283c0f56302e825dc81522acb097716b2dc"
  },
  "date_added": "2021-06-20T17:46:11+00:00",
  "readme": "# plow <!-- omit in toc -->\n\n[![build](https://github.com/six-ddc/plow/actions/workflows/release.yml/badge.svg)](https://github.com/six-ddc/plow/actions/workflows/release.yml)\n[![Homebrew](https://img.shields.io/badge/dynamic/json.svg?url=https://formulae.brew.sh/api/formula/plow.json&query=$.versions.stable&label=homebrew)](https://formulae.brew.sh/formula/plow)\n[![GitHub license](https://img.shields.io/github/license/six-ddc/plow.svg)](https://github.com/six-ddc/plow/blob/main/LICENSE)\n[![made-with-Go](https://img.shields.io/badge/Made%20with-Go-1f425f.svg)](http://golang.org)\n\nPlow is an HTTP(S) benchmarking tool, written in Golang. It uses\nexcellent [fasthttp](https://github.com/valyala/fasthttp#http-client-comparison-with-nethttp) instead of Go's default\nnet/http due to its lightning fast performance.\n\nPlow runs at a specified connections(option `-c`) concurrently and **real-time** records a summary statistics, histogram\nof execution time and calculates percentiles to display on Web UI and terminal. It can run for a set duration(\noption `-d`), for a fixed number of requests(option `-n`), or until Ctrl-C interrupted.\n\nThe implementation of real-time computing Histograms and Quantiles using stream-based algorithms inspired\nby [prometheus](https://github.com/prometheus/client_golang) with low memory and CPU bounds. so it's almost no\nadditional performance overhead for benchmarking.\n\n![](https://github.com/six-ddc/plow/blob/main/demo.gif?raw=true)\n\n```text\n❯ ./plow http://127.0.0.1:8080/hello -c 20\nBenchmarking http://127.0.0.1:8080/hello using 20 connection(s).\n@ Real-time charts is listening on http://[::]:18888\n\nSummary:\n  Elapsed        8.6s\n  Count        969657\n    2xx        776392\n    4xx        193265\n  RPS      112741.713\n  Reads    10.192MB/s\n  Writes    6.774MB/s\n\nStatistics    Min       Mean     StdDev      Max\n  Latency     32µs      176µs     37µs     1.839ms\n  RPS       108558.4  112818.12  2456.63  115949.98\n\nLatency Percentile:\n  P50     P75    P90    P95    P99   P99.9  P99.99\n  173µs  198µs  222µs  238µs  274µs  352µs  498µs\n\nLatency Histogram:\n  141µs  273028  ■■■■■■■■■■■■■■■■■■■■■■■■\n  177µs  458955  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\n  209µs  204717  ■■■■■■■■■■■■■■■■■■\n  235µs   26146  ■■\n  269µs    6029  ■\n  320µs     721\n  403µs      58\n  524µs       3\n```\n\n- [Installation](#installation)\n    - [Via Go](#via-go)\n    - [Via Homebrew](#via-homebrew)\n    - [Via Docker](#via-docker)\n- [Usage](#usage)\n    - [Options](#options)\n    - [Examples](#examples)\n- [Stargazers](#Stargazers)\n- [License](#license)\n\n## Installation\n\nBinary and image distributions are available through the [releases](https://github.com/six-ddc/plow/releases)\nassets page.\n\n### Via Go\n\n```bash\ngo install github.com/six-ddc/plow@latest\n```\n\n### Via Homebrew\n\n```sh\n# brew update\nbrew install plow\n```\n\n### Via Docker\n\n```bash\ndocker run --rm --net=host ghcr.io/six-ddc/plow\n# docker run --rm -p 18888:18888 ghcr.io/six-ddc/plow\n```\n\n## Usage\n\n### Options\n\n```bash\nusage: plow [<flags>] <url>\n\nA high-performance HTTP benchmarking tool with real-time web UI and terminal displaying\n\nExamples:\n\n  plow http://127.0.0.1:8080/ -c 20 -n 100000\n  plow https://httpbin.org/post -c 20 -d 5m --body @file.json -T 'application/json' -m POST\n\nFlags:\n      --help                   Show context-sensitive help.\n  -c, --concurrency=1          Number of connections to run concurrently\n      --rate=infinity          Number of requests per time unit, examples: --rate 50 --rate 10/ms\n  -n, --requests=-1            Number of requests to run\n  -d, --duration=DURATION      Duration of test, examples: -d 10s -d 3m\n  -i, --interval=200ms         Print snapshot result every interval, use 0 to print once at the end\n      --seconds                Use seconds as time unit to print\n      --json                   Print snapshot result as JSON\n  -b, --body=BODY              HTTP request body, if start the body with @, the rest should be a filename to read\n      --stream                 Specify whether to stream file specified by '--body @file' using chunked encoding or to read into memory\n  -m, --method=\"GET\"           HTTP method\n  -H, --header=K:V ...         Custom HTTP headers\n      --host=HOST              Host header\n  -T, --content=CONTENT        Content-Type header\n      --cert=CERT              Path to the client's TLS Certificate\n      --key=KEY                Path to the client's TLS Certificate Private Key\n  -k, --insecure               Controls whether a client verifies the server's certificate chain and host name\n      --listen=\":18888\"        Listen addr to serve Web UI\n      --timeout=DURATION       Timeout for each http request\n      --dial-timeout=DURATION  Timeout for dial addr\n      --req-timeout=DURATION   Timeout for full request writing\n      --resp-timeout=DURATION  Timeout for full response reading\n      --socks5=ip:port         Socks5 proxy\n      --auto-open-browser      Specify whether auto open browser to show Web charts\n      --[no-]clean             Clean the histogram bar once its finished. Default is true\n      --summary                Only print the summary without realtime reports\n      --version                Show application version.\n\n  Flags default values also read from env PLOW_SOME_FLAG, such as PLOW_TIMEOUT=5s equals to --timeout=5s\n\nArgs:\n  <url>  request url\n```\n\n### Examples\n\nBasic usage:\n\n```bash\nplow http://127.0.0.1:8080/ -c 20 -n 10000 -d 10s\n```\n\nPOST a json file:\n\n```bash\nplow https://httpbin.org/post -c 20 --body @file.json -T 'application/json' -m POST\n```\n\n### Bash/ZSH Shell Completion\n\n```bash\n# Add the statement to their bash_profile (or equivalent):\neval \"$(plow --completion-script-bash)\"\n# Or for ZSH\neval \"$(plow --completion-script-zsh)\"\n```\n\n## Stargazers\n\n[![Stargazers over time](https://starchart.cc/six-ddc/plow.svg)](https://starchart.cc/six-ddc/plow)\n\n## License\n\nSee [LICENSE](https://github.com/six-ddc/plow/blob/master/LICENSE)."
}
