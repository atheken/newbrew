{
  "name": "github-keygen",
  "full_name": "github-keygen",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Bootstrap GitHub SSH configuration",
  "license": "GPL-3.0",
  "homepage": "https://github.com/dolmen/github-keygen",
  "versions": {
    "stable": "1.306",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/dolmen/github-keygen/archive/v1.306.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "69fc7ef1bf5c4e958f2ad634a8cc21ec4905b16851e46455c47f9ef7a7220f5d"
    },
    "head": {
      "url": "https://github.com/dolmen/github-keygen.git",
      "branch": "release"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/github-keygen/blobs/sha256:136695a8f7aabb99fe75ad524d6143d8998a27b136971513c5e58853ee7d4d95",
          "sha256": "136695a8f7aabb99fe75ad524d6143d8998a27b136971513c5e58853ee7d4d95"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/github-keygen.rb",
  "ruby_source_checksum": {
    "sha256": "47b4dae6a31656dd4ad887b7e8da53c96f4404d91a5faaa3cac41f9ec4516266"
  },
  "date_added": "2016-11-23T12:50:30+00:00",
  "readme": "=pod\n\n=for stopwords MITM versioning\n\n=head1 NAME\n\ngithub-keygen - bootstrap your GitHub SSH configuration\n\n=head1 SYNOPSIS\n\nUnix/Linux/MacOS X:\n\n    git clone https://github.com/dolmen/github-keygen.git\n    cd github-keygen\n    ./github-keygen <my-github-username>\n    cd ..\n    rm -Rf github-keygen\n\nWindows (with msysgit or Cygwin):\n\n    git clone https://github.com/dolmen/github-keygen.git\n    cd github-keygen\n    github-keygen <my-github-username>\n    cd ..\n    rd /S /Q github-keygen\n\n=head1 DESCRIPTION\n\nThis script makes it easy to create an initial environment setup for secure\nGitHub exchanges. More secure that what the GitHub help pages recommends.\n\nBut it does much more than that:\n\n=over 4\n\n=item *\n\nThis tool B<automates the SSH setup>. Fewer human errors. And\na high level of security.\n\n=item *\n\nIt creates a new SSH B<private key dedicated> to GitHub exchanges. This is much\nbetter than using the same SSH key to connect to multiple hosts.\n(If you lose that key, just revoke it in\nL<your GitHub account SSH settings|https://github.com/settings/keys>, remove the\nkey file, and re run C<github-keygen>).\n\n=item *\n\nAs the process of creating an different SSH key for GitHub now becomes easy, it\nis now much easier to use a different SSH key for GitHub on each computer\nyou use to publish on GitHub. This will help you to use the best practices in\nSSH security.\n(If you lose that computer or if it is compromised, just revoke the key in\nL<your GitHub account SSH settings|https://github.com/settings/keys>:\nyou don't have to recreate a new key on all your other computers).\n\n=item *\n\nThe\nL<GitHub manual|https://help.github.com/articles/generating-ssh-keys> used to tell to\nI<remove> your existing SSH keys. But this may not be what you want. This tool\navoids that: keep your keys and your existing SSH config; they will not be used\nfor GitHub.\n\n=item *\n\nIt setups a B<very secure SSH configuration for GitHub>, independent of your\nother SSH settings:\n\n=over 4\n\n=item *\n\nEnable only the authentication method used with GitHub (C<publickey>)\n\n=item *\n\nUse only the private key dedicated to GitHub (the C<IdentitiesOnly> of SSH\nconfig)\n\n=item *\n\nSetup a dedicated F<known_hosts> file with the GitHub SSH hosts and enable\nstrict host checking (this means that if you get SSH alerts about host key\nproblem when connecting to GitHub, this is really a serious error and you\nshould check that someone is not altering your network link).\n\n=item *\n\nUse stronger encryption algorithms than your default SSH setup (following\nL<@stribika advices|https://stribika.github.io/2015/01/04/secure-secure-shell.html>; this is a \"best effort\" that depends on your OpenSSH being recent enough);\n\n=item *\n\nDisable bad things that could come from the GitHub hosts (\"Trust no-one\")\n\n=item *\n\nDisable the C<UseRoaming> option to protect you if ever GitHub (or a MITM) tries\nto exploit the\nL<C<OpenSSH roaming> vulnerability|http://www.openssh.com/txt/release-7.1p2>.\n\n=back\n\n=item *\n\nIt enables SSH connection sharing (see the C<ControlMaster> option in\nL<ssh_config(5)> and L<this blog post|http://interrobeng.com/2013/08/25/speed-up-git-5x-to-50x/>)\n\n=item *\n\nIt creates unique host aliases for github.com/gist.github.com that you'll be\nable to use in Git URLs (C<git remote>) to connect to a particular account.\nThis gives the flexibility to use B<multiple GitHub accounts> (and therefore a\ndifferent SSH key for each).\n\n    <account>.github.com:<repo-owner>/<repo>.git  (for each account)\n    github.com:<repo-owner>/<repo>.git            (for the default account)\n\nin addition to:\n\n    git@github.com:<repo-owner>/<repo>.git\n\n=back\n\nThis script will:\n\n=over 4\n\n=item *\n\nCreate a new SSH key dedicated only to your GitHub connections in\nF<~/.ssh/id_I<E<lt>github-accountE<gt>>@github>\n\n=item *\n\nCreate the SSH configuration optimized for GitHub and dedicated to GitHub\n(does not impact your other SSH configurations) in F<~/.ssh/config>.\n\n=item *\n\nInstall the GitHub SSH host authentication fingerprints in\nF<~/.ssh/known_hosts_github>\n\n=back\n\n=head1 TRUST\n\nAs with any software that deals with the security of your computer or of communications\nwith other computers (operating system, anti-virus, HTTPS implementation,\npassword storage...), you have to be able to trust it. (If you haven't ever\nasked yourself that question about the software you already use, you should!)\n\nHere are some arguments that should help you to make your choice:\n\n=over 4\n\n=item *\n\nC<github-keygen> is written in a scripting language (Perl 5), so the code that\nruns is the code in the script. You can audit it (or ask someone who you\ntrust to do it for you) to trust it. The author is a full time professional\nPerl developer who is well aware of all Perl best practices and works daily\non Perl code maintained by a team, so the source is not the spaghetti plate\nfor which Perl 5 got shame.\n\n=item *\n\nWhen running, C<github-keygen> generates files locally on your system. It\nconnects to github.com using public URLs only to check if your keys are\nproperly setup on the server side. You can disable this feature with the\nC<--offline> flag.\n\n=item *\n\nC<github-keygen> only generates configuration files for OpenSSH. So:\n\n=over 4\n\n=item *\n\nAfter running C<github-keygen>, you can (and should) audit that config to\ncheck the changes it did to your system before connecting to any SSH hosts.\n\n=item *\n\nNo part of that configuration is directly executable: it is just\ndata that OpenSSH will use.\n\n=item *\n\nNo executable parts of C<github-keygen> will run after that (the tool itself is\nnot installed in your system) and you can even delete it: the configuration it\nproduced will still work.\n\n=back\n\n=item *\n\nC<github-keygen> is very conservative in what it does to your SSH config (which\nmeans it will not corrupt what it didn't generate itself), so don't worry about\nconfiguration you may already have in your F<~/.ssh/config>: it will be kept as\nis. (still, bugs may be present, so read the license before using the software).\n\n=item *\n\nI (Olivier MenguE<eacute>) am not an expert in software security. However this\nlist should show you that I care enough about security to have thought about many\nissues, and thought to design the software to have trust in it at least as much\n(in fact much more) than in other security software I use every day.\n\n=back\n\n\nI'm using the SSH configuration generated by this tool every day on multiple\ncomputers, so you can trust that any change on GitHub side that may affect that\nconfig will be immediately detected by the author and upgrades will be\nmade available quickly.\n\n=head1 INSTALL\n\nC<github-keygen> is not really the kind of software you have to install. This is\nmore like a wizard that you use just once. So just get the file, run it, and\ndelete it.\n\nI<Windows only>: the tool is written in Perl, but you don't have to install\nL<StrawberryPerl|http://strawberryperl.com> (or Cygwin or ActivePerl); the perl\nbundled with L<msysgit|https://gitforwindows.org/> will be automatically\ndetected and used.\n\nFetch the script from GitHub:\n\n    git clone https://github.com/dolmen/github-keygen.git\n    cd github-keygen\n\nUnix/Linux only: install the optional C<xclip> tool (using your package\nmanager). It will be used to copy your public key to the X11 clipboard once\ncreated.\n\n=head1 UPGRADE\n\nTo upgrade your config to the latest one, update C<github-keygen> and relaunch\nit. It will update your F<~/.ssh/config> and show you the diff of what it\nchanged:\n\n    cd github-keygen\n    git rebase\n    ./github-keygen\n\n=head1 HISTORY\n\nI<Note:> As C<github-keygen> is released with Git on GitHub, you can simply use\nthe diff feature of Git/GitHub to view exactly what happened between two\nreleases. And you can also have a look at\nL<the commit log|https://github.com/dolmen/github-keygen/commits/release>.\n\n=over 4\n\n=item v1.306\n\nOn key creation, switch default key size from 2048 bits to 4096 bits.\n\nUpdate C<~/.ssh/known_hosts_github> to include only the C<ssh-ed25519> public\nkeys of GitHub servers (`ssh-rsa` and `ssh-dss` keys are removed).\n\nDisallow C<ssh-rsa> public keys for GitHub servers.\n\n=item v1.305\n\nRemove MAC algorithm C<hmac-ripemd160> as it has been\nL<removed from OpenSSH 7.6|https://www.openssh.com/txt/release-7.6>.\nIt is also not supported by GitHub anymore.\nThanks to [Laggard Kernel](https://github.com/laggardkernel) for the patch.\n\nHide warnings about known deprecated OpenSSH options (C<Protocol>, C<UseRoaming>).\nWe still support them to secure old OpenSSH clients. \n\n=item v1.304\n\nRemove algorithm C<diffie-hellman-group14-sha1> as it has been removed server side\nby GitHub: see L<https://githubengineering.com/crypto-deprecation-notice/>.\n\n=item v1.303\n\nFix SSH options and algorithm support detection that was accidentally disabled since v1.100.\nThis makes github-keygen work with OpenSSH 7.6+ that removed an algorithm.\n\nFix for support of OpenSSH down to 5.1.\n\nDetect bad permissions on F<~/.ssh/config> and report them.\n\n=item v1.302\n\nRemove C<UseRoaming> option if OpenSSH >= 7.2 on Mac OS X Sierra\n(L<issue #31|https://github.com/dolmen/github-keygen/issues/31>): Sierra\nhas 7.2p2, same as on Ubuntu 16.04, but not same behaviour.\n\nOld OpenSSH compatibility fixes:\n\n=over 4\n\n=item *\n\nHide C<ssh -Q> errors (when the option is not supported).\n\n=item *\n\nDo not use C<%n> in C<ControlPath> option.\n\n=back\n\n=item v1.301\n\nRemove C<UseRoaming> option if OpenSSH >= 7.3\n(Mac OS X Sierra,\nL<issue #31|https://github.com/dolmen/github-keygen/issues/31>):\nthis option has been removed from OpenSSH.\n\n=item v1.300\n\nKeys registered in F<~/.ssh/config> are now compared with keys registered on\nL<GitHub|https://github.com/settings/keys> to detect keys unknown to the\nservice. An C<--offline> flag allows to disable this check.\n\nDevelopment is back on C<master> branch (instead of deleted C<devel>).\n\n=item v1.200\n\nAdd versioning to the generated config. This will allow to detect dangerous\nattempts at downgrading to an older version of github-keygen.\n\nPreserve the position of the github-keygen section in F<~/.ssh/config>.\nPreviously, the section was always put at the end of the file. This was\nbreaking configs were the user had a C<Host *> section at the end of the file\nto set default settings: as the section was moved above us, those default\nsettings were applied before our own.\n\n=item v1.101\n\nConfig: set C<UseRoaming no> to protect against the\nL<C<OpenSSH roaming> vulnerability|http://www.openssh.com/txt/release-7.1p2>.\n\n=item v1.100\n\nConfig: use the official case for the C<HostName> option (instead of\nC<Hostname>).\n\nFor the best compatibility of the SSH configuration with old SSH versions, we\nnow look in the L<ssh_config(5)> man page for the list of supported options\nand unavailable options are then commented with '##'. If the man page is not\nfound, we still use all options.\n\nOn msys platform (bash in L<msysgit|https://gitforwindows.org/>), the\nC<ControlMaster> option of OpenSSH doesn't work because msys lacks support for\npassing file descriptors. So we now disable this option on this platform.\n\nWe filter our L<lists of\nalgorithms|https://stribika.github.io/2015/01/04/secure-secure-shell.html>\nagainst the lists reported by C<ssh -Q E<lt>cipher|mac|kexE<gt>>. This restores\ncompatibility with OpenSSH versions such as 6.6.1p1 bundled with msysgit\nthat does not support ciphers named C<aes*-gcm@openssh.com>.\n\nVarious fixes/workarounds to restore full support of the old SSH (4.6p1) that\nis bundled with msysgit (Git on Win32).\n\nStore the C<ControlPath> in C<$XDG_RUNTIME_DIR> (see the\nL<XDG Base Directory Specification|http://standards.freedesktop.org/basedir-spec/latest/ar01s03.html>)\nif available.\n\nDoc fixes: change \"Github\" to \"GitHub\".\n\n=item v1.020\n\nB<Improve SSH encryption> by selecting L<stronger algorithms recommended by\n@stribika|https://stribika.github.io/2015/01/04/secure-secure-shell.html>:\nC<aes256-ctr> instead of C<aes128-ctr>, and C<hmac-sha2-512> instead of C<hmac-sha1>.\n\nOpen the F<~/.ssh/known_hosts_github> with mode 0600 before\ninitializing/updating it.\n\n=item v1.011\n\nCreate F<~/.ssh> with rights 0700 if it doesn't exists because L<ssh-keygen(1)>\nwill fail if it is missing.\n\nAdd support for host C<ssh.github.com> for\nL<SSH over https port|https://docs.github.com/en/authentication/troubleshooting-ssh/using-ssh-over-the-https-port>.\nAdd C<*.ssh.github.com> host aliases for Git.\nUsers should run again C<github-keygen> (without argument) to enable those new\nfeatures.\n\nFixed L<issue #13|https://github.com/dolmen/github-keygen/issues/13>: default\nGitHub account set with `--default` option was lost when running again\nC<github-keygen> without repeating the setting. The issue existed since v1.004.\n\n=item v1.010\n\nDarwin: implemented pasting the public key to the clipboard. Thanks to Vincent\nPit for testing!\n\n=item v1.009\n\nAdded support for dashes in GitHub usernames. Thanks Pedro Figueiredo!\n\n=item v1.008\n\nAdded connection sharing: connection to GitHub is kept alive for 60\nseconds. This speeds-up any script that do multiple sequential Git interactions\nwith GitHub.\n\n=item v1.007\n\nFixed a message that wrongly told to paste the I<private> key (C<'.pub'>\nforgotten). Fixed at the\nL<Quack and Hack 2012 Europe hackathon|http://act.yapc.eu/qh2012eu/>,\nbut released (too) long later.\n\n=item v1.006\n\nUI improvement: when keys are created, the message about what to do with the\nkey is now shown at the end, after the diff instead of before.\n\n=item v1.005\n\nNo functional changes.\n\nUpdated Pod::Simple to 3.23. Updated copyright.\n\n=item v1.004\n\nChanges for compatibility with msysgit's bundled perl (an antique 5.8.8\nwith major core modules missing: C<Pod::*>). So no changes for Unix users, but\na big improvement for all Windows+msysgit users: no need to install\nStrawberryPerl just for C<github-keygen>!\n\n=item v1.003\n\nNo changes in the C<github-keygen> code, but the fatpacked build has been\ntweaked to use a better list of packed modules. This should improve\ncompatibility.\n\nDocumentation fixes.\n\n=item v1.002\n\nNo functional changes, but distribution changes: branch C<master> abandoned\nand replaced by C<release> (build result) and C<devel> (source).\n\nC<github-keygen> is now L<fatpacked|https://metacpan.org/module/App::FatPacker>\nfrom C<bin/github-keygen> in the C<devel> branch with\nL<https://metacpan.org/module/Pod::Usage|Pod::Usage> and\nL<https://metacpan.org/module/Text::Diff|Text::Diff>, so those modules do not\nhave to be installed before usage.\n\n=item v1.001 and before\n\nSee the git log.\n\n=back\n\n=head1 BUGS\n\nC<github-keygen> requires a Perl runtime. It is regularly tested in the\nfollowing environments:\n\n=over 4\n\n=item *\n\nUbuntu with perl 5.14.2\n\n=item *\n\nWindows with StrawberryPerl (5.12.1 and above) and msysgit\n\n=item *\n\nWindows with msysgit's antique perl 5.8.8.\n\n=back\n\nKnown issues:\n\n=over 4\n\n=item *\n\non Win32, F<~/.ssh/config> is always written in CRLF end-of-line style. This is\nnot a bug, it's a feature.\n\n=back\n\n\n=head1 SUPPORT\n\nIRC: ask C<dolmen> on C<irc.perl.org>.\n\nOr fill an issue at GitHub: L<https://github.com/dolmen/github-keygen/issues>\n\n=head1 AUTHOR\n\nOlivier MenguE<eacute>, L<mailto:dolmen@cpan.org>.\n\n=head2 Thanks\n\nL<Eric Lefevre|https://github.com/elefevre>: documentation patch.\n\nL<Eu Beng Hee|https://github.com/ahbeng>: L<blog post about SSH connection sharing|http://interrobeng.com/2013/08/25/speed-up-git-5x-to-50x/> that inspired\nchanges in 1.008.\n\nL<Pedro Figueiredo|https://github.com/pfig>: support for GitHub account with\ndashes (v1.009).\n\nIf you want to contribute, have a look to L<CONTRIBUTING.pod>.\n\n=head1 COPYRIGHT & LICENSE\n\nCopyright E<copy> 2011-2022 Olivier MenguE<eacute>.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see L<http://www.gnu.org/licenses/>.\n\n=cut"
}
