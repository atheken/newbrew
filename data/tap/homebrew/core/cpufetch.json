{
  "name": "cpufetch",
  "full_name": "cpufetch",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "CPU architecture fetching tool",
  "license": "GPL-2.0-only",
  "homepage": "https://github.com/Dr-Noob/cpufetch",
  "versions": {
    "stable": "1.04",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/Dr-Noob/cpufetch/archive/v1.04.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "1505161fedd58d72b936f68b55dc9b027ef910454475c33e1061999496b30ff6"
    },
    "head": {
      "url": "https://github.com/Dr-Noob/cpufetch.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cpufetch/blobs/sha256:cde2572678e219669893fe29e3fa5a4737968812ad1dd5fb718c62a1d2a8bed8",
          "sha256": "cde2572678e219669893fe29e3fa5a4737968812ad1dd5fb718c62a1d2a8bed8"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cpufetch/blobs/sha256:87694dc7eb4cadec9819fbc300d7a7999544eea4c2e7074d7e246acf268c08b5",
          "sha256": "87694dc7eb4cadec9819fbc300d7a7999544eea4c2e7074d7e246acf268c08b5"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cpufetch/blobs/sha256:b05a35d5cda56806832e88947600044307264463cdb5f12db13bd6c452918cd0",
          "sha256": "b05a35d5cda56806832e88947600044307264463cdb5f12db13bd6c452918cd0"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cpufetch/blobs/sha256:95ba5156edfbec49c499bfac6e6f8b0c370af7392b2c3b71ad33169cd637208e",
          "sha256": "95ba5156edfbec49c499bfac6e6f8b0c370af7392b2c3b71ad33169cd637208e"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cpufetch/blobs/sha256:4f2fc93b4f095d338247368c62ed66fa873c25eb8dfa8ec48faccb2e05550778",
          "sha256": "4f2fc93b4f095d338247368c62ed66fa873c25eb8dfa8ec48faccb2e05550778"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cpufetch/blobs/sha256:616c55a170525a282583cc98be969b049242adef343241ee5b77db685c309dcf",
          "sha256": "616c55a170525a282583cc98be969b049242adef343241ee5b77db685c309dcf"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cpufetch/blobs/sha256:2daa19537af4c766f00eb04d92d24e142581c635fc686a50662807771c6e88ef",
          "sha256": "2daa19537af4c766f00eb04d92d24e142581c635fc686a50662807771c6e88ef"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/cpufetch.rb",
  "ruby_source_checksum": {
    "sha256": "918daa21efbad0ef52d9b9da3ed950d1f67070c632479faca57b1c23e64633ee"
  },
  "date_added": "2021-10-11T17:18:34+00:00",
  "readme": "<p align=\"center\"><img width=50% src=\"./pictures/cpufetch.png\"></p>\n\n<h4 align=\"center\">Simple yet fancy CPU architecture fetching tool</h4>\n\n<p align=\"center\"> </p>\n\n<div align=\"center\">\n  <img height=\"22px\" src=\"https://img.shields.io/github/v/tag/Dr-Noob/cpufetch?label=cpufetch&style=flat-square\">\n  <a href=\"https://github.com/Dr-Noob/cpufetch/stargazers\">\n    <img height=\"22px\" src=\"https://img.shields.io/github/stars/Dr-Noob/cpufetch?color=4CC61F&style=flat-square\">\n  </a>\n  <a href=\"https://github.com/Dr-Noob/cpufetch/issues\">\n    <img height=\"22px\" src=\"https://img.shields.io/github/issues/Dr-Noob/cpufetch?style=flat-square\">\n  </a>\n  <a href=\"https://github.com/Dr-Noob/cpufetch/blob/master/README.md#1-support\">\n    <img height=\"22px\" src=\"pictures/os-shield.jpg\">\n  </a>\n  <a href=\"https://github.com/Dr-Noob/cpufetch/blob/master/LICENSE\">\n    <img height=\"22px\" src=\"https://img.shields.io/github/license/Dr-Noob/cpufetch?color=orange&style=flat-square\">\n  </a>\n</div>\n\n<p align=\"center\"> </p>\n\n<p align=\"center\">\ncpufetch is a command-line tool written in C that displays the CPU information in a clean and beautiful way\n</p>\n\n<p align=\"center\">\n<img width=80% src=\"./pictures/examples.gif\">\n</p>\n\n# Table of contents\n<!-- UPDATE with: doctoc --notitle README.md -->\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n\n- [1. Support](#1-support)\n- [2. Installation](#2-installation)\n  - [2.1 Installing from a package](#21-installing-from-a-package)\n  - [2.2 Building from source](#22-building-from-source)\n  - [2.3 Android](#23-android)\n- [3. Examples](#3-examples)\n  - [3.1 x86_64](#31-x86_64)\n  - [3.2 ARM](#32-arm)\n  - [3.3 PowerPC](#33-powerpc)\n- [4. Colors](#4-colors)\n  - [4.1 Specifying a name](#41-specifying-a-name)\n  - [4.2 Specifying the colors in RGB format](#42-specifying-the-colors-in-rgb-format)\n- [5. Implementation](#5-implementation)\n- [6. Bugs or improvements](#6-bugs-or-improvements)\n- [7. Acknowledgements](#7-acknowledgements)\n- [8. cpufetch for GPUs (gpufetch)](#8-cpufetch-for-gpus-gpufetch)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## 1. Support\n\n| OS          | x86_64 / x86       | ARM                | RISC-V             | PowerPC            |\n|:-----------:|:------------------:|:------------------:|:------------------:|:------------------:|\n| GNU / Linux | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |\n| Windows     | :heavy_check_mark: | :x:                | :x:                | :x:                |\n| Android     | :heavy_check_mark: | :heavy_check_mark: | :x:                | :x:                |\n| macOS       | :heavy_check_mark: | :heavy_check_mark: | :x:                | :heavy_check_mark: |\n| FreeBSD     | :heavy_check_mark: | :x:                | :x:                | :x:                |\n\n**NOTES:**\n- Colors will be used in Windows only if the terminal supports it.\n- Support in macOS ARM is limited to Apple chips only\n\n## 2. Installation\n### 2.1 Installing from a package\nChoose the right package for your operating system:\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/cpufetch.svg)](https://repology.org/project/cpufetch/versions)\n\nIf there is no available package for your OS, you can download the cpufetch binary from [the releases page](https://github.com/Dr-Noob/cpufetch/releases), or [build cpufetch from source](#22-building-from-source-linuxwindowsmacos) (see below).\n\n### 2.2 Building from source\nYou will need a C compiler (e.g, `gcc`) and `make` to compile `cpufetch`. Just clone the repo and run `make`:\n\n```\ngit clone https://github.com/Dr-Noob/cpufetch\ncd cpufetch\nmake\n./cpufetch\n```\n\n### 2.3 Android\n1. Install `termux` app (terminal emulator)\n2. Run `pkg install -y git make clang` inside termux.\n3. Build from source normally:\n  - git clone https://github.com/Dr-Noob/cpufetch\n  - cd cpufetch\n  - make\n  - ./cpufetch\n\n## 3. Examples\n### 3.1 x86_64\n\n<p align=\"center\"><img width=90% src=\"pictures/epyc.png\"></p>\n<p align=\"center\">AMD EPYC HPC server</p>\n<p align=\"center\"><img width=90% src=\"pictures/cascade_lake.jpg\"></p>\n<p align=\"center\">Intel Xeon HPC server</p>\n\n### 3.2 ARM\n\n<p align=\"center\">\n<img width=45% src=\"pictures/exynos.jpg\">\n&nbsp;\n<img width=45% src=\"pictures/snapd.png\">\n</p>\n<p align=\"center\">Samsung Galaxy S8 (left) Xiaomi Redmi Note 7 (right)</p>\n\n### 3.3 PowerPC\n\n<p align=\"center\"><img width=90% src=\"pictures/ibm.png\"></p>\n<p align=\"center\">Talos II</p>\n\n## 4. Colors\nBy default, `cpufetch` will print the CPU logo with the system colorscheme. However, you can set a custom color scheme in two different ways:\n\n### 4.1 Specifying a name\n\n By specifying a name, cpufetch will use the specific colors of each manufacture. Valid values are:\n\n- intel\n- intel-new\n- amd\n- ibm\n- arm\n\n```\n./cpufetch --color intel (default color for Intel)\n```\n\n### 4.2 Specifying the colors in RGB format\n\n5 colors must be given in RGB with the format: ``[R,G,B:R,G,B:R,G,B:R,G,B:R,G,B]``. These colors correspond to the CPU logo color (first 3 colors) and for the text colors (following 2).\n\n```\n./cpufetch --color 239,90,45:210,200,200:0,0,0:100,200,45:0,200,200\n```\n\n## 5. Implementation\nSee [cpufetch programming documentation](https://github.com/Dr-Noob/cpufetch/tree/master/doc).\n\n## 6. Bugs or improvements\nSee [cpufetch contributing guidelines](https://github.com/Dr-Noob/cpufetch/blob/master/CONTRIBUTING.md).\n\n## 7. Acknowledgements\nThanks to the fellow contributors and interested people in the project. Special thanks to:\n- [Gonzalocl](https://github.com/Gonzalocl) and [OdnetninI](https://github.com/OdnetninI): Tested cpufetch in the earlier versions of the project in many different CPUs.\n- [Kyngo](https://github.com/Kyngo): Tested cpufetch in the Apple M1 CPU.\n- [avollmerhaus](https://github.com/avollmerhaus): Helped with PowerPC port giving ssh access to a PowerPC machine.\n- [bbonev](https://github.com/bbonev) and [stephan-cr](https://github.com/stephan-cr): Reviewed the source code.\n- [mdoksa76](https://github.com/mdoksa76) and [exkc](https://github.com/exkc): Excellent ideas and feedback for supporting Allwinner SoCs.\n- [Sakura286](https://github.com/Sakura286), [exkc](https://github.com/exkc) and [Patola](https://github.com/Patola): Helped with RISC-V port with ssh access, ideas, testing, etc.\n\n## 8. cpufetch for GPUs (gpufetch)\nSee [gpufetch](https://github.com/Dr-Noob/gpufetch) project!"
}
