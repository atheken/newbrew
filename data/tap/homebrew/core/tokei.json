{
  "name": "tokei",
  "full_name": "tokei",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Program that allows you to count code, quickly",
  "license": "Apache-2.0 or MIT",
  "homepage": "https://github.com/XAMPPRocky/tokei",
  "versions": {
    "stable": "12.1.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/XAMPPRocky/tokei/archive/v12.1.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "81ef14ab8eaa70a68249a299f26f26eba22f342fb8e22fca463b08080f436e50"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tokei/blobs/sha256:58c651b034293b8dc4d2dc00c7b2a13d8c6c3c093683ab5e1ebe08a1dc6cf6f9",
          "sha256": "58c651b034293b8dc4d2dc00c7b2a13d8c6c3c093683ab5e1ebe08a1dc6cf6f9"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tokei/blobs/sha256:6ca867ee898e06ea98d3f3012e753ecb6e292160353e187fa62619f86447ca7c",
          "sha256": "6ca867ee898e06ea98d3f3012e753ecb6e292160353e187fa62619f86447ca7c"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tokei/blobs/sha256:c7b1e487acc3cddaeb578dfab8ec1e8f81fe00834d60d81311b6ca56d2c29f1b",
          "sha256": "c7b1e487acc3cddaeb578dfab8ec1e8f81fe00834d60d81311b6ca56d2c29f1b"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tokei/blobs/sha256:ecedf025a74087395440a35c5698d6e35e8831c9da184bee5ecab2d056cf1a0a",
          "sha256": "ecedf025a74087395440a35c5698d6e35e8831c9da184bee5ecab2d056cf1a0a"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tokei/blobs/sha256:19c6b4270cf51286adf6e2ddfd2aa45bfa721d52bfe5c8c0792277311a930116",
          "sha256": "19c6b4270cf51286adf6e2ddfd2aa45bfa721d52bfe5c8c0792277311a930116"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tokei/blobs/sha256:eb4878d9ef7023cba511a2c84635ebf1c428741772ebc5fd139f8a0c258574d4",
          "sha256": "eb4878d9ef7023cba511a2c84635ebf1c428741772ebc5fd139f8a0c258574d4"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tokei/blobs/sha256:65063af77fcd93f8e3340e48e7cd8db8c8effc00fc93dbf540c9ce60e764329f",
          "sha256": "65063af77fcd93f8e3340e48e7cd8db8c8effc00fc93dbf540c9ce60e764329f"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/tokei/blobs/sha256:db7e8862a35ed6f09f4c502c45d14e2891fdff54524b1daa728bcd8fdebef2b0",
          "sha256": "db7e8862a35ed6f09f4c502c45d14e2891fdff54524b1daa728bcd8fdebef2b0"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/tokei.rb",
  "ruby_source_checksum": {
    "sha256": "51f8418b3ebbc4beb14aaab987b4282751fb58b3e5459fe97ae7126165bb852b"
  },
  "date_added": "2017-06-27T19:09:22-07:00",
  "readme": "# Tokei ([時計](https://en.wiktionary.org/wiki/%E6%99%82%E8%A8%88))\r\n[![Mean Bean CI](https://github.com/XAMPPRocky/tokei/workflows/Mean%20Bean%20CI/badge.svg)](https://github.com/XAMPPRocky/tokei/actions?query=workflow%3A%22Mean+Bean+CI%22)\r\n[![Help Wanted](https://img.shields.io/github/issues/XAMPPRocky/tokei/help%20wanted?color=green)](https://github.com/XAMPPRocky/tokei/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22)\r\n[![Lines Of Code](https://tokei.rs/b1/github/XAMPPRocky/tokei?category=code)](https://github.com/XAMPPRocky/tokei)\r\n[![Documentation](https://docs.rs/tokei/badge.svg)](https://docs.rs/tokei/)\r\n![](https://img.shields.io/crates/d/tokei?label=downloads%20%28crates.io%29)\r\n![](https://img.shields.io/github/downloads/xampprocky/tokei/total?label=downloads%20%28GH%29)\r\n![](https://img.shields.io/homebrew/installs/dy/tokei?color=brightgreen&label=downloads%20%28brew%29)\r\n\r\nTokei is a program that displays statistics about your code. Tokei will show the number of files, total lines within those files and code, comments, and blanks grouped by language.\r\n\r\n### Translations\r\n- [中文](https://github.com/chinanf-boy/tokei-zh#支持的语言)\r\n\r\n## Example\r\n```console\r\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\r\n Language            Files        Lines         Code     Comments       Blanks\r\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\r\n BASH                    4           49           30           10            9\r\n JSON                    1         1332         1332            0            0\r\n Shell                   1           49           38            1           10\r\n TOML                    2           77           64            4            9\r\n───────────────────────────────────────────────────────────────────────────────\r\n Markdown                5         1355            0         1074          281\r\n |- JSON                 1           41           41            0            0\r\n |- Rust                 2           53           42            6            5\r\n |- Shell                1           22           18            0            4\r\n (Total)                           1471          101         1080          290\r\n───────────────────────────────────────────────────────────────────────────────\r\n Rust                   19         3416         2840          116          460\r\n |- Markdown            12          351            5          295           51\r\n (Total)                           3767         2845          411          511\r\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\r\n Total                  32         6745         4410         1506          829\r\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\r\n```\r\n\r\n## [API Documentation](https://docs.rs/tokei)\r\n\r\n## Table of Contents\r\n\r\n- [Features](#features)\r\n- [Installation](#installation)\r\n    - [Package Managers](#package-managers)\r\n    - [Manual](#manual)\r\n- [Configuration](#configuration)\r\n- [How to use Tokei](#how-to-use-tokei)\r\n- [Options](#options)\r\n- [Badges](#badges)\r\n- [Supported Languages](#supported-languages)\r\n- [Changelog](CHANGELOG.md)\r\n- [Common Issues](#common-issues)\r\n- [Canonical Source](#canonical-source)\r\n- [Copyright and License](#copyright-and-license)\r\n\r\n## Features\r\n\r\n- Tokei is **very fast**, and is able to count millions of lines of code in seconds.\r\n  Check out the [11.0.0 release](https://github.com/XAMPPRocky/tokei/releases/v11.0.0)\r\n  to see how Tokei's speed compares to others.\r\n\r\n- Tokei is **accurate**, Tokei correctly handles multi line comments,\r\n  nested comments, and not counting comments that are in strings. Providing an\r\n  accurate code statistics.\r\n\r\n- Tokei has huge range of languages, supporting over **150** languages, and\r\n  their various extensions.\r\n\r\n- Tokei can output in multiple formats(**CBOR**, **JSON**, **YAML**)\r\n  allowing Tokei's output to be easily stored, and reused. These can also be\r\n  reused in tokei combining a previous run's statistics with another set.\r\n\r\n- Tokei is available on **Mac**, **Linux**, and **Windows**. See [installation\r\n  instructions](#installation) for how to get Tokei on your platform.\r\n\r\n- Tokei is also a **library** allowing you to easily integrate it with other\r\n  projects.\r\n\r\n- Tokei comes with and without color. Set the env variable NO_COLOR to 1, and\r\n  it'll be black and white.\r\n\r\n## Installation\r\n\r\n### Package Managers\r\n\r\n#### Unix\r\n```console\r\n# Alpine Linux (since 3.13)\r\napk add tokei\r\n# Arch Linux\r\npacman -S tokei\r\n# Cargo\r\ncargo install tokei\r\n# Conda\r\nconda install -c conda-forge tokei\r\n# Fedora\r\nsudo dnf install tokei\r\n# FreeBSD\r\npkg install tokei\r\n# NetBSD\r\npkgin install tokei\r\n# Nix/NixOS\r\nnix-env -i tokei\r\n# OpenSUSE\r\nsudo zypper install tokei\r\n# Void Linux\r\nsudo xbps-install tokei\r\n```\r\n\r\n#### macOS\r\n```console\r\n# Homebrew\r\nbrew install tokei\r\n# MacPorts\r\nsudo port selfupdate\r\nsudo port install tokei\r\n```\r\n\r\n#### Windows\r\n```console\r\n# Winget\r\nwinget install XAMPPRocky.tokei\r\n# Scoop\r\nscoop install tokei\r\n```\r\n\r\n### Manual\r\n\r\n#### Downloading\r\nYou can download prebuilt binaries in the\r\n[releases section](https://github.com/XAMPPRocky/tokei/releases).\r\n\r\n#### Building\r\nYou can also build and install from source (requires the latest stable [Rust] compiler.)\r\n```console\r\ncargo install --git https://github.com/XAMPPRocky/tokei.git tokei\r\n```\r\n\r\n[rust]: https://www.rust-lang.org\r\n\r\n\r\n## Configuration\r\n\r\nTokei has a [configuration] file that allows you to change default behaviour.\r\nThe file can be named `tokei.toml` or `.tokeirc`. Currently tokei looks for\r\nthis file in three different places. The current directory, your home directory,\r\nand your configuration directory.\r\n\r\n## How to use Tokei\r\n\r\n#### Basic usage\r\n\r\nThis is the basic way to use tokei. Which will report on the code in `./foo`\r\nand all subfolders.\r\n\r\n```shell\r\n$ tokei ./foo\r\n```\r\n\r\n[configuration]: ./tokei.example.toml\r\n\r\n#### Multiple folders\r\nTo have tokei report on multiple folders in the same call simply add a comma,\r\nor a space followed by another path.\r\n\r\n```shell\r\n$ tokei ./foo ./bar ./baz\r\n```\r\n```shell\r\n$ tokei ./foo, ./bar, ./baz\r\n```\r\n\r\n#### Excluding folders\r\nTokei will respect all `.gitignore` and `.ignore` files, and you can use\r\nthe `--exclude` option to exclude any additional files. The `--exclude` flag has\r\nthe same semantics as `.gitignore`.\r\n\r\n```shell\r\n$ tokei ./foo --exclude *.rs\r\n```\r\n\r\nPaths to exclude can also be listed in a `.tokeignore` file, using the same\r\n[syntax](https://git-scm.com/docs/gitignore) as .gitignore files.\r\n\r\n#### Sorting output\r\nBy default tokei sorts alphabetically by language name, however using `--sort`\r\ntokei can also sort by any of the columns.\r\n\r\n`blanks, code, comments, lines`\r\n\r\n```shell\r\n$ tokei ./foo --sort code\r\n```\r\n\r\n#### Outputting file statistics\r\nBy default tokei only outputs the total of the languages, and using `--files`\r\nflag tokei can also output individual file statistics.\r\n\r\n```shell\r\n$ tokei ./foo --files\r\n```\r\n\r\n#### Outputting into different formats\r\nTokei normally outputs into a nice human readable format designed for terminals.\r\nThere is also using the `--output` option various other formats that are more\r\nuseful for bringing the data into another program.\r\n\r\n**Note:** This version of tokei was compiled without any serialization formats, to enable serialization, reinstall\r\ntokei with the features flag.\r\n\r\n```shell\r\n  ALL:\r\n  cargo install tokei --features all\r\n\r\n  CBOR:\r\n  cargo install tokei --features cbor\r\n\r\n  YAML:\r\n  cargo install tokei --features yaml\r\n```\r\n\r\n**Currently supported formats**\r\n- JSON `--output json`\r\n- YAML `--output yaml`\r\n- CBOR `--output cbor`\r\n\r\n```shell\r\n$ tokei ./foo --output json\r\n```\r\n\r\n#### Reading in stored formats\r\nTokei can also take in the outputted formats added in the previous results to its\r\ncurrent run. Tokei can take either a path to a file, the format passed in as a\r\nvalue to the option, or from stdin.\r\n\r\n```shell\r\n$ tokei ./foo --input ./stats.json\r\n```\r\n\r\n## Options\r\n\r\n```\r\nUSAGE:\r\n    tokei [FLAGS] [OPTIONS] [--] [input]...\r\n\r\nFLAGS:\r\n    -f, --files               Will print out statistics on individual files.\r\n    -h, --help                Prints help information\r\n        --hidden              Count hidden files.\r\n    -l, --languages           Prints out supported languages and their extensions.\r\n        --no-ignore           Don't respect ignore files (.gitignore, .ignore, etc.). This implies --no-ignore-parent,\r\n                              --no-ignore-dot, and --no-ignore-vcs.\r\n        --no-ignore-dot       Don't respect .ignore and .tokeignore files, including those in parent directories.\r\n        --no-ignore-parent    Don't respect ignore files (.gitignore, .ignore, etc.) in parent directories.\r\n        --no-ignore-vcs       Don't respect VCS ignore files (.gitignore, .hgignore, etc.), including those in parent\r\n                              directories.\r\n    -V, --version             Prints version information\r\n    -v, --verbose             Set log output level:\r\n                                          1: to show unknown file extensions,\r\n                                          2: reserved for future debugging,\r\n                                          3: enable file level trace. Not recommended on multiple files\r\n\r\nOPTIONS:\r\n    -c, --columns <columns>       Sets a strict column width of the output, only available for terminal output.\r\n    -e, --exclude <exclude>...    Ignore all files & directories matching the pattern.\r\n    -i, --input <file_input>      Gives statistics from a previous tokei run. Can be given a file path, or \"stdin\" to\r\n                                  read from stdin.\r\n    -o, --output <output>         Outputs Tokei in a specific format. Compile with additional features for more format\r\n                                  support. [possible values: cbor, json, yaml]\r\n    -s, --sort <sort>             Sort languages based on column [possible values: files, lines, blanks, code, comments]\r\n    -t, --type <types>            Filters output by language type, separated by a comma. i.e. -t=Rust,Markdown\r\n\r\nARGS:\r\n    <input>...    The path(s) to the file or directory to be counted.\r\n```\r\n\r\n## Badges\r\nTokei has support for badges. For example\r\n[![](https://tokei.rs/b1/github/XAMPPRocky/tokei)](https://github.com/XAMPPRocky/tokei).\r\n\r\n```\r\n[![](https://tokei.rs/b1/github/XAMPPRocky/tokei)](https://github.com/XAMPPRocky/tokei).\r\n```\r\n\r\nTokei's URL scheme is as follows.\r\n\r\n```\r\nhttps://tokei.rs/b1/{host: values: github|gitlab}/{Repo Owner eg: XAMPPRocky}/{Repo name eg: tokei}\r\n```\r\n\r\nBy default the badge will show the repo's LoC(_Lines of Code_), you can also\r\nspecify for it to show a different category, by using the `?category=` query\r\nstring. It can be either `code`, `blanks`, `files`, `lines`, `comments`,\r\nExample show total lines:\r\n\r\n```\r\n[![](https://tokei.rs/b1/github/XAMPPRocky/tokei?category=lines)](https://github.com/XAMPPRocky/tokei).\r\n```\r\n\r\nThe server code hosted on tokei.rs is in [XAMPPRocky/tokei_rs](https://github.com/XAMPPRocky/tokei_rs)\r\n\r\n## Dockerized version\r\nTokei is available in a small `alpine`-based docker image, buildable through:\r\n```bash\r\nearthly +docker\r\n```\r\n\r\nOnce built, one can run the image with:\r\n```bash\r\ndocker run --rm -v /path/to/analyze:/src tokei .\r\n```\r\n\r\nOr, to simply analyze the current folder (linux):\r\n```bash\r\ndocker run --rm -v $(pwd):/src tokei .\r\n```\r\n\r\n## Supported Languages\r\n\r\nIf there is a language that you would to add to tokei feel free to make a pull\r\nrequest. Languages are defined in [`languages.json`](./languages.json), and you can\r\nread how to add and test your language in our [CONTRIBUTING.md](./CONTRIBUTING.md).\r\n\r\n```\r\nAbap\r\nActionScript\r\nAda\r\nAgda\r\nAlex\r\nAlloy\r\nAsn1\r\nAsp\r\nAspNet\r\nAssembly\r\nAssemblyGAS\r\nATS\r\nAutoconf\r\nAutoHotKey\r\nAutomake\r\nAWK\r\nBash\r\nBatch\r\nBazel\r\nBean\r\nBitbake\r\nBrightScript\r\nC\r\nCabal\r\nCassius\r\nCeylon\r\nCHeader\r\nClojure\r\nClojureC\r\nClojureScript\r\nCMake\r\nCobol\r\nCoffeeScript\r\nCogent\r\nColdFusion\r\nColdFusionScript\r\nCoq\r\nCpp\r\nCppHeader\r\nCrystal\r\nCSharp\r\nCShell\r\nCss\r\nCuda\r\nCython\r\nD\r\nDAML\r\nDart\r\nDeviceTree\r\nDhall\r\nDockerfile\r\nDotNetResource\r\nDreamMaker\r\nDust\r\nEbuild\r\nEdgeDB\r\nEdn\r\nElisp\r\nElixir\r\nElm\r\nElvish\r\nEmacsDevEnv\r\nEmojicode\r\nErlang\r\nFactor\r\nFEN\r\nFish\r\nFlatBuffers\r\nForgeConfig\r\nForth\r\nFortranLegacy\r\nFortranModern\r\nFreeMarker\r\nFSharp\r\nFstar\r\nGDB\r\nGdScript\r\nGherkin\r\nGleam\r\nGlsl\r\nGo\r\nGraphql\r\nGroovy\r\nGwion\r\nHamlet\r\nHandlebars\r\nHappy\r\nHaskell\r\nHaxe\r\nHcl\r\nHex\r\nHlsl\r\nHolyC\r\nHtml\r\nHy\r\nIdris\r\nIni\r\nIntelHex\r\nIsabelle\r\nJai\r\nJava\r\nJavaScript\r\nJq\r\nJson\r\nJsx\r\nJulia\r\nJulius\r\nKakouneScript\r\nKotlin\r\nLean\r\nLess\r\nLinkerScript\r\nLiquid\r\nLisp\r\nLLVM\r\nLogtalk\r\nLua\r\nLucius\r\nMadlang\r\nMakefile\r\nMarkdown\r\nMeson\r\nMint\r\nMlatu\r\nModuleDef\r\nMoonScript\r\nMsBuild\r\nMustache\r\nNim\r\nNix\r\nNotQuitePerl\r\nNuGetConfig\r\nNushell\r\nObjectiveC\r\nObjectiveCpp\r\nOCaml\r\nOdin\r\nOrg\r\nOz\r\nPascal\r\nPerl\r\nPerl6\r\nPest\r\nPhp\r\nPoke\r\nPolly\r\nPony\r\nPostCss\r\nPowerShell\r\nProcessing\r\nProlog\r\nProtobuf\r\nPSL\r\nPureScript\r\nPython\r\nQcl\r\nQml\r\nR\r\nRacket\r\nRakefile\r\nRazor\r\nRenpy\r\nReStructuredText\r\nRON\r\nRPMSpecfile\r\nRuby\r\nRubyHtml\r\nRust\r\nSass\r\nScala\r\nScheme\r\nScons\r\nSh\r\nShaderLab\r\nSml\r\nSolidity\r\nSpecmanE\r\nSpice\r\nSql\r\nSRecode\r\nStratego\r\nSvelte\r\nSvg\r\nSwift\r\nSwig\r\nSystemVerilog\r\nTcl\r\nTex\r\nText\r\nThrift\r\nToml\r\nTsx\r\nTwig\r\nTypeScript\r\nUMPL\r\nUnrealDeveloperMarkdown\r\nUnrealPlugin\r\nUnrealProject\r\nUnrealScript\r\nUnrealShader\r\nUnrealShaderHeader\r\nUrWeb\r\nUrWebProject\r\nVala\r\nVB6\r\nVBScript\r\nVelocity\r\nVerilog\r\nVerilogArgsFile\r\nVhdl\r\nVimScript\r\nVisualBasic\r\nVisualStudioProject\r\nVisualStudioSolution\r\nVue\r\nWebAssembly\r\nWolfram\r\nXaml\r\nXcodeConfig\r\nXml\r\nXSL\r\nXtend\r\nYaml\r\nZenCode\r\nZig\r\nZsh\r\n```\r\n\r\n## Common issues\r\n\r\n### Tokei says I have a lot of D code, but I know there is no D code!\r\nThis is likely due to `gcc` generating `.d` files. Until the D people decide on\r\na different file extension, you can always exclude `.d` files using the\r\n`-e --exclude` flag like so\r\n\r\n```\r\n$ tokei . -e *.d\r\n```\r\n\r\n## Canonical Source\r\nThe canonical source of this repo is hosted on\r\n[GitHub](https://github.com/XAMPPRocky/tokei). If you have a GitHub account,\r\nplease make your issues, and pull requests there.\r\n\r\n## Related Tools\r\n\r\n- [tokei-pie](https://github.com/laixintao/tokei-pie): Render tokei's output to\r\n  interactive sunburst chart.\r\n\r\n## Copyright and License\r\n(C) Copyright 2015 by XAMPPRocky and contributors\r\n\r\nSee [the graph](https://github.com/XAMPPRocky/tokei/graphs/contributors) for a full list of contributors.\r\n\r\nTokei is distributed under the terms of both the MIT license and the Apache License (Version 2.0).\r\n\r\nSee [LICENCE-APACHE](./LICENCE-APACHE), [LICENCE-MIT](./LICENCE-MIT) for more information.\r"
}
