{
  "name": "rofs-filtered",
  "full_name": "rofs-filtered",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Filtered read-only filesystem for FUSE",
  "license": "GPL-2.0",
  "homepage": "https://github.com/gburca/rofs-filtered/",
  "versions": {
    "stable": "1.7",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/gburca/rofs-filtered/archive/rel-1.7.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d66066dfd0274a2fb7b71dd929445377dd23100b9fa43e3888dbe3fc7e8228e8"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 2,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/rofs-filtered/blobs/sha256:a07f54de644092a439c5ae5a537aca17499ea8b1dad446bb1610f1fb30aaf5cf",
          "sha256": "a07f54de644092a439c5ae5a537aca17499ea8b1dad446bb1610f1fb30aaf5cf"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "libfuse@2"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "linux",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/rofs-filtered.rb",
  "ruby_source_checksum": {
    "sha256": "5fed95930386ff9d5034bcb1cff8b51190a22c14ed9e6c42e4c52ba313dc97d8"
  },
  "date_added": "2015-04-12T21:32:04-07:00",
  "readme": "[![Build Status](https://travis-ci.org/gburca/rofs-filtered.svg?branch=master)](https://travis-ci.org/gburca/rofs-filtered)\n[![Coverity](https://scan.coverity.com/projects/11175/badge.svg)](https://scan.coverity.com/projects/gburca-rofs-filtered)\n\nThis FUSE file system allows the user to mount a directory tree as read-only\nand filter the files shown in the read-only directory tree based on regular\nexpressions found in the rofs-filtered.rc configuration file. See the\nrofs-filtered.rc file for more details.\n\nWhat's the use of such a file system? Here are two use cases:\n\n* Say you have a ton of \\*.flac music files, along with the transcoded \\*.mp3\nfiles in the same directory tree structure. Maybe you want to show only one of\nthe formats to music players that can play both flac and mp3 so that the songs\ndon't show up twice. You might also want to show only mp3 files to players that\ndon't understand the flac format.\n\n* If you take pictures with your DSLR in raw camera format, you might want to\nallow an application RO access to only the JPG version of the images.\n\nBased on:\nROFS - The read-only filesystem for FUSE.\n\nGet the latest version from:\n\thttps://github.com/gburca/rofs-filtered\n\n\n### Dependencies:\n* libfuse2\n* libfuse-dev\n* fuse\n  * Version 2.5 or later of FUSE is required.\n\n\n### Building:\n```\nmkdir build\ncd build\ncmake ..\nmake\nsudo make install\n```\n\nOn Mac OS X 10.10 Yosemite or later you can use [Homebrew](http://brew.sh/) to install:\n\n    brew install rofs-filtered \n\n\n### Using:\n\n```\nrofs-filtered --help\n```\n\n* The [rofs-filtered.rc](rofs-filtered.rc) file contains instructions on how to configure the\nfiltering. This file is installed by default in /usr/local/etc.\n\n* Mount a directory tree by adding a similar line to /etc/fstab: \n```\n/usr/local/bin/rofs-filtered\t/the/read/write/device /the/read/only/mount/point fuse defaults,allow_other 0 0\n```\n\n* If you need to have different mount points, each with its own filter rules, you can use an alternative syntax in /etc/fstab:\n```\n/usr/local/bin/rofs-filtered\t/the/ro/mount/point1\tfuse\tdefaults,allow_other,source=/the/rw/device1,config=/etc/filter1.rc\n/usr/local/bin/rofs-filtered\t/the/ro/mount/point2\tfuse\tdefaults,allow_other,source=/the/rw/device2,config=/etc/filter2.rc\n```\n\n* The rofs-filtered executable can also be called directly:\n```\nrofs-filtered <Filtered-Path> -o source=<RW-Path> [-o config=/etc/filter1.rc] [FUSE options]\n```\n\n* To unmount use one of these two commands:\n```\nfusermount -u /the/read/only/mount/point \n# OR\numount /the/read/only/mount/point\n```\n\n* On some systems, the user will need to be in the \"fuse\" UNIX group.\n\n* The configuration file normally specifies what files should be filtered out.\n  When the \"invert\" option is used, only files that match the RegEx will be\n  shown. This can be tricky to configure. See the [rofs-filtered-invert.rc](rofs-filtered-invert.rc) file\n  for some tips. The \"invert\" option can be specified in fstab or on the\n  command line respectively as follows:\n\n```\n/usr/local/bin/rofs-filtered\t/the/ro/mount/point1\tfuse\tdefaults,allow_other,source=/the/rw/device1,config=/etc/filter1.rc,invert\n```\n\n```\nrofs-filtered <Filtered-Path> -o source=<RW-Path> -o invert [-o config=/etc/filter1.rc] [FUSE options]\n```"
}
