{
  "name": "libatomic_ops",
  "full_name": "libatomic_ops",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Implementations for atomic memory update operations",
  "license": "GPL-2.0-or-later and MIT",
  "homepage": "https://github.com/ivmai/libatomic_ops/",
  "versions": {
    "stable": "7.8.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/ivmai/libatomic_ops/releases/download/v7.8.0/libatomic_ops-7.8.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "15676e7674e11bda5a7e50a73f4d9e7d60452271b8acf6fd39a71fefdf89fa31"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libatomic_ops/blobs/sha256:ed0db8f6667095ba3d496ceed407d24da924b5f5d294c138bb54aac074594990",
          "sha256": "ed0db8f6667095ba3d496ceed407d24da924b5f5d294c138bb54aac074594990"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libatomic_ops/blobs/sha256:7723e54538a406d853548be45f69e2064d79c733cf47e689917132c4156fec2e",
          "sha256": "7723e54538a406d853548be45f69e2064d79c733cf47e689917132c4156fec2e"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libatomic_ops/blobs/sha256:27c11a727976b29caca9d7971a27ab10ee0aea1708b61e5bc56929e93759793b",
          "sha256": "27c11a727976b29caca9d7971a27ab10ee0aea1708b61e5bc56929e93759793b"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libatomic_ops/blobs/sha256:e6705a2129f65fbc29ae067730e33e4d8fb150774c8a70f20d2fe3506ab26bdf",
          "sha256": "e6705a2129f65fbc29ae067730e33e4d8fb150774c8a70f20d2fe3506ab26bdf"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libatomic_ops/blobs/sha256:212284fa313db676883d4e7c537ba782f934eb948c9f09921d69c858cdb44c8a",
          "sha256": "212284fa313db676883d4e7c537ba782f934eb948c9f09921d69c858cdb44c8a"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libatomic_ops/blobs/sha256:0447f302797eb310f879dfd442a8447190df76877274f67dffcf718c7d19a3e9",
          "sha256": "0447f302797eb310f879dfd442a8447190df76877274f67dffcf718c7d19a3e9"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libatomic_ops/blobs/sha256:56a11f2c1002f3b7d07287a8360aa1afb101db94550526d616e74a76bec641b2",
          "sha256": "56a11f2c1002f3b7d07287a8360aa1afb101db94550526d616e74a76bec641b2"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/libatomic_ops.rb",
  "ruby_source_checksum": {
    "sha256": "f2ae55f329e7c95193a0e62ef67a4ad94d3a53de2e1e8336e0b299605172b94c"
  },
  "date_added": "2013-09-10T13:01:41-07:00",
  "readme": "# The atomic_ops library (`libatomic_ops`)\n\nIN NEW CODE, PLEASE USE C11 OR C++14 STANDARD ATOMICS INSTEAD OF THE CORE\nLIBRARY IN THIS PACKAGE.\n\n[![Travis-CI build status](https://app.travis-ci.com/ivmai/libatomic_ops.svg?branch=master)](https://app.travis-ci.com/github/ivmai/libatomic_ops)\n[![AppVeyor CI build status](https://ci.appveyor.com/api/projects/status/github/ivmai/libatomic_ops?branch=master&svg=true)](https://ci.appveyor.com/project/ivmai/libatomic-ops)\n[![Codecov.io](https://codecov.io/github/ivmai/libatomic_ops/coverage.svg?branch=master)](https://codecov.io/github/ivmai/libatomic_ops?branch=master)\n[![Coveralls test coverage status](https://coveralls.io/repos/ivmai/libatomic_ops/badge.png?branch=master)](https://coveralls.io/github/ivmai/libatomic_ops)\n[![Coverity Scan build status](https://scan.coverity.com/projects/10809/badge.svg)](https://scan.coverity.com/projects/ivmai-libatomic_ops)\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fivmai%2Flibatomic_ops.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fivmai%2Flibatomic_ops?ref=badge_shield)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/6333/badge)](https://bestpractices.coreinfrastructure.org/projects/6333)\n[![Hits-of-Code](https://hitsofcode.com/github/ivmai/libatomic_ops?branch=master)](https://hitsofcode.com/github/ivmai/libatomic_ops/view)\n[![Lines of code](https://img.shields.io/tokei/lines/github/ivmai/libatomic_ops)](https://shields.io/category/size)\n[![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/ivmai/libatomic_ops)](https://shields.io/category/size)\n[![Github All Releases](https://img.shields.io/github/downloads/ivmai/libatomic_ops/total.svg)](https://shields.io/category/downloads)\n[![Packaging status](https://repology.org/badge/tiny-repos/libatomic-ops.svg)](https://repology.org/project/libatomic-ops/versions)\n\nThis is version 7.9.0 (next release development) of libatomic_ops.\n\nLicense: [MIT](LICENSE) for core library / [GPL-2.0](COPYING) for gpl\nextension.\n\n\n## Download\n\nYou might find a more recent/stable version on the\n[Download](https://github.com/ivmai/libatomic_ops/wiki/Download) page, or\n[BDWGC site](http://www.hboehm.info/gc/).\n\nAlso, the latest bug fixes and new features are available in the\n[development repository](https://github.com/ivmai/libatomic_ops).\n\n\n## Overview\n\nThis package provides semi-portable access to hardware-provided\natomic memory update operations on a number of architectures.  These might\nallow you to write code:\n\n* That does more interesting things in signal handlers.\n\n* Makes more effective use of multiprocessors by allowing you to write\n  clever lock-free code.  Note that such code is very difficult to get\n  right, and will unavoidably be less portable than lock-based code.  It\n  is also not always faster than lock-based code.  But it may occasionally\n  be a large performance win.\n\n* To experiment with new and much better thread programming paradigms, etc.\n\nPlease see other README files for the details:\n\n* [README_details.txt](README_details.txt) - details about atomic_ops.h\n\n* [README_malloc.txt](README_malloc.txt) - a simple almost-lock-free malloc\n  implementation (part of libatomic_ops_gpl)\n\n* [README_stack.txt](README_stack.txt) -  an almost lock-free LIFO linked\n  lists (stack) implementation (part of libatomic_ops_gpl)\n\n\n## Installation and Usage\n\nThe configuration and build scripts for this package were generated by\nAutomake/Autoconf.  `./configure; make; sudo make install` in this\ndirectory should work.  For a more customized build, see the output of\n`./configure --help`.  To build it from the development repository,\n`./autogen.sh` should be executed first.\n\nAlternatively, CMake could be use to build this package, e.g.\n`cmake . && cmake --build .` in this directory should work.\n\nNote that much of the content of this library is in the header files.\nHowever, two small libraries are built and installed:\n\n* `libatomic_ops.a` is a support (core) library, which is not needed on some\n  platforms. This is intended to be usable, under some mild restrictions,\n  in free or proprietary code, as are all the header files.\n  See [LICENSE](LICENSE) for more details about the licensing.\n\n* `libatomic_ops_gpl.a` is a so called gpl extension library containing some\n  higher level facilities.  This code is covered by the GPL.  The contents\n  correspond to the headers `atomic_ops_malloc.h` and `atomic_ops_stack.h`.\n  Not built and not installed if `--disable-gpl` option is passed to\n  `configure` (or if `-Denable_gpl=OFF` option is passed to `cmake` if the\n  latter is used to build the package).  The licensing details are given in\n  [COPYING](COPYING) and [LICENSE](LICENSE) files.\n\n\n## Platform Specific Notes\n\nWin32/64: src/Makefile.msft contains a very simple Makefile for building\nand running tests and building the gpl library.  The core `libatomic_ops`\nimplementation is entirely in header files (libatomic_ops.lib is built anyway\nto match that of the configure-based build process, but libatomic_ops.lib has\nonly the implementation of the internal AO_pause() used by the gpl library).\nMore information is provided in [README_win32.txt](README_win32.txt) file.\n\nHP-UX/PA-RISC: `aCC -Ae` won't work as a C compiler, since it doesn't support\ninline assembly code.  Use cc.\n\n\n## Feedback, Contribution, Questions and Notifications\n\nPlease address bug reports and new feature ideas to\n[GitHub issues](https://github.com/ivmai/libatomic_ops/issues).  Before the\nsubmission please check that it has not been done yet by someone else.\n\nIf you want to contribute, submit\na [pull request](https://github.com/ivmai/libatomic_ops/pulls) to GitHub.\n\nIf you need help, use\n[Stack Overflow](https://stackoverflow.com/questions/tagged/atomic-ops).\nOlder questions on the site can be found by\n[this query](https://stackoverflow.com/search?q=atomic_ops).\nOlder technical discussions are also available in `bdwgc` mailing list\narchive - it can be downloaded as a\n[compressed file](https://github.com/ivmai/bdwgc/files/1038163/bdwgc-mailing-list-archive-2017_04.tar.gz)\nor browsed at [Narkive](http://bdwgc.opendylan.narkive.com) (please search\nfor _atomic_ keyword).\n\nTo get new release announcements, subscribe to\n[RSS feed](https://github.com/ivmai/libatomic_ops/releases.atom).\n(To receive the notifications by email, a 3rd-party free service like\n[IFTTT RSS Feed](https://ifttt.com/feed) can be setup.)\nTo be notified on all issues, please\n[watch](https://github.com/ivmai/libatomic_ops/watchers) the project on\nGitHub.\n\n\n## Copyright & Warranty, Contributors\n\nPlease be aware of the dual nature of the license of libatomic_ops:\n\n* the core part (implementing semi-portable access to hardware-provided\n  atomic memory operations) is released under MIT license\n\n* the gpl extension (almost lock-free malloc and stack implementations) and\n  the tests are released under GPL-2.0 license\n\nThe exact licensing information is provided in [LICENSE](LICENSE) file.\n\nThe library contributors are listed in [AUTHORS](AUTHORS) file."
}
