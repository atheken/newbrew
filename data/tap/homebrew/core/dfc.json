{
  "name": "dfc",
  "full_name": "dfc",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Display graphs and colors of file system space/usage",
  "license": "BSD-3-Clause",
  "homepage": "https://github.com/Rolinh/dfc",
  "versions": {
    "stable": "3.1.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/Rolinh/dfc/releases/download/v3.1.1/dfc-3.1.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "962466e77407dd5be715a41ffc50a54fce758a78831546f03a6bb282e8692e54"
    },
    "head": {
      "url": "https://github.com/Rolinh/dfc.git",
      "branch": "master"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/dfc/blobs/sha256:3a7c3a4bb6e644fb06bc3b28dcce2f2a61a2be235cb65e4a188bf55a63657c43",
          "sha256": "3a7c3a4bb6e644fb06bc3b28dcce2f2a61a2be235cb65e4a188bf55a63657c43"
        },
        "arm64_monterey": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/dfc/blobs/sha256:6aa0c0d2ad81bf179b61fced051ea22e5cb85376eafbb8e1d7376d8f3fc9cec7",
          "sha256": "6aa0c0d2ad81bf179b61fced051ea22e5cb85376eafbb8e1d7376d8f3fc9cec7"
        },
        "arm64_big_sur": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/dfc/blobs/sha256:6f2d7350e0c7e1c905718b6dcf282367bc846bbd51538a9a525f681dda03be61",
          "sha256": "6f2d7350e0c7e1c905718b6dcf282367bc846bbd51538a9a525f681dda03be61"
        },
        "ventura": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/dfc/blobs/sha256:fefbde9ea38d983a69c406f0ed63ceecdea1460fa34d97ca64a158b86da1f2f2",
          "sha256": "fefbde9ea38d983a69c406f0ed63ceecdea1460fa34d97ca64a158b86da1f2f2"
        },
        "monterey": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/dfc/blobs/sha256:127dd250819075427ca4a6f35f292d29c4af8b070c6ee368645817d54ac5a50b",
          "sha256": "127dd250819075427ca4a6f35f292d29c4af8b070c6ee368645817d54ac5a50b"
        },
        "big_sur": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/dfc/blobs/sha256:a89714cadb5ca91708c9f0c0f37266726517418e0ee592003c1cff38cc7599b1",
          "sha256": "a89714cadb5ca91708c9f0c0f37266726517418e0ee592003c1cff38cc7599b1"
        },
        "catalina": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/dfc/blobs/sha256:cefa6f0f5e96a815ebbee4d4618dc927f88052f4137d52c31d21688fac211aa8",
          "sha256": "cefa6f0f5e96a815ebbee4d4618dc927f88052f4137d52c31d21688fac211aa8"
        },
        "mojave": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/dfc/blobs/sha256:93406a46f6e08d861ddbc5ea7f4ce910629f33090c39eeb827f05444d61fe466",
          "sha256": "93406a46f6e08d861ddbc5ea7f4ce910629f33090c39eeb827f05444d61fe466"
        },
        "x86_64_linux": {
          "cellar": "/home/linuxbrew/.linuxbrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/dfc/blobs/sha256:0d467920d7e3393975fc11b8fa07f84e177ddafdfa7139bc219183380f891d42",
          "sha256": "0d467920d7e3393975fc11b8fa07f84e177ddafdfa7139bc219183380f891d42"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "gettext"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/dfc.rb",
  "ruby_source_checksum": {
    "sha256": "b8b20529c1f949ba651ddb7bf79d8676a28ee6ab58975ba237312f841322a606"
  },
  "date_added": "2012-04-05T07:32:25-07:00",
  "readme": "# README\n\n`dfc` is a tool to report file system space usage information. When the output\nis a terminal, it uses color and graphs by default. It has a lot of features\nsuch as HTML, JSON and CSV export, multiple filtering options, the ability to\nshow mount options and so on.\n\n![screenshot](res/screenshot.png)\n\n## BUILD\n\n`cmake` is required to build `dfc`. For convenience, a simple `Makefile` (which\ncalls `cmake` under the hood) is provided.\n\nI suggest you create a `build` directory in which you compile `dfc`. This is of\ncourse not required but it will prevent files from being created everywhere in\nthe source folder.\n\n### BUILD STEPS\n\nCreate the build directory:\n\n\tmkdir build\n\nNavigate into it:\n\n\tcd build\n\nRun the `cmake` command to generate a `Makefile` that works for your OS:\n\n\tcmake ..\n\nNow you can use the make command to build `dfc`:\n\n\tmake\n\nThe `dfc` binary will be placed into a `bin` sub-directory.\n\n### BUILD OPTIONS\n\nSeveral options can be tweaked before you compile `dfc`. To activate /\ndeactivate or change them, you need to do it at the `cmake` step. Note that you\nmay also use `ccmake` instead which gives you a `curses` interface to tweak the\noptions.\n\nBy default, translations are enabled. They require `gettext` to be installed on\nthe system. You can however easily disable them in which case no translations\nnor language translated configuration files will be installed.\n\n\tcmake .. -DNLS_ENABLED=false\n\n`dfc` has also the `LFS` option enabled by default. This option activates\ncompile flags in order to support listing of large file systems (over 4G) on\n32-bit hosts. This will not harm 64-bit systems if activated but if you feel the\nneed to deactivate it, use the following:\n\n    cmake .. -DLFS_ENABLED=false\n\nDifferent types of build are available. Most people will only care about\n`RELEASE` which is the build type that shall be used when distributing the\nsoftware as binary or installing it as it adds some optimization flags.\nTo enable `RELEASE` build use the following:\n\n    cmake .. -DCMAKE_BUILD_TYPE=RELEASE\n\nDevelopers might care about `DEBUG` build when debugging the program as it adds\ndebug flags such as `-g3`. Enable it like so:\n\n    cmake .. -DCMAKE_BUILD_TYPE=DEBUG\n\nNote that by default, `dfc` build with very strict compilers flags.\n\n## RUN\n\nOnce built, you can run `dfc` by typing:\n\n\t./dfc\n\nfrom within the directory where `dfc` is located.\n\nSee `./dfc -h` for quick options and usage overview or read the manual page.\n\n## INSTALL\n\nBy default, `dfc` binary will be installed in `/usr/local/bin`. As `root`, type:\n\n\tmake install\n\nYou can also choose some standards parameters like where the files need to be\ninstalled. This needs to be done when using the `cmake` command.\nExample (from the previously created build directory):\n\n\tcmake .. -DPREFIX=/usr -DSYSCONFDIR=/etc -DCMAKE_BUILD_TYPE=RELEASE\n\nThen run the `make install` and it will install `dfc` according to what you\nchose in the previous step.\n\n## CONFIGURATION FILE\n\nThe configuration file found in `conf/dfcrc` needs to be placed here if one\ndesires to use it:\n\n\t$XDG_CONFIG_HOME/dfc/dfcrc\n\nNote that if, for instance, French is the language you use, you should then use\nthe configuration file that has been translated into French\n(found in `conf/fr/dfcrc`) and so on for any language into which `dfc` has been\ntranslated.\n\nIf your operating system does not support `XDG Base Directory Specification` it\ncan then be placed in this directory:\n\n\t$HOME/.config/dfc/dfcrc\n\nOr, last choice, directly in `$HOME` (but the name has to be preceded by a dot):\n\n\t$HOME/.dfcrc\n\n## INFORMATION FOR PACKAGERS\n\nHere is the list of dependencies:\n\n  * standard C library\n\nYep, that should be it. :)\n\nPlease, note that `gettext` is required in order to build translations.\nIf you do not want to package `dfc` with translation support, use the option to\ndisable translation as explained in the build section.\n\nOf course, `cmake` is a build dependency.\n\n<!-- vim: set filetype=markdown textwidth=80 -->"
}
