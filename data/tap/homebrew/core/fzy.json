{
  "name": "fzy",
  "full_name": "fzy",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Fast, simple fuzzy text selector with an advanced scoring algorithm",
  "license": "MIT",
  "homepage": "https://github.com/jhawthorn/fzy",
  "versions": {
    "stable": "1.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/jhawthorn/fzy/releases/download/1.0/fzy-1.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "80257fd74579e13438b05edf50dcdc8cf0cdb1870b4a2bc5967bd1fdbed1facf"
    },
    "head": {
      "url": "https://github.com/jhawthorn/fzy.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fzy/blobs/sha256:aa5003d2177cfab28c1a44199fc9aeea2351c2480b5ee4cdbfe03f3b855569b3",
          "sha256": "aa5003d2177cfab28c1a44199fc9aeea2351c2480b5ee4cdbfe03f3b855569b3"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fzy/blobs/sha256:594f670b4c7aead7e05fb1ee3b756d6373abe49c8a05c9422acee94a932ebfcb",
          "sha256": "594f670b4c7aead7e05fb1ee3b756d6373abe49c8a05c9422acee94a932ebfcb"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fzy/blobs/sha256:80cdff748840ffa3b7f85b79839b776ba8c24cd8d5e63d6dfa9c3e34cc97717a",
          "sha256": "80cdff748840ffa3b7f85b79839b776ba8c24cd8d5e63d6dfa9c3e34cc97717a"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fzy/blobs/sha256:822711ed5bad961b13e20f748b816bc35957fc0e51dc9ac57b6eeac4a3ba4547",
          "sha256": "822711ed5bad961b13e20f748b816bc35957fc0e51dc9ac57b6eeac4a3ba4547"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fzy/blobs/sha256:f86b3980fedf4bd190cad2a289985b42fa664a022373de292c5441a1d2ea581b",
          "sha256": "f86b3980fedf4bd190cad2a289985b42fa664a022373de292c5441a1d2ea581b"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fzy/blobs/sha256:31d5e7d85d6ca41615eb96700184659116d35b4fba2c8809b31a3bdefb348fe4",
          "sha256": "31d5e7d85d6ca41615eb96700184659116d35b4fba2c8809b31a3bdefb348fe4"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fzy/blobs/sha256:d517947fe59a7b4c577245cc7f1e7124aa65dfb95ae67175e1ebf3d3d14ac35e",
          "sha256": "d517947fe59a7b4c577245cc7f1e7124aa65dfb95ae67175e1ebf3d3d14ac35e"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fzy/blobs/sha256:2f7d67a61ad3cf284ec15d95e2f5eedaf1cf0ecb63ea2a8994df9733160b3a2b",
          "sha256": "2f7d67a61ad3cf284ec15d95e2f5eedaf1cf0ecb63ea2a8994df9733160b3a2b"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fzy/blobs/sha256:fb173da3b703940c9dd8c942ced0db3c068f544be59fb01ccfe835f566d13cef",
          "sha256": "fb173da3b703940c9dd8c942ced0db3c068f544be59fb01ccfe835f566d13cef"
        },
        "sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fzy/blobs/sha256:b478e2604e81faf0a2e7278afe2f811ff1739528f246fcf2556e05a81f1d3435",
          "sha256": "b478e2604e81faf0a2e7278afe2f811ff1739528f246fcf2556e05a81f1d3435"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fzy/blobs/sha256:696df3c3d3296b1b03bcf0e75eb7d7bc73f004fd15fe7f7899aa10dca7d3e6f6",
          "sha256": "696df3c3d3296b1b03bcf0e75eb7d7bc73f004fd15fe7f7899aa10dca7d3e6f6"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/fzy.rb",
  "ruby_source_checksum": {
    "sha256": "876419dbaae1f01f286baae544756c46e7bbf4e155b1804eb1e9cd2a806fc7de"
  },
  "date_added": "2017-03-25T15:44:34+01:00",
  "readme": "![fzy](http://i.hawth.ca/u/fzy-github.svg)\n\n**fzy** is a fast, simple fuzzy text selector for the terminal with an advanced scoring algorithm.\n\n[Try it out online!](http://jhawthorn.github.io/fzy-demo)\n\n![](http://i.hawth.ca/u/fzy_animated_demo.svg)\n\n<blockquote>\nIt's been kind of life-changing.\n-<a href=\"https://github.com/graygilmore/\">@graygilmore</a>\n</blockquote>\n\n<blockquote>\nfzy works great btw\n-<a href=\"https://twitter.com/alexblackie/status/719297828892188672\">@alexblackie</a>\n</blockquote>\n\n [![Build Status](https://github.com/jhawthorn/fzy/workflows/CI/badge.svg)](https://github.com/jhawthorn/fzy/actions)\n\n## Why use this over fzf, pick, selecta, ctrlp, ...?\n\nfzy is faster and shows better results than other fuzzy finders.\n\nMost other fuzzy matchers sort based on the length of a match. fzy tries to\nfind the result the user intended. It does this by favouring matches on\nconsecutive letters and starts of words. This allows matching using acronyms or\ndifferent parts of the path.\n\nA gory comparison of the sorting used by fuzzy finders can be found in [ALGORITHM.md](ALGORITHM.md)\n\nfzy is designed to be used both as an editor plugin and on the command line.\nRather than clearing the screen, fzy displays its interface directly below the current cursor position, scrolling the screen if necessary.\n\n## Installation\n\n**macOS**\n\nUsing Homebrew\n\n    brew install fzy\n\nUsing MacPorts\n\n    sudo port install fzy\n\n**[Arch Linux](https://www.archlinux.org/packages/?sort=&q=fzy&maintainer=&flagged=)/MSYS2**: `pacman -S fzy`\n\n**[FreeBSD](https://www.freebsd.org/cgi/ports.cgi?query=fzy&stype=all)**: `pkg install fzy`\n\n**[Gentoo Linux](https://packages.gentoo.org/packages/app-shells/fzy)**: `emerge -av app-shells/fzy`\n\n**[Ubuntu](https://packages.ubuntu.com/search?keywords=fzy&searchon=names&suite=bionic&section=all)/[Debian](https://packages.debian.org/search?keywords=fzy&searchon=names&suite=all&section=all)**: `apt-get install fzy`\n\n**[pkgsrc](http://pkgsrc.se/misc/fzy) (NetBSD and others)**: `pkgin install fzy`\n\n**[openSUSE](https://software.opensuse.org/package/fzy)**: `zypper in fzy`\n\n### From source\n\n    make\n    sudo make install\n\nThe `PREFIX` environment variable can be used to specify the install location,\nthe default is `/usr/local`.\n\n## Usage\n\nfzy is a drop in replacement for [selecta](https://github.com/garybernhardt/selecta), and can be used with its [usage examples](https://github.com/garybernhardt/selecta#usage-examples).\n\n### Use with Vim\n\nfzy can be easily integrated with vim.\n\n``` vim\nfunction! FzyCommand(choice_command, vim_command)\n  try\n    let output = system(a:choice_command . \" | fzy \")\n  catch /Vim:Interrupt/\n    \" Swallow errors from ^C, allow redraw! below\n  endtry\n  redraw!\n  if v:shell_error == 0 && !empty(output)\n    exec a:vim_command . ' ' . output\n  endif\nendfunction\n\nnnoremap <leader>e :call FzyCommand(\"find . -type f\", \":e\")<cr>\nnnoremap <leader>v :call FzyCommand(\"find . -type f\", \":vs\")<cr>\nnnoremap <leader>s :call FzyCommand(\"find . -type f\", \":sp\")<cr>\n```\n\nAny program can be used to filter files presented through fzy. [ag (the silver searcher)](https://github.com/ggreer/the_silver_searcher) can be used to ignore files specified by `.gitignore`.\n\n``` vim\nnnoremap <leader>e :call FzyCommand(\"ag . --silent -l -g ''\", \":e\")<cr>\nnnoremap <leader>v :call FzyCommand(\"ag . --silent -l -g ''\", \":vs\")<cr>\nnnoremap <leader>s :call FzyCommand(\"ag . --silent -l -g ''\", \":sp\")<cr>\n```\n\n## Sorting\n\nfzy attempts to present the best matches first. The following considerations are weighted when sorting:\n\nIt prefers consecutive characters: `file` will match <tt><b>file</b></tt> over <tt><b>fil</b>t<b>e</b>r</tt>.\n\nIt prefers matching the beginning of words: `amp` is likely to match <tt><b>a</b>pp/<b>m</b>odels/<b>p</b>osts.rb</tt>.\n\nIt prefers shorter matches: `abce` matches <tt><b>abc</b>d<b>e</b>f</tt> over <tt><b>abc</b> d<b>e</b></tt>.\n\nIt prefers shorter candidates: `test` matches <tt><b>test</b>s</tt> over <tt><b>test</b>ing</b></tt>.\n\n## See Also\n\n* [fzy.js](https://github.com/jhawthorn/fzy.js) Javascript port"
}
