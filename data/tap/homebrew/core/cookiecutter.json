{
  "name": "cookiecutter",
  "full_name": "cookiecutter",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Utility that creates projects from templates",
  "license": "BSD-3-Clause",
  "homepage": "https://github.com/cookiecutter/cookiecutter",
  "versions": {
    "stable": "2.2.3",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/9d/84/b97f68b925cab6af93302af4e4536e211fd7f9c931382fc776f08e853158/cookiecutter-2.2.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d56f18c0c01c09804450b501ac43e8f6104cfa7cdd93610359c68b1ba9fd84d2"
    },
    "head": {
      "url": "https://github.com/cookiecutter/cookiecutter.git",
      "branch": "master"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cookiecutter/blobs/sha256:de33414ae31be03744a46a63ea8f1a0b053105e4915904deaea7039f760a00a4",
          "sha256": "de33414ae31be03744a46a63ea8f1a0b053105e4915904deaea7039f760a00a4"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cookiecutter/blobs/sha256:5d38cf37a2d07ca416f8b6e995d89ca16ce4b5af6a79813d9d6f6174d593496c",
          "sha256": "5d38cf37a2d07ca416f8b6e995d89ca16ce4b5af6a79813d9d6f6174d593496c"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cookiecutter/blobs/sha256:441bd6bb9d513094669a40a4f56fc2316be87f197650251f8d5a1112ceab253c",
          "sha256": "441bd6bb9d513094669a40a4f56fc2316be87f197650251f8d5a1112ceab253c"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cookiecutter/blobs/sha256:b6d4b9283157e61f4afe0cf3b8fc768325c38eb4bf97531ee452784a49146a94",
          "sha256": "b6d4b9283157e61f4afe0cf3b8fc768325c38eb4bf97531ee452784a49146a94"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cookiecutter/blobs/sha256:347198e4b57fd2ba5390b4560330d7fd23075e586a0d57d01d55ae7cc11e61e4",
          "sha256": "347198e4b57fd2ba5390b4560330d7fd23075e586a0d57d01d55ae7cc11e61e4"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cookiecutter/blobs/sha256:3487b5e59bc8ca9ae33ffb20f82b8f00eb5899b9677a0017bf6e4424ef7a381a",
          "sha256": "3487b5e59bc8ca9ae33ffb20f82b8f00eb5899b9677a0017bf6e4424ef7a381a"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cookiecutter/blobs/sha256:6e853c649d89c097799341dc03d119ecf27cd2f165b00b9cafcad2978e4c4f1b",
          "sha256": "6e853c649d89c097799341dc03d119ecf27cd2f165b00b9cafcad2978e4c4f1b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11",
    "pyyaml",
    "six"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/cookiecutter.rb",
  "ruby_source_checksum": {
    "sha256": "d4d2c05b3da11fbb34244f40254050c8fefd61240eba4798004bc2a50d2e16cf"
  },
  "date_added": "2013-11-13T08:01:10-08:00",
  "readme": "<h1 align=\"center\">\n    <img alt=\"cookiecutter Logo\" width=\"200px\" src=\"https://raw.githubusercontent.com/cookiecutter/cookiecutter/3ac078356adf5a1a72042dfe72ebfa4a9cd5ef38/logo/cookiecutter_medium.png\">\n</h1>\n\n<div align=\"center\">\n\n[![pypi](https://img.shields.io/pypi/v/cookiecutter.svg)](https://pypi.org/project/cookiecutter/)\n[![python](https://img.shields.io/pypi/pyversions/cookiecutter.svg)](https://pypi.org/project/cookiecutter/)\n[![Build Status](https://github.com/cookiecutter/cookiecutter/actions/workflows/tests.yml/badge.svg?branch=master)](https://github.com/cookiecutter/cookiecutter/actions)\n[![codecov](https://codecov.io/gh/cookiecutter/cookiecutter/branch/master/graphs/badge.svg?branch=master)](https://codecov.io/github/cookiecutter/cookiecutter?branch=master)\n[![discord](https://img.shields.io/badge/Discord-cookiecutter-5865F2?style=flat&logo=discord&logoColor=white)](https://discord.gg/9BrxzPKuEW)\n[![docs](https://readthedocs.org/projects/cookiecutter/badge/?version=latest)](https://readthedocs.org/projects/cookiecutter/?badge=latest)\n[![Code Quality](https://img.shields.io/scrutinizer/g/cookiecutter/cookiecutter.svg)](https://scrutinizer-ci.com/g/cookiecutter/cookiecutter/?branch=master)\n\n</div>\n\n# cookiecutter\n\nA command-line utility that creates projects from **cookiecutters** (project templates), e.g. creating a Python package project from a Python package project template.\n\n- Documentation: [https://cookiecutter.readthedocs.io](https://cookiecutter.readthedocs.io)\n- GitHub: [https://github.com/cookiecutter/cookiecutter](https://github.com/cookiecutter/cookiecutter)\n- PyPI: [https://pypi.org/project/cookiecutter/](https://pypi.org/project/cookiecutter/)\n- Free and open source software: [BSD license](https://github.com/cookiecutter/cookiecutter/blob/main/LICENSE)\n\n\n## Features\n\n- Cross-platform: Windows, Mac, and Linux are officially supported.\n- You don't have to know/write Python code to use Cookiecutter.\n- Works with Python 3.7, 3.8, 3.9, 3.10, 3.11\n- Project templates can be in any programming language or markup format:\n  Python, JavaScript, Ruby, CoffeeScript, RST, Markdown, CSS, HTML, you name it.\n  You can use multiple languages in the same project template.\n\n### For users of existing templates\n\n- Simple command line usage:\n\n  ```bash\n  # Create project from the cookiecutter-pypackage.git repo template\n  # You'll be prompted to enter values.\n  # Then it'll create your Python package in the current working directory,\n  # based on those values.\n  $ cookiecutter https://github.com/audreyfeldroy/cookiecutter-pypackage\n  # For the sake of brevity, repos on GitHub can just use the 'gh' prefix\n  $ cookiecutter gh:audreyfeldroy/cookiecutter-pypackage\n  ```\n\n- Use it at the command line with a local template:\n\n  ```bash\n  # Create project in the current working directory, from the local\n  # cookiecutter-pypackage/ template\n  $ cookiecutter cookiecutter-pypackage/\n  ```\n\n- Or use it from Python:\n\n  ```py\n  from cookiecutter.main import cookiecutter\n\n  # Create project from the cookiecutter-pypackage/ template\n  cookiecutter('cookiecutter-pypackage/')\n\n  # Create project from the cookiecutter-pypackage.git repo template\n  cookiecutter('https://github.com/audreyfeldroy/cookiecutter-pypackage.git')\n  ```\n\n- Unless you suppress it with `--no-input`, you are prompted for input:\n  - Prompts are the keys in `cookiecutter.json`.\n  - Default responses are the values in `cookiecutter.json`.\n  - Prompts are shown in order.\n- Cross-platform support for `~/.cookiecutterrc` files:\n\n  ```yaml\n  default_context:\n    full_name: \"Audrey Roy Greenfeld\"\n    email: \"audreyr@gmail.com\"\n    github_username: \"audreyfeldroy\"\n  cookiecutters_dir: \"~/.cookiecutters/\"\n  ```\n\n- Cookiecutters (cloned Cookiecutter project templates) are put into `~/.cookiecutters/` by default, or cookiecutters_dir if specified.\n- If you have already cloned a cookiecutter into `~/.cookiecutters/`,  you can reference it by directory name:\n\n  ```bash\n  # Clone cookiecutter-pypackage\n  $ cookiecutter gh:audreyfeldroy/cookiecutter-pypackage\n  # Now you can use the already cloned cookiecutter by name\n  $ cookiecutter cookiecutter-pypackage\n  ```\n\n- You can use local cookiecutters, or remote cookiecutters directly from Git repos or Mercurial repos on Bitbucket.\n- Default context: specify key/value pairs that you want to be used as defaults whenever you generate a project.\n- Inject extra context with command-line arguments:\n\n  ```bash\n  cookiecutter --no-input gh:msabramo/cookiecutter-supervisor program_name=foobar startsecs=10\n  ```\n\n- Direct access to the Cookiecutter API allows for the injection of extra context.\n- Paths to local projects can be specified as absolute or relative.\nProjects are generated to your current directory or to the target directory if specified with `-o` option.\n\n### For template creators\n\n- Supports unlimited levels of directory nesting.\n- 100% of templating is done with Jinja2.\n- Both, directory names and filenames can be templated.\n  For example:\n\n  ```py\n  {{cookiecutter.repo_name}}/{{cookiecutter.repo_name}}/{{cookiecutter.repo_name}}.py\n  ```\n- Simply define your template variables in a `cookiecutter.json` file. You can also add human-readable questions and choices that will be prompted to the user for each variable using the `__prompts__` key. Those human-readable questions supports [`rich` markup](https://rich.readthedocs.io/en/stable/markup.html) such as `[bold yellow]this is bold and yellow[/]`\n  For example:\n\n  ```json\n  {\n    \"full_name\": \"Audrey Roy Greenfeld\",\n    \"email\": \"audreyr@gmail.com\",\n    \"project_name\": \"Complexity\",\n    \"repo_name\": \"complexity\",\n    \"project_short_description\": \"Refreshingly simple static site generator.\",\n    \"release_date\": \"2013-07-10\",\n    \"year\": \"2013\",\n    \"version\": \"0.1.1\",\n    \"linting\": [\"ruff\", \"flake8\", \"none\"],\n    \"__prompts__\": {\n      \"full_name\": \"Provide your [bold yellow]full name[/]\",\n      \"email\": \"Provide your [bold yellow]email[/]\",\n      \"linting\": {\n        \"__prompt__\": \"Which [bold yellow]linting tool[/] do you want to use?\",\n        \"ruff\": \"Ruff\",\n        \"flake8\": \"Flake8\",\n        \"none\": \"No linting tool\"\n      }\n    }\n  }\n  ```\n- Pre- and post-generate hooks: Python or shell scripts to run before or after generating a project.\n\n## Available Cookiecutters\n\nMaking great cookies takes a lot of cookiecutters and contributors.\nWe're so pleased that there are many Cookiecutter project templates to choose from.\nWe hope you find a cookiecutter that is just right for your needs.\n\n### A Pantry Full of Cookiecutters\n\nThe best place to start searching for specific and ready-to-use cookiecutter templates is [Github search](https://github.com/search?q=cookiecutter&type=Repositories).\nJust type `cookiecutter` and you will discover over 4000 related repositories.\n\nWe also recommend you check related GitHub topics.\nFor general search use [cookiecutter-template](https://github.com/topics/cookiecutter-template).\nFor specific topics try to use `cookiecutter-yourtopic`, like `cookiecutter-python` or `cookiecutter-datascience`.\nThis is a new GitHub feature, so not all active repositories use it at the moment.\n\nIf you are a template developer please add related [topics](https://help.github.com/en/github/administering-a-repository/classifying-your-repository-with-topics) with `cookiecutter` prefix to your repository.\nWe believe it will make it more discoverable.\nYou are almost not limited in topic amount, use it!\n\n### Cookiecutter Specials\n\nThese Cookiecutters are maintained by the cookiecutter team:\n\n- [cookiecutter-pypackage](https://github.com/audreyfeldroy/cookiecutter-pypackage):\n  ultimate Python package project template by [@audreyfeldroy's](https://github.com/audreyfeldroy).\n- [cookiecutter-django](https://github.com/pydanny/cookiecutter-django):\n  a framework for jumpstarting production-ready Django projects quickly.\n  It is bleeding edge with Bootstrap 5, a customizable users app, starter templates, working user registration, celery setup, and much more.\n- [cookiecutter-pytest-plugin](https://github.com/pytest-dev/cookiecutter-pytest-plugin):\n  Minimal Cookiecutter template for authoring [pytest](https://docs.pytest.org/) plugins that help you to write better programs.\n\n## Community\n\nThe core committer team can be found in the [authors' section](AUTHORS.md).\nWe are always welcome and invite you to participate.\n\nStuck? Try one of the following:\n\n- See the [Troubleshooting](https://cookiecutter.readthedocs.io/en/latest/troubleshooting.html) page.\n- Ask for help on [Stack Overflow](https://stackoverflow.com/questions/tagged/cookiecutter).\n- You are strongly encouraged to [file an issue](https://github.com/cookiecutter/cookiecutter/issues?q=is%3Aopen) about the problem.\n  Do it even if it's just \"I can't get it to work on this cookiecutter\" with a link to your cookiecutter.\n  Don't worry about naming/pinpointing the issue properly.\n- Ask for help on [Discord](https://discord.gg/9BrxzPKuEW) if you must (but please try one of the other options first, so that others can benefit from the discussion).\n\nDevelopment on Cookiecutter is community-driven:\n\n- Huge thanks to all the [contributors](AUTHORS.md) who have pitched in to help make Cookiecutter an even better tool.\n- Everyone is invited to contribute.\n  Read the [contributing instructions](CONTRIBUTING.md), then get started.\n- Connect with other Cookiecutter contributors and users on [Discord](https://discord.gg/9BrxzPKuEW)\n  (note: due to work and other commitments, a core committer might not always be available)\n\nEncouragement is unbelievably motivating.\nIf you want more work done on Cookiecutter, show support:\n\n- Thank a core committer for their efforts.\n- Star [Cookiecutter on GitHub](https://github.com/cookiecutter/cookiecutter).\n- [Support this project](#support-this-project)\n\nGot criticism or complaints?\n\n- [File an issue](https://github.com/cookiecutter/cookiecutter/issues?q=is%3Aopen) so that Cookiecutter can be improved.\n  Be friendly and constructive about what could be better.\n  Make detailed suggestions.\n- **Keep us in the loop so that we can help.**\n  For example, if you are discussing problems with Cookiecutter on a mailing list, [file an issue](https://github.com/cookiecutter/cookiecutter/issues?q=is%3Aopen) where you link to the discussion thread and/or cc at least 1 core committer on the email.\n- Be encouraging.\n  A comment like \"This function ought to be rewritten like this\" is much more likely to result in action than a comment like \"Eww, look how bad this function is.\"\n\nWaiting for a response to an issue/question?\n\n- Be patient and persistent. All issues are on the core committer team's radar and will be considered thoughtfully, but we have a lot of issues to work through.\n  If urgent, it's fine to ping a core committer in the issue with a reminder.\n- Ask others to comment, discuss, review, etc.\n- Search the Cookiecutter repo for issues related to yours.\n- Need a fix/feature/release/help urgently, and can't wait?\n  [@audreyfeldroy](https://github.com/audreyfeldroy) is available for hire for consultation or custom development.\n\n## Support This Project\n\nThis project is run by volunteers.\nShortly we will be providing means for organizations and individuals to support the project.\n\n## Code of Conduct\n\nEveryone interacting in the Cookiecutter project's codebases and documentation is expected to follow the [PyPA Code of Conduct](https://www.pypa.io/en/latest/code-of-conduct/).\nThis includes but is not limited to, issue trackers, chat rooms, mailing lists, and other virtual or in real-life communication.\n\n## Creator / Leader\n\nThis project was created and led by [Audrey Roy Greenfeld](https://github.com/audreyfeldroy).\n\nShe is supported by a team of maintainers."
}
