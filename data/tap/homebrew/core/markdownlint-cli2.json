{
  "name": "markdownlint-cli2",
  "full_name": "markdownlint-cli2",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Fast, flexible, config-based cli for linting Markdown/CommonMark files",
  "license": "MIT",
  "homepage": "https://github.com/DavidAnson/markdownlint-cli2",
  "versions": {
    "stable": "0.8.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://registry.npmjs.org/markdownlint-cli2/-/markdownlint-cli2-0.8.1.tgz",
      "tag": null,
      "revision": null,
      "checksum": "c29ad1e732243dd84705e66f9f7f2cd9bcf45eb8f4fe3c6d3a275a16adb3b27d"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/markdownlint-cli2/blobs/sha256:df735462a2811aec5917e036a496e8b6f6b881b779b3bb8bddb0ea94d8ba153a",
          "sha256": "df735462a2811aec5917e036a496e8b6f6b881b779b3bb8bddb0ea94d8ba153a"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "node"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/markdownlint-cli2.rb",
  "ruby_source_checksum": {
    "sha256": "3be427965e85ef3873d63a385f4ceb8f341c79a3b44b72fa60dc31001eba7af7"
  },
  "date_added": "2022-11-03T13:21:40+00:00",
  "readme": "# markdownlint-cli2\n\n> A fast, flexible, configuration-based command-line interface for linting\n> Markdown/CommonMark files with the `markdownlint` library\n\n[![npm version][npm-image]][npm-url]\n[![License][license-image]][license-url]\n\n## Install\n\nAs a global CLI:\n\n```bash\nnpm install markdownlint-cli2 --global\n```\n\nAs a development dependency of the current [Node.js][nodejs] package:\n\n```bash\nnpm install markdownlint-cli2 --save-dev\n```\n\nAs a [Docker][docker] container image:\n\n```bash\ndocker pull davidanson/markdownlint-cli2\n```\n\nAs a global CLI with [Homebrew][homebrew]:\n\n```bash\nbrew install markdownlint-cli2\n```\n\nAs a [GitHub Action][github-action] via\n[`markdownlint-cli2-action`][markdownlint-cli2-action]:\n\n```yaml\n- name: markdownlint-cli2-action\n  uses: DavidAnson/markdownlint-cli2-action@v9\n```\n\n## Overview\n\n- [`markdownlint`][markdownlint] is a library for linting [Markdown][markdown]/\n  [CommonMark][commonmark] files on [Node.js][nodejs] using the\n  [markdown-it][markdown-it] parser.\n- [`markdownlint-cli`][markdownlint-cli] is a traditional command-line interface\n  for `markdownlint`.\n- [`markdownlint-cli2`][markdownlint-cli2] is a slightly unconventional\n  command-line interface for `markdownlint`.\n- `markdownlint-cli2` is configuration-based and prioritizes speed and\n  simplicity.\n- `markdownlint-cli2` supports all the features of `markdownlint-cli` (sometimes\n  a little differently).\n- [`vscode-markdownlint`][vscode-markdownlint] is a `markdownlint` extension for\n  the [Visual Studio Code editor][vscode].\n- `markdownlint-cli2` is designed to work well in conjunction with\n  `vscode-markdownlint`.\n- More about the [motivation for `markdownlint-cli2`][markdownlint-cli2-blog].\n\n## Use\n\n### Command Line\n\n```text\nmarkdownlint-cli2 vX.Y.Z (markdownlint vX.Y.Z)\nhttps://github.com/DavidAnson/markdownlint-cli2\n\nSyntax: markdownlint-cli2 glob0 [glob1] [...] [globN] [--config file] [--fix]\n\nGlob expressions (from the globby library):\n- * matches any number of characters, but not /\n- ? matches a single character, but not /\n- ** matches any number of characters, including /\n- {} allows for a comma-separated list of \"or\" expressions\n- ! or # at the beginning of a pattern negate the match\n- : at the beginning identifies a literal file path\n\nDot-only glob:\n- The command \"markdownlint-cli2 .\" would lint every file in the current directory tree which is probably not intended\n- Instead, it is mapped to \"markdownlint-cli2 *.{md,markdown}\" which lints all Markdown files in the current directory\n- To lint every file in the current directory tree, the command \"markdownlint-cli2 **\" can be used instead\n\nOptional parameters:\n- --config  specifies the path to a configuration file to define the base configuration\n- --fix     updates files to resolve fixable issues (can be overridden in configuration)\n\nConfiguration via:\n- .markdownlint-cli2.jsonc\n- .markdownlint-cli2.yaml\n- .markdownlint-cli2.cjs or .markdownlint-cli2.mjs\n- .markdownlint.jsonc or .markdownlint.json\n- .markdownlint.yaml or .markdownlint.yml\n- .markdownlint.cjs or .markdownlint.mjs\n\nCross-platform compatibility:\n- UNIX and Windows shells expand globs according to different rules; quoting arguments is recommended\n- Some Windows shells don't handle single-quoted (') arguments well; double-quote (\") is recommended\n- Shells that expand globs do not support negated patterns (!node_modules); quoting is required here\n- Some UNIX shells parse exclamation (!) in double-quotes; hashtag (#) is recommended in these cases\n- The path separator is forward slash (/) on all platforms; backslash (\\) is automatically converted\n\nThe most compatible syntax for cross-platform support:\n$ markdownlint-cli2 \"**/*.md\" \"#node_modules\"\n```\n\nFor scenarios where it is preferable to specify glob expressions in a\nconfiguration file, the `globs` property of `.markdownlint-cli2.jsonc`, `.yaml`,\n`.cjs`, or `.mjs` may be used instead of (or in addition to) passing\n`glob0 ... globN` on the command-line.\n\nAs shown above, a typical command-line for `markdownlint-cli2` looks something\nlike:\n\n```bash\nmarkdownlint-cli2 \"**/*.md\" \"#node_modules\"\n```\n\nBecause sharing the same configuration between \"normal\" and \"fix\" modes is\ncommon, the `--fix` argument can be used to default the `fix` property (see\nbelow) to `true` (though it can still be overridden by a configuration file):\n\n```bash\nmarkdownlint-cli2 --fix \"**/*.md\" \"#node_modules\"\n```\n\n> **Deprecated**\n>\n> The following command behaves similarly, defaulting the `fix` property to\n> `true`:\n>\n> ```bash\n> markdownlint-cli2-fix \"**/*.md\" \"#node_modules\"\n> ```\n>\n> Otherwise, `markdownlint-cli2-fix` behaves the same as `markdownlint-cli2`.\n\nIn cases where it is not convenient to store a configuration file in the root\nof a project, the `--config` argument can be used to provide a path to any\nsupported configuration file:\n\n```bash\nmarkdownlint-cli2 --config \"config/.markdownlint-cli2.jsonc\" \"**/*.md\" \"#node_modules\"\n```\n\nThe configuration file name must be (or end with) one of the supported names\nabove. For example, `.markdownlint.json` or `example.markdownlint-cli2.jsonc`.\nThe specified configuration file will be loaded, parsed, and applied as a base\nconfiguration for the current directory - which will then be handled normally.\n\n> **Deprecated**\n>\n> The following command behaves similarly, accepting a base configuration file\n> path as its first parameter:\n>\n> ```bash\n> markdownlint-cli2-config \"config/.markdownlint-cli2.jsonc\" \"**/*.md\" \"#node_modules\"\n> ```\n>\n> Otherwise, `markdownlint-cli2-config` behaves the same as `markdownlint-cli2`.\n\n### Container Image\n\nA container image [`davidanson/markdownlint-cli2`][docker-hub-markdownlint-cli2]\ncan also be used (e.g., as part of a CI pipeline):\n\n```bash\ndocker run -v $PWD:/workdir davidanson/markdownlint-cli2:v0.8.1 \"**/*.md\" \"#node_modules\"\n```\n\nNotes:\n\n- As when using the [command line](#command-line), glob patterns are passed as\n  arguments.\n- This image is built on the official [Node.js Docker image][nodejs-docker].\n  Per security best practices, the [default user `node`][nodejs-docker-non-root]\n  runs with restricted permissions. If it is necessary to run as `root`, pass\n  the `-u root` option when invoking `docker`.\n- By default, `markdownlint-cli2` will execute within the `/workdir` directory\n  *inside the container*. So, as shown above, [bind mount][docker-bind-mounts]\n  the project's directory there.\n  - A custom working directory can be specified with Docker's `-w` flag:\n\n    ```bash\n    docker run -w /myfolder -v $PWD:/myfolder davidanson/markdownlint-cli2:v0.8.1 \"**/*.md\" \"#node_modules\"\n    ```\n\n> **Deprecated**\n>\n> To invoke the `markdownlint-cli2-config` or `markdownlint-cli2-fix` commands\n> instead, use Docker's `--entrypoint` flag:\n>\n> ```bash\n> docker run -v $PWD:/workdir --entrypoint=\"markdownlint-cli2-fix\" davidanson/markdownlint-cli2:v0.8.1 \"**/*.md\" \"#node_modules\"\n> ```\n\nFor convenience, the container image\n[`davidanson/markdownlint-cli2-rules`][docker-hub-markdownlint-cli2-rules]\nincludes the latest versions of custom rules published to npm with the tag\n[`markdownlint-rule`][markdownlint-rule]. These rules are installed globally\nonto the base image `davidanson/markdownlint-cli2`.\n\n**Note**: This container image exists for convenience and is not an endorsement\nof the rules within.\n\n### Exit Codes\n\n- `0`: Linting was successful and there were no errors\n- `1`: Linting was successful and there were errors\n- `2`: Linting was not completed due to a runtime issue\n\n## Rule List\n\n- See the [Rules / Aliases][markdownlint-rules-aliases] and\n  [Tags][markdownlint-rules-tags] sections of the `markdownlint` documentation.\n\n## Glob expressions\n\n- Globbing is performed by the [globby][globby] library; refer to that\n  documentation for more information and examples.\n\n## Configuration\n\n- See the [Configuration][markdownlint-configuration] section of the\n  `markdownlint` documentation for information about the inline comment syntax\n  for enabling and disabling rules with HTML comments.\n- In general, glob expressions should match files under the current directory;\n  the configuration for that directory will apply to the entire tree.\n  - When glob expressions match files *not* under the current directory,\n    configuration for the current directory is applied to the closest common\n    parent directory.\n- There are two kinds of configuration file (both detailed below):\n  - Configuration files like `.markdownlint-cli2.*` allow complete control of\n    `markdownlint-cli2` behavior and are also used by `vscode-markdownlint`.\n  - Configuration files like `.markdownlint.*` allow control over only the\n    `markdownlint` `config` object and tend to be supported more broadly (such\n    as by `markdownlint-cli`).\n- The VS Code extension `vscode-markdownlint` includes a schema definition for\n  the `JSON(C)` configuration files described below. This adds auto-complete and\n  can make it easier to define proper structure.\n\n### `.markdownlint-cli2.jsonc`\n\n- The format of this file is a [JSONC][jsonc] object similar to the\n  [`markdownlint` `options` object][markdownlint-options].\n- Valid properties are:\n  - `config`: [`markdownlint` `config` object][markdownlint-config] to configure\n    rules for this part of the directory tree\n    - If a `.markdownlint.{jsonc,json,yaml,yml,js}` file (see below) is present\n      in the same directory, it overrides the value of this property\n    - If the `config` object contains an `extends` property, it will be resolved\n      the same as `.markdownlint.{jsonc,json,yaml,yml,js}` (see below)\n  - `customRules`: `Array` of `String`s (or `Array`s of `String`s) of module\n    names/paths of [custom rules][markdownlint-custom-rules] to load and use\n    when linting\n    - Relative paths are resolved based on the location of the `JSONC` file\n    - Search [`markdownlint-rule` on npm][markdownlint-rule]\n  - `fix`: `Boolean` value to enable fixing of linting errors reported by rules\n    that emit fix information\n    - Fixes are made directly to the relevant file(s); no backup is created\n  - `frontMatter`: `String` defining the [`RegExp`][regexp] used to match and\n    ignore any [front matter][front-matter] at the beginning of a document\n    - The `String` is passed as the `pattern` parameter to the\n      [`RegExp` constructor][regexp-constructor]\n    - For example: `(^---\\s*$[^]*?^---\\s*$)(\\r\\n|\\r|\\n|$)`\n  - `globs`: `Array` of `String`s defining glob expressions to append to the\n    command-line arguments\n    - This setting can be used instead of (or in addition to) passing globs on\n      the command-line and offers identical performance\n    - This top-level setting is valid **only** in the directory from which\n      `markdownlint-cli2` is run\n  - `ignores`: `Array` of `String`s defining glob expressions to ignore when\n    linting\n    - This setting has the best performance when applied to the directory from\n      which `markdownlint-cli2` is run\n      - In this case, glob expressions are negated (by adding a leading `!`) and\n        appended to the command-line arguments before file enumeration\n      - The setting is not inherited by nested configuration files in this case\n    - When this setting is applied in subdirectories, ignoring of files is done\n      after file enumeration, so large directories can negatively impact\n      performance\n      - Nested configuration files inherit and reapply the setting to the\n        contents of nested directories in this case\n  - `markdownItPlugins`: `Array` of `Array`s, each of which has a `String`\n    naming a [markdown-it plugin][markdown-it-syntax-extensions] followed by\n    parameters\n    - Plugins can be used to add support for additional Markdown syntax\n    - Relative paths are resolved based on the location of the `JSONC` file\n    - For example: `[ [ \"plugin-name\", param_0, param_1, ... ], ... ]`\n    - Search [`markdown-it-plugins` on npm][markdown-it-plugins]\n  - `noInlineConfig`: `Boolean` value to disable the support of\n    [HTML comments][html-comment] within Markdown content\n    - For example: `<!-- markdownlint-disable some-rule -->`\n  - `noProgress`: `Boolean` value to disable the display of progress on `stdout`\n    - This top-level setting is valid **only** in the directory from which\n      `markdownlint-cli2` is run\n  - `outputFormatters`: `Array` of `Array`s, each of which has a `String`\n    naming an [output formatter][output-formatters] followed by parameters\n    - Formatters can be used to customize the tool's output for different\n      scenarios\n    - Relative paths are resolved based on the location of the `JSONC` file\n    - For example: `[ [ \"formatter-name\", param_0, param_1, ... ], ... ]`\n    - This top-level setting is valid **only** in the directory from which\n      `markdownlint-cli2` is run\n    - Search [`markdownlint-cli2-formatter` on npm][markdownlint-cli2-formatter]\n- When referencing a module via the `customRules`, `markdownItPlugins`, or\n  `outputFormatters` properties, each `String` identifier is passed to Node's\n  [`require` function][nodejs-require] then (if that failed) its\n  [`import` expression][nodejs-import-expression]\n  - Importing a locally-installed module using a bare specifier (ex:\n    `package-name`) or using a directory name (ex: `./package-dir`) will not\n    work until [`import.meta.resolve`][nodejs-import-meta-resolve] is available\n- Settings in this file apply to the directory it is in and all subdirectories.\n- Settings **merge with** those applied by any versions of this file in a parent\n  directory (up to the current directory).\n- For example: [`.markdownlint-cli2.jsonc`][markdownlint-cli2-jsonc] with all\n  properties set\n\n### `.markdownlint-cli2.yaml`\n\n- The format of this file is a [YAML][yaml] object with the structure described\n  above for `.markdownlint-cli2.jsonc`.\n- Other details are the same as for `.markdownlint-cli2.jsonc` described above.\n- If a `.markdownlint-cli2.jsonc` file is present in the same directory, it\n  takes precedence.\n- For example: [`.markdownlint-cli2.yaml`][markdownlint-cli2-yaml] with all\n  properties set\n\n### `.markdownlint-cli2.cjs` or `.markdownlint-cli2.mjs`\n\n- The format of this file is a [CommonJS module][commonjs-module] (`.cjs`) or\n  [ECMAScript module][ecmascript-module] (`.mjs`) that exports the object\n  described above for `.markdownlint-cli2.jsonc`.\n- Instead of passing a `String` to identify the module name/path to load for\n  `customRules`, `markdownItPlugins`, and `outputFormatters`, the corresponding\n  `Object` or `Function` can be provided directly.\n- Other details are the same as for `.markdownlint-cli2.jsonc` described above.\n- If a `.markdownlint-cli2.jsonc` or `.markdownlint-cli2.yaml` file is present\n  in the same directory, it takes precedence; `.markdownlint-cli2.cjs` takes\n  precedence over `.markdownlint-cli2.mjs`.\n- For example: [`.markdownlint-cli2.cjs`][markdownlint-cli2-cjs] or\n  [`.markdownlint-cli2.mjs`][markdownlint-cli2-mjs]\n\n### `.markdownlint.jsonc` or `.markdownlint.json`\n\n- The format of this file is a [JSONC][jsonc] or [JSON][json] object matching\n  the [`markdownlint` `config` object][markdownlint-config].\n- Settings in this file apply to the directory it is in and all subdirectories\n- Settings **override** those applied by any versions of this file in a parent\n  directory (up to the current directory).\n- If `jsonc` and `json` files are present in the same directory, the `jsonc`\n  version takes precedence.\n- To merge the settings of these files or share configuration, use the `extends`\n  property (documented in the link above).\n- Both file types support comments in JSON.\n- For example: [`.markdownlint.jsonc`][markdownlint-jsonc]\n\n### `.markdownlint.yaml` or `.markdownlint.yml`\n\n- The format of this file is a [YAML][yaml] object representing the\n  [`markdownlint` `config` object][markdownlint-config].\n- Other details are the same as for `jsonc`/`json` files described above.\n- If `yaml` and `yml` files are present in the same directory, the `yaml`\n  version takes precedence.\n- If a `jsonc` or `json` file is present in the same directory, it takes\n  precedence.\n- For example: [`.markdownlint.yaml`][markdownlint-yaml]\n\n### `.markdownlint.cjs` or `.markdownlint.mjs`\n\n- The format of this file is a [CommonJS module][commonjs-module] (`.cjs`) or\n  [ECMAScript module][ecmascript-module] (`.mjs`) that exports the\n  [`markdownlint` `config` object][markdownlint-config].\n- Other details are the same as for `jsonc`/`json` files described above.\n- If a `.markdownlint.jsonc`, `.json`, `.yaml`, or `.yml` file is present in the\n  same directory, it takes precedence; `.markdownlint.cjs` takes precedence over\n  `.markdownlint.mjs`.\n- For example: [`.markdownlint.cjs`][markdownlint-cjs] or\n  [`.markdownlint.mjs`][markdownlint-mjs]\n\n## Compatibility\n\n### `markdownlint-cli`\n\n- The glob implementation and handling of pattern matching is slightly\n  different.\n- Configuration files are supported in every directory (vs. only one at the\n  root).\n- The `INI` config format, `.markdownlintrc`, and `.markdownlintignore` are not\n  supported.\n\n### `vscode-markdownlint`\n\n- `.markdownlintignore` is not supported.\n\n## pre-commit\n\nTo run `markdownlint-cli2` as part of a [pre-commit][pre-commit] workflow, add a\nreference to the `repos` list in that project's `.pre-commit-config.yaml` like:\n\n```yaml\n- repo: https://github.com/DavidAnson/markdownlint-cli2\n  rev: v0.8.1\n  hooks:\n  - id: markdownlint-cli2\n```\n\n> Depending on the environment that workflow runs in, it may be necessary to\n> [override the version of Node.js used by pre-commit][pre-commit-version].\n\n## History\n\nSee [CHANGELOG.md](CHANGELOG.md).\n\n<!-- markdownlint-disable line-length -->\n\n[commonmark]: https://commonmark.org/\n[commonjs-module]: https://nodejs.org/api/modules.html#modules_modules_commonjs_modules\n[ecmascript-module]: https://nodejs.org/api/esm.html#modules-ecmascript-modules\n[docker]: https://www.docker.com\n[docker-bind-mounts]: https://docs.docker.com/storage/bind-mounts/\n[docker-hub-markdownlint-cli2]: https://hub.docker.com/r/davidanson/markdownlint-cli2\n[docker-hub-markdownlint-cli2-rules]: https://hub.docker.com/r/davidanson/markdownlint-cli2-rules\n[front-matter]: https://jekyllrb.com/docs/frontmatter/\n[github-action]: https://docs.github.com/actions\n[globby]: https://www.npmjs.com/package/globby\n[homebrew]: https://brew.sh\n[html-comment]: https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started\n[json]: https://wikipedia.org/wiki/JSON\n[jsonc]: https://code.visualstudio.com/Docs/languages/json#_json-with-comments\n[license-image]: https://img.shields.io/npm/l/markdownlint-cli2.svg\n[license-url]: https://opensource.org/licenses/MIT\n[markdown]: https://wikipedia.org/wiki/Markdown\n[markdown-it]: https://www.npmjs.com/package/markdown-it\n[markdown-it-plugins]: https://www.npmjs.com/search?q=keywords:markdown-it-plugin\n[markdown-it-syntax-extensions]: https://github.com/markdown-it/markdown-it#syntax-extensions\n[markdownlint]: https://github.com/DavidAnson/markdownlint\n[markdownlint-config]: https://github.com/DavidAnson/markdownlint/blob/main/README.md#optionsconfig\n[markdownlint-configuration]: https://github.com/DavidAnson/markdownlint/blob/main/README.md#configuration\n[markdownlint-custom-rules]: https://github.com/DavidAnson/markdownlint/blob/main/doc/CustomRules.md\n[markdownlint-options]: https://github.com/DavidAnson/markdownlint/blob/main/README.md#options\n[markdownlint-rules-aliases]: https://github.com/DavidAnson/markdownlint/blob/main/README.md#rules--aliases\n[markdownlint-rules-tags]: https://github.com/DavidAnson/markdownlint/blob/main/README.md#tags\n[markdownlint-cli]: https://github.com/igorshubovych/markdownlint-cli\n[markdownlint-cli2]: https://github.com/DavidAnson/markdownlint-cli2\n[markdownlint-cli2-action]: https://github.com/marketplace/actions/markdownlint-cli2-action\n[markdownlint-cli2-blog]: https://dlaa.me/blog/post/markdownlintcli2\n[markdownlint-cli2-formatter]: https://www.npmjs.com/search?q=keywords:markdownlint-cli2-formatter\n[markdownlint-cli2-cjs]: test/markdownlint-cli2-cjs/.markdownlint-cli2.cjs\n[markdownlint-cli2-jsonc]: test/markdownlint-cli2-jsonc-example/.markdownlint-cli2.jsonc\n[markdownlint-cli2-mjs]: test/markdownlint-cli2-mjs/.markdownlint-cli2.mjs\n[markdownlint-cli2-yaml]: test/markdownlint-cli2-yaml-example/.markdownlint-cli2.yaml\n[markdownlint-cjs]: test/markdownlint-cjs/.markdownlint.cjs\n[markdownlint-jsonc]: https://github.com/DavidAnson/markdownlint/blob/main/schema/.markdownlint.jsonc\n[markdownlint-mjs]: test/markdownlint-mjs/.markdownlint.mjs\n[markdownlint-rule]: https://www.npmjs.com/search?q=keywords:markdownlint-rule\n[markdownlint-yaml]: https://github.com/DavidAnson/markdownlint/blob/main/schema/.markdownlint.yaml\n[nodejs]: https://nodejs.org/\n[nodejs-docker]: https://github.com/nodejs/docker-node\n[nodejs-docker-non-root]: https://github.com/nodejs/docker-node/blob/main/docs/BestPractices.md#non-root-user\n[nodejs-import-expression]: https://nodejs.org/api/esm.html#import-expressions\n[nodejs-import-meta-resolve]: https://nodejs.org/api/esm.html#importmetaresolvespecifier-parent\n[nodejs-require]: https://nodejs.org/api/modules.html#modules_require_id\n[npm-image]: https://img.shields.io/npm/v/markdownlint-cli2.svg\n[npm-url]: https://www.npmjs.com/package/markdownlint-cli2\n[output-formatters]: doc/OutputFormatters.md\n[pre-commit]: https://pre-commit.com/\n[pre-commit-version]: https://pre-commit.com/#overriding-language-version\n[regexp]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n[regexp-constructor]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp\n[vscode]: https://code.visualstudio.com/\n[vscode-markdownlint]: https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint\n[yaml]: https://wikipedia.org/wiki/YAML"
}
