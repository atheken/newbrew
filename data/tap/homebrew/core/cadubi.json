{
  "name": "cadubi",
  "full_name": "cadubi",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Creative ASCII drawing utility",
  "license": "MIT",
  "homepage": "https://github.com/statico/cadubi/",
  "versions": {
    "stable": "1.3.4",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/statico/cadubi/archive/v1.3.4.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "624f85bb16d8b0bc392d761d1121828d09cfc79b3ded5b1220e9b4262924a1a0"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cadubi/blobs/sha256:9c2832e6449cf5fd7ebbadd2427732b242633ba5ad041046e94e80da63e963e6",
          "sha256": "9c2832e6449cf5fd7ebbadd2427732b242633ba5ad041046e94e80da63e963e6"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/cadubi.rb",
  "ruby_source_checksum": {
    "sha256": "e5a538185c58b38c3fd02e08d9d93d6258d567db10e2c7ee2f4ed16edb8645c9"
  },
  "date_added": "2012-07-28T09:33:56-07:00",
  "readme": "# CADUBI - Creative ASCII Drawing Utility By Ian\n\nThis Perl program was written sometime around 1997 -- many years before I knew\nanything about Perl or Unix -- and the code hasn't changed much since then. It\nhas, however, become very widely adopted and is available as a package on most\nLinux distributions.\n\nCADUBI is an application written in Perl that allows you to draw\ntext-based images that are viewable on typical unix-based consoles.\nUsually the applications that emulate these consoles support various\ntext modes, such as background and foreground colors, bold, and\ninverse. This text art, commonly called \"ASCII art,\" is used in\nvarious places such as online BBSes, email and login prompts.\n\n<img src=\"https://raw.githubusercontent.com/statico/cadubi/master/screenshots/catfile.png\" width=\"150\"/> <img src=\"https://raw.githubusercontent.com/statico/cadubi/master/screenshots/edit.png\" width=\"150\"/> <img src=\"https://raw.githubusercontent.com/statico/cadubi/master/screenshots/help.png\" width=\"150\"/>\n\n## Installation\n\n* [Homebrew](http://brew.sh/): `brew install cadubi`\n* [Debian](https://packages.debian.org/wheezy/cadubi) and [Ubuntu](http://packages.ubuntu.com/precise/cadubi): `apt-get install cadubi`\n* From source:\n  * Perl 5.002 or later\n  * `Term::ReadKey` Perl module\n\n## Usage\n\nCADUBI has a 'pen' which describes the current mode. Properties of\nthe pen are the painting character, foreground color, background\ncolor, bold, inverse, and blink. Whenever you paint or use the text\nmode, the characters drawn on the screen will have the properties of\nthe pen. The current mode of the pen is shown at the bottom of the\nconsole and is what will be drawn on screen when you paint.\n\nMove around the cursor with the <kbd>i</kbd>, <kbd>j</kbd>, <kbd>k</kbd> and <kbd>l</kbd> keys. Holding\ndown shift and typing these keys will move the cursor five spaces\ninstead of one. Pressing return/enter will move the cursor down one\nline and all the way to the left of the console.\n\nTo paint the current pen on the screen, press the space bar. To\ndelete a character, press the delete/backspace key. You'll notice\nthat editing is much like common text editors, such as pico or joe.\nYou can also delete with the <kbd>tilde</kbd> key, which makes moving & painting\n(right hand) and erasing (left hand) much easier.\n\nThe pen character is the character that is drawn when you paint using\nthe space bar. To change the character, press <kbd>p</kbd> and then the\ncharacter you would like it to be.\n\nTo set the foreground or background colors for the cursor, press <kbd>f</kbd>\nfor foreground or <kbd>b</kbd> for background, and then a corresponding color\n    code. The color codes are case-insensitive and are listed below:\n\n     0 or N   Normal (standard text)\n     1 or W   White\n     2 or R   Red\n     3 or G   Green\n     4 or Y   Yellow\n     5 or B   Blue\n     6 or M   Magenta\n     7 or C   Cyan\n     8 or K   Black\n     \nIf you can't remember the codes above, you can always hit <kbd>Ctrl-h</kbd>\nto view the Quick Help which will display a summary of all the keys,\ncolor codes and examples of how they look.\n\nTypically, foreground text colors are the same as background colors,\nunless the text is bold. If the text is bold, foreground colors are\nusually lighter than the background color, making text easier to read\nwhen the text has the same foreground and background color. Refer to\nthe Quick Help (<kbd>Ctrl-h</kbd>) to see what the colors look like on your\nconsole.\n\nBold and inverse are two widely-supported modes. Bold is toggled with\nthe <kbd>g</kbd> key, and inverse is toggled with the <kbd>v</kbd> key. Blink, though\nregarded as highly annoying, can be toggled with by pressing\n<kbd>Shift-w</kbd>.\n\nText mode is an extremely useful feature. Once in the text mode you\ncan type as if you were using a normal text editor, and all the\ncharacters drawn onscreen will use the same mode as the pen. To enter\ntext mode, press the <kbd>t</kbd> key. To exit, press escape.\n\nTo exit the CADUBI application, press <kbd>Ctrl-x</kbd>. Quick help can be\naccessed by pressing <kbd>Ctrl-h</kbd>. In case it is needed, pressing\n<kbd>Ctrl-w</kbd> will refresh the entire screen by redrawing each\ncharacter.\n\n### Reading and writing files\n\nTo read a file and use it with CADUBI, type <kbd>Ctrl-r</kbd>. To write\na file, type <kbd>Ctrl-o</kbd>. You will be prompted for a filename.\n\nWhen CADUBI reads a file, it will only read as much that will fit in\nthe workspace (the area of the console minus the bottom row [status\nbar]). To gain more workspace, see the `-s` operator in 'COMMAND LINE\nUSAGE' below.\n\nCADUBI optimizes its output files to display properly and take up as\nlittle space as possible. All CADUBI output can be viewed with the\n'cat' utility.\n\n## Command line usage\n\n    Usage: cadubi [OPTIONS] [FILE]\n\n    Available options:\n      -h, --help              what you're looking at now\n      -m, --mute              turn off beeping\n      -s, --size [W] [H]      sets the size of the console for use with\n                              CADUBI, where W is number of columns and H\n                              is number of rows.\n      -v, --version           show CADUBI version\n\n    Example:\n      Will make the cadubi workspace 160 columns wide, 48 rows high,\n      disable beeping, and open the file 'bacon.txt':\n      \n          cadubi --mute --size 160 48 bacon.txt\n\n      Will display the version of CADUBI, copyright and author:\n\n          cadubi -v\n\n## Tips\n\nWhenever you are prompted to type in information, such as the name of\na file to read/write to, you can hit escape to cancel. You can also\nhit escape to get out of text mode.\n\nWhen using the `-s` or `--size` command line option, make sure your\nconsole actually _is_ that size or the text won't wrap properly and\nCADUBI will look funny."
}
