{
  "name": "wiggle",
  "full_name": "wiggle",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Program for applying patches with conflicting changes",
  "license": "GPL-2.0-or-later",
  "homepage": "https://github.com/neilbrown/wiggle",
  "versions": {
    "stable": "1.3",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/neilbrown/wiggle/archive/refs/tags/v1.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "ff92cf0133c1f4dce33563e263cb30e7ddb6f4abdf86d427b1ec1490bec25afa"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiggle/blobs/sha256:af2e82816a399f7da15006e81343855ef0c205ddc22bbc2a90047d0f99ac4339",
          "sha256": "af2e82816a399f7da15006e81343855ef0c205ddc22bbc2a90047d0f99ac4339"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiggle/blobs/sha256:2340430acf70ad6cff33fb034eda572c80f359b3847b90ebcce1c732cc2bb792",
          "sha256": "2340430acf70ad6cff33fb034eda572c80f359b3847b90ebcce1c732cc2bb792"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiggle/blobs/sha256:f585911f982b406255e79f0c3b6a4a71b7e438b0d102f1d9c39d1fdb806fe40e",
          "sha256": "f585911f982b406255e79f0c3b6a4a71b7e438b0d102f1d9c39d1fdb806fe40e"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiggle/blobs/sha256:0b66da10e6bd799da3b4a24c0571fb62dc3b22d2f9c2a748c9d61f00eb82a087",
          "sha256": "0b66da10e6bd799da3b4a24c0571fb62dc3b22d2f9c2a748c9d61f00eb82a087"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiggle/blobs/sha256:6ef8230cd01f245db7718475da9c898919bc52b9729b2a603e797dce13d796fc",
          "sha256": "6ef8230cd01f245db7718475da9c898919bc52b9729b2a603e797dce13d796fc"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiggle/blobs/sha256:233a538ebdde21f7038aafd73fb4a20afb0dbb6715f54f4fc305ad7ca4966672",
          "sha256": "233a538ebdde21f7038aafd73fb4a20afb0dbb6715f54f4fc305ad7ca4966672"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiggle/blobs/sha256:e50353191b0368db9dd898d730b74ea3612c1cff728717fc8b5904a6d44e2015",
          "sha256": "e50353191b0368db9dd898d730b74ea3612c1cff728717fc8b5904a6d44e2015"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiggle/blobs/sha256:e9181d60a846d40b7850bb1647b1dcfba43a56f46d26bda4965df7e6f9857900",
          "sha256": "e9181d60a846d40b7850bb1647b1dcfba43a56f46d26bda4965df7e6f9857900"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "groff"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "ncurses"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/wiggle.rb",
  "ruby_source_checksum": {
    "sha256": "f7e1975f010235097da06b1b8203f657e8188ee28f04a64d18db1d503fb12b14"
  },
  "date_added": "2011-09-03T11:10:43-07:00",
  "readme": "/*\n * wiggle - apply rejected patches\n *\n * Copyright (C) 2003 Neil Brown <neilb@cse.unsw.edu.au>\n * Copyright (C) 2010-2013 Neil Brown <neilb@suse.de>\n * Copyright (C) 2014-2020 Neil Brown <neil@brown.name>\n *\n *\n *    This program is free software; you can redistribute it and/or modify\n *    it under the terms of the GNU General Public License as published by\n *    the Free Software Foundation; either version 2 of the License, or\n *    (at your option) any later version.\n *\n *    This program is distributed in the hope that it will be useful,\n *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *    GNU General Public License for more details.\n *\n *    You should have received a copy of the GNU General Public License\n *    along with this program.\n *\n *    Author: Neil Brown\n *    Email: <neil@brown.name>\n */\n\n/*\n * Options and help text for wiggle\n */\n\n#include \"wiggle.h\"\n\n#ifndef VERSION\n#define VERSION \"1.3\"\n#endif\n#ifndef VERS_DATE\n#define VERS_DATE \"2020-10-03\"\n#endif\n\nchar Version[] = \"wiggle \" VERSION \" \" VERS_DATE \" GPL-2+ http://neil.brown.name/wiggle/\\n\";\n\nchar short_options[] = \"xdmwlrho:iW123p::VRvqBb\";\n\nstruct option long_options[] = {\n\t{\"browse\",\t0, 0, 'B'},\n\t{\"extract\",\t0, 0, 'x'},\n\t{\"diff\",\t0, 0, 'd'},\n\t{\"merge\",\t0, 0, 'm'},\n\t{\"words\",\t0, 0, 'w'},\n\t{\"lines\",\t0, 0, 'l'},\n\t{\"patch\",\t0, 0, 'p'},\n\t{\"replace\",\t0, 0, 'r'},\n\t{\"help\",\t0, 0, 'h'},\n\t{\"version\",\t0, 0, 'V'},\n\t{\"reverse\",\t0, 0, 'R'},\n\t{\"verbose\",\t0, 0, 'v'},\n\t{\"quiet\",\t0, 0, 'q'},\n\t{\"strip\",\t1, 0, 'p'},\n\t{\"output\",\t1, 0, 'o'},\n\t{\"no-ignore\",\t0, 0, 'i'},\n\t{\"show-wiggles\",0, 0, 'W'},\n\t{\"ignore-blanks\",0,0, 'b'},\n\t{\"no-backup\",\t0, 0, NO_BACKUP },\n\t{\"self-test\",\t0, 0, SELF_TEST},\n\t{\"report-wiggles\", 0, 0, REPORT_WIGGLES},\n\t{\"non-space\",\t0, 0, NON_SPACE},\n\t{\"shortest\",\t0, 0, SHORTEST},\n\t{0, 0, 0, 0}\n};\n\nchar Usage[] =\n\"Usage: wiggle --diff|--extract|--merge|--browse --lines|--words [--replace] files...\\n\";\n\nchar Help[] =  \"\\n\"\n\"Wiggle - apply patches that 'patch' rejects.\\n\"\n\"\\n\"\n\"Wiggle provides four distinct but related functions:\\n\"\n\"merge, diff, extract, and browse.\\n\"\n\"To get more detailed help on a function, select the function\\n\"\n\"before requesting help.  e.g.\\n\"\n\"    wiggle --diff --help\\n\"\n\"\\n\"\n\"Options:\\n\"\n\"   --extract   -x    : select 'extract' function.\\n\"\n\"   --diff      -d    : select 'diff' function.\\n\"\n\"   --merge     -m    : select 'merge' function (default).\\n\"\n\"   --browse    -B    : select 'browse' function.\\n\"\n\"\\n\"\n\"   --words     -w    : word-wise diff and merge.\\n\"\n\"   --lines     -l    : line-wise diff and merge.\\n\"\n\"   --non-space       : words are separated by spaces.\\n\"\n\"\\n\"\n\"   --patch     -p    : treat last file as a patch file.\\n\"\n\"   -1  -2  -3        : select which component of patch or merge to use.\\n\"\n\"   --reverse   -R    : swap 'before' and 'after' for diff function.\\n\"\n\"   --no-ignore -i    : Don't ignore already-applied changes.\\n\"\n\"   --show-wiggle -W  : Report wiggles like conflicts with an extra stanza.\\n\"\n\"\\n\"\n\"   --help      -h    : get help.\\n\"\n\"   --version   -V    : get version of wiggle.\\n\"\n\"   --verbose   -v    : (potentially) be more verbose.\\n\"\n\"   --quiet     -q    : don't print un-necessary messages.\\n\"\n\"\\n\"\n\"   --replace   -r    : replace first file with result of merger.\\n\"\n\"   --no-backup       : Never save original file (as name.porig).\\n\"\n\"\\n\"\n\"   --strip=    -p    : number of path components to strip from file names.\\n\"\n\"\\n\"\n\"Wiggle needs to be given 1, 2, or 3 files.  Any one of these can\\n\"\n\"be given as '-' to signify standard input.\\n\"\n\"\\n\";\n\nchar HelpExtract[] = \"\\n\"\n\"wiggle --extract -[123] [--patch]  merge-or-patch\\n\"\n\"\\n\"\n\"The extract function allows one branch of a patch or merge file\\n\"\n\"to be extracted.  A 'patch' is the output of 'diff -c' or 'diff -u'.\\n\"\n\"Either the before (-1) or after (-2) branch can be extracted.\\n\"\n\"\\n\"\n\"A 'merge' is the output of 'diff3 -m' or 'merge -A'.  Either the\\n\"\n\"first, second, or third branch can be extracted.\\n\"\n\"\\n\"\n\"A 'merge' file is assumed unless --patch is given.\\n\"\n\"\\n\";\n\nchar HelpDiff[] = \"\\n\"\n\"wiggle --diff [-wl] [-p12] [-R]  file-or-patch [file-or-patch]\\n\"\n\"\\n\"\n\"The diff function will report the differences and similarities between\\n\"\n\"two files in a format similar to 'diff -u'.  With --word mode\\n\"\n\"(the default) word-wise differences are displayed on lines starting\\n\"\n\"with a '|'.  With --line mode, only whole lines are considered\\n\"\n\"much like normal diff.\\n\"\n\"\\n\"\n\"If one file is given is it assumed to be a patch, and the two\\n\"\n\"branches of the patch are extracted and compared.  If two files\\n\"\n\"are given they are normally assumed to be whole files and are compared.\\n\"\n\"However if the --patch option is given with two files, then the\\n\"\n\"second is treated as a patch and the first or (with -2) second branch\\n\"\n\"is extracted and compared against the first file.\\n\"\n\"\\n\"\n\"--reverse (-R) with cause diff to swap the two files before comparing\\n\"\n\"them.\\n\"\n\"\\n\";\n\nchar HelpMerge[] = \"\\n\"\n\"wiggle --merge [-wl] [--replace]  file-or-merge [file-or-patch [file]]\\n\"\n\"\\n\"\n\"The merge function is the primary function of wiggle and is assumed\\n\"\n\"if no function is explicitly chosen.\\n\"\n\"\\n\"\n\"Normally wiggle will compare three files on a word-by-word basis and\\n\"\n\"output unresolvable conflicts in the resulting merge by showing\\n\"\n\"whole-line differences.\\n\"\n\"With the --lines option, the files are compared line-wise much\\n\"\n\"like 'merge'.  With the (default) --words option, files are compared\\n\"\n\"word-wise and unresolvable conflicts are reported word-wise.\\n\"\n\"\\n\"\n\"If --merge is given one file, it is treated as a merge (merge -A\\n\"\n\"output) and the three needed streams are extracted from it.\\n\"\n\"If --merge is given one file and -p, it is a patch which identifies\\n\"\n\"the files that should be patched.\\n\"\n\"If --merge is given two files, the second is treated as a patch\\n\"\n\"file and the first is the original file.\\n\"\n\"If --merge is given three files, they are each treated as whole files\\n\"\n\"and differences between the second and third are merged into the first.\\n\"\n\"This usage is much like 'merge'.\\n\"\n\"\\n\";\n\nchar HelpBrowse[] = \"\\n\"\n\"wiggle --browse [-R] [--strip=n] [-p] [files]\\n\"\n\"\\n\"\n\"The 'browse' function provides an interactive mode for browsing a\\n\"\n\"patch or set of patches.  It allows the application of a patch to each\\n\"\n\"file to be inspected and will eventually allow limited editing to correct\\n\"\n\"mis-application of patches where wiggling was required, and where conflicts\\n\"\n\"occurred.\\n\"\n\"If no files are given, a patch file is read from stdin\\n\"\n\"If one file is given with -p, it is treated as a patch file\\n\"\n\"If one file is given with a name ending .rej, it is treated as a reject for\\n\"\n\"     a file with matching basename\\n\"\n\"Otherwise a single file is assumed to be a merge output with conflicts.\\n\"\n\"If two files are given, the second is a patch to apply to the first.\\n\"\n\"If three files are given then the difference between 2nd and 3rd is applied\\n\"\n\"     to the first\\n\"\n\"\\n\";"
}
