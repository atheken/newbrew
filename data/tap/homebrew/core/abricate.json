{
  "name": "abricate",
  "full_name": "abricate",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Find antimicrobial resistance and virulence genes in contigs",
  "license": "GPL-2.0-only",
  "homepage": "https://github.com/tseemann/abricate",
  "versions": {
    "stable": "1.0.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/tseemann/abricate/archive/v1.0.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "5edc6b45a0ff73dcb4f1489a64cb3385d065a6f29185406197379522226a5d20"
    },
    "head": {
      "url": "https://github.com/tseemann/abricate.git",
      "branch": "master"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/abricate/blobs/sha256:fda2b58bf152b001521cacd1dd46f3aa4ea0aab81ef8287e374d2a9fdca74979",
          "sha256": "fda2b58bf152b001521cacd1dd46f3aa4ea0aab81ef8287e374d2a9fdca74979"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/abricate/blobs/sha256:20bfb72d3f3e5888db151b87faa3b19a570496c164e4a88d1b1a826ef460fe23",
          "sha256": "20bfb72d3f3e5888db151b87faa3b19a570496c164e4a88d1b1a826ef460fe23"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/abricate/blobs/sha256:17c58b1ad438f67604a57d942865f23c0ffdf78dba3e4147c1db163cf9db249b",
          "sha256": "17c58b1ad438f67604a57d942865f23c0ffdf78dba3e4147c1db163cf9db249b"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/abricate/blobs/sha256:9af68aea3abc83447b1399866d25687869d443750e737a87ec17cec44af506c3",
          "sha256": "9af68aea3abc83447b1399866d25687869d443750e737a87ec17cec44af506c3"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/abricate/blobs/sha256:d0a18cc2245bd70d282b95749bdb7e20b018d1f4ab972e43ac14d465a12a98cf",
          "sha256": "d0a18cc2245bd70d282b95749bdb7e20b018d1f4ab972e43ac14d465a12a98cf"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/abricate/blobs/sha256:308ec7b38b1aeb25a26ead0df73dfac165dd5e72024ae117c4d9dbec51d96e51",
          "sha256": "308ec7b38b1aeb25a26ead0df73dfac165dd5e72024ae117c4d9dbec51d96e51"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "bioperl",
    "blast",
    "perl"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "unzip"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": true,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/abricate.rb",
  "ruby_source_checksum": {
    "sha256": "b1bce9c5eda1f5ae3e29f17269e75b9ab2d6af14c31d8d84af6531842071aaef"
  },
  "date_added": "2021-09-06T01:12:18+00:00",
  "readme": "[![Build Status](https://travis-ci.org/tseemann/abricate.svg?branch=master)](https://travis-ci.org/tseemann/abricate) \n[![License: GPL v2](https://img.shields.io/badge/License-GPL%20v2-blue.svg)](https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html)\n![Don't judge me](https://img.shields.io/badge/Language-Perl_5-steelblue.svg)\n\n# ABRicate\n\nMass screening of contigs for antimicrobial resistance or virulence genes.\nIt comes bundled with multiple databases: \nNCBI, CARD, ARG-ANNOT, Resfinder, MEGARES, EcOH, PlasmidFinder, Ecoli_VF and\nVFDB.\n\n## Is this the right tool for me?\n\n1. It only supports contigs, not FASTQ reads\n2. It only detects acquired resistance genes, **NOT** point mutations\n3. It uses a DNA sequence database, not protein\n4. It needs BLAST+ >= 2.7 and `any2fasta` to be installed\n5. It's written in Perl :camel:\n\nIf you are happy with the above, then please continue!\nOtherwise consider using\n[Ariba](https://github.com/sanger-pathogens/ariba),\n[Resfinder](https://cge.cbs.dtu.dk/services/ResFinder/),\n[RGI](https://card.mcmaster.ca/analyze/rgi),\n[SRST2](https://github.com/katholt/srst2),\n[AMRFinderPlus](https://github.com/ncbi/amr#ncbi-antimicrobial-resistance-gene-finder-amrfinderplus),\n*etc.*\n\n## Quick Start\n\n```\n% abricate 6159.fasta\nUsing database resfinder:  2130 sequences -  Mar 17, 2017\nProcessing: 6159.fna\nFound 3 genes in 6159.fna\n#FILE     SEQUENCE     START   END     STRAND GENE     COVERAGE     COVERAGE_MAP     GAPS  %COVERAGE  %IDENTITY  DATABASE  ACCESSION  PRODUCT        RESISTANCE\n6159.fna  NC_017338.1  39177   41186   +      mecA_15  1-2010/2010  ===============  0/0   100.00     100.000    ncbi      AB505628   n/a\t     FUSIDIC_ACID\n6159.fna  NC_017338.1  727191  728356  -      norA_1   1-1166/1167  ===============  0/0   99.91      92.367     ncbi      M97169     n/a            FOSFOMYCIN\n6159.fna  NC_017339.1  10150   10995   +      blaZ_32  1-846/846    ===============  0/0   100.00     100.000    ncbi      AP004832   betalactamase  BETA-LACTAM;PENICILLIN\n```\n\n## Installation\n\n### Brew\nIf you are using the [MacOS Homebrew](http://brew.sh/) or [LinuxBrew](http://brew.sh/linuxbrew/) packaging system:\n```\nbrew install brewsci/bio/abricate\nabricate --check\nabricate --list\n```\n\n### Bioconda\nIf you use [Conda](https://conda.io/docs/install/quick.html) \nfollow the instructions to add the [Bioconda channel](https://bioconda.github.io/):\n```\nconda install -c conda-forge -c bioconda -c defaults abricate\nabricate --check\nabricate --list\n```\n\n### Source\nIf you install from source, Abricate has the following package dependencies:\n* `any2fasta` for sequence file format conversion\n* BLAST+ >2.7.0 for `blastn`, `makeblastdb`, `blastdbcmd`\n* Perl modules: `LWP::Simple`, `Bio::Perl`, `JSON`, `Path::Tiny`\n* `git`, `unzip`, `gzip` for updating databases\n\nMost of these are easy to install on an Ubuntu-based system:\n```\nsudo apt-get install bioperl ncbi-blast+ gzip unzip git \\\n  libjson-perl libtext-csv-perl libpath-tiny-perl liblwp-protocol-https-perl libwww-perl\ngit clone https://github.com/tseemann/abricate.git\n./abricate/bin/abricate --check\n./abricate/bin/abricate --setupdb\n./abricate/bin/abricate ./abricate/test/assembly.fa\n```\n\n## Input\n\nAbricate takes any sequence file that `any2fasta` can convert to FASTA files (eg. Genbank,\nEMBL), and they can be optionally `gzip` or `bzip2` compressed.\n```\nabricate assembly.fa \nabricate assembly.fa.gz\nabricate assembly.gbk \nabricate assembly.gbk.bz2\n```\n\nIt can take multiple files at once too:\n```\nabricate assembly.*\nabricate /mnt/ncbi/bacteria/*.gbk.gz \n```\n\nOr you can provide it a \"file of file names\" (a \"FOFN\"):\n```\n% cat test/fofn.txt\n\nassembly.fa\nassembly.fa.gz\nassembly.gbk\nassembly.gbk.bz2\n\n% abricate --fofn test/fofn.txt\n```\n\nIt does not accept raw FASTQ reads; please use\n[Ariba](https://github.com/sanger-pathogens/ariba) or\n[SRTS2](https://github.com/katholt/srst2) for that.\n\n## Output\n\nAbricate produces a tap-separated output file with the following columns:\n\nColumn | Example | Description\n-------|---------|------------\nFILE | `Ecoli.fna` | The filename this hit came from\nSEQUENCE | `contig000324` | The sequence in the filename\nSTART | `23423` | Start coordinate in the sequence\nEND | `24117` | End coordinate\nSTRAND | `+` | Strand + or -\nGENE | `tet(M)` | AMR gene name\nCOVERAGE | `1-1920/1920` | What proportion of the gene is in our sequence\nCOVERAGE_MAP | `===============` | A visual represenation of the hit. `=`=aligned, `.`=unaligned, `/`=has_gaps\nGAPS | `1/4` | Openings / gaps in subject and query - possible psuedogene?\n%COVERAGE | `100.00%` | Proportion of gene covered\n%IDENTITY | `99.95%` | Proportion of exact nucleotide matches\nDATABASE | `ncbi` | The database this sequence comes from\nACCESSION | `NC_009632:49744-50476` | The genomic source of the sequence\nPRODUCT | `aminoglycoside O-phosphotransferase APH(3')-IIIa` | Gene product (if available)\nRESISTANCE | `TETRACYCLINE;FUSIDIC_ACID` | putative antibiotic resistance phenotype, `;`-separated\n\n## Caveats\n\n* Does not find mutational resistance, only acquired genes.\n* Gap reporting incomplete\n* Sometimes two heavily overlapping genes will be reported for the same locus\n* Possible coverage calculation issues\n\n## Databases\n\nABRicate comes with some pre-downloaded databases:\n\n* [NCBI AMRFinderPlus](https://www.ncbi.nlm.nih.gov/bioproject/PRJNA313047)\n* [CARD](https://card.mcmaster.ca/)\n* [Resfinder](https://cge.cbs.dtu.dk/services/ResFinder/)\n* [ARG-ANNOT](http://en.mediterranee-infection.com/article.php?laref=283%26titre=arg-annot)\n* [MEGARES](https://megares.meglab.org/)\n* [EcOH](https://github.com/katholt/srst2/tree/master/data)\n* [PlasmidFinder](https://cge.cbs.dtu.dk/services/PlasmidFinder/)\n* [VFDB](http://www.mgc.ac.cn/VFs/)\n* [Ecoli_VF](https://github.com/phac-nml/ecoli_vf)\n\nYou can check what you have installed with the `--list` command.\nThis lists the available databases in TSV (or CSV with `--csv`) and three\ncolumns:\n```\n% abricate --list\n\nDATABASE       SEQUENCES  DBTYPE  DATE\nargannot       1749       nucl    2019-Jul-28\ncard           2241       nucl    2019-Jul-28\necoh           597        nucl    2019-Jul-28\necoli_vf       2701       nucl    2019-Jul-28\nmegares        6635       nucl    2020-Feb-20\nncbi           4324       nucl    2019-Jul-28\nplasmidfinder  263        nucl    2019-Jul-28\nresfinder      2434       nucl    2019-Jul-28\nvfdb           2597       nucl    2019-Jul-28\n```\n\nThe default database is `ncbi`.\nYou can choose a different database using the `--db` option:\n```\n% abricate --db vfdb --quiet 6159.fa\n\n6159.fna  NC_017338.1  2724620  2726149  aur      1-1530/1530     ===============  0/0    100.00     99.346     vfdb      NP_647375\tzinc metalloproteinase aureolysin\n6159.fna  NC_017338.1  2766595  2767155  icaR     1-561/561       ===============  0/0    100.00     98.930     vfdb      NP_647402\tN-acetylglucosaminyltransferase\n6159.fna  NC_017338.1  2767319  2768557  icaA     1-1239/1239     ===============  0/0    100.00     99.677     vfdb      NP_647403\tn/a\n6159.fna  NC_017338.1  2768521  2768826  icaD     1-306/306       ===============  0/0    100.00     99.020     vfdb      NP_647404\tn/a\n6159.fna  NC_017338.1  2768823  2769695  icaB     1-873/873       ===============  0/0    100.00     99.542     vfdb      NP_647405\tn/a\n6159.fna  NC_017338.1  2769682  2770734  icaC     1-1053/1053     ===============  0/0    100.00     98.955     vfdb      NP_647406\tn/a\n6159.fna  NC_017338.1  2771040  2773085  lip      1-2046/2046     ===============  0/0    100.00     98.778     vfdb      NP_647407\ttriacylglycerol lipase precursor\n```\n\n## Combining reports across samples\n\nABRicate can combine results into a simple matrix of gene presence/absence.\nAn absent gene is denoted `.` and a present gene is represented by its '%COVERAGE`.\nThis can be individual abricate reports, or a combined one.\n\n```\n# Run abricate on each .fa file\n% abricate 1.fna > 1.tab\n% abricate 2.fna > 2.tab\n\n# Combine\n% abricate --summary 1.tab 2.tab\n\n#FILE     NUM_FOUND  aac(6')-aph(2'')_1  aadD_1  blaZ_32  blaZ_36  erm(A)_1  mecA_15  norA_1  spc_1  tet(M)_7\n1.tab     8          100.00              100.00  .        100.00   100.00    100.00   99.91   100.00  100.00\n2.tab     3          .                   .       100.00   .        .         100.00   99.91   .       .\n```\nOr if you ran everything in a single report, it will work too.\n```\n% abricate *.fna > results.tab\n% abricate --summary results.tab > summary.tab\n```\n\n## Updating the databases\n\n```\n# force download of latest version\n% abricate-get_db --db ncbi --force\n\n# re-use existing download and just regenerate the database\n% abricate-get_db --db ncbi\n```\n\n## Making your own database\n\nLet's say you want to make your own database called `tinyamr`. \nAll you need is a FASTA file of nucleotide sequences, say `tinyamr.fa`.\nIdeally the sequence IDs would have the format `>DB~~~ID~~~ACC~~~RESISTANCES DESC`\nwhere `DB` is `tinyamr`, `ID` is the gene name, `ACC` is an accession\nnumber of the sequence source, `RESISTANCES` is the phenotype(s) to report,\nand `DESC` can be any textual description.\n\n```\n% cd /path/to/abricate/db     # this is the --datadir default option\n% mkdir tinyamr\n% cp /path/to/tinyamr.fa sequences\n% head -n 1 sequences\n>tinyamr~~~GENE_ID~~~GENE_ACC~~RESISTANCES some description here\n% abricate --setupdb\n% # or just do this: makeblastdb -in sequences -title tinyamr -dbtype nucl -hash_index\n\n% abricate --list\nDATABASE  SEQUENCES  DBTYPE  DATE\ntinyamr   173        nucl    2019-Aug-28\n\n% abricate --db tinyamr screen_this.fasta\n```\n\n## Etymology\n\nThe name \"ABRicate\" was chosen as the first 3 letters are a common acronym\nfor \"Anti-Biotic Resistance\". It also has the form of an English _verb_, \nwhich suggests the tool actual taking \"action\" against the problem of antibiotic resistance.\nIt is also relatively unique in [Google](https://www.google.com.au/search?q=abricate),\nand is unlikely to receive an infamous [JABBA Award](http://www.acgt.me/blog/2014/12/1/time-for-a-new-jabba-award-for-just-another-bogus-bioinformatics-acronym).\n\n## Citation\n\nIf you publish the results of Abricate please cite both the software _and_\nthe appropriate database you used with `--db`\n\n* Seemann T, *Abricate*, **Github** `https://github.com/tseemann/abricate`\n* NCBI AMRFinderPlus - [doi: 10.1128/AAC.00483-19](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410)\n* CARD - [doi:10.1093/nar/gkw1004](https://www.ncbi.nlm.nih.gov/pubmed/27789705)\n* Resfinder - [doi:10.1093/jac/dks261](https://www.ncbi.nlm.nih.gov/pubmed/22782487)\n* ARG-ANNOT - [doi:10.1128/AAC.01310-13](https://www.ncbi.nlm.nih.gov/pubmed/24145532)\n* VFDB - [doi:10.1093/nar/gkv1239](https://www.ncbi.nlm.nih.gov/pubmed/26578559)\n* PlasmidFinder - [doi:10.1128/AAC.02412-14](https://www.ncbi.nlm.nih.gov/pubmed/24777092)\n* EcOH - [doi:10.1099/mgen.0.000064](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/)\n* MEGARES 2.00 - [doi:10.1093/nar/gkz1010](https://academic.oup.com/nar/article/48/D1/D561/5624973)\n## Issues\n\nPlease report problems to the [Issues Page](https://github.com/tseemann/abricate/issues).\n\n## License\n\n[GPLv2](https://raw.githubusercontent.com/tseemann/abricate/master/LICENSE)\n\n## Author\n\nTorsten Seemann | [@torstenseemann](https://twitter.com/torstenseemann) | [blog](http://thegenomefactory.blogspot.com/)"
}
