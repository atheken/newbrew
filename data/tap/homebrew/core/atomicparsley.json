{
  "name": "atomicparsley",
  "full_name": "atomicparsley",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "MPEG-4 command-line tool",
  "license": "GPL-2.0-or-later",
  "homepage": "https://github.com/wez/atomicparsley",
  "versions": {
    "stable": "20221229.172126.d813aa6",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/wez/atomicparsley/archive/20221229.172126.d813aa6.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "2f095a251167dc771e8f4434abe4a9c7af7d8e13c718fb8439a0e0d97078899b"
    },
    "head": {
      "url": "https://github.com/wez/atomicparsley.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 1,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/atomicparsley/blobs/sha256:b34175e14acdb01523b83fb7e84ba96cfedb6fba3e40e33a594481e5020608dd",
          "sha256": "b34175e14acdb01523b83fb7e84ba96cfedb6fba3e40e33a594481e5020608dd"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/atomicparsley/blobs/sha256:996bb284186eaa30569575a32e0447e7e5cf2f0223c4367e58a76a1addfac27d",
          "sha256": "996bb284186eaa30569575a32e0447e7e5cf2f0223c4367e58a76a1addfac27d"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/atomicparsley/blobs/sha256:9e553cc071ff479799cd114c085b56f03f23b904ae94d03c8cf490845dae9f7e",
          "sha256": "9e553cc071ff479799cd114c085b56f03f23b904ae94d03c8cf490845dae9f7e"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/atomicparsley/blobs/sha256:558289aeb9de98c1c813afab51c3c0d1d92fdf82388a805781d2f4b11df20690",
          "sha256": "558289aeb9de98c1c813afab51c3c0d1d92fdf82388a805781d2f4b11df20690"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/atomicparsley/blobs/sha256:8cc2e316a549c4d1bdc4041fd9a6cfa47673e3ed196b3aecba5e72492d2dc152",
          "sha256": "8cc2e316a549c4d1bdc4041fd9a6cfa47673e3ed196b3aecba5e72492d2dc152"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/atomicparsley/blobs/sha256:256816a97ae5ff57bbf87c40db79601522aec0b6f0bf2a0b4dc939badbe730c1",
          "sha256": "256816a97ae5ff57bbf87c40db79601522aec0b6f0bf2a0b4dc939badbe730c1"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/atomicparsley/blobs/sha256:1b7c684a13e7f448cf4fd791c7534f43489428ee0eae19749c129b4db1389d02",
          "sha256": "1b7c684a13e7f448cf4fd791c7534f43489428ee0eae19749c129b4db1389d02"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "zlib"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/atomicparsley.rb",
  "ruby_source_checksum": {
    "sha256": "678a64de26824119be7131375c5365b22bac7c94691b214dfad930d71f5610ab"
  },
  "date_added": "2009-09-16T14:49:05+01:00",
  "readme": "# AtomicParsley\n\n![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/wez/atomicparsley/ci.yml?branch=master)\n\nAtomicParsley is a lightweight command line program for reading, parsing and\nsetting metadata into MPEG-4 files, in particular, iTunes-style metadata.\n\n## Installation\n\n### macOS\n\n* Navigate to the [latest release](https://github.com/wez/atomicparsley/releases/latest)\n* Download the `AtomicParsleyMacOS.zip` file and extract `AtomicParsley`\n\nAtomicParsley is also available for brew users and can be installed by executing this command in a terminal:\n\n```\n$ brew install atomicparsley\n````\n\nNote that the version available in brew may lag behind the latest version of the code in this repo.\n\n### Windows\n\n* Navigate to the [latest release](https://github.com/wez/atomicparsley/releases/latest)\n* Download the `AtomicParsleyWindows.zip` file and extract `AtomicParsley.exe`\n\n### Linux (x86-64)\n\n* Navigate to the [latest release](https://github.com/wez/atomicparsley/releases/latest)\n* Download the `AtomicParsleyLinux.zip` file and extract `AtomicParsley`\n\n### Alpine Linux (x86-64 musl libc)\n\n* Navigate to the [latest release](https://github.com/wez/atomicparsley/releases/latest)\n* Download the `AtomicParsleyAlpine.zip` file and extract `AtomicParsley`\n* And finally `apk add libstdc++`\n\n### Building from Source\n\nIf you are building from source you will need `cmake` and `make`.\nOn Windows systems you'll need Visual Studio or MingW.\n\n```\ncmake .\ncmake --build . --config Release\n```\n\nwill generate an `AtomicParsley` executable.\n\n### Dependencies:\n\nzlib  - used to compress ID3 frames & expand already compressed frames\n        available from http://www.zlib.net\n\n\n## A note on maintenance!\n\n> I made some fixes to the original project on sourceforge back in 2009 and\n> became the de-facto fork of AtomicParsley as a result.  However, I haven't\n> used this tool myself in many years and have acted in a very loose guiding\n> role since then.\n>\n> In 2020 Bitbucket decided to cease hosting Mercurial based repositories\n> which meant that I had to move it in order to keep it alive, so you'll\n> see a flurry of recent activity.\n>\n> I'll consider merging pull requests if they are easy to review, but because\n> I don't use this tool myself I have no way to verify complex changes.\n> If you'd like to make such a change, please consider contributing some\n> kind of basic automated test with a corresponding small test file.\n>\n> This repo has GitHub Actions enabled for the three major platforms\n> so bootstrapping some test coverage is feasible.\n>\n> You are welcome to report issues using the issue tracker, but I (@wez)\n> am unlikely to act upon them."
}
