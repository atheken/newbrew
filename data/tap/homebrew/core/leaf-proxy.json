{
  "name": "leaf-proxy",
  "full_name": "leaf-proxy",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Lightweight and fast proxy utility",
  "license": "Apache-2.0",
  "homepage": "https://github.com/eycorsican/leaf",
  "versions": {
    "stable": "0.9.3",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/eycorsican/leaf/archive/v0.9.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "8b89f6dc22ae0c232b1a02a47ad08d6cb0b50cebdbbe1f21a746e830862263dd"
    },
    "head": {
      "url": "https://github.com/eycorsican/leaf.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/leaf-proxy/blobs/sha256:33134c5e08ec289676bd1498b66abedddd9de326a7a87fd91fef768396a17782",
          "sha256": "33134c5e08ec289676bd1498b66abedddd9de326a7a87fd91fef768396a17782"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/leaf-proxy/blobs/sha256:dfb7bccd87d2fa3baa5d0122df715ce9064757e24a0d0ef01aca54f67e4f1dbe",
          "sha256": "dfb7bccd87d2fa3baa5d0122df715ce9064757e24a0d0ef01aca54f67e4f1dbe"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/leaf-proxy/blobs/sha256:bac0be377310a0084b824e3b7c1f739315aa4e47c2146f8ebc181c08cc1710c5",
          "sha256": "bac0be377310a0084b824e3b7c1f739315aa4e47c2146f8ebc181c08cc1710c5"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/leaf-proxy/blobs/sha256:aa9a5500d30564207ae2c6fcc333d4d26d26bea777f2af7565dbb13b922fd6e8",
          "sha256": "aa9a5500d30564207ae2c6fcc333d4d26d26bea777f2af7565dbb13b922fd6e8"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/leaf-proxy/blobs/sha256:0cc83e1d7a894991a9cd0785eae838f073c97c1b87daf15c7e54a7bcfede05f3",
          "sha256": "0cc83e1d7a894991a9cd0785eae838f073c97c1b87daf15c7e54a7bcfede05f3"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/leaf-proxy/blobs/sha256:0bae8b2da44d6c109a114283a514f210c92f6612fd87f7a0e136b6403afd8bc5",
          "sha256": "0bae8b2da44d6c109a114283a514f210c92f6612fd87f7a0e136b6403afd8bc5"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/leaf-proxy/blobs/sha256:921bc62a8d032d4e9855cbbfc2153b351cdba86e86118d304f7914173eaf5bd1",
          "sha256": "921bc62a8d032d4e9855cbbfc2153b351cdba86e86118d304f7914173eaf5bd1"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [
    "leaf"
  ],
  "conflicts_with_reasons": [
    "both install a `leaf` binary"
  ],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/leaf-proxy.rb",
  "ruby_source_checksum": {
    "sha256": "83fe1b5c89589658a4ce9b41b8b146a3770285216fa1d2ce3388fca7e73608e0"
  },
  "date_added": "2021-03-28T05:46:12+00:00",
  "readme": "![releases](https://github.com/eycorsican/leaf/workflows/releases/badge.svg)\n![ci](https://github.com/eycorsican/leaf/workflows/ci/badge.svg)\n\n# Leaf\n\nA versatile and efficient proxy framework with nice features suitable for various use cases.\n\n### Multiplexing\n\nThere are 2 transports for traffic multiplexing:\n\n* AMux: A multiplexd transport based on reliable streams suitable for TCP-based protocols and transports\n* QUIC: A UDP-based, multiplexed and secure transport\n\nThe benefit of `amux` is that we can reuse connections to reduce handshake overhead, it's not designed to be memory efficient because it focus only on reusing connections and not reducing the number of connections. While `quic` can reduce both handshake overhead and memory usage without suffering the head-of-line blocking issue.\n\n### Transparent Proxying\n\nThere's the TUN inbound for this purpose, which is also of fundamental importance for VPN-like proxying use cases such as VPN apps on iOS and Android.\n\n### High Availability\n\nOutbounds such as `failover`, `tryall`, `retry`, `random` and their combinations are able to flexibly deliver reqeusts to other outbounds based on their own metrics to achieve high availability or load balancing behaviors.\n\n### Request Routing\n\nRule-based request routing is also supported. Requests can be routed to different outbounds based on domain, IP, GEOIP and port rules.\n\n## Getting Started\n\n```ini\n[General]\ndns-server = 223.5.5.5\nsocks-interface = 127.0.0.1\nsocks-port = 1080\n\n[Proxy]\nDirect = direct\n```\n\nMore configuration examples can be found [here](https://github.com/eycorsican/leaf/blob/master/README.zh.md). If you want more flexible control on the config options, the JSON format should be used, up-to-date examples for the JSON format could be found in the [tests](https://github.com/eycorsican/leaf/blob/master/leaf/tests), both client-side and server-side config examples are presented there.\n\n## TUN Mode and Gateway Mode\n\n### TUN Mode\n\nThis syntax (`tun = auto`) is supported on macOS and Linux.\n\n```ini\n[General]\ndns-server = 223.5.5.5\ntun = auto\n\n[Proxy]\nDirect = direct\n```\n\n### Gateway Mode\n\nRunning in gateway mode requires a configuration with TUN mode enabled. Gateway mode can be enabled by an environment variable.\n\n```sh\nGATEWAY_MODE=true leaf -c config.conf\n```\n\n## Windows\n\n* [Maple](https://github.com/YtFlow/Maple): A lightweight Universal Windows proxy app based on leaf\n\n## iOS & Android\n\n<a href=\"https://play.google.com/store/apps/details?id=com.leaf.and.aleaf\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/7/78/Google_Play_Store_badge_EN.svg\" height=\"70\"></a>\n\n<a href=\"https://apps.apple.com/us/app/leaf-lightweight-proxy/id1534109007\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/3/3c/Download_on_the_App_Store_Badge.svg\" height=\"70\"></a>\n\n## Build\n\nInstall Rust: https://www.rust-lang.org/tools/install\n\nInstall GCC or Clang.\n\nClone & Build:\n```sh\ngit clone --recursive https://github.com/eycorsican/leaf.git\ncd leaf\ncargo build -p leaf-bin\n```\n\nRun:\n```sh\n./target/debug/leaf --help\n```\n\n## License\n\nThis project is licensed under the [Apache License 2.0](https://github.com/eycorsican/leaf/blob/master/LICENSE)."
}
