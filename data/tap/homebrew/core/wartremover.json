{
  "name": "wartremover",
  "full_name": "wartremover",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Flexible Scala code linting tool",
  "license": "Apache-2.0",
  "homepage": "https://github.com/wartremover/wartremover",
  "versions": {
    "stable": "3.1.3",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/wartremover/wartremover/archive/v3.1.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "874aafeb5e19fd62646e5ce1aea3eade832bf82273c97990e894ed7dbebb465b"
    },
    "head": {
      "url": "https://github.com/wartremover/wartremover.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wartremover/blobs/sha256:fd69cf57eadaed2c57554beacd6b1c9279f31e3bc8981e21cd4182bcbf5abc25",
          "sha256": "fd69cf57eadaed2c57554beacd6b1c9279f31e3bc8981e21cd4182bcbf5abc25"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "sbt"
  ],
  "dependencies": [
    "openjdk"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/wartremover.rb",
  "ruby_source_checksum": {
    "sha256": "2cd1fef0bf9a59ede046cc02f8f92d99246b11a7ab017f9f0eee2f73862fa3ca"
  },
  "date_added": "2015-07-07T16:23:10+01:00",
  "readme": "# WartRemover\n\n[![scaladoc](https://javadoc.io/badge2/org.wartremover/wartremover_2.13/javadoc.svg)](https://javadoc.io/doc/org.wartremover/wartremover_2.13/latest/org/wartremover/warts/index.html)\n[![Maven Central](https://img.shields.io/maven-central/v/org.wartremover/wartremover_2.13?label=Maven%20Central&color=%236DBE42)](https://search.maven.org/search?q=g:%22org.wartremover%22%20AND%20a:%22wartremover_2.13%22)\n\n[![Join us on gitter](https://badges.gitter.im/repo.svg)](https://gitter.im/wartremover/Lobby)\n\nWartRemover is a flexible Scala code linting tool.\n\n## Documentation\n\nDocumentation for Wartremover is available [here](https://www.wartremover.org).\n\n## Reporting Issues\n\nIt's very useful to get the tree expanded by the Scala compiler,\nrather than the original source. Adding the `-Xprint:typer` flag to\nthe Scala compiler will show code like the following:\n\n```scala\n// println(\"Hello world\")\npackage $line4 {\n  object $read extends scala.AnyRef {\n    def <init>(): $line4.$read.type = {\n      $read.super.<init>();\n      ()\n    };\n    object $iw extends scala.AnyRef {\n      def <init>(): type = {\n        $iw.super.<init>();\n        ()\n      };\n      object $iw extends scala.AnyRef {\n        def <init>(): type = {\n          $iw.super.<init>();\n          ()\n        };\n        private[this] val res1: Unit = scala.this.Predef.println(\"Hello world\");\n        <stable> <accessor> def res1: Unit = $iw.this.res1\n      }\n    }\n  }\n}\n```\n\nAdding the generated code to an issue is very useful for debugging.\n\n## License\n\n[The Apache Software License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0.txt)"
}
