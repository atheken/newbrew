{
  "name": "github-release",
  "full_name": "github-release",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Create and edit releases on Github (and upload artifacts)",
  "license": "MIT",
  "homepage": "https://github.com/github-release/github-release",
  "versions": {
    "stable": "0.10.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/github-release/github-release/archive/v0.10.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "79bfaa465f549a08c781f134b1533f05b02f433e7672fbaad4e1764e4a33f18a"
    },
    "head": {
      "url": "https://github.com/github-release/github-release.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/github-release/blobs/sha256:9813355bc2c269f5729efb5e212522d9aa876f80ef488c09a3c8e7d69fac2c90",
          "sha256": "9813355bc2c269f5729efb5e212522d9aa876f80ef488c09a3c8e7d69fac2c90"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/github-release/blobs/sha256:1d85d8888a8214690922cf085ac5207ee2fc34b15da2d877691955db4819cc68",
          "sha256": "1d85d8888a8214690922cf085ac5207ee2fc34b15da2d877691955db4819cc68"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/github-release/blobs/sha256:dfaa0f4ae21d44b1e0716ef71cabf02ac60a8692893b2a49bb32e096cb441a4a",
          "sha256": "dfaa0f4ae21d44b1e0716ef71cabf02ac60a8692893b2a49bb32e096cb441a4a"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/github-release/blobs/sha256:353e7edcd5c8952b49878c1c264d94ea8be756fed3e3d098199abb2802e15756",
          "sha256": "353e7edcd5c8952b49878c1c264d94ea8be756fed3e3d098199abb2802e15756"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/github-release/blobs/sha256:338994c0481c0f4ab4523a29b4c1c7c10553b621ee7921aa3aa7d36bbada3b79",
          "sha256": "338994c0481c0f4ab4523a29b4c1c7c10553b621ee7921aa3aa7d36bbada3b79"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/github-release/blobs/sha256:d7770942546f2a49c7b44104fe69ad7cf724cc1eac39280d1217af66ccd97e3b",
          "sha256": "d7770942546f2a49c7b44104fe69ad7cf724cc1eac39280d1217af66ccd97e3b"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/github-release/blobs/sha256:6dc8bf5543967949480fb9bf3f24e149a5ef52857cc38877125f9ad6281eeb58",
          "sha256": "6dc8bf5543967949480fb9bf3f24e149a5ef52857cc38877125f9ad6281eeb58"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/github-release/blobs/sha256:745fcc9458243936c5e482098357c5f83d44e5126e5346f1f6c6ca90ee55a4c6",
          "sha256": "745fcc9458243936c5e482098357c5f83d44e5126e5346f1f6c6ca90ee55a4c6"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/github-release/blobs/sha256:c8a0776dbf6e7156af66a6ce7aefff22e5f12ab47f310748fe75fa6aba8edd3d",
          "sha256": "c8a0776dbf6e7156af66a6ce7aefff22e5f12ab47f310748fe75fa6aba8edd3d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/github-release.rb",
  "ruby_source_checksum": {
    "sha256": "77a1599a6ae4075b2f6cbec47a4519a78f135bb6f385a901c4ecaba5f64365f4"
  },
  "date_added": "2014-06-26T21:36:38+01:00",
  "readme": "github-release\n==============\n\nA small commandline app written in Go that allows you to easily create\nand delete releases of your projects on Github. In addition it allows\nyou to attach files to those releases.\n\nIt interacts with the [github releases API][releases-api]. Though it's entirely\npossible to [do all these things with cURL][curl], it's not really that\nuser-friendly. For example, you need to first query the API to find the id of\nthe release you want, before you can upload an artifact. `github-release` takes\ncare of those little details.\n\n[curl]: https://github.com/blog/1645-releases-api-preview\n[releases-api]: https://developer.github.com/v3/repos/releases\n\nIt might still be a bit rough around the edges, pull requests are\nwelcome!\n\nHow to install\n==============\n\nIf you don't have the Go toolset installed, and you don't want to, but\nstill want to use the app, you can download binaries for your platform\non the [releases\npage](https://github.com/github-release/github-release/releases/latest). Yes, that's\ndogfooding, check the makefile!\n\nIf you have Go installed, you can just do:\n\n```sh\ngo get github.com/github-release/github-release\n```\n\nThis will automatically download, compile and install the app.\n\nAfter that you should have a `github-release` executable in your\n`$GOPATH/bin`.\n\nHow to use\n==========\n\n**NOTE**: for these examples I've [created a github token][token] and set it as\nthe env variable `GITHUB_TOKEN`. `github-release` will automatically pick it up\nfrom the environment so that you don't have to pass it as an argument.\n\n[token]: https://help.github.com/articles/creating-an-access-token-for-command-line-use\n\n```sh\n# set your token\nexport GITHUB_TOKEN=...\n\n# check the help\n$ github-release --help\n\n# make your tag and upload\n$ git tag ... && git push --tags\n\n# check the current tags and existing releases of the repo\n$ github-release info -u aktau -r gofinance\ngit tags:\n- v0.1.0 (commit: https://api.github.com/repos/aktau/gofinance/commits/f562727ce83ce8971a8569a1879219e41d56a756)\nreleases:\n- v0.1.0, name: 'hoary ungar', description: 'something something dark side 2', id: 166740, tagged: 29/01/2014 at 14:27, published: 30/01/2014 at 16:20, draft: ✔, prerelease: ✗\n  - artifact: github.go, downloads: 0, state: uploaded, type: application/octet-stream, size: 1.9KB, id: 68616\n\n# create a formal release\n$ github-release release \\\n    --user aktau \\\n    --repo gofinance \\\n    --tag v0.1.0 \\\n    --name \"the wolf of source street\" \\\n    --description \"Not a movie, contrary to popular opinion. Still, my first release!\" \\\n    --pre-release\n\n# you've made a mistake, but you can edit the release without\n# having to delete it first (this also means you can edit without having\n# to upload your files again)\n$ github-release edit \\\n    --user aktau \\\n    --repo gofinance \\\n    --tag v0.1.0 \\\n    --name \"Highlander II: The Quickening\" \\\n    --description \"This is the actual description!\"\n\n# upload a file, for example the OSX/AMD64 binary of my gofinance app\n$ github-release upload \\\n    --user aktau \\\n    --repo gofinance \\\n    --tag v0.1.0 \\\n    --name \"gofinance-osx-amd64\" \\\n    --file bin/darwin/amd64/gofinance\n\n# upload other files...\n$ github-release upload ...\n\n# you're not happy with it, so delete it\n$ github-release delete \\\n    --user aktau \\\n    --repo gofinance \\\n    --tag v0.1.0\n```\n\nErrata\n======\n\nThe `release` command does not have an `--auth-user` flag because in practice,\nGithub ignores the `--auth-user` flag when validating releases. The only thing\nthat matters is passing a token that has permission to create the release.\n\nGitHub Enterprise Support\n=========================\nYou can point to a different GitHub API endpoint via the environment variable ```GITHUB_API```:\n\n```\nexport GITHUB_API=http://github.company.com/api/v3\n```\n\nUsed libraries\n==============\n\n| Package                                                                    | Description         | License |\n| ------------------------------------------------------------------------   | ------------------- | ------- |\n| [github.com/dustin/go-humanize](https://github.com/dustin/go-humanize)     | humanize file sizes | MIT     |\n| [github.com/tomnomnom/linkheader](https://github.com/tomnomnom/linkheader) | GH API pagination   | MIT     |\n| [github.com/voxelbrain/goptions](https://github.com/voxelbrain/goptions)   | option parsing      | BSD     |\n| [github.com/kevinburke/rest](https://github.com/kevinburke/rest)   | HTTP client      | MIT     |\n\nTodo\n====\n\n- Check if an artifact is already uploaded before starting a new upload\n\nCopyright\n=========\n\nCopyright (c) 2014-2017, Nicolas Hillegeer. All rights reserved.\nCopyright (c) 2020, Meter, Inc. All rights reserved."
}
