{
  "name": "wla-dx",
  "full_name": "wla-dx",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Yet another crossassembler package",
  "license": "GPL-2.0-or-later",
  "homepage": "https://github.com/vhelin/wla-dx",
  "versions": {
    "stable": "10.5",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/vhelin/wla-dx/archive/v10.5.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "b2d093c3c46caa399ed3a8e5f18f1f0eb7aefa958755bec752f2806bad3af802"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wla-dx/blobs/sha256:0a57579303e021b9166138b11fcf0491ad8c87bcaea0d5f0dd8d498468b685d3",
          "sha256": "0a57579303e021b9166138b11fcf0491ad8c87bcaea0d5f0dd8d498468b685d3"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wla-dx/blobs/sha256:c7e70e4cc97cdecd269d28f3e59516e85d4a86c3fa523555d4c5bc2c9e486c69",
          "sha256": "c7e70e4cc97cdecd269d28f3e59516e85d4a86c3fa523555d4c5bc2c9e486c69"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wla-dx/blobs/sha256:2ffdf36dc32cc35cca6f7ba63f60457fb6fcca206394f8aeb757f20bb259a2e6",
          "sha256": "2ffdf36dc32cc35cca6f7ba63f60457fb6fcca206394f8aeb757f20bb259a2e6"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wla-dx/blobs/sha256:24a9223c1db8e91d1955700d3c7a1bca0884f840ff3f5c544decdccedf340bd9",
          "sha256": "24a9223c1db8e91d1955700d3c7a1bca0884f840ff3f5c544decdccedf340bd9"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wla-dx/blobs/sha256:d14bedd366731a95c1c6cc97bef89948dd480cc5406325137c9e32f9c540db40",
          "sha256": "d14bedd366731a95c1c6cc97bef89948dd480cc5406325137c9e32f9c540db40"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wla-dx/blobs/sha256:d0ac6385b89dc578b155af3aac5eff0c135a64b4def3b679a33c44e6e3ea5e82",
          "sha256": "d0ac6385b89dc578b155af3aac5eff0c135a64b4def3b679a33c44e6e3ea5e82"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wla-dx/blobs/sha256:7ecc3e3dcc4955bc7245365bf0836acd7498eead3549061e57fae55c27df48ca",
          "sha256": "7ecc3e3dcc4955bc7245365bf0836acd7498eead3549061e57fae55c27df48ca"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/wla-dx.rb",
  "ruby_source_checksum": {
    "sha256": "9c8ab24197e95adec29cc873ced681ab438e38e061f801915fe81db17e08a5f8"
  },
  "date_added": "2011-09-02T10:11:08-07:00",
  "readme": "WLA DX (Wzonka-Lad Assembler Deluxe)\n====================================\n\nWLA DX - Yet Another\nGB-Z80/Z80/Z80N/6502/65C02/65CE02/65816/68000/6800/6801/6809/8008/8080/HUC6280/SPC-700/SuperFX\nMulti Platform Cross Assembler Package\n\nAzure Pipelines CI:\n\n* [![Build Status](https://dev.azure.com/villehelin0486/villehelin/_apis/build/status/vhelin.wla-dx%20Linux?branchName=master)](https://dev.azure.com/villehelin0486/villehelin/_build/latest?definitionId=1&branchName=master) - Linux\n* [![Build Status](https://dev.azure.com/villehelin0486/villehelin/_apis/build/status/vhelin.wla-dx%20macOS?branchName=master)](https://dev.azure.com/villehelin0486/villehelin/_build/latest?definitionId=6&branchName=master) - macOS\n* [![Build Status](https://dev.azure.com/villehelin0486/villehelin/_apis/build/status/vhelin.wla-dx%20Windows%20x86?branchName=master)](https://dev.azure.com/villehelin0486/villehelin/_build/latest?definitionId=2&branchName=master) - Windows x86\n* [![Build Status](https://dev.azure.com/villehelin0486/villehelin/_apis/build/status/vhelin.wla-dx%20Windows%20x64?branchName=master)](https://dev.azure.com/villehelin0486/villehelin/_build/latest?definitionId=10&branchName=master) - Windows x64\n* [![Build Status](https://dev.azure.com/villehelin0486/villehelin/_apis/build/status/vhelin.wla-dx%20Windows%20MSVC?branchName=master)](https://dev.azure.com/villehelin0486/villehelin/_build/latest?definitionId=8&branchName=master) - Windows MSVC\n\nWLA DX is a set of tools to assemble assembly files to object or library files\n(`wla-ARCH`) and linking them together (`wlalink`). WLA DX isn't bound to one\nsystem (eg. NES or C64), but rather WLA DX allows you to define your own\nmemory map (that should be shared across all object and library files).\n\nSupported architectures are:\n\n* Z80\n* Z80N\n* GB (GB-Z80)\n* 6502\n* 65C02\n* 65CE02\n* 65816\n* 68000\n* 6800\n* 6801\n* 6809\n* 8008\n* 8080\n* HuC6280\n* SPC700\n* SuperFX\n\n\n\nInstalling\n==========\n\nSee `INSTALL` for more detailed instructions.\n\nCompiling\n---------\n\nYou need:\n\n* CMake (at least v2.8.12)\n* C compiler\n* Sphinx (optional, min. v1.2.0, v1.6.0 recommended) (to generate docs)\n\n1. `git clone https://github.com/vhelin/wla-dx # Clone the repository`\n2. `cd wla-dx`\n3. `mkdir build && cd build # Create building directory`\n4. `cmake .. # Generate build system`\n5. `cmake --build . --config Release # Build it`\n6. `cmake -P cmake_install.cmake # Install it (optional)`\n\nIf you didn't install it, you can still access the binaries in the `binaries`\nfolder. It also contains the compiled documentation in the subfolder `doc`.\n\nYou can add `-DCMAKE_INSTALL_PREFIX=prefix` to Steps 4 and/or 6 (before the `-P`)\nto set the prefix directory it'll install in.\n\n\nUsage\n=====\n\nUse the [documentation](https://wla-dx.readthedocs.io/en/latest/) as a starting\npoint.\n\n\nLicense\n=======\n\nWLA DX is GPL-2.0-or-later software. See the file LICENSE or https://spdx.org/licenses/GPL-2.0-or-later.html\nfor more information."
}
