{
  "name": "sdb",
  "full_name": "sdb",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Ondisk/memory hashtable based on CDB",
  "license": "MIT",
  "homepage": "https://github.com/radareorg/sdb",
  "versions": {
    "stable": "1.9.6",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/radareorg/sdb/archive/1.9.6.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "da7ee00ed239f68dbb6a8fad165911ccbe332c6c664a5896cbd867fc9209c934"
    },
    "head": {
      "url": "https://github.com/radareorg/sdb.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/sdb/blobs/sha256:d2939cb0acdbf0be6a9ad82f1a5585967ead14eab2b9b0ad0fcf2b808cf84811",
          "sha256": "d2939cb0acdbf0be6a9ad82f1a5585967ead14eab2b9b0ad0fcf2b808cf84811"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/sdb/blobs/sha256:94907d3f9db6fee04ddbd257199239eb67c1d02f8861c644e39bb074e82ec9f6",
          "sha256": "94907d3f9db6fee04ddbd257199239eb67c1d02f8861c644e39bb074e82ec9f6"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/sdb/blobs/sha256:07ecd9203fc1f6cd203738869734c82c5b85414347bbfff89cce08536d0b85fa",
          "sha256": "07ecd9203fc1f6cd203738869734c82c5b85414347bbfff89cce08536d0b85fa"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/sdb/blobs/sha256:c0cdb33f226529e86954095cc6c211a51ca55fdb5c3d4f1d1f07ad066a922263",
          "sha256": "c0cdb33f226529e86954095cc6c211a51ca55fdb5c3d4f1d1f07ad066a922263"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/sdb/blobs/sha256:ea30adaba77c49d81d0d3f6f81597ee70407bd8de0ac291a33d6b9e3aeecf557",
          "sha256": "ea30adaba77c49d81d0d3f6f81597ee70407bd8de0ac291a33d6b9e3aeecf557"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/sdb/blobs/sha256:dbbee831f313753b1c7d4e6fa2a2a3485e59391584975d30a77094b661536aa5",
          "sha256": "dbbee831f313753b1c7d4e6fa2a2a3485e59391584975d30a77094b661536aa5"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sdb/blobs/sha256:bfe7f6c1e471fb4c9d1347a968912b6ef1b56c1ce56b2929121f96dc5378488f",
          "sha256": "bfe7f6c1e471fb4c9d1347a968912b6ef1b56c1ce56b2929121f96dc5378488f"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "meson",
    "ninja",
    "pkg-config",
    "vala"
  ],
  "dependencies": [
    "glib"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/sdb.rb",
  "ruby_source_checksum": {
    "sha256": "f8a92d4854782fcf5909bef1177a597839ed1fa4c340a8676ddc6ad31e795b95"
  },
  "date_added": "2016-04-02T18:38:24+01:00",
  "readme": "SDB (string database)\n=====================\n\nsdb is a simple string key/value database based on djb's cdb\ndisk storage and supports JSON and arrays introspection.\n\nmcsdbd is a memcache server with disk storage based on sdb.\nIt is distributed as a standalone binary and a library.\n\nThere's also the sdbtypes: a vala library that implements\nseveral data structures on top of an sdb or a memcache instance.\n\n[![GHA](https://github.com/radareorg/sdb/workflows/ci/badge.svg)](https://github.com/radareorg/sdb/actions?query=workflow%3Aci)\n[![GHA](https://api.travis-ci.org/radareorg/sdb.svg)](https://travis-ci.org/radareorg/sdb)\n[![Travis](https://api.travis-ci.org/radareorg/sdb.svg)](https://travis-ci.org/radareorg/sdb)\n[![Build Status](https://scan.coverity.com/projects/1651/badge.svg)](https://scan.coverity.com/projects/1651)\n\nAuthor\n------\npancake <pancake@nopcode.org>\n\nContains\n--------\n* namespaces (multiple sdb paths)\n* atomic database sync (never corrupted)\n* bindings for vala, luvit, newlisp and nodejs\n* command-line frontend for sdb databases\n* memcache client and server with sdb backend\n* arrays support (syntax sugar)\n* json parser/getter (js0n.c)\n\nRips\n----\n* disk storage based on cdb code\n* linked lists from r2 api\n\nCompilation\n-----------\nFor native builds just type `make`. Everything will be compiled twice to get the .dylib and .a and sdb in PIC and nonPIC modes.\n\nTo compile with Emscripten for Javascript:\n\n\tmake CC=emcc EXT_EXE=.js\n\nTo crosscompile with meson:\n\n```\n$ cat > cross-file.txt <<EOF\n[properties]\nexe_wrapper = 'wine'\nand then run meson build --cross-file cross-file.txt ; ninja -C build. It should work and it should create another binary called sdb_native.\nEOF\n$ meson build --cross-file cross-file.txt\n$ ninja -C build\n```\n\nChanges\n-------\nI have modified cdb code a little to create smaller databases and\nbe memory leak free in order to use it from a library.\n\nThe sdb's cdb database format is 10% smaller than the original\none. This is because keylen and valuelen are encoded in 4 bytes:\n1 for the key length and 3 for the value length.\n\nIn a test case, a 4.3MB cdb database takes only 3.9MB after this\nfile format change.\n\nUsage example\n-------------\nLet's create a database!\n\n```\n$ sdb d hello=world\n$ sdb d hello\nworld\n```\n\nUsing arrays (>=0.6):\n\n```\n$ sdb - '[]list=1,2' '[0]list' '[0]list=foo' '[]list' '[+1]list=bar'\n1\nfoo\n2\n```\n\nLet's play with json:\n\n```\n$ sdb d g='{\"foo\":1,\"bar\":{\"cow\":3}}'\n$ sdb d g:bar.cow\n3\n$ sdb - user='{\"id\":123}' user:id=99 user:id\n99\n```\n\nUsing the command-line without any disk database:\n\n```\n$ sdb - foo=bar foo a=3 +a -a\nbar\n4\n3\n\n$ sdb -\nfoo=bar\nfoo\nbar\na=3\n+a\n4\n-a\n3\n```\n\nRemove the database\n\n```\n$ rm -f d\n```"
}
