{
  "name": "vvdec",
  "full_name": "vvdec",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Fraunhofer Versatile Video Decoder",
  "license": "BSD-3-Clause-Clear",
  "homepage": "https://github.com/fraunhoferhhi/vvdec",
  "versions": {
    "stable": "2.1.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/fraunhoferhhi/vvdec/archive/refs/tags/v2.1.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "a388bef01a4bf865f13357e69f2009b933ec647da0f707a41dd6be156a4ae8c1"
    },
    "head": {
      "url": "https://github.com/fraunhoferhhi/vvdec.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/vvdec/blobs/sha256:2f80f7a627d4476176703107616488064ddb349ca9f07b664643de3139ba01f1",
          "sha256": "2f80f7a627d4476176703107616488064ddb349ca9f07b664643de3139ba01f1"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/vvdec/blobs/sha256:db8e6ac87e1e4508166b59512f3e70d74fe341d6293da069968b9f6ce0837118",
          "sha256": "db8e6ac87e1e4508166b59512f3e70d74fe341d6293da069968b9f6ce0837118"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/vvdec/blobs/sha256:e570bf3acc8abc9d0fe79791a3842c292a3fed0b592d3cf13c8a37f072a3b160",
          "sha256": "e570bf3acc8abc9d0fe79791a3842c292a3fed0b592d3cf13c8a37f072a3b160"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/vvdec/blobs/sha256:14f96310269c211cbdc061198ec1c31ee9b9dc44e099f1f50677b76a98e13e5e",
          "sha256": "14f96310269c211cbdc061198ec1c31ee9b9dc44e099f1f50677b76a98e13e5e"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/vvdec/blobs/sha256:e33168bd6349cc98fc52a7abec525342ed0a01c70ae4935652ff7e594f13f405",
          "sha256": "e33168bd6349cc98fc52a7abec525342ed0a01c70ae4935652ff7e594f13f405"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/vvdec/blobs/sha256:586f3e0c38c6f5175ce867febc27ec717daa2a25278e1ce433fd951607a6235c",
          "sha256": "586f3e0c38c6f5175ce867febc27ec717daa2a25278e1ce433fd951607a6235c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/vvdec/blobs/sha256:88ead6701d8a759dd56b78c656561e6051de696b9307fdfe61cf89e3a037096b",
          "sha256": "88ead6701d8a759dd56b78c656561e6051de696b9307fdfe61cf89e3a037096b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/vvdec.rb",
  "ruby_source_checksum": {
    "sha256": "cb0fb12ef3d6415a5c5f6d0e7f8dd742c80154b155cbaaae46e5130466db7f9e"
  },
  "date_added": "2023-04-11T18:12:58-07:00",
  "readme": "# Fraunhofer Versatile Video Decoder (VVdeC)\n\nThe Fraunhofer Versatile Video Decoder (VVdeC) is a fast H.266/VVC software decoder implementation.\n\n**All features** of the **VVC Main10** profile are supported by VVdeC.\n\n## Supported architectures\n\n\n<table>\n  <tr>\n    <th colspan=\"2\" align=\"center\" valign=\"center\"><strong>Windows</strong></th>\n    <th colspan=\"2\" align=\"center\" valign=\"center\"><strong>Linux</strong></th>\n    <th colspan=\"2\" align=\"center\" valign=\"center\"><strong>MacOS X</strong></th>\n    <th colspan=\"2\" align=\"center\" valign=\"center\"><strong>Android</strong></th>\n    <th colspan=\"2\" align=\"center\" valign=\"center\"><strong>iOS</strong></th>\n    <th colspan=\"2\" align=\"center\" valign=\"center\"><strong>Browser (WASM)</strong></th>\n  </tr>\n  <tr>\n    <td>Win32</td>\n    <td>:white_check_mark:</td>\n    <td>x86</td>\n    <td>:white_check_mark:</td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td>Edge</td>\n    <td>:white_check_mark:</td>\n  </tr>\n  <tr>\n    <td>x64</td>\n    <td>:white_check_mark:</td>\n    <td>x86_64</td>\n    <td>:white_check_mark:</td>\n    <td>x64</td>\n    <td>:white_check_mark:</td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td>Firefox</td>\n    <td>:white_check_mark:</td>\n  </tr>\n  <tr>\n    <td>armv7</td>\n    <td>:black_square_button:</td>\n    <td>armv7</td>\n    <td>:black_square_button:</td>\n    <td></td>\n    <td></td>\n    <td>armv7</td>\n    <td>:x:</td>\n    <td>armv7</td>\n    <td>:black_square_button:</td>\n    <td>Chrome</td>\n    <td>:white_check_mark:</td>\n  </tr>\n  <tr>\n    <td>aarch64</td>\n    <td>:black_square_button:</td>\n    <td>aarch64</td>\n    <td>:white_check_mark:</td>\n    <td>arm64</td>\n    <td>:white_check_mark:</td>\n    <td>aarch64</td>\n    <td>:white_check_mark:</td>\n    <td>arm64</td>\n    <td>:black_square_button:</td>\n    <td>Safari</td>\n    <td>:x:</td>\n  </tr>\n</table>\n\n:white_check_mark: tested and works :black_square_button: needs testing (might already work) :x: does not work\n\nOther architectures and platforms might work, see the [Wiki](https://github.com/fraunhoferhhi/vvdec/wiki#supported-architectures).\n\n## Information\n\nSee the [Wiki-Page](https://github.com/fraunhoferhhi/vvdec/wiki) for more information:\n\n* [Build information](https://github.com/fraunhoferhhi/vvdec/wiki/Build)\n* [Usage documentation](https://github.com/fraunhoferhhi/vvdec/wiki/How-to-use-VVdeC)\n* [License](https://github.com/fraunhoferhhi/vvdec/wiki/License)\n* [Publications](https://github.com/fraunhoferhhi/vvdec/wiki/Publications)\n* [Version history](https://github.com/fraunhoferhhi/vvdec/wiki/Changelog)\n\n## Build\n\nVVdeC uses CMake to describe and manage the build process. A working [CMake](https://cmake.org/) installation is required to build the software. In the following, the basic build steps are described. Please refer to the [Wiki](https://github.com/fraunhoferhhi/vvdec/wiki/Build) for the description of all build options.\n\n### How to build using CMake?\n\nTo build using CMake, create a `build` directory and generate the project:\n\n```sh\nmkdir build\ncd build\ncmake .. <build options>\n```\n\nTo actually build the project, run the following after completing project generation:\n\n```sh\ncmake --build .\n```\n\nFor multi-configuration projects (e.g. Visual Studio or Xcode) specify `--config Release` to build the release configuration.\n\n### How to build using GNU Make?\n\nOn top of the CMake build system, convenience Makefile is provided to simplify the build process. To build using GNU Make please run the following:\n\n```sh\nmake install-release <options>\n```\n\nUse the option `enable-bitstream-download=1` in the make command to download the VVC conformance bitstreams for testing.\n\nOther supported build targets include `configure`, `release`, `debug`, `relwithdebinfo`, `test`,  and `clean`. Refer to the Wiki for a full list of supported features.\n\n## Citing\n\nPlease use the following citation when referencing VVdeC in literature:\n\n```bibtex\n@InProceedings{VVdeC,\n  author    = {Wieckowski, Adam and Hege, Gabriel and Bartnik, Christian and Lehmann, Christian and Stoffers, Christian and Bross, Benjamin and Marpe, Detlev},\n  booktitle = {Proc. IEEE International Conference on Image Processing (ICIP)},\n  date      = {2020},\n  title     = {Towards A Live Software Decoder Implementation For The Upcoming Versatile Video Coding (VVC) Codec},\n  doi       = {10.1109/ICIP40778.2020.9191199},\n  pages     = {3124-3128},\n}\n\n```\n\n## Contributing\n\nFeel free to contribute. To do so:\n\n* Fork the current-most state of the master branch\n* Apply the desired changes\n* For non-trivial contributions, add your name to [AUTHORS.md](./AUTHORS.md)\n* Create a pull-request to the upstream repository\n\n## License\n\nPlease see [LICENSE.txt](./LICENSE.txt) file for the terms of use of the contents of this repository.\n\nFor more information, please contact: vvc@hhi.fraunhofer.de\n\n**Copyright (c) 2018-2023 Fraunhofer-Gesellschaft zur FÃ¶rderung der angewandten Forschung e.V. & The VVdeC Authors.**\n\n**All rights reserved.**"
}
