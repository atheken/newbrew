{
  "name": "wiki",
  "full_name": "wiki",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Fetch summaries from MediaWiki wikis, like Wikipedia",
  "license": "MIT",
  "homepage": "https://github.com/walle/wiki",
  "versions": {
    "stable": "1.4.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/walle/wiki/archive/v1.4.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "529c6a58b3b5c5eb3faab07f2bf752155868b912e4f753e432d14040ff4f4262"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiki/blobs/sha256:e8f38ae68a67e5c67b256d0081aa958367b37082454d56d0138a59168a47e20c",
          "sha256": "e8f38ae68a67e5c67b256d0081aa958367b37082454d56d0138a59168a47e20c"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiki/blobs/sha256:eb361e567c70bd6019dc7a16f16eaefbc5166fd158586360a70f1fbd445db572",
          "sha256": "eb361e567c70bd6019dc7a16f16eaefbc5166fd158586360a70f1fbd445db572"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiki/blobs/sha256:102962e7b753737d622bbea4698f0282c64ea1b3b55c3f61e523c8c9378fcd35",
          "sha256": "102962e7b753737d622bbea4698f0282c64ea1b3b55c3f61e523c8c9378fcd35"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiki/blobs/sha256:c661a59421715b882fce53c1f789b22fa0673d2d5fd6b531f897ecfaa882681e",
          "sha256": "c661a59421715b882fce53c1f789b22fa0673d2d5fd6b531f897ecfaa882681e"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiki/blobs/sha256:2e3682a73a087bcd527262f35e0dcbc9e40d292b360b36ebf2926ec722385713",
          "sha256": "2e3682a73a087bcd527262f35e0dcbc9e40d292b360b36ebf2926ec722385713"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiki/blobs/sha256:d7c353ca381bdfad07569b445ff29fe592979e6623354df939452528ecec76c0",
          "sha256": "d7c353ca381bdfad07569b445ff29fe592979e6623354df939452528ecec76c0"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiki/blobs/sha256:ff424f6afbc0d2baab91cee289157d9c90623fa19b7d51574b75df455da76cd6",
          "sha256": "ff424f6afbc0d2baab91cee289157d9c90623fa19b7d51574b75df455da76cd6"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiki/blobs/sha256:316687b381ca23ee0e81eb6e396d2c8c21a5eeaf05a9219ec56dd0024a8d9722",
          "sha256": "316687b381ca23ee0e81eb6e396d2c8c21a5eeaf05a9219ec56dd0024a8d9722"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiki/blobs/sha256:bd1b52730bbf5bc503d3fece003b069e248261616d9d02767ef019d87659bdd8",
          "sha256": "bd1b52730bbf5bc503d3fece003b069e248261616d9d02767ef019d87659bdd8"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/wiki/blobs/sha256:382e8b0d2644f4eaf1fd5132262dbe66a9c89549b0f38e96254ad37969a2a709",
          "sha256": "382e8b0d2644f4eaf1fd5132262dbe66a9c89549b0f38e96254ad37969a2a709"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/wiki.rb",
  "ruby_source_checksum": {
    "sha256": "7d572ee0ec0ceb2675df971ddb61d7235b40b0734af3b1dd9dc505255f51fef7"
  },
  "date_added": "2015-10-16T04:44:47+01:00",
  "readme": "[![Build Status](https://img.shields.io/travis/walle/wiki.svg?style=flat)](https://travis-ci.org/walle/wiki)\n[![Godoc](http://img.shields.io/badge/godoc-reference-blue.svg?style=flat)](https://godoc.org/github.com/walle/wiki)\n[![license](http://img.shields.io/badge/license-MIT-red.svg?style=flat)](https://raw.githubusercontent.com/walle/wiki/master/LICENSE)\n[![Go Report Card](https://goreportcard.com/badge/walle/wiki)](http:/goreportcard.com/report/walle/wiki)\n\n# wiki\n\nCommand line tool to get Wikipedia summaries.\n\nThe tool can fetch summaries from any MediaWiki wiki with the API active, but\ndefaults to the English Wikipedia.\n\n## Installation\n\nTo be able to install with `go get` requires you to have your `$GOPATH` setup\nand your `$GOPATH/bin` added to path as described here\nhttp://golang.org/doc/code.html#GOPATH.\n\nIf you don't want the man file you can just install it with `go get`.\n\n```shell\n$ go get github.com/walle/wiki/cmd/wiki\n```\n\nIf you want to install the man file you can install with `go get`,\nbut then use the `make install` command from the source directory.\n\n```shell\n$ go get github.com/walle/wiki\n$ cd $GOPATH/src/github.com/walle/wiki\n$ make install\n```\n\nor just copy the man file in `_doc/wiki.1` to `/usr/local/share/man/man1` or\nwhere you keep your man files.\n\n## Usage\n\nTo get a summary from Wikipedia in English just invoke the tool with a query.\n\n```shell\n$ wiki golang\nRedirected from Golang to Go (programming language)\n\nGo, also commonly referred to as golang, is a programming language developed at Google in 2007 by Robert Griesemer, Rob Pike, and Ken Thompson. It is a statically typed language with syntax loosely derived from that of C, adding garbage collection, type safety, some structural typing capabilities, additional built-in types such as variable-length arrays & key-value maps, and a large standard library.\nThe language was announced in November 2009 and is now used in some of Google's production systems. Go's \"gc\" compiler targets the Linux, OS X, FreeBSD, NetBSD, OpenBSD, Plan 9, DragonFly BSD, Solaris, and Windows operating systems and the i386, Amd64, ARM and IBM POWER processor architectures. A second compiler, gccgo, is a GCC frontend.\nAndroid support was added in version 1.4, which has since been ported to also run on iOS.\n\nRead more: https://en.wikipedia.org/wiki/Go_(programming_language)\n```\n\nTo get a localized result, e.g. in Swedish use the -l flag.\n\n```shell\n$ wiki -l sv ruby\n```\n\nor using System Environment:\n\n```shell\n$ WIKI_LANG=\"sv\" wiki ruby\n```\n\nUse the -h flag to see all options (or `man wiki` if you have it installed)\n\n```shell\n$wiki -h\nwiki is a tool used to fetch exerpts from wikipedia\nUsage: wiki [options...] query\nOptions:\n\n  -h    Print help information and exit.\n  -l string\n        The language to use (default \"en\")\n  -n    If the output should not be colorized\n  -no-check-certificate\n        Skip verification of certificates\n  -s    If simple output should be used\n  -short\n        If short output should be used\n  -u string\n        The api url (default \"https://%s.wikipedia.org/w/api.php\")\n  -version\n        Print version information and exit.\n  -w int\n        The width text should be wrapped at. 0 is no wrap.\n```\n\n### Use another wiki\n\nTo get excerpts from another wiki use the -u flag to give another url to the\nAPI to use.\n\n```shell\n$ wiki -u https://en.wikiversity.org/w/api.php physics\n```\n\nThis gives the excerpt from the wiki at wikiversity.org instead of Wikipedia.\n\n#### Advice\n\nIf you frequently use the tool to fetch data from a custom url, add an alias.\nE.g. for bash. Add an alias to your `.bash_profile` or `.bashrc` file.\n\n```bash\nalias uwiki='wiki -u https://en.wikiversity.org/w/api.php '\n```\nAnd call it using\n\n```shell\n$ uwiki physics\n```\n\nor using System Environment in your `.bash_profile` or `.bashrc`file.\n\n```bash\necho \"export WIKI_URL=https://en.wikiversity.org/w/api.php\" >> .bashrc\n# reload shell / source .bashrc\nwiki physics\n```\n\n## Testing\n\nRun the tests using the make target test `make test`, this runs both the unit and \nthe integration tests. For running only one type of tests use `go test -cover` \nand `./integration-tests.sh` respectively.\n\n```shell\n$ make test\n```\n\n## Contributing\n\nAll contributions are welcome! See [CONTRIBUTING](CONTRIBUTING.md) for more\ninfo.\n\n## License\n\nThe code is under the MIT license. See [LICENSE](LICENSE) for more\ninformation."
}
