{
  "name": "scw",
  "full_name": "scw",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Command-line Interface for Scaleway",
  "license": "Apache-2.0",
  "homepage": "https://github.com/scaleway/scaleway-cli",
  "versions": {
    "stable": "2.19.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/scaleway/scaleway-cli/archive/v2.19.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "5b728c364aac9d7b9785d5f6c9f06972d126d9125f719bfa73aa705411256b6e"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scw/blobs/sha256:d0de92a93e459db52d4a40911469a6e14aa8ff6876c2cd1d8fda11e16a69ca96",
          "sha256": "d0de92a93e459db52d4a40911469a6e14aa8ff6876c2cd1d8fda11e16a69ca96"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scw/blobs/sha256:d0de92a93e459db52d4a40911469a6e14aa8ff6876c2cd1d8fda11e16a69ca96",
          "sha256": "d0de92a93e459db52d4a40911469a6e14aa8ff6876c2cd1d8fda11e16a69ca96"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scw/blobs/sha256:d0de92a93e459db52d4a40911469a6e14aa8ff6876c2cd1d8fda11e16a69ca96",
          "sha256": "d0de92a93e459db52d4a40911469a6e14aa8ff6876c2cd1d8fda11e16a69ca96"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scw/blobs/sha256:e23b1250dec2cfb1f5b1a483895d7cab2c12302122b376389eed4538105e662c",
          "sha256": "e23b1250dec2cfb1f5b1a483895d7cab2c12302122b376389eed4538105e662c"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scw/blobs/sha256:e23b1250dec2cfb1f5b1a483895d7cab2c12302122b376389eed4538105e662c",
          "sha256": "e23b1250dec2cfb1f5b1a483895d7cab2c12302122b376389eed4538105e662c"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scw/blobs/sha256:e23b1250dec2cfb1f5b1a483895d7cab2c12302122b376389eed4538105e662c",
          "sha256": "e23b1250dec2cfb1f5b1a483895d7cab2c12302122b376389eed4538105e662c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/scw/blobs/sha256:ffbc7c0fd889a07e2b54590dc24a2ec99e379dbcefb7fe19f0ea055bf3727f9d",
          "sha256": "ffbc7c0fd889a07e2b54590dc24a2ec99e379dbcefb7fe19f0ea055bf3727f9d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/scw.rb",
  "ruby_source_checksum": {
    "sha256": "7a00363c4a24f9a64ba0691748ec68dc65162fdd434532eb3ea8c50d7e44de53"
  },
  "date_added": "2015-07-13T05:47:00+01:00",
  "readme": "<p align=\"center\"><img width=\"50%\" src=\"docs/static_files/cli-artwork.png\" /></p>\n\n<p align=\"center\">\n  <a href=\"https://circleci.com/gh/scaleway/scaleway-cli/tree/v2\"><img src=\"https://circleci.com/gh/scaleway/scaleway-cli/tree/v2.svg?style=shield\" alt=\"CircleCI\" /></a>\n  <a href=\"https://goreportcard.com/report/github.com/scaleway/scaleway-cli\"><img src=\"https://goreportcard.com/badge/scaleway/scaleway-cli\" alt=\"GoReportCard\" /></a> <!-- GoReportCard do not support branches. -->\n</p>\n\n# Scaleway CLI (v2)\n\nScaleway CLI is a tool to help you pilot your Scaleway infrastructure directly from your terminal.\n\n# Installation\n\n## With a Package Manager (Recommended)\n\nA package manager installs and upgrades the Scaleway CLI with a single command.\nWe recommend this installation mode for more simplicity and reliability:\n\n### Homebrew\n\nInstall the latest stable release on macOS using [Homebrew](http://brew.sh):\n\n```sh\nbrew install scw\n```\n\n### Arch Linux\n\nInstall the latest stable release on Arch Linux from [official repositories](https://archlinux.org/packages/community/x86_64/scaleway-cli/).\nFor instance with `pacman`:\n\n```sh\npacman -S scaleway-cli\n```\n\n### Chocolatey\n\nInstall the latest stable release on Windows using [Chocolatey](https://chocolatey.org/) ([Package](https://chocolatey.org/packages/scaleway-cli)):\n\n```powershell\nchoco install scaleway-cli\n```\n\n## Manually\n\n### Released Binaries\n\nWe provide [static-compiled binaries](https://github.com/scaleway/scaleway-cli/releases/latest) for darwin (macOS), GNU/Linux, and Windows platforms.\nYou just have to download the binary compatible with your platform to a directory available in your `PATH`:\n\n#### Linux\n\n```bash\ncurl -s https://raw.githubusercontent.com/scaleway/scaleway-cli/master/scripts/get.sh | sh\n```\n\n#### Windows\n\nYou can download the last release here: <https://github.com/scaleway/scaleway-cli/releases><br/>\n[This official guide](https://docs.microsoft.com/en-us/previous-versions/office/developer/sharepoint-2010/ee537574%28v%3Doffice.14%29) explains how to add tools to your `PATH`.\n\n## Docker Image\n\nYou can use the CLI as you would run any Docker image:\n\n```sh\ndocker run -i --rm scaleway/cli:latest\n```\n\nSee more in-depth information about running the CLI in Docker [here](./docs/docker.md)\n\n# Getting Started\n\n## Setup your configuration\n\nAfter you [installed](#Installation) the latest release just run the initialization command and let yourself be guided! :dancer:\n\n```bash\nscw init\n```\n\nIt will set up your profile, the authentication, and the auto-completion.\n\n## Basic commands\n\n```\n# Create an instance server\nscw instance server create type=DEV1-S image=ubuntu_focal zone=fr-par-1 tags.0=\"scw-cli\"\n\n# List your servers\nscw instance server list\n\n# Create a Kubernetes cluster named foo with cilium as CNI, in version 1.17.4 and with a pool named default composed of 3 DEV1-M and with 2 tags\nscw k8s cluster create name=foo version=1.17.4 pools.0.size=3 pools.0.node-type=DEV1-M pools.0.name=default tags.0=tag1 tags.1=tag2\n```\n\n## Environment\n\nYou can configure your config or enable functionalities with environment variables.\n\nVariables to override config are describe in [config documentation](docs/commands/config.md).\nTo enable beta features, you can set `SCW_ENABLE_BETA=1` in your environment.\n\n# Reference documentation\n\n| Namespace      | Description                             | Documentation                                                                                                   |\n|----------------|-----------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| `account`      | User related data                       | [CLI](./docs/commands/account.md) / [API](https://developers.scaleway.com/en/products/account/api/v2/)          |\n| `applesilicon` | Apple silicon API                       | [CLI](./docs/commands/apple-silicon.md) / [API](https://developers.scaleway.com/en/products/apple-silicon/api/) |\n| `autocomplete` | Autocomplete related commands           | [CLI](./docs/commands/autocomplete.md)                                                                          |\n| `baremetal`    | Baremetal API                           | [CLI](./docs/commands/baremetal.md) / [API](https://developers.scaleway.com/en/products/baremetal/api/)         |\n| `billing`      | Billing API                             | [CLI](./docs/commands/billing.md) / [API](https://developers.scaleway.com/en/products/billing/api/)             |\n| `cockpit`      | Cockpit API                             | [CLI](./docs/commands/cockpit.md) / [API](https://developers.scaleway.com/en/products/cockpit/api/)             |\n| `config`       | Config file management                  | [CLI](./docs/commands/config.md)                                                                                |\n| `container`    | Serverless Container API                | [CLI](./docs/commands/container.md) / [API](https://developers.scaleway.com/en/products/containers/api/)        |\n| `dns`          | DNS API                                 | [CLI](./docs/commands/dns.md) / [API](https://developers.scaleway.com/en/products/domain/dns/api/)              |\n| `feedback`     | Send feedback to the Scaleway CLI Team! | [CLI](./docs/commands/feedback.md)                                                                              |\n| `flexibleip`   | Flexible IP API                         | [CLI](./docs/commands/fip.md)   / [API](https://developers.scaleway.com/en/products/flexible-ip/api/)           |\n| `function`     | Serverless Function API                 | [CLI](./docs/commands/function.md) / [API](https://developers.scaleway.com/en/products/functions/api/)          |\n| `iam`          | IAM API                                 | [CLI](./docs/commands/iam.md) / [API](https://developers.scaleway.com/en/products/iam/api/v1alpha1/)            |\n| `info`         | Get info about current settings         | [CLI](./docs/commands/info.md)                                                                                  |\n| `init`         | Initialize the config                   | [CLI](./docs/commands/init.md)                                                                                  |\n| `instance`     | Instance API                            | [CLI](./docs/commands/instance.md) / [API](https://developers.scaleway.com/en/products/instance/api/)           |\n| `iot`          | IoT API                                 | [CLI](./docs/commands/iot.md) / [API](https://developers.scaleway.com/en/products/iot/api/)                     |\n| `k8s`          | Kapsule API                             | [CLI](./docs/commands/k8s.md) / [API](https://developers.scaleway.com/en/products/k8s/api/)                     |\n| `lb`           | Load Balancer API                       | [CLI](./docs/commands/lb.md) / [API](https://developers.scaleway.com/en/products/lb/zoned_api/)                 |\n| `marketplace`  | Marketplace API                         | [CLI](./docs/commands/marketplace.md)                                                                           |\n| `mnq`          | Messaging and Queueing API              | [CLI](./docs/commands/mnq.md) / [API](https://www.scaleway.com/en/docs/serverless/messaging/concepts/)          |\n| `object`       | Object-storage utils                    | [CLI](./docs/commands/object.md) / [API](https://www.scaleway.com/en/docs/object-storage-feature/)              |\n| `rdb`          | Database RDB API                        | [CLI](./docs/commands/rdb.md) / [API](https://developers.scaleway.com/en/products/rdb/api/)                     |\n| `redis`        | Redis API                               | [CLI](./docs/commands/redis.md) / [API](https://developers.scaleway.com/en/products/redis/api/v1/)              |\n| `registry`     | Container registry API                  | [CLI](./docs/commands/registry.md) / [API](https://developers.scaleway.com/en/products/registry/api/)           |\n| `secret`       | Secret manager API                      | [CLI](./docs/commands/secret.md)                                                                                |\n| `shell`        | Start Shell mode                        | [CLI](./docs/commands/shell.md)                                                                                 |\n| `tem`          | Transactional Email API                 | [CLI](./docs/commands/tem.md) / [API](https://developers.scaleway.com/en/products/transactional_email/api/)     |\n| `vpc-gw`       | VPC Gateway API                         | [CLI](./docs/commands/vpc-gw.md) / [API](https://developers.scaleway.com/en/products/vpc-gw/api/v1/)            |\n| `vpc`          | VPC API                                 | [CLI](./docs/commands/vpc.md) / [API](https://developers.scaleway.com/en/products/vpc/api/)                     |\n\n## Build it yourself\n\n### Build Locally\n\nIf you have a >= Go 1.13 environment, you can install the `HEAD` version to test the latest features or to [contribute](./.github/CONTRIBUTING.md).\nNote that this development version could include bugs, use [tagged releases](https://github.com/scaleway/scaleway-cli/releases/latest) if you need stability.\n\n```bash\ngo install github.com/scaleway/scaleway-cli/v2/cmd/scw@latest\n```\n\nDependencies: We only use go [Modules](https://github.com/golang/go/wiki/Modules) with vendoring.\n\n### Build with Docker\n\nYou can build the `scw` CLI with Docker. If you have Docker installed, you can run:\n\n```sh\ndocker build -t scaleway/cli .\n```\n\nOnce build, you can then use the CLI as you would run any image:\n\n```sh\ndocker run -i --rm scaleway/cli\n```\n\nSee more in-depth information about running the CLI in Docker [here](./docs/docker.md)\n\n# Development\n\nThis repository is at its early stage and is still in active development.\nIf you are looking for a way to contribute please read [CONTRIBUTING.md](./.github/CONTRIBUTING.md).\n\n# Reach Us\n\nWe love feedback.\nDon't hesitate to open a [Github issue](https://github.com/scaleway/scaleway-cli/issues/new) or\nfeel free to reach us on [Scaleway Slack community](https://slack.scaleway.com/),\nwe are waiting for you on [#opensource](https://scaleway-community.slack.com/app_redirect?channel=opensource)."
}
