{
  "name": "flint-checker",
  "full_name": "flint-checker",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Check your project for common sources of contributor friction",
  "license": "MIT",
  "homepage": "https://github.com/pengwynn/flint",
  "versions": {
    "stable": "0.1.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/pengwynn/flint/archive/v0.1.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "ec865ec5cad191c7fc9c7c6d5007754372696a708825627383913367f3ef8b7f"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/flint-checker/blobs/sha256:d5056c257e0cc996faf15565e602c5e5a8fc7655a864f1bbf4fb655bb3599908",
          "sha256": "d5056c257e0cc996faf15565e602c5e5a8fc7655a864f1bbf4fb655bb3599908"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/flint-checker/blobs/sha256:c7a3874abb22d4ba7d1641f6fe8f8bff8262150f5031c335430b20156062165d",
          "sha256": "c7a3874abb22d4ba7d1641f6fe8f8bff8262150f5031c335430b20156062165d"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/flint-checker/blobs/sha256:beaa467d1e1290795f33302eee355ab5e32216602a82cbe8083d82d163e9aa50",
          "sha256": "beaa467d1e1290795f33302eee355ab5e32216602a82cbe8083d82d163e9aa50"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/flint-checker/blobs/sha256:7560d772fafc17dd5037aa271009e8e18645cc6ad2afb57df36316cd042a1195",
          "sha256": "7560d772fafc17dd5037aa271009e8e18645cc6ad2afb57df36316cd042a1195"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/flint-checker/blobs/sha256:a173b1a8329d81cc39c220f535e84c940a3f4e3e8b7505d590fb7411571a6710",
          "sha256": "a173b1a8329d81cc39c220f535e84c940a3f4e3e8b7505d590fb7411571a6710"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/flint-checker/blobs/sha256:167b3ab36ec6ddb5b07b4524d090596b18fd9267cf9da5161e78d11b1f988397",
          "sha256": "167b3ab36ec6ddb5b07b4524d090596b18fd9267cf9da5161e78d11b1f988397"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/flint-checker/blobs/sha256:48211955f96e66b5254338d9f6ba56e6e35f6680fb0379190f5b4a3d8f6fe6f4",
          "sha256": "48211955f96e66b5254338d9f6ba56e6e35f6680fb0379190f5b4a3d8f6fe6f4"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/flint-checker/blobs/sha256:8cd18ca30e932554d379b710cd9d1adc9b14c073d2c7bf7f993c4e98c2349947",
          "sha256": "8cd18ca30e932554d379b710cd9d1adc9b14c073d2c7bf7f993c4e98c2349947"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/flint-checker/blobs/sha256:b1d4e65bc48b267d9d05b31ad5321d534717a5b0122d80a8bf5d483bd4c00662",
          "sha256": "b1d4e65bc48b267d9d05b31ad5321d534717a5b0122d80a8bf5d483bd4c00662"
        },
        "sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/flint-checker/blobs/sha256:0d246b741b5a09fcb7aa0641ba2322e55db92eb98b755f6528171e0ce82c782e",
          "sha256": "0d246b741b5a09fcb7aa0641ba2322e55db92eb98b755f6528171e0ce82c782e"
        },
        "el_capitan": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/flint-checker/blobs/sha256:be77f701f14ecabf655ddbf92eb132aa0cca9413196343783032a665ce2b33c0",
          "sha256": "be77f701f14ecabf655ddbf92eb132aa0cca9413196343783032a665ce2b33c0"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/flint-checker/blobs/sha256:01e5b0c9b671bceb2c20ffac4f21f6bda8004d761746260ad82d6c16b13258ea",
          "sha256": "01e5b0c9b671bceb2c20ffac4f21f6bda8004d761746260ad82d6c16b13258ea"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/flint-checker.rb",
  "ruby_source_checksum": {
    "sha256": "987d704b35aa53fa3ed4d64a1d5652cae5e2f608d278e54ca3ae781f3d2d3461"
  },
  "date_added": "2017-05-02T11:53:24+02:00",
  "readme": "# Flint\n\nCheck your project for common sources of contributor friction.\n\n#### For the Non-Developer\n\nFlint checks if your project's folder contains the proper files and structure to allow potential contributors to understand: 1) the project's goals, 2) how to contribute, 3) usage guidelines, and 4) how to install the project.\n\n### Install\n\nIf you've got Go installed, you can install flint with Go's command line\ninterface:\n\n    go get github.com/pengwynn/flint\n\nIf you don't have Go installed, you can download a [prebuilt binary for your\nplatform][releases], optionally renaming it to \"flint\" for convenience.\n\nIf you are on macOS and are using [Homebrew] as package manager you can install\nflint with:\n\n    brew install flint-checker\n\nYou can test your installation by running `flint --version` from any folder.\n\n### Usage\n\nRun `flint` from your project root to check for some common ways to improve the\nexperience for potential contributors. Here's the output for a blank folder to\nshow the full gamut of suggestions:\n\n    ~/projects/dream\n    ❯ flint\n    [ERROR] README not found\n    [INFO] Every project begins with a README. http://bit.ly/1dqUYQF\n    [ERROR] CONTRIBUTING guide not found\n    [INFO] Add a guide for potential contributors. http://git.io/z-TiGg\n    [ERROR] LICENSE not found\n    [INFO] Add a license to protect yourself and your users. http://choosealicense.com/\n    [WARNING] Bootstrap script not found\n    [INFO] A bootstrap script makes setup a snap. http://bit.ly/JZjVL6\n    [WARNING] Test script not found\n    [INFO] Make it easy to run the test suite regardless of project type. http://bit.ly/JZjVL6\n    [CRITICAL] Some critical problems found.\n\nYou can also run this in older projects which were created by lazy you, or by\nyounger, less wise you.\n\nIf you want to check a remote GitHub repository, you can now do so without\ncloning:\n\n    ❯ flint --github pengwynn/dotfiles\n    [ERROR] CONTRIBUTING guide not found\n    [INFO] Add a guide for potential contributors. http://git.io/z-TiGg\n    [WARNING] Test script not found\n    [INFO] Make it easy to run the test suite regardless of project type. http://bit.ly/JZjVL6\n    [CRITICAL] Some critical problems found.\n\nPassing the `-h` flag will show full usage options:\n\n    ❯ flint -h\n    NAME:\n       flint - Check a project for common sources of contributor friction\n    \n    USAGE:\n       flint [global options] command [command options] [arguments...]\n    \n    VERSION:\n       0.0.4\n    \n    COMMANDS:\n       help, h      Shows a list of commands or help for one command\n    \n    GLOBAL OPTIONS:\n       --skip-readme        skip check for README\n       --skip-contributing  skip check for contributing guide\n       --skip-license       skip check for license\n       --skip-bootstrap     skip check for bootstrap script\n       --skip-test-script   skip check for test script\n       --skip-scripts       skip check for all scripts\n       --no-color           skip coloring the terminal output\n       --github, -g         GitHub repository as owner/repo\n       --token, -t          GitHub API access token [$FLINT_TOKEN]\n       --help, -h           show help\n       --version, -v        print the version\n\n### Philosophy\n\nIf you want people to use and contribute to your project, you need to start by\nanswering their most basic questions. Flint is a command line script that will\ncheck your project for common answers to these questions.\n\n#### What is this?\n\nSince it is so important, GitHub founder [Tom Preston-Werner][mojombo]\nsuggests you [should write the README before you write a single line of\ncode][RDD]. A well crafted README includes:\n\n- A description of problems your project solves.\n- The philosophy behind your project.\n- Basic usage and getting started instructions.\n- A list of comparable projects that inspired yours or would be suitable\n  alternatives.\n\n#### How am I allowed to use it?\n\nProviding the source to your project isn't enough. While you don't _have to_\nprovide a license, doing so will make it clear to users and potential\ncontributors how they can legally use your software and what happens to\ncontributions they make. [Choose A License][choose] can help you pick the right\nlicense for your project.\n\n#### How do I contribute?\n\nYou'll want to tell folks about your development workflow so they'll know how\nto submit patches for bugfixes and new features. When you add [CONTRIBUTING\nguidelines][contributing] to your project, GitHub will make those available at\nthe top of every new Pull Request screen.\n\n#### How do I get up and running in development?\n\nA bootstrap script is a thoughtful way to let new users (and future versions of\nyourself on new hardware) get up and running quickly. A good bootstrap script\ndetects and installs all project dependencies. Don't make your less technical\nusers learn devops. Make it as easy as running `script/bootstrap`.\n\n#### How do I make sure my new features didn't break old functionality?\n\nGood software projects have test suites that ensure the code works as\nadvertised. Even within language communities, there can be a myriad of test\nframeworks. You can make it easy to run the test suite with a platform agnostic\n`script/test` executable.\n\n### Maintainers\n\n[@pengwynn][pengwynn]\n\nCopyright 2014 [Wynn Netherland][pengwynn].\n\n[pengwynn]: https://github.com/pengwynn\n[mojombo]: https://github.com/mojombo\n[contributing]: https://github.com/blog/1184-contributing-guidelines\n[octokit contrib]: https://github.com/octokit/octokit.rb/blob/master/CONTRIBUTING.md\n[choose]: http://choosealicense.com/\n[RDD]: http://tom.preston-werner.com/2010/08/23/readme-driven-development.html\n[releases]: https://github.com/pengwynn/flint/releases\n[Homebrew]: https://brew.sh"
}
