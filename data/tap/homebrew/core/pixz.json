{
  "name": "pixz",
  "full_name": "pixz",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Parallel, indexed, xz compressor",
  "license": "BSD-2-Clause",
  "homepage": "https://github.com/vasi/pixz",
  "versions": {
    "stable": "1.0.7",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/vasi/pixz/releases/download/v1.0.7/pixz-1.0.7.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d1b6de1c0399e54cbd18321b8091bbffef6d209ec136d4466f398689f62c3b5f"
    },
    "head": {
      "url": "https://github.com/vasi/pixz.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pixz/blobs/sha256:8b8196d1d48f4104e40bd0963e7ffa5eca16e4499b746802fb55ff528e2fad25",
          "sha256": "8b8196d1d48f4104e40bd0963e7ffa5eca16e4499b746802fb55ff528e2fad25"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pixz/blobs/sha256:c4b1e3fe61fa37f1e6854d8adc032e18d16093b17060a97cd81f421bf9b1c9fc",
          "sha256": "c4b1e3fe61fa37f1e6854d8adc032e18d16093b17060a97cd81f421bf9b1c9fc"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pixz/blobs/sha256:7a61cbb0485e22375ce03a81089da37f34aac406a14447856e7f81b7240a1b86",
          "sha256": "7a61cbb0485e22375ce03a81089da37f34aac406a14447856e7f81b7240a1b86"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pixz/blobs/sha256:b76e0ef617047c5db1d634e87630904018c01d89468576c50fced29b08887f85",
          "sha256": "b76e0ef617047c5db1d634e87630904018c01d89468576c50fced29b08887f85"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pixz/blobs/sha256:e106250f6eee640ca6061f55ff2339539c2047325d878478bd7e5c5acf354d08",
          "sha256": "e106250f6eee640ca6061f55ff2339539c2047325d878478bd7e5c5acf354d08"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/pixz/blobs/sha256:088fd95bfc5540586369b0adb35f6f37009b1f30d4b29de58342828202b8317e",
          "sha256": "088fd95bfc5540586369b0adb35f6f37009b1f30d4b29de58342828202b8317e"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pixz/blobs/sha256:4a110294724b79c7a130b3705c91d25fa52e01f7cf6655d486a0901ada6d6b24",
          "sha256": "4a110294724b79c7a130b3705c91d25fa52e01f7cf6655d486a0901ada6d6b24"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "asciidoc",
    "docbook-xsl",
    "pkg-config"
  ],
  "dependencies": [
    "libarchive",
    "xz"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "libxslt"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/pixz.rb",
  "ruby_source_checksum": {
    "sha256": "dd910db9101aced363dbe1666e15e0b6735e97cc4ac11be9cd5593ea70a11a98"
  },
  "date_added": "2013-05-13T12:45:52-05:00",
  "readme": "pixz\n====\n\n[![Build Status](https://travis-ci.org/vasi/pixz.svg?branch=master)](https://travis-ci.org/vasi/pixz)\n\nPixz (pronounced *pixie*) is a parallel, indexing version of `xz`.\n\nRepository: https://github.com/vasi/pixz\n\nDownloads: https://github.com/vasi/pixz/releases\n\npixz vs xz\n----------\n\nThe existing [XZ Utils](http://tukaani.org/xz/) provide great compression in the `.xz` file format,\nbut they produce just one big block of compressed data. Pixz instead produces a collection of\nsmaller blocks which makes random access to the original data possible. This is especially useful\nfor large tarballs.\n\n### Differences to xz\n\n-   `pixz` automatically indexes tarballs during compression\n-   `pixz` supports parallel decompression, which `xz` does not\n-   `pixz` defaults to using all available CPU cores, while `xz` defaults to using only one core\n-   `pixz` provides `-i` and `-o` command line options to specify input and output file\n-   `pixz` does not support the command line option `-z` or `--compress`\n-   `pixz` does not support the command line option `-c` or `--stdout`\n-   `-f` command line option is incompatible\n-   `-l` command line option output differs\n-   `-q` command line option is incompatible\n-   `-t` command line option is incompatible\n\nBuilding pixz\n-------------\n\nGeneral help about the building process's configuration step can be acquired via:\n\n```\n./configure --help\n```\n\n### Dependencies\n\n-   pthreads\n-   liblzma 4.999.9-beta-212 or later (from the xz distribution)\n-   libarchive 2.8 or later\n-   AsciiDoc to generate the man page\n\n### Build from Release Tarball\n\n```\n./configure\nmake\nmake install\n```\n\nYou many need `sudo` permissions to run `make install`.\n\n### Build from GitHub\n\n```\ngit clone https://github.com/vasi/pixz.git\ncd pixz\n./autogen.sh\n./configure\nmake\nmake install\n```\n\nYou many need `sudo` permissions to run `make install`.\n\nUsage\n-----\n\n### Single Files\n\nCompress a single file (no tarball, just compression), multi-core:\n\n    pixz bar bar.xz\n\nDecompress it, multi-core:\n\n    pixz -d bar.xz bar\n\n### Tarballs\n\nCompress and index a tarball, multi-core:\n\n    pixz foo.tar foo.tpxz\n\nVery quickly list the contents of the compressed tarball:\n\n    pixz -l foo.tpxz\n\nDecompress the tarball, multi-core:\n\n    pixz -d foo.tpxz foo.tar\n\nVery quickly extract a single file, multi-core, also verifies that contents match index:\n\n    pixz -x dir/file < foo.tpxz | tar x\n\nCreate a tarball using pixz for multi-core compression:\n\n    tar -Ipixz -cf foo.tpxz foo/\n\n### Specifying Input and Output\n\nThese are the same (also work for `-x`, `-d` and `-l` as well):\n\n    pixz foo.tar foo.tpxz\n    pixz < foo.tar > foo.tpxz\n    pixz -i foo.tar -o foo.tpxz\n\nExtract the files from `foo.tpxz` into `foo.tar`:\n\n    pixz -x -i foo.tpxz -o foo.tar file1 file2 ...\n\nCompress to `foo.tpxz`, removing the original:\n\n    pixz foo.tar\n\nExtract to `foo.tar`, removing the original:\n\n    pixz -d foo.tpxz\n\n### Other Flags\n\nFaster, worse compression:\n\n    pixz -1 foo.tar\n\nBetter, slower compression:\n\n    pixz -9 foo.tar\n\nUse exactly 2 threads:\n\n    pixz -p 2 foo.tar\n\nCompress, but do not treat it as a tarball, i.e. do not index it:\n\n    pixz -t foo.tar\n\nDecompress, but do not check that contents match index:\n\n    pixz -d -t foo.tpxz\n\nList the xz blocks instead of files:\n\n    pixz -l -t foo.tpxz\n\nFor even more tuning flags, check the manual page:\n\n    man pixz\n\nComparison to other Tools\n-------------------------\n\n### plzip\n\n-   about equally complex and efficient\n-   lzip format seems less-used\n-   version 1 is theoretically indexable, I think\n\n### ChopZip\n\n-   written in Python, much simpler\n-   more flexible, supports arbitrary compression programs\n-   uses streams instead of blocks, not indexable\n-   splits input and then combines output, much higher disk usage\n\n### pxz\n\n-   simpler code\n-   uses OpenMP instead of pthreads\n-   uses streams instead of blocks, not indexable\n-   uses temporary files and does not combine them until the whole file is compressed, high disk and\n    memory usage\n\n### pbzip2\n\n-   not indexable\n-   appears slow\n-   bzip2 algorithm is non-ideal\n\n### pigz\n\n-   not indexable\n\n### dictzip, idzip\n\n-   not parallel"
}
