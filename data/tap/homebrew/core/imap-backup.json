{
  "name": "imap-backup",
  "full_name": "imap-backup",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Backup GMail (or other IMAP) accounts to disk",
  "license": "MIT",
  "homepage": "https://github.com/joeyates/imap-backup",
  "versions": {
    "stable": "11.0.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/joeyates/imap-backup/archive/refs/tags/v11.0.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "c07867542bfdef48b5d6e1438440fc94f4bacbc0b4fac45539ce905382081650"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/imap-backup/blobs/sha256:4bf7d930b1f308e4c2fdac0026f7367bc0eef4c09922f982baf2116783d08e80",
          "sha256": "4bf7d930b1f308e4c2fdac0026f7367bc0eef4c09922f982baf2116783d08e80"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/imap-backup/blobs/sha256:4bf7d930b1f308e4c2fdac0026f7367bc0eef4c09922f982baf2116783d08e80",
          "sha256": "4bf7d930b1f308e4c2fdac0026f7367bc0eef4c09922f982baf2116783d08e80"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/imap-backup/blobs/sha256:4bf7d930b1f308e4c2fdac0026f7367bc0eef4c09922f982baf2116783d08e80",
          "sha256": "4bf7d930b1f308e4c2fdac0026f7367bc0eef4c09922f982baf2116783d08e80"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/imap-backup/blobs/sha256:4bf7d930b1f308e4c2fdac0026f7367bc0eef4c09922f982baf2116783d08e80",
          "sha256": "4bf7d930b1f308e4c2fdac0026f7367bc0eef4c09922f982baf2116783d08e80"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/imap-backup/blobs/sha256:4bf7d930b1f308e4c2fdac0026f7367bc0eef4c09922f982baf2116783d08e80",
          "sha256": "4bf7d930b1f308e4c2fdac0026f7367bc0eef4c09922f982baf2116783d08e80"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/imap-backup/blobs/sha256:4bf7d930b1f308e4c2fdac0026f7367bc0eef4c09922f982baf2116783d08e80",
          "sha256": "4bf7d930b1f308e4c2fdac0026f7367bc0eef4c09922f982baf2116783d08e80"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/imap-backup/blobs/sha256:d21a733c88c49db2c08cae9203a7d450bd649127c879e83e2ba44c2d0fb21ddf",
          "sha256": "d21a733c88c49db2c08cae9203a7d450bd649127c879e83e2ba44c2d0fb21ddf"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "ruby"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/imap-backup.rb",
  "ruby_source_checksum": {
    "sha256": "135bcbc5fb4dac37a63911126c18f65234819bf763326d36d3bab475a7a59a7b"
  },
  "date_added": "2021-12-15T09:14:43+00:00",
  "readme": "![Version](https://img.shields.io/gem/v/imap-backup?label=Version&logo=rubygems)\n[![Build Status](https://github.com/joeyates/imap-backup/actions/workflows/main.yml/badge.svg)][CI Status]\n![Coverage](https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/joeyates/b54fe758bfb405c04bef72dad293d707/raw/coverage.json)\n![License](https://img.shields.io/github/license/joeyates/imap-backup?color=brightgreen&label=License)\n\n# imap-backup\n\nBackup, restore and migrate email accounts.\n\n# Modes\n\nThere are two types of backups:\n\n* Keep all (the default) - progressively saves a local copy of all emails,\n* Mirror - adds and deletes emails from the local copy to keep it up to date with the account.\n\n# What You Can Do with a Backup\n\n* Migrate - use the local copy to populate emails on another account. This is a once-only action that deletes any existing emails on the destination account.\n* Mirror - make a destination account match the local copy. This action can be repeated.\n* Restore - push the local copy back to the original account.\n\nSee below for a [full list of commands](#Commands).\n\n# Installation\n\n## Homebrew (macOS)\n\nIf you have [Homebrew](https://brew.sh/), do this:\n\n```sh\nbrew install imap-backup\n```\n\n## As a Ruby Gem\n\n```sh\ngem install imap-backup\n```\n\nIf that doesn't work, see the [detailed installation instructions](docs/installation/rubygem.md).\n\n## From Source Code\n\nIf you want to use imap-backup directly from the source code, see [here](docs/installation/source.md).\n\n# Setup\n\nAs a first step, you need to add accounts via a menu-driven command\nline program:\n\nRun:\n\n```sh\nimap-backup setup\n```\n\n## GMail\n\nTo use imap-backup with GMail, you will need to enable 'App passwords' on your account.\n\n# Backup\n\nManually, from the command line:\n\n```sh\nimap-backup\n```\n\nAlternatively, add it to your crontab.\n\nBackups can also be inspected, for example via [local show](docs/commands/local-show.md)\nand exported via [utils export-to-thunderbird](docs/commands/utils-export-to-thunderbird.md).\n\n# Commands\n\n* [backup](docs/commands/backup.md)\n* [local accounts](docs/commands/local-accounts.md)\n* [local check](docs/commands/local-check.md)\n* [local folders](docs/commands/local-folders.md)\n* [local list](docs/commands/local-list.md)\n* [local show](docs/commands/local-show.md)\n* [migrate](docs/commands/migrate.md)\n* [mirror](docs/commands/mirror.md)\n* [remote folders](docs/commands/remote-folders.md)\n* [restore](docs/commands/restore.md)\n* [setup](docs/commands/setup.md)\n* [utils export-to-thunderbird](docs/commands/utils-export-to-thunderbird.md)\n* [utils ignore-history](docs/commands/utils-ignore-history.md)\n\nFor a full list of available commands, run\n\n```sh\nimap-backup help\n```\n\nFor more information about a command, run\n\n```sh\nimap-backup help COMMAND\n```\n\n# Performace\n\nThere are a couple of performance tweaks that you can use\nto improve backup speed.\n\nThese are activated via two settings:\n\n* Global setting \"Delay download writes\"\n* Account setting \"Multi-fetch size\"\n\nAs with all performance tweaks, there are trade-offs.\nIf you are using a small virtual server or Raspberry Pi\nto run your backups, you will probably want to leave\nthe deafult settings.\nIf, on the other hand, you are using a computer with a\nfair bit of RAM, and you are dealing with a *lot* of email,\nthen changing these settings may be worthwhile.\n\n## Delay download writes\n\nThis setting affects all account backups.\n\nWhen not set, each message is written to disk, one at a time.\nDoing so means the message itself is appended to the MBox file,\nbut more importantly, the JSON metadata is rewritten to disk\nfrom scratch.\n\nWhen in use, all of a mailboxes unbackupped messages are\ndownloaded first, and then written to disk just once.\n\nThis speeds up backup as the metadata file is not rewritten\nafter each message is added, but it potentially uses much more memory.\n\n## Multi-fetch Size\n\nBy default, during backup, each message is downloaded one-by-one.\n\nUsing this setting, you can download chunks of emails at a time,\npotentially speeding up the process.\n\nIf you're not using \"Delayed downlaod writes\",\nusing multi-fetch *will* mean that the backup process will use\nmore memory - equivalent to the size of the greater number\nof messages downloaded at a time.\n\nThis behaviour may also exceed limits on your email provider,\nso it's best to check before cranking it up!\n\n# Troubleshooting\n\nIf you have problems:\n\n1. ensure that you have the latest release,\n2. run `imap-backup` with the `-v` or `--verbose` parameter.\n\n# Development\n\nSee the [Development documentation](./docs/development.md) for notes\non development and testing.\n\nSee [the CHANGELOG](./CHANGELOG.md) to a list of changes that have been\nmade in each release.\n\n* [Source Code]\n* [Code Documentation]\n* [Rubygem]\n* [CI Status]\n\n[Source Code]: https://github.com/joeyates/imap-backup \"Source code at GitHub\"\n[Code Documentation]: https://rubydoc.info/gems/imap-backup/frames \"Code Documentation at Rubydoc.info\"\n[Rubygem]: https://rubygems.org/gems/imap-backup \"Ruby gem at rubygems.org\"\n[CI Status]: https://github.com/joeyates/imap-backup/actions/workflows/main.yml"
}
