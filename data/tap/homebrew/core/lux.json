{
  "name": "lux",
  "full_name": "lux",
  "tap": "homebrew/core",
  "oldname": "annie",
  "oldnames": [
    "annie"
  ],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Fast and simple video downloader",
  "license": "MIT",
  "homepage": "https://github.com/iawia002/lux",
  "versions": {
    "stable": "0.19.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/iawia002/lux/archive/v0.19.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "901cb34542c1de1b0c847063c6c0e6e847cdb1582c7cd48a3598e050388c31f0"
    },
    "head": {
      "url": "https://github.com/iawia002/lux.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lux/blobs/sha256:6ff614a3d74111be280ab7b5a2857e7e48e43afe5c9d0e80da5e5061ad9bc415",
          "sha256": "6ff614a3d74111be280ab7b5a2857e7e48e43afe5c9d0e80da5e5061ad9bc415"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lux/blobs/sha256:6ff614a3d74111be280ab7b5a2857e7e48e43afe5c9d0e80da5e5061ad9bc415",
          "sha256": "6ff614a3d74111be280ab7b5a2857e7e48e43afe5c9d0e80da5e5061ad9bc415"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lux/blobs/sha256:6ff614a3d74111be280ab7b5a2857e7e48e43afe5c9d0e80da5e5061ad9bc415",
          "sha256": "6ff614a3d74111be280ab7b5a2857e7e48e43afe5c9d0e80da5e5061ad9bc415"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lux/blobs/sha256:91d4ba0d84e3dfb8d02ee278c6380254590d592681f3ff99bd7391d7cc2ed2a2",
          "sha256": "91d4ba0d84e3dfb8d02ee278c6380254590d592681f3ff99bd7391d7cc2ed2a2"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lux/blobs/sha256:91d4ba0d84e3dfb8d02ee278c6380254590d592681f3ff99bd7391d7cc2ed2a2",
          "sha256": "91d4ba0d84e3dfb8d02ee278c6380254590d592681f3ff99bd7391d7cc2ed2a2"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lux/blobs/sha256:91d4ba0d84e3dfb8d02ee278c6380254590d592681f3ff99bd7391d7cc2ed2a2",
          "sha256": "91d4ba0d84e3dfb8d02ee278c6380254590d592681f3ff99bd7391d7cc2ed2a2"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/lux/blobs/sha256:11e756d51b0b42f32b22ea97957faf5fe5c5841bf4cb1e0c7dfa93d40b0066aa",
          "sha256": "11e756d51b0b42f32b22ea97957faf5fe5c5841bf4cb1e0c7dfa93d40b0066aa"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/lux.rb",
  "ruby_source_checksum": {
    "sha256": "e9586ddb7585d96fdc5ecb56f8d6b4711bcd1ef62a87e215b58321d1a73ec767"
  },
  "date_added": "2022-01-13T09:47:38+00:00",
  "readme": "<h1 align=\"center\">Lux</h1>\n\n<p align=\"center\"><i>Let there be Lux!</i></p>\n\n<div align=\"center\">\n  <a href=\"https://codecov.io/gh/iawia002/lux\">\n    <img src=\"https://img.shields.io/codecov/c/github/iawia002/lux.svg?style=flat-square\" alt=\"Codecov\">\n  </a>\n  <a href=\"https://github.com/iawia002/lux/actions\">\n    <img src=\"https://img.shields.io/github/actions/workflow/status/iawia002/lux/ci.yml?style=flat-square\" alt=\"GitHub Workflow Status\">\n  </a>\n  <a href=\"https://goreportcard.com/report/github.com/iawia002/lux\">\n    <img src=\"https://goreportcard.com/badge/github.com/iawia002/lux?style=flat-square\" alt=\"Go Report Card\">\n  </a>\n  <a href=\"https://github.com/iawia002/lux/releases\">\n    <img src=\"https://img.shields.io/github/release/iawia002/lux.svg?style=flat-square\" alt=\"GitHub release\">\n  </a>\n  <a href=\"https://formulae.brew.sh/formula/lux\">\n    <img src=\"https://img.shields.io/homebrew/v/lux.svg?style=flat-square\" alt=\"Homebrew\">\n  </a>\n</div>\n\n👾 Lux is a fast and simple video downloader built with Go.\n\n- [Installation](#installation)\n  - [Prerequisites](#prerequisites)\n  - [Install via `go install`](#install-via-go-install)\n  - [Homebrew (macOS only)](#homebrew-macos-only)\n  - [Arch Linux](#arch-linux)\n  - [Void Linux](#void-linux)\n  - [Scoop on Windows](#scoop-on-windows)\n  - [Chocolatey on Windows](#chocolatey-on-windows)\n  - [Cask on Windows/macOS/Linux](#cask-on-windowsmacoslinux)\n- [Getting Started](#getting-started)\n  - [Download a video](#download-a-video)\n  - [Download anything else](#download-anything-else)\n  - [Download playlist](#download-playlist)\n  - [Multiple inputs](#multiple-inputs)\n  - [Resume a download](#resume-a-download)\n  - [Auto retry](#auto-retry)\n  - [Cookies](#cookies)\n  - [Proxy](#proxy)\n  - [Multi-Thread](#multi-thread)\n  - [Short link](#short-link)\n    - [bilibili](#bilibili)\n  - [Use specified Referrer](#use-specified-referrer)\n  - [Specify the output path and name](#specify-the-output-path-and-name)\n  - [Debug Mode](#debug-mode)\n  - [Reuse extracted data](#reuse-extracted-data)\n  - [Options](#options)\n    - [Download:](#download)\n    - [Network:](#network)\n    - [Playlist:](#playlist)\n    - [Filesystem:](#filesystem)\n    - [Subtitle:](#subtitle)\n    - [Youku:](#youku)\n    - [aria2:](#aria2)\n- [Supported Sites](#supported-sites)\n- [Known issues](#known-issues)\n  - [优酷](#优酷)\n- [Contributing](#contributing)\n- [Authors](#authors)\n- [Similar projects](#similar-projects)\n- [License](#license)\n\n## Installation\n\n### Prerequisites\n\nThe following dependencies are required and must be installed separately.\n\n- **[FFmpeg](https://www.ffmpeg.org)**\n\n> **Note**: FFmpeg does not affect the download, only affects the final file merge.\n\n### Install via `go install`\n\nTo install Lux, use `go install`, or download the binary file from [Releases](https://github.com/iawia002/lux/releases) page.\n\n```bash\n$ go install github.com/iawia002/lux@latest\n```\n\n### Homebrew (macOS only)\n\nFor macOS users, you can install `lux` via:\n\n```bash\n$ brew install lux\n```\n\n### Arch Linux\n\nFor Arch Users [AUR](https://aur.archlinux.org/packages/lux-dl/) package is available.\n\n### Void Linux\n\nFor Void linux users, you can install `lux` via:\n\n```\n$ xbps-install -S lux\n```\n\n### [Scoop](https://scoop.sh/) on Windows\n\n```sh\n$ scoop install lux\n```\n\n### [Chocolatey](https://chocolatey.org/) on Windows\n\n```\n$ choco install lux\n```\n\n### [Cask](https://github.com/axetroy/cask.rs) on Windows/macOS/Linux\n\n```sh\n$ cask install github.com/iawia002/lux\n```\n\n## Getting Started\n\nUsage:\n\n```\nlux [OPTIONS] URL [URL...]\n```\n\n### Download a video\n\n```console\n$ lux \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n\n Site:      YouTube youtube.com\n Title:     Rick Astley - Never Gonna Give You Up (Video)\n Type:      video\n Stream:\n     [248]  -------------------\n     Quality:         1080p video/webm; codecs=\"vp9\"\n     Size:            63.93 MiB (67038963 Bytes)\n     # download with: lux -f 248 ...\n\n 41.88 MiB / 63.93 MiB [=================>-------------]  65.51% 4.22 MiB/s 00m05s\n```\n\nThe `-i` option displays all available quality of video without downloading.\n\n```console\n$ lux -i \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n\n Site:      YouTube youtube.com\n Title:     Rick Astley - Never Gonna Give You Up (Video)\n Type:      video\n Streams:   # All available quality\n     [248]  -------------------\n     Quality:         1080p video/webm; codecs=\"vp9\"\n     Size:            49.29 MiB (51687554 Bytes)\n     # download with: lux -f 248 ...\n\n     [137]  -------------------\n     Quality:         1080p video/mp4; codecs=\"avc1.640028\"\n     Size:            43.45 MiB (45564306 Bytes)\n     # download with: lux -f 137 ...\n\n     [398]  -------------------\n     Quality:         720p video/mp4; codecs=\"av01.0.05M.08\"\n     Size:            37.12 MiB (38926432 Bytes)\n     # download with: lux -f 398 ...\n\n     [136]  -------------------\n     Quality:         720p video/mp4; codecs=\"avc1.4d401f\"\n     Size:            31.34 MiB (32867324 Bytes)\n     # download with: lux -f 136 ...\n\n     [247]  -------------------\n     Quality:         720p video/webm; codecs=\"vp9\"\n     Size:            31.03 MiB (32536181 Bytes)\n     # download with: lux -f 247 ...\n```\n\nUse `lux -f stream \"URL\"` to download a specific stream listed in the output of `-i` option.\n\n### Download anything else\n\nIf Lux is provided the URL of a specific resource, then it will be downloaded directly:\n\n```console\n$ lux \"https://img9.bcyimg.com/drawer/15294/post/1799t/1f5a87801a0711e898b12b640777720f.jpg\"\n\nlux doesn't support this URL right now, but it will try to download it directly\n\n Site:      Universal\n Title:     1f5a87801a0711e898b12b640777720f\n Type:      image/jpeg\n Stream:\n     [default]  -------------------\n     Size:            1.00 MiB (1051042 Bytes)\n     # download with: lux -f default \"URL\"\n\n 1.00 MiB / 1.00 MiB [===================================] 100.00% 1.21 MiB/s 0s\n```\n\n### Download playlist\n\nThe `-p` option downloads an entire playlist instead of a single video.\n\n```console\n$ lux -i -p \"https://www.bilibili.com/bangumi/play/ep198061\"\n\n Site:      哔哩哔哩 bilibili.com\n Title:     Doctor X 第四季：第一集\n Type:      video\n Streams:   # All available quality\n     [default]  -------------------\n     Quality:         高清 1080P\n     Size:            845.66 MiB (886738354 Bytes)\n     # download with: lux -f default \"URL\"\n\n\n Site:      哔哩哔哩 bilibili.com\n Title:     Doctor X 第四季：第二集\n Type:      video\n Streams:   # All available quality\n     [default]  -------------------\n     Quality:         高清 1080P\n     Size:            930.71 MiB (975919195 Bytes)\n     # download with: lux -f default \"URL\"\n\n......\n```\n\nYou can use the `-start`, `-end` or `-items` option to specify the download range of the list:\n\n```\n-start\n    \tPlaylist video to start at (default 1)\n-end\n    \tPlaylist video to end at\n-items\n    \tPlaylist video items to download. Separated by commas like: 1,5,6,8-10\n```\n\nFor bilibili playlists only:\n\n```\n-eto\n  File name of each bilibili episode doesn't include the playlist title\n```\n\n### Multiple inputs\n\nYou can also download multiple URLs at once:\n\n```console\n$ lux -i \"https://www.bilibili.com/video/av21877586\" \"https://www.bilibili.com/video/av21990740\"\n\n Site:      哔哩哔哩 bilibili.com\n Title:     【莓机会了】甜到虐哭的13集单集MAD「我现在什么都不想干,更不想看14集」\n Type:      video\n Streams:   # All available quality\n     [default]  -------------------\n     Quality:         高清 1080P\n     Size:            51.88 MiB (54403767 Bytes)\n     # download with: lux -f default \"URL\"\n\n\n Site:      哔哩哔哩 bilibili.com\n Title:     【莓救了】甜到虐哭！！！国家队单集MAD-当熟悉的bgm响起，眼泪从脸颊滑下\n Type:      video\n Streams:   # All available quality\n     [default]  -------------------\n     Quality:         高清 1080P\n     Size:            77.63 MiB (81404093 Bytes)\n     # download with: lux -f default \"URL\"\n```\n\nThese URLs will be downloaded one by one.\n\nYou can also use the `-F` option to read URLs from file:\n\n```console\n$ lux -F ~/Desktop/u.txt\n\n Site:      微博 weibo.com\n Title:     在Google，我们设计什么？ via@阑夕\n Type:      video\n Stream:\n     [default]  -------------------\n     Size:            19.19 MiB (20118196 Bytes)\n     # download with: lux -f default \"URL\"\n\n 19.19 MiB / 19.19 MiB [=================================] 100.00% 9.69 MiB/s 1s\n\n......\n```\n\nYou can use the `-start`, `-end` or `-items` option to specify the download range of the list:\n\n```\n-start\n    \tFile line to start at (default 1)\n-end\n    \tFile line to end at\n-items\n    \tFile lines to download. Separated by commas like: 1,5,6,8-10\n```\n\n### Resume a download\n\n<kbd>Ctrl</kbd>+<kbd>C</kbd> interrupts a download.\n\nA temporary `.download` file is kept in the output directory. If `lux` is ran with the same arguments, then the download progress will resume from the last session.\n\n### Auto retry\n\nlux will auto retry when the download failed, you can specify the retry times by `-retry` option (default is 100).\n\n### Cookies\n\nCookies can be provided to `lux` with the `-c` option if they are required for accessing the video.\n\nCookies can be the following format or [Netscape Cookie](https://curl.haxx.se/rfc/cookie_spec.html) format:\n\n```console\nname=value; name2=value2; ...\n```\n\nCookies can be a string or a text file, supply cookies in one of the two following ways.\n\nAs a string:\n\n```console\n$ lux -c \"name=value; name2=value2\" \"https://www.bilibili.com/video/av20203945\"\n```\n\nAs a text file:\n\n```console\n$ lux -c cookies.txt \"https://www.bilibili.com/video/av20203945\"\n```\n\n### Proxy\n\nYou can set the HTTP/SOCKS5 proxy using environment variables:\n\n```console\n$ HTTP_PROXY=\"http://127.0.0.1:1087/\" lux -i \"https://www.youtube.com/watch?v=Gnbch2osEeo\"\n```\n\n```console\n$ HTTP_PROXY=\"socks5://127.0.0.1:1080/\" lux -i \"https://www.youtube.com/watch?v=Gnbch2osEeo\"\n```\n\n### Multi-Thread\n\nUse `--multi-thread` or `-m` multiple threads to download single video.\n\nUse `--thread` or `-n` option to set the number of download threads(default is 10).\n\n> Note: If the video has multi fragment, the number of actual download threads will increase.\n>\n> For example:\n> * If `-n` is set to 10, and the video has 2 fragments, then 20 threads will actually be used.\n> * If the video has 20 fragments, only 10 fragments are downloaded in the same time, the actual threads count is 100.\n\n> **Special Tips:** Use too many threads in **mgtv** download will cause HTTP 403 error, we recommend setting the number of threads to **1**.\n\n### Short link\n\n#### bilibili\n\nYou can just use `av` or `ep` number to download bilibili's video:\n\n```console\n$ lux -i ep198381 av21877586\n\n Site:      哔哩哔哩 bilibili.com\n Title:     狐妖小红娘：第79话 南国公主的吃货本色\n Type:      video\n Streams:   # All available quality\n     [default]  -------------------\n     Quality:         高清 1080P\n     Size:            485.23 MiB (508798478 Bytes)\n     # download with: lux -f default \"URL\"\n\n\n Site:      哔哩哔哩 bilibili.com\n Title:     【莓机会了】甜到虐哭的13集单集MAD「我现在什么都不想干,更不想看14集」\n Type:      video\n Streams:   # All available quality\n     [default]  -------------------\n     Quality:         高清 1080P\n     Size:            51.88 MiB (54403767 Bytes)\n     # download with: lux -f default \"URL\"\n```\n\n### Use specified Referrer\n\nA Referrer can be used for the request with the `-r` option:\n\n```console\n$ lux -r \"https://www.bilibili.com/video/av20383055/\" \"http://cn-scnc1-dx.acgvideo.com/\"\n```\n\n### Specify the output path and name\n\nThe `-o` option sets the path, and `-O` option sets the name of the downloaded file:\n\n```console\n$ lux -o ../ -O \"hello\" \"https://example.com\"\n```\n\n### Debug Mode\n\nThe `-d` option outputs network request messages:\n\n```console\n$ lux -i -d \"http://www.bilibili.com/video/av20088587\"\n\nURL:         http://www.bilibili.com/video/av20088587\nMethod:      GET\nHeaders:     http.Header{\n    \"Referer\":         {\"http://www.bilibili.com/video/av20088587\"},\n    \"Accept\":          {\"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\"},\n    \"Accept-Charset\":  {\"UTF-8,*;q=0.5\"},\n    \"Accept-Encoding\": {\"gzip,deflate,sdch\"},\n    \"Accept-Language\": {\"en-US,en;q=0.8\"},\n    \"User-Agent\":      {\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36\"},\n}\nStatus Code: 200\n\nURL:         https://interface.bilibili.com/v2/playurl?appkey=84956560bc028eb7&cid=32782944&otype=json&qn=116&quality=116&type=&sign=fb2e3f261fec398652f96d358517e535\nMethod:      GET\nHeaders:     http.Header{\n    \"Accept-Charset\":  {\"UTF-8,*;q=0.5\"},\n    \"Accept-Encoding\": {\"gzip,deflate,sdch\"},\n    \"Accept-Language\": {\"en-US,en;q=0.8\"},\n    \"User-Agent\":      {\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36\"},\n    \"Referer\":         {\"https://interface.bilibili.com/v2/playurl?appkey=84956560bc028eb7&cid=32782944&otype=json&qn=116&quality=116&type=&sign=fb2e3f261fec398652f96d358517e535\"},\n    \"Accept\":          {\"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\"},\n}\nStatus Code: 200\n\n Site:      哔哩哔哩 bilibili.com\n Title:     燃油动力的遥控奥迪R8跑赛道\n Type:      video\n Streams:   # All available quality\n     [default]  -------------------\n     Quality:         高清 1080P\n     Size:            64.38 MiB (67504795 Bytes)\n     # download with: lux -f default \"URL\"\n```\n\n### Reuse extracted data\n\nThe `-j` option will print the extracted data in JSON format.\n\n```console\n$ lux -j \"https://www.bilibili.com/video/av20203945\"\n\n{\n    \"site\": \"哔哩哔哩 bilibili.com\",\n    \"title\": \"【2018拜年祭单品】相遇day by day\",\n    \"type\": \"video\",\n    \"streams\": {\n        \"15\": {\n            \"urls\": [\n                {\n                    \"url\": \"...\",\n                    \"size\": 18355205,\n                    \"ext\": \"flv\"\n                }\n            ],\n            \"quality\": \"流畅 360P\",\n            \"size\": 18355205\n        },\n        \"32\": {\n            \"urls\": [\n                {\n                    \"url\": \"...\",\n                    \"size\": 40058632,\n                    \"ext\": \"flv\"\n                }\n            ],\n            \"quality\": \"清晰 480P\",\n            \"size\": 40058632\n        },\n        \"64\": {\n            \"urls\": [\n                {\n                    \"url\": \"...\",\n                    \"size\": 82691087,\n                    \"ext\": \"flv\"\n                }\n            ],\n            \"quality\": \"高清 720P\",\n            \"size\": 82691087\n        },\n        \"80\": {\n            \"urls\": [\n                {\n                    \"url\": \"...\",\n                    \"size\": 121735559,\n                    \"ext\": \"flv\"\n                }\n            ],\n            \"quality\": \"高清 1080P\",\n            \"size\": 121735559\n        }\n    }\n}\n```\n\n### Options\n\n```\n  -i\tInformation only\n  -F string\n    \tURLs file path\n  -d\tDebug mode\n  -j\tPrint extracted data\n  -s\tMinimum outputs\n  -v\tShow version\n```\n\n#### Download:\n\n```\n  -f string\n    \tSelect specific stream to download\n  -p\tDownload playlist\n  -n int\n    \tThe number of download thread (only works for multiple-parts video) (default 10)\n  -c string\n    \tCookie\n  -r string\n    \tUse specified Referrer\n  -cs int\n    \tHTTP chunk size for downloading (in MB) (default 1)\n```\n\n#### Network:\n\n```\n  -retry int\n    \tHow many times to retry when the download failed (default 10)\n```\n\n#### Playlist:\n\n```\n  -start int\n    \tPlaylist video to start at (default 1)\n  -end int\n    \tPlaylist video to end at\n  -items string\n    \tPlaylist video items to download. Separated by commas like: 1,5,6,8-10\n```\n\n#### Filesystem:\n\n```\n  -o string\n    \tSpecify the output path\n  -O string\n    \tSpecify the output file name\n```\n\n#### Subtitle:\n\n```\n  -C\tDownload captions\n```\n\n#### Youku:\n\n```\n  -ccode string\n    \tYouku ccode (default \"0502\")\n  -ckey string\n    \tYouku ckey (default \"7B19C0AB12633B22E7FE81271162026020570708D6CC189E4924503C49D243A0DE6CD84A766832C2C99898FC5ED31F3709BB3CDD82C96492E721BDD381735026\")\n  -password string\n    \tYouku password\n```\n\n#### aria2:\n\n> Note: If you use aria2 to download, you need to merge the multi-part videos yourself.\n\n```\n  -aria2\n    \tUse Aria2 RPC to download\n  -aria2addr string\n    \tAria2 Address (default \"localhost:6800\")\n  -aria2method string\n    \tAria2 Method (default \"http\")\n  -aria2token string\n    \tAria2 RPC Token\n```\n\n## Supported Sites\n\n| Site             | URL                                                                       | 🎬 Videos | 🌁 Images | 🔊 Audio | 📚 Playlist | 🍪 VIP adaptation | Build Status                                                                                                                                                                      |\n| ---------------- | ------------------------------------------------------------------------- | -------- | -------- | ------- | ---------- | ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 抖音             | <https://www.douyin.com>                                                  | ✓        | ✓        |         |            |                  | [![douyin](https://github.com/iawia002/lux/actions/workflows/stream_douyin.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_douyin.yml)                   |\n| 哔哩哔哩         | <https://www.bilibili.com>                                                | ✓        |          |         | ✓          | ✓                | [![bilibili](https://github.com/iawia002/lux/actions/workflows/stream_bilibili.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_bilibili.yml)             |\n| 半次元           | <https://bcy.net>                                                         |          | ✓        |         |            |                  | [![bcy](https://github.com/iawia002/lux/actions/workflows/stream_bcy.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_bcy.yml)                            |\n| pixivision       | <https://www.pixivision.net>                                              |          | ✓        |         |            |                  | [![pixivision](https://github.com/iawia002/lux/actions/workflows/stream_pixivision.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_pixivision.yml)       |\n| 优酷             | <https://www.youku.com>                                                   | ✓        |          |         |            | ✓                | [![youku](https://github.com/iawia002/lux/actions/workflows/stream_youku.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_youku.yml)                      |\n| YouTube          | <https://www.youtube.com>                                                 | ✓        |          |         | ✓          |                  | [![youtube](https://github.com/iawia002/lux/actions/workflows/stream_youtube.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_youtube.yml)                |\n| 西瓜视频（头条） | <https://m.toutiao.com>, <https://v.ixigua.com>, <https://www.ixigua.com> | ✓        |          |         |            |                  | [![ixigua](https://github.com/iawia002/lux/actions/workflows/stream_ixigua.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_ixigua.yml)                   |\n| 爱奇艺           | <https://www.iqiyi.com>                                                   | ✓        |          |         |            |                  | [![iqiyi](https://github.com/iawia002/lux/actions/workflows/stream_iqiyi.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_iqiyi.yml)                      |\n| 新片场           | <https://www.xinpianchang.com>                                            | ✓        |          |         |            |                  | [![xinpianchang](https://github.com/iawia002/lux/actions/workflows/stream_xinpianchang.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_xinpianchang.yml) |\n| 芒果 TV          | <https://www.mgtv.com>                                                    | ✓        |          |         |            |                  | [![mgtv](https://github.com/iawia002/lux/actions/workflows/stream_mgtv.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_mgtv.yml)                         |\n| 糖豆广场舞       | <https://www.tangdou.com>                                                 | ✓        |          |         |            |                  | [![tangdou](https://github.com/iawia002/lux/actions/workflows/stream_tangdou.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_tangdou.yml)                |\n| Tumblr           | <https://www.tumblr.com>                                                  | ✓        | ✓        |         |            |                  | [![tumblr](https://github.com/iawia002/lux/actions/workflows/stream_tumblr.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_tumblr.yml)                   |\n| Vimeo            | <https://vimeo.com>                                                       | ✓        |          |         |            |                  | [![vimeo](https://github.com/iawia002/lux/actions/workflows/stream_vimeo.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_vimeo.yml)                      |\n| Facebook         | <https://facebook.com>                                                    | ✓        |          |         |            |                  | [![facebook](https://github.com/iawia002/lux/actions/workflows/stream_facebook.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_facebook.yml)             |\n| 斗鱼视频         | <https://v.douyu.com>                                                     | ✓        |          |         |            |                  | [![douyu](https://github.com/iawia002/lux/actions/workflows/stream_douyu.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_douyu.yml)                      |\n| 秒拍             | <https://www.miaopai.com>                                                 | ✓        |          |         |            |                  | [![miaopai](https://github.com/iawia002/lux/actions/workflows/stream_miaopai.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_miaopai.yml)                |\n| 微博             | <https://weibo.com>                                                       | ✓        |          |         |            |                  | [![weibo](https://github.com/iawia002/lux/actions/workflows/stream_weibo.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_weibo.yml)                      |\n| Instagram        | <https://www.instagram.com>                                               | ✓        | ✓        |         |            |                  | [![instagram](https://github.com/iawia002/lux/actions/workflows/stream_instagram.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_instagram.yml)          |\n| Twitter          | <https://twitter.com>                                                     | ✓        |          |         |            |                  | [![twitter](https://github.com/iawia002/lux/actions/workflows/stream_twitter.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_twitter.yml)                |\n| 腾讯视频         | <https://v.qq.com>                                                        | ✓        |          |         |            |                  | [![qq](https://github.com/iawia002/lux/actions/workflows/stream_qq.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_qq.yml)                               |\n| 网易云音乐       | <https://music.163.com>                                                   | ✓        |          |         |            |                  | [![netease](https://github.com/iawia002/lux/actions/workflows/stream_netease.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_netease.yml)                |\n| 音悦台           | <https://yinyuetai.com>                                                   | ✓        |          |         |            |                  | [![yinyuetai](https://github.com/iawia002/lux/actions/workflows/stream_yinyuetai.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_yinyuetai.yml)          |\n| 极客时间         | <https://time.geekbang.org>                                               | ✓        |          |         |            |                  | [![geekbang](https://github.com/iawia002/lux/actions/workflows/stream_geekbang.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_geekbang.yml)             |\n| Pornhub          | <https://pornhub.com>                                                     | ✓        |          |         |            |                  | [![pornhub](https://github.com/iawia002/lux/actions/workflows/stream_pornhub.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_pornhub.yml)                |\n| XVIDEOS          | <https://xvideos.com>                                                     | ✓        |          |         |            |                  | [![xvideos](https://github.com/iawia002/lux/actions/workflows/stream_xvideos.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_xvideos.yml)                |\n| 聯合新聞網       | <https://udn.com>                                                         | ✓        |          |         |            |                  | [![udn](https://github.com/iawia002/lux/actions/workflows/stream_udn.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_udn.yml)                            |\n| TikTok           | <https://www.tiktok.com>                                                  | ✓        |          |         |            |                  | [![tiktok](https://github.com/iawia002/lux/actions/workflows/stream_tiktok.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_tiktok.yml)                   |\n| Pinterest           | <https://www.pinterest.com>                                                  | ✓        |          |         |            |                  | [![pinterest](https://github.com/iawia002/lux/actions/workflows/stream_pinterest.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_pinterest.yml)                   |\n| 好看视频         | <https://haokan.baidu.com>                                                | ✓        |          |         |            |                  | [![haokan](https://github.com/iawia002/lux/actions/workflows/stream_haokan.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_haokan.yml)                   |\n| AcFun            | <https://www.acfun.cn>                                                    | ✓        |          |         | ✓          |                  | [![acfun](https://github.com/iawia002/lux/actions/workflows/stream_acfun.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_acfun.yml)                      |\n| Eporner          | <https://eporner.com>                                                     | ✓        |          |         |            |                  | [![eporner](https://github.com/iawia002/lux/actions/workflows/stream_eporner.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_eporner.yml)                |\n| StreamTape       | <https://streamtape.com>                                                  | ✓        |          |         |            |                  | [![streamtape](https://github.com/iawia002/lux/actions/workflows/stream_streamtape.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_streamtape.yml)       |\n| 虎扑             | <https://hupu.com>                                                        | ✓        |          |         |            |                  | [![hupu](https://github.com/iawia002/lux/actions/workflows/stream_hupu.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_hupu.yml)                         |\n| 虎牙视频         | <https://v.huya.com>                                                      | ✓        |          |         |            |                  | [![huya](https://github.com/iawia002/lux/actions/workflows/stream_huya.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_huya.yml)                         |\n| 喜马拉雅         | <https://www.ximalaya.com>                                                |          |          | ✓       |            |                  | [![ximalaya](https://github.com/iawia002/lux/actions/workflows/stream_ximalaya.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_ximalaya.yml)             |\n| 快手             | <https://www.kuaishou.com>                                                | ✓        |          |         |            |                  | [![kuaishou](https://github.com/iawia002/lux/actions/workflows/stream_kuaishou.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_kuaishou.yml)             |\n| Reddit           | <https://www.reddit.com>                                                  | ✓        | ✓        |         |            |                  | [![reddit](https://github.com/iawia002/lux/actions/workflows/stream_reddit.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_reddit.yml)                   |\n| VKontakte        | <https://vk.com>                                                          | ✓        |          |         |            |                  | [![vk](https://github.com/iawia002/lux/actions/workflows/stream_vk.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_vk.yml/)                              |\n| 知乎             | <https://zhihu.com>                                                       | ✓        |          |         |            |                  | [![zhihu](https://github.com/iawia002/lux/actions/workflows/stream_zhihu.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_zhihu.yml/)                     |\n| Rumble             | <https://rumble.com>                                                       | ✓        |          |         |            |                  | [![rumble](https://github.com/iawia002/lux/actions/workflows/stream_rumble.yml/badge.svg)](https://github.com/iawia002/lux/actions/workflows/stream_rumble.yml/)                     |\n\n\n## Known issues\n\n### 优酷\n\n优酷的 `ccode` 经常变化导致 lux 不可用，如果你知道有新的可用的 `ccode`，可以直接使用 `lux -ccode ...` 而不用等待 lux 更新（当然，也欢迎你给我们提一个 Pull request 来更新默认的 `ccode`）\n\n最好是每次下载都附带登录过的 Cookie 以避免部分 `ccode` 的问题\n\n## Contributing\n\nLux is an open source project and built on the top of open-source projects. Check out the [Contributing Guide](./CONTRIBUTING.md) to get started.\n\nThanks for [JetBrains](https://www.jetbrains.com/?from=lux) for the wonderful IDE.\n\n<a href=\"https://www.jetbrains.com/?from=lux\"><img src=\"static/jetbrains-variant-3.svg\" /></a>\n\n## Authors\n\nCode with ❤️ by [iawia002](https://github.com/iawia002) and lovely [contributors](https://github.com/iawia002/lux/graphs/contributors)\n\n## Similar projects\n\n- [youtube-dl](https://github.com/rg3/youtube-dl)\n- [you-get](https://github.com/soimort/you-get)\n- [ytdl](https://github.com/rylio/ytdl)\n\n## License\n\nMIT\n\nCopyright (c) 2018-present, iawia002"
}
