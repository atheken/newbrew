{
  "name": "awsweeper",
  "full_name": "awsweeper",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "CLI tool for cleaning your AWS account",
  "license": "MPL-2.0",
  "homepage": "https://github.com/jckuester/awsweeper/",
  "versions": {
    "stable": "0.12.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/jckuester/awsweeper/archive/v0.12.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "43468e1af20dab757da449b07330f7b16cbb9f77e130782f88f30a7744385c5e"
    },
    "head": {
      "url": "https://github.com/jckuester/awsweeper.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/awsweeper/blobs/sha256:6aaf2bf93c063a5ab9d409f70d77ad32d5c5b8d42f3b9d2b167e83817de89baa",
          "sha256": "6aaf2bf93c063a5ab9d409f70d77ad32d5c5b8d42f3b9d2b167e83817de89baa"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/awsweeper/blobs/sha256:dabe2797d6b3a7f40fa31dff1fc8bc7f7c94918f024f6f866c9fedb43d8ce485",
          "sha256": "dabe2797d6b3a7f40fa31dff1fc8bc7f7c94918f024f6f866c9fedb43d8ce485"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/awsweeper/blobs/sha256:b4b48419aaa4619449078a64b28ed9bde4b3bb1c05cf096d6852fa92596f2260",
          "sha256": "b4b48419aaa4619449078a64b28ed9bde4b3bb1c05cf096d6852fa92596f2260"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/awsweeper/blobs/sha256:f45b885d958f4b7752e02dc778e64d88a604021bfb0635a80444ff07c78f2e95",
          "sha256": "f45b885d958f4b7752e02dc778e64d88a604021bfb0635a80444ff07c78f2e95"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/awsweeper/blobs/sha256:54bc928c085313ad7b2cd353bbf4b7e49df992527526348ee0eb01437f9ca87b",
          "sha256": "54bc928c085313ad7b2cd353bbf4b7e49df992527526348ee0eb01437f9ca87b"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/awsweeper/blobs/sha256:1855fe15c7d95a0dddf4487692bf75d6dc234c3ecd25457dffaeab3a2312ece8",
          "sha256": "1855fe15c7d95a0dddf4487692bf75d6dc234c3ecd25457dffaeab3a2312ece8"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/awsweeper/blobs/sha256:76710715dee67793f3715dc1a902b18f259b4ed4b42515fbf13b641339b1f899",
          "sha256": "76710715dee67793f3715dc1a902b18f259b4ed4b42515fbf13b641339b1f899"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/awsweeper/blobs/sha256:81776b638e309f839a362f70ba7d0621c2ca9e80f6472f334c5472049cbc3374",
          "sha256": "81776b638e309f839a362f70ba7d0621c2ca9e80f6472f334c5472049cbc3374"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/awsweeper.rb",
  "ruby_source_checksum": {
    "sha256": "5a32474bdb8a85cb0b2c6e4e5bfef18c188b2447c98c185fc063071bb794e243"
  },
  "date_added": "2020-07-06T14:39:26+00:00",
  "readme": "<p align=\"center\">\n  <img alt=\"AWSweeper\" src=\"https://github.com/jckuester/awsweeper/blob/master/img/logo.png\" height=\"150\" />\n  <h3 align=\"center\">AWSweeper</h3>\n  <p align=\"center\">A tool for cleaning your AWS account</p>\n</p>\n\n---\n[![Release](https://img.shields.io/github/release/jckuester/awsweeper.svg?style=for-the-badge)](https://github.com/jckuester/awsweeper/releases/latest)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=for-the-badge)](/LICENSE.md)\n[![Travis](https://img.shields.io/travis/jckuester/awsweeper/master.svg?style=for-the-badge)](https://travis-ci.com/jckuester/awsweeper)\n\nAWSweeper is able to clean out [over 290 resource types](#supported-resources) in your AWS account. Resources to be\ndeleted can be filtered by their type, ID, tags, or creation date\nusing [regular expressions](https://golang.org/pkg/regexp/syntax/)\ndeclared in a YAML file (see [filter.yml](filter.yml) as an example).\n\nTo keep up supporting the continuously growing number of new resources, AWSweeper is standing upon the shoulders of\ndelete routines provided by the [Terraform AWS provider](https://github.com/terraform-providers/terraform-provider-aws).\nList operations are borrowed from the [awsls](https://github.com/jckuester/awsls) open-source project and are\ncode-generated based on the [model of the AWS API](https://github.com/aws/aws-sdk-go-v2/tree/master/models/apis).\n\nNot being fully there yet, but the goal is to support every AWS resource that is covered by Terraform\n(currently over 500) without adding or maintaining much code here.\n\nIf you run into issues deleting resources, please open an issue or ping me on [Twitter](https://twitter.com/jckuester).\n\nHappy erasing!\n\n**New**: [`awsrm`](https://github.com/jckuester/awsrm) got released! It's a Unix-like `rm` to simplify\ndeleting AWS resources across multiple accounts + regions and integrates well with other Unix-like tools, such\nas `grep` for filtering resources by tags or other attributes. Go and check it out!\n\n## Example\n\n[![AWSweeper tutorial](img/asciinema-tutorial.gif)](https://asciinema.org/a/149097)\n\n## Features\n\n* Nothing will be deleted without your confirmation. AWSweeper always lists all resources first and then waits for\n  your approval (also without the `--dry-run` flag). With the `--dry-run` flag, AWSweeper lists all resources and exits.\n* Using the `-force` flag (dangerous!), AWSweeper can in run an automated fashion without human interaction and approval,\n  for example, as part of a CI pipeline\n\n## Installation\n\n### Binary Releases\n\nYou can download a specific version of AWSweeper on the [releases page](https://github.com/jckuester/awsweeper/releases)\nor install it the following way to `./bin/`:\n\n```bash\ncurl -sSfL https://raw.githubusercontent.com/jckuester/awsweeper/master/install.sh | sh -s v0.11.1\n```\n\n### Homebrew\n\nHomebrew users can install by:\n\n```bash\nbrew install jckuester/tap/awsweeper\n```\n\nFor more information on Homebrew taps please see the [tap documentation](https://docs.brew.sh/Taps).\n\n## Usage\n\n    awsweeper [options] <filter.yml>\n\nTo see options available run `awsweeper --help`.\n\n## Filter\n\nResources are deleted via a filter declared in a YAML file.\n\n    aws_instance:\n      # instance filter part 1\n      - id: ^foo.*\n        created:\n          before: 2018-10-14\n          after: 2018-06-28 12:28:39\n\n      # instance filter part 2\n      - tags:\n          foo: bar\n          NOT(owner): .*\n\n    aws_security_groups:\n\nThe filter snippet above deletes all EC2 instances that ID matches `^foo.*` and that have been created between\n `2018-06-28 12:28:39` and `2018-10-14` UTC (instance filter part 1); additionally, EC2 instances having a tag\n `foo: bar` *AND* not a tag key `owner` with any value are deleted (instance filter part 2); last but not least,\n ALL security groups are deleted by this filter.\n\nThe general filter syntax is as follows:\n\n    <resource type>:\n      - id: <regex to filter by id> | NOT(<regex to filter by id>)\n        tagged: bool (optional)\n        tags:\n          <key> | NOT(key): <regex to filter value> | NOT(<regex to filter value>)\n          ...\n        created:\n          before: <timestamp> (optional)\n          after: <timestamp> (optional)\n      # OR\n      - ...\n    <resource type>:\n      ...\n\nHere is a more detailed description of the various ways to filter resources:\n\n##### 1) Delete all resources of a particular type\n\n   [Terraform resource type identifiers](https://www.terraform.io/docs/providers/aws/index.html) are used to delete\n   resources by type. The following filter snippet deletes *ALL* security groups, IAM roles, and EC2 instances:\n\n    aws_security_group:\n    aws_iam_role:\n    aws_instance:\n\n   Don't forget the `:` at the end of each line.\n\n##### 2) Delete by tags\n\n   If most of your resources have tags, this is probably the best way to filter them\n   for deletion. **Be aware**: Not all resources [support tags](#supported-resources) yet and can be filtered this way.\n\n   The key and the value part of the tag filter can be negated by a surrounding `NOT(...)`. This allows for removing of\n   all resources not matching some tag key or value. In the example below, all EC2 instances without the `owner: me`\n   tag are deleted:\n\n    aws_instance:\n      - tags:\n          NOT(Owner): me\n\n   The flag `tagged: false` deletes all resources that have no tags. Contrary, resources with any tags can be deleted\n   with `tagged: true`:\n\n    aws_instance:\n      - tagged: true\n\n##### 3) Delete By ID\n\n   You can filter resources of a particular type based on their IDs.\n\n   To see what the IDs for a type of resource look like (sometimes it's the name, sometimes the ARN, ...), run AWSweeper\n   first in dry-run mode. Then, use this information to create the YAML filter accordingly.\n\n   The id filter can be negated by surrounding the regex with `NOT(...)`\n\n##### 4) By creation date\n\n   You can select resources by filtering on the date they have been created using an absolute or relative date.\n\n   The supported formats are:\n   * Relative\n     * Nanosecond: `1ns`\n     * Microsecond: `1us`\n     * Millisecond: `1ms`\n     * Second: `1s`\n     * Minute: `1m`\n     * Hour: `1h`\n     * Day: `1d`\n     * Week: `1w`\n     * Month: `1M`\n     * Year: `1y`\n   * Absolute:\n     * RCF3339Nano, short dates: `2006-1-2T15:4:5.999999999Z07:00`\n     * RFC3339Nano, short date, lower-case \"t\": `2006-1-2t15:4:5.999999999Z07:00`\n     * Space separated, no time zone: `2006-1-2 15:4:5.999999999`\n     * Date only: `2006-1-2`\n\n## Supported resources\n\nThe list below shows the 297 supported (Terraform) [resource types](https://www.terraform.io/docs/providers/aws/index.html),\nwhich have to be used in the YAML file to filter resources by their type.\n\n| Service / Resource Type | Delete by tag | Delete by creation date\n| :-----------------------------   |:-------------:|:-----------------------:\n| **accessanalyzer** |\n| aws_accessanalyzer_analyzer |  x  |  |\n| **acm** |\n| aws_acm_certificate |  x  |  |\n| **apigateway** |\n| aws_api_gateway_api_key |  x  |  |\n| aws_api_gateway_client_certificate |  x  |  |\n| aws_api_gateway_domain_name |  x  |  |\n| aws_api_gateway_rest_api |  x  |  |\n| aws_api_gateway_usage_plan |  x  |  |\n| aws_api_gateway_vpc_link |  x  |  |\n| **apigatewayv2** |\n| aws_apigatewayv2_api |  x  |  |\n| aws_apigatewayv2_domain_name |  x  |  |\n| aws_apigatewayv2_vpc_link |  x  |  |\n| **appmesh** |\n| aws_appmesh_mesh |  x  |  |\n| **appsync** |\n| aws_appsync_graphql_api |  x  |  |\n| **athena** |\n| aws_athena_named_query |  |  |\n| aws_athena_workgroup |  x  |  x  |\n| **autoscaling** |\n| aws_autoscaling_group |  x  |  x  |\n| aws_launch_configuration |  |  x  |\n| **backup** |\n| aws_backup_plan |  x  |  x  |\n| aws_backup_vault |  x  |  x  |\n| **batch** |\n| aws_batch_compute_environment |  x  |  |\n| aws_batch_job_definition |  x  |  |\n| **cloudformation** |\n| aws_cloudformation_stack |  x  |  x  |\n| aws_cloudformation_stack_set |  x  |  |\n| aws_cloudformation_type |  |  |\n| **cloudhsmv2** |\n| aws_cloudhsm_v2_cluster |  x  |  |\n| **cloudtrail** |\n| aws_cloudtrail |  x  |  |\n| **cloudwatch** |\n| aws_cloudwatch_dashboard |  |  |\n| **cloudwatchevents** |\n| aws_cloudwatch_event_archive |  |  x  |\n| aws_cloudwatch_event_bus |  x  |  |\n| **cloudwatchlogs** |\n| aws_cloudwatch_log_destination |  |  x  |\n| aws_cloudwatch_log_group |  x  |  x  |\n| aws_cloudwatch_log_resource_policy |  |  |\n| aws_cloudwatch_query_definition |  |  |\n| **codeartifact** |\n| aws_codeartifact_domain |  x  |  x  |\n| aws_codeartifact_repository |  x  |  |\n| **codebuild** |\n| aws_codebuild_project |  x  |  |\n| aws_codebuild_report_group |  x  |  |\n| aws_codebuild_source_credential |  |  |\n| **codecommit** |\n| aws_codecommit_repository |  x  |  |\n| **codedeploy** |\n| aws_codedeploy_deployment_config |  |  |\n| **codepipeline** |\n| aws_codepipeline_webhook |  x  |  |\n| **codestarconnections** |\n| aws_codestarconnections_connection |  x  |  |\n| aws_codestarconnections_host |  |  |\n| **codestarnotifications** |\n| aws_codestarnotifications_notification_rule |  x  |  |\n| **configservice** |\n| aws_config_config_rule |  x  |  |\n| aws_config_configuration_aggregator |  x  |  x  |\n| aws_config_configuration_recorder |  |  |\n| aws_config_conformance_pack |  |  |\n| aws_config_delivery_channel |  |  |\n| **costandusagereportservice** |\n| aws_cur_report_definition |  |  |\n| **databasemigrationservice** |\n| aws_dms_certificate |  x  |  |\n| aws_dms_endpoint |  x  |  |\n| aws_dms_replication_subnet_group |  x  |  |\n| aws_dms_replication_task |  x  |  |\n| **datasync** |\n| aws_datasync_agent |  x  |  |\n| aws_datasync_task |  x  |  |\n| **dax** |\n| aws_dax_parameter_group |  |  |\n| aws_dax_subnet_group |  |  |\n| **devicefarm** |\n| aws_devicefarm_project |  |  |\n| **directconnect** |\n| aws_dx_connection |  x  |  |\n| aws_dx_hosted_private_virtual_interface |  |  |\n| aws_dx_hosted_public_virtual_interface |  |  |\n| aws_dx_hosted_transit_virtual_interface |  |  |\n| aws_dx_lag |  x  |  |\n| aws_dx_private_virtual_interface |  x  |  |\n| aws_dx_public_virtual_interface |  x  |  |\n| aws_dx_transit_virtual_interface |  x  |  |\n| **dlm** |\n| aws_dlm_lifecycle_policy |  x  |  |\n| **dynamodb** |\n| aws_dynamodb_global_table |  |  |\n| aws_dynamodb_table |  x  |  |\n| **ec2** |\n| aws_ami |  x  |  x  |\n| aws_ebs_snapshot |  x  |  x  |\n| aws_ebs_volume |  x  |  x  |\n| aws_ec2_capacity_reservation |  x  |  x  |\n| aws_ec2_carrier_gateway |  x  |  |\n| aws_ec2_client_vpn_endpoint |  x  |  x  |\n| aws_ec2_fleet |  x  |  x  |\n| aws_ec2_local_gateway_route_table_vpc_association |  x  |  |\n| aws_ec2_managed_prefix_list |  x  |  |\n| aws_ec2_traffic_mirror_filter |  x  |  |\n| aws_ec2_traffic_mirror_session |  x  |  |\n| aws_ec2_traffic_mirror_target |  x  |  |\n| aws_ec2_transit_gateway |  x  |  x  |\n| aws_ec2_transit_gateway_peering_attachment |  x  |  x  |\n| aws_ec2_transit_gateway_route_table |  x  |  x  |\n| aws_ec2_transit_gateway_vpc_attachment |  x  |  x  |\n| aws_egress_only_internet_gateway |  x  |  |\n| aws_eip |  x  |  |\n| aws_instance |  x  |  x  |\n| aws_internet_gateway |  x  |  |\n| aws_key_pair |  x  |  |\n| aws_launch_template |  x  |  x  |\n| aws_nat_gateway |  x  |  x  |\n| aws_network_acl |  x  |  |\n| aws_network_interface |  x  |  |\n| aws_placement_group |  x  |  |\n| aws_route_table |  x  |  |\n| aws_security_group |  x  |  |\n| aws_spot_fleet_request |  x  |  x  |\n| aws_spot_instance_request |  x  |  x  |\n| aws_subnet |  x  |  |\n| aws_vpc |  x  |  |\n| aws_vpc_endpoint |  x  |  x  |\n| aws_vpc_endpoint_connection_notification |  |  |\n| aws_vpc_endpoint_service |  x  |  |\n| aws_vpc_peering_connection |  x  |  |\n| aws_vpn_gateway |  x  |  |\n| **ecr** |\n| aws_ecr_repository |  x  |  |\n| **ecrpublic** |\n| aws_ecrpublic_repository |  |  |\n| **ecs** |\n| aws_ecs_cluster |  x  |  |\n| aws_ecs_task_definition |  x  |  |\n| **efs** |\n| aws_efs_access_point |  x  |  |\n| aws_efs_file_system |  x  |  x  |\n| **eks** |\n| aws_eks_cluster |  x  |  |\n| **elasticache** |\n| aws_elasticache_global_replication_group |  |  |\n| aws_elasticache_replication_group |  x  |  |\n| **elasticbeanstalk** |\n| aws_elastic_beanstalk_application |  x  |  |\n| aws_elastic_beanstalk_application_version |  x  |  |\n| aws_elastic_beanstalk_environment |  x  |  |\n| **elastictranscoder** |\n| aws_elastictranscoder_pipeline |  |  |\n| aws_elastictranscoder_preset |  |  |\n| **elb** |\n| aws_elb |  x  |  x  |\n| **elbv2** |\n| aws_alb_target_group |  x  |  |\n| aws_lb |  x  |  x  |\n| aws_lb_target_group |  x  |  |\n| **emr** |\n| aws_emr_security_configuration |  |  |\n| **firehose** |\n| aws_kinesis_firehose_delivery_stream |  x  |  |\n| **fms** |\n| aws_fms_policy |  |  |\n| **fsx** |\n| aws_fsx_lustre_file_system |  x  |  x  |\n| aws_fsx_windows_file_system |  x  |  x  |\n| **gamelift** |\n| aws_gamelift_alias |  x  |  x  |\n| aws_gamelift_build |  x  |  x  |\n| aws_gamelift_fleet |  x  |  |\n| aws_gamelift_game_session_queue |  x  |  |\n| **globalaccelerator** |\n| aws_globalaccelerator_accelerator |  x  |  x  |\n| **glue** |\n| aws_glue_crawler |  x  |  x  |\n| aws_glue_dev_endpoint |  x  |  |\n| aws_glue_job |  x  |  |\n| aws_glue_ml_transform |  x  |  |\n| aws_glue_registry |  x  |  x  |\n| aws_glue_schema |  x  |  x  |\n| aws_glue_security_configuration |  |  |\n| aws_glue_trigger |  x  |  |\n| aws_glue_workflow |  x  |  |\n| **guardduty** |\n| aws_guardduty_detector |  x  |  |\n| **iam** |\n| aws_iam_access_key |  |  x  |\n| aws_iam_account_alias |  |  |\n| aws_iam_group |  |  x  |\n| aws_iam_instance_profile |  x  |  x  |\n| aws_iam_policy |  x  |  x  |\n| aws_iam_role |  x  |  x  |\n| aws_iam_server_certificate |  x  |  |\n| aws_iam_service_linked_role |  |  x  |\n| aws_iam_user |  x  |  x  |\n| **imagebuilder** |\n| aws_imagebuilder_component |  x  |  |\n| aws_imagebuilder_distribution_configuration |  x  |  |\n| aws_imagebuilder_image |  x  |  |\n| aws_imagebuilder_image_pipeline |  x  |  |\n| aws_imagebuilder_image_recipe |  x  |  |\n| aws_imagebuilder_infrastructure_configuration |  x  |  |\n| **iot** |\n| aws_iot_certificate |  |  x  |\n| aws_iot_policy |  |  |\n| aws_iot_role_alias |  |  |\n| aws_iot_thing |  |  |\n| aws_iot_thing_type |  |  |\n| aws_iot_topic_rule |  x  |  |\n| **kafka** |\n| aws_msk_cluster |  x  |  x  |\n| aws_msk_configuration |  |  x  |\n| **kinesis** |\n| aws_kinesis_stream |  x  |  |\n| **kinesisanalytics** |\n| aws_kinesis_analytics_application |  x  |  |\n| **kinesisanalyticsv2** |\n| aws_kinesisanalyticsv2_application |  x  |  |\n| **kms** |\n| aws_kms_external_key |  x  |  |\n| aws_kms_key |  x  |  |\n| **lambda** |\n| aws_lambda_code_signing_config |  |  |\n| aws_lambda_event_source_mapping |  |  |\n| aws_lambda_function |  x  |  |\n| **lexmodelbuildingservice** |\n| aws_lex_bot |  |  |\n| aws_lex_intent |  |  |\n| aws_lex_slot_type |  |  |\n| **licensemanager** |\n| aws_licensemanager_license_configuration |  x  |  |\n| **lightsail** |\n| aws_lightsail_domain |  |  |\n| aws_lightsail_instance |  x  |  |\n| aws_lightsail_key_pair |  |  |\n| aws_lightsail_static_ip |  |  |\n| **macie2** |\n| aws_macie2_classification_job |  x  |  |\n| aws_macie2_custom_data_identifier |  x  |  |\n| aws_macie2_findings_filter |  x  |  |\n| **mediaconvert** |\n| aws_media_convert_queue |  x  |  |\n| **mediapackage** |\n| aws_media_package_channel |  x  |  |\n| **mediastore** |\n| aws_media_store_container |  x  |  x  |\n| **mq** |\n| aws_mq_broker |  x  |  |\n| aws_mq_configuration |  x  |  |\n| **mwaa** |\n| aws_mwaa_environment |  x  |  |\n| **neptune** |\n| aws_neptune_event_subscription |  x  |  |\n| **networkfirewall** |\n| aws_networkfirewall_firewall |  x  |  |\n| aws_networkfirewall_firewall_policy |  x  |  |\n| aws_networkfirewall_rule_group |  x  |  |\n| **opsworks** |\n| aws_opsworks_stack |  x  |  |\n| aws_opsworks_user_profile |  |  |\n| **qldb** |\n| aws_qldb_ledger |  x  |  |\n| **rds** |\n| aws_db_event_subscription |  x  |  |\n| aws_db_instance |  x  |  x  |\n| aws_db_parameter_group |  x  |  |\n| aws_db_proxy |  x  |  |\n| aws_db_security_group |  x  |  |\n| aws_db_snapshot |  x  |  x  |\n| aws_db_subnet_group |  x  |  |\n| aws_rds_cluster |  x  |  |\n| aws_rds_cluster_endpoint |  x  |  |\n| aws_rds_cluster_parameter_group |  x  |  |\n| aws_rds_global_cluster |  |  |\n| **redshift** |\n| aws_redshift_cluster |  x  |  |\n| aws_redshift_event_subscription |  x  |  |\n| aws_redshift_parameter_group |  x  |  |\n| aws_redshift_security_group |  |  |\n| aws_redshift_snapshot_copy_grant |  x  |  |\n| aws_redshift_snapshot_schedule |  x  |  |\n| aws_redshift_subnet_group |  x  |  |\n| **route53** |\n| aws_route53_health_check |  x  |  |\n| aws_route53_zone |  x  |  |\n| **route53resolver** |\n| aws_route53_resolver_endpoint |  x  |  x  |\n| aws_route53_resolver_query_log_config |  x  |  x  |\n| aws_route53_resolver_query_log_config_association |  |  x  |\n| aws_route53_resolver_rule |  x  |  x  |\n| aws_route53_resolver_rule_association |  |  |\n| **s3** |\n| aws_s3_bucket |  x  |  x  |\n| **s3outposts** |\n| aws_s3outposts_endpoint |  |  x  |\n| **sagemaker** |\n| aws_sagemaker_app_image_config |  |  x  |\n| aws_sagemaker_code_repository |  |  x  |\n| aws_sagemaker_endpoint |  x  |  x  |\n| aws_sagemaker_feature_group |  x  |  x  |\n| aws_sagemaker_model |  x  |  x  |\n| aws_sagemaker_model_package_group |  x  |  x  |\n| **secretsmanager** |\n| aws_secretsmanager_secret |  x  |  |\n| **securityhub** |\n| aws_securityhub_action_target |  |  |\n| aws_securityhub_insight |  |  |\n| **servicecatalog** |\n| aws_servicecatalog_portfolio |  x  |  x  |\n| aws_servicecatalog_service_action |  |  |\n| aws_servicecatalog_tag_option |  |  |\n| **servicediscovery** |\n| aws_service_discovery_service |  x  |  x  |\n| **ses** |\n| aws_ses_active_receipt_rule_set |  |  |\n| aws_ses_configuration_set |  |  |\n| aws_ses_domain_identity |  |  |\n| aws_ses_email_identity |  |  |\n| aws_ses_receipt_filter |  |  |\n| aws_ses_receipt_rule_set |  |  |\n| aws_ses_template |  |  |\n| **sfn** |\n| aws_sfn_activity |  x  |  x  |\n| aws_sfn_state_machine |  x  |  x  |\n| **signer** |\n| aws_signer_signing_job |  |  |\n| aws_signer_signing_profile |  x  |  |\n| **sns** |\n| aws_sns_platform_application |  |  |\n| aws_sns_topic |  x  |  |\n| aws_sns_topic_subscription |  |  |\n| **sqs** |\n| aws_sqs_queue |  x  |  |\n| **ssm** |\n| aws_ssm_activation |  x  |  |\n| aws_ssm_association |  |  |\n| aws_ssm_document |  x  |  |\n| aws_ssm_maintenance_window |  x  |  |\n| aws_ssm_parameter |  x  |  |\n| aws_ssm_patch_baseline |  x  |  |\n| aws_ssm_resource_data_sync |  |  |\n| **storagegateway** |\n| aws_storagegateway_gateway |  x  |  |\n| aws_storagegateway_tape_pool |  x  |  |\n| **synthetics** |\n| aws_synthetics_canary |  x  |  |\n| **timestreamwrite** |\n| aws_timestreamwrite_database |  x  |  x  |\n| **transfer** |\n| aws_transfer_server |  x  |  |\n| **waf** |\n| aws_waf_byte_match_set |  |  |\n| aws_waf_geo_match_set |  |  |\n| aws_waf_ipset |  |  |\n| aws_waf_rate_based_rule |  x  |  |\n| aws_waf_regex_match_set |  |  |\n| aws_waf_regex_pattern_set |  |  |\n| aws_waf_rule |  x  |  |\n| aws_waf_rule_group |  x  |  |\n| aws_waf_size_constraint_set |  |  |\n| aws_waf_sql_injection_match_set |  |  |\n| aws_waf_web_acl |  x  |  |\n| aws_waf_xss_match_set |  |  |\n| **wafregional** |\n| aws_wafregional_byte_match_set |  |  |\n| aws_wafregional_geo_match_set |  |  |\n| aws_wafregional_ipset |  |  |\n| aws_wafregional_rate_based_rule |  x  |  |\n| aws_wafregional_regex_match_set |  |  |\n| aws_wafregional_regex_pattern_set |  |  |\n| aws_wafregional_rule |  x  |  |\n| aws_wafregional_rule_group |  x  |  |\n| aws_wafregional_size_constraint_set |  |  |\n| aws_wafregional_sql_injection_match_set |  |  |\n| aws_wafregional_web_acl |  x  |  |\n| aws_wafregional_xss_match_set |  |  |\n| **wafv2** |\n| aws_wafv2_web_acl_logging_configuration |  |  |\n| **worklink** |\n| aws_worklink_fleet |  |  x  |\n| **workspaces** |\n| aws_workspaces_directory |  x  |  |\n| aws_workspaces_ip_group |  x  |  |\n| aws_workspaces_workspace |  x  |  |\n| **xray** |\n| aws_xray_group |  x  |  |\n\n## Acceptance tests\n\n***IMPORTANT:*** Acceptance tests create real resources that might cost you money. Also, note that if you contribute a\nPR, the [Travis build](https://travis-ci.org/github/jckuester/awsweeper) will always fail since AWS credentials are not\ninjected into the PR build coming from forks for security reasons. You can either run tests locally against your\npersonal AWS account or ask me to run them for you instead.\n\nRun all acceptance tests with\n\n    AWS_PROFILE=<myaccount> AWS_DEFAULT_REGION=us-west-2 make test-all\n\nor to test the working of AWSweeper for a just single resource, such as `aws_vpc`, use\n\n    AWS_PROFILE=<myaccount> AWS_DEFAULT_REGION=us-west-2 make test-all TESTARGS='-run=TestAcc_Vpc*'\n\n## Disclaimer\n\nYou are using this tool at your own risk! I will not take responsibility if you delete any critical resources in your\nproduction environments."
}
