{
  "name": "quictls",
  "full_name": "quictls",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "TLS/SSL and crypto library with QUIC APIs",
  "license": "Apache-2.0",
  "homepage": "https://github.com/quictls/openssl",
  "versions": {
    "stable": "3.0.9-quic1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/quictls/openssl/archive/refs/tags/openssl-3.0.9-quic1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "7b76b0968642a3929fabc96acd28302f631d339a90a91fd434cde425a3ec6838"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/quictls/blobs/sha256:057574a2bf46e393ae38042b6af0dcfa2d37afca1d47bb8d3120ee6926bebed1",
          "sha256": "057574a2bf46e393ae38042b6af0dcfa2d37afca1d47bb8d3120ee6926bebed1"
        },
        "arm64_monterey": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/quictls/blobs/sha256:d908386843e4e08542de776a8bedc11089b8704457e9b79069c2fb628ab54f7b",
          "sha256": "d908386843e4e08542de776a8bedc11089b8704457e9b79069c2fb628ab54f7b"
        },
        "arm64_big_sur": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/quictls/blobs/sha256:dcb0c51ddd58428494f7b009590bd9bba1e076d5701714f2c7f48df24182fbe6",
          "sha256": "dcb0c51ddd58428494f7b009590bd9bba1e076d5701714f2c7f48df24182fbe6"
        },
        "ventura": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/quictls/blobs/sha256:f2a3a0f85201ebc53ca7bcd6f88bbfb501ce74c628555a2ef0af53d3b61ba191",
          "sha256": "f2a3a0f85201ebc53ca7bcd6f88bbfb501ce74c628555a2ef0af53d3b61ba191"
        },
        "monterey": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/quictls/blobs/sha256:b55a237526dfad87ea53b50675ba644302210b59c1d5bb74079ad6a0ef8f5d79",
          "sha256": "b55a237526dfad87ea53b50675ba644302210b59c1d5bb74079ad6a0ef8f5d79"
        },
        "big_sur": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/quictls/blobs/sha256:6d7f1bcbb4a58042b62cf210b5b04ad30c23de7c82b11766933da8f062a831b9",
          "sha256": "6d7f1bcbb4a58042b62cf210b5b04ad30c23de7c82b11766933da8f062a831b9"
        },
        "x86_64_linux": {
          "cellar": "/home/linuxbrew/.linuxbrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/quictls/blobs/sha256:b34a6abdf6e0d96b2ed93d036ff241bcd1f9541b61262652d9581c8f565346a1",
          "sha256": "b34a6abdf6e0d96b2ed93d036ff241bcd1f9541b61262652d9581c8f565346a1"
        }
      }
    }
  },
  "keg_only": true,
  "keg_only_reason": {
    "reason": "it conflicts with OpenSSL",
    "explanation": ""
  },
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "ca-certificates"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": "A CA file has been bootstrapped using certificates from the system\nkeychain. To add additional certificates, place .pem files in\n  $HOMEBREW_PREFIX/etc/quictls/certs\n\nand run\n  $HOMEBREW_PREFIX/opt/quictls/bin/c_rehash\n",
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": true,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/quictls.rb",
  "ruby_source_checksum": {
    "sha256": "b34b3add1f66f5bd748eea97a3ead43d7b4de648fe1940c1df7eb528181d5ea6"
  },
  "date_added": "2023-06-28T10:13:39+08:00",
  "readme": "What This Is\n============\n\nThis is a fork of [OpenSSL](https://www.openssl.org) to enable QUIC. In addition\nto the website, the official source distribution is at\n<https://github.com/openssl/openssl>. The OpenSSL `README` can be found at\n[README-OpenSSL.md](https://github.com/quictls/openssl/blob/openssl-3.0.10%2Bquic/README-OpenSSL.md)\n\nThis fork adds APIs that can be used by QUIC implementations for connection\nhandshakes. Quoting the IETF Working group\n[charter](https://datatracker.ietf.org/wg/quic/about/), QUIC is a \"UDP-based,\nstream-multiplexing, encrypted transport protocol.\" If you don't need QUIC, you\nshould use the official OpenSSL distributions.\n\nThe APIs here are used by Microsoft's\n[MsQuic](https://github.com/microsoft/msquic) and Google's\n[Chromium QUIC](https://chromium.googlesource.com/chromium/src/+/master/net/quic/)\n\nWe are not in competition with OpenSSL project. We informed them of\nour plans to fork the code before we went public. We do not speak for the\nOpenSSL project, and can only point to a\n[blog post](https://www.openssl.org/blog/blog/2020/02/17/QUIC-and-OpenSSL/) and\n[openssl-project email](https://github.com/quictls/openssl/discussions/54)\nthat provides their view of QUIC support.\n\nAs stated in their blog post, the OpenSSL team is focused on their 3.0 release\n(released 2021-09-07), and does not intend to add QUIC functionality to 1.1.x.\nThere is a community need for a QUIC-capable TLS library. This fork is intended\nas stopgap solution to enable higher level frameworks and runtimes to use QUIC\nwith the proven and reliable TLS functionality from OpenSSL. This fork will be\nmaintained until OpenSSL officially provides reasonable support for QUIC\nimplementations.\n\nThis fork can be considered a supported version of\n[OpenSSL PR 8797](https://github.com/openssl/openssl/pull/8797).\nWe will endeavor to track OpenSSL releases within a day or so, and there is an\nitem below about how we'll follow their tagging.\n\nOn to the questions and answers.\n\nWhat about branches?\n--------------------\n\nWe don't want to conflict with OpenSSL branch names. Our current plan is to append\n`+quic`. Release tags are likely to be the QUIC branch with `-releaseX` appended.\nFor example, the OpenSSL tag `openssl-3.0.0` would have a branch named\n`openssl-3.0.0+quic` and a release tag of `openssl-3.0.0+quic-release1`.\n\nHow are you keeping current with OpenSSL?\n-----------------------------------------\n\n(In other words, \"What about rebasing?\")\n\nOur plan is to always rebase on top of an upstream release tag. In particular:\n\n- The changes for QUIC will always be at the tip of the branch -- you will know what\n  is from the original OpenSSL and what is for QUIC.\n- New versions are quickly created once upstream creates a new tag.\n- The use of git commands (such as `cherry`) can be used to ensure that all changes\n  have moved forward with minimal or no changes. You will be able to see\n  \"QUIC: Add X\" on all branches and the commit itself will be nearly identical on\n  all branches, and any changes to that can be easily identified.\n\nWhat about library names?\n-------------------------\n\nLibrary names will be the same, but will use a different version number. The version\nnumbers for the current OpenSSL libraries are `1.1` (for the 1.1.0 and 1.1.1 branches)\nand `3` (for the 3.0 branch). We will be prefixing `81` (ASCII for 'Q') to\nthe version numbers to generate a unique version number.\n\n- `libcrypto.so.81.3` vs `libcrypto.so.3`\n- `libcrypto.so.81.1.1` vs `libcrypto.so.1.1`\n- `libssl.so.81.3` vs `libssl.so.3`\n- `libssl.so.81.1.1` vs `libssl.so.1.1`\n\nThe SONAME of these libraries are all different, guaranteeing the correct library\nwill be used.\n\n...and the executable?\n----------------------\n\nWe currently do not have any plans to change the name, mainly because we\nhaven't made any changes there. If you see a need, please open an issue.\n\nThe `openssl version` command will report that it is `+quic` enabled.\n\n...and FIPS?\n------------\n\nWe are not doing anything with FIPS. This is actually good news: you should\nbe able to load the OpenSSL 3.0 FIPS module into an application built against\nthis fork and everything should Just Work&#8482;.\n\nHow can I contribute?\n---------------------\n\nWe want any code here to be acceptable to OpenSSL. This means that all contributors\nmust have signed the appropriate\n[contributor license agreements](https://www.openssl.org/policies/cla.html). We\nwill not ask for copies of any paperwork, you just need to tell us that you've\ndone so (and we might verify with OpenSSL). We are only interested in making it\neasier and better for at least the mentioned QUIC implementations to use a variant\nof OpenSSL. If you have a pull request that changes the TLS protocol, or adds\nassembly support for a new CPU, or otherwise is not specific to enabling QUIC,\nplease contribute that to OpenSSL. This fork is intended to be a clean extension\nto OpenSSL, with the deltas being specific to QUIC.\n\nWho are you?\n------------\n\nThis is a collaborative effort between [Akamai](https://www.akamai.com) and\n[Microsoft](https://www.microsoft.com). We welcome anyone to contribute!"
}
