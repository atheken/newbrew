{
  "name": "qxmpp",
  "full_name": "qxmpp",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Cross-platform C++ XMPP client and server library",
  "license": "LGPL-2.1-or-later",
  "homepage": "https://github.com/qxmpp-project/qxmpp/",
  "versions": {
    "stable": "1.5.5",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/qxmpp-project/qxmpp/archive/v1.5.5.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "b25fba89432c4fd72489d1844f683bfbf4e5aa4cfcfda7a982d6019f8e4529f8"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/qxmpp/blobs/sha256:d099f396096a909f44fb368053dd8bea3caa4ee14dbfd67e466ef2f4fa532971",
          "sha256": "d099f396096a909f44fb368053dd8bea3caa4ee14dbfd67e466ef2f4fa532971"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/qxmpp/blobs/sha256:49e28d8d0daf588b67a846ae5f26338bfd3de47605058ea544b8fffbd7b07515",
          "sha256": "49e28d8d0daf588b67a846ae5f26338bfd3de47605058ea544b8fffbd7b07515"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/qxmpp/blobs/sha256:efd1db85c3eab76aeb8b4c3de5c220dc677d4481662b52b2663afdd0a9f8e30b",
          "sha256": "efd1db85c3eab76aeb8b4c3de5c220dc677d4481662b52b2663afdd0a9f8e30b"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/qxmpp/blobs/sha256:47b877829b1edf3aa0d2f7737b51beb216e8634212ef9cebf7301601354bb185",
          "sha256": "47b877829b1edf3aa0d2f7737b51beb216e8634212ef9cebf7301601354bb185"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/qxmpp/blobs/sha256:ab94082c06216ca413b8f7ae6a9309947c8eb924f87032be24fd662ba0c2d0c1",
          "sha256": "ab94082c06216ca413b8f7ae6a9309947c8eb924f87032be24fd662ba0c2d0c1"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/qxmpp/blobs/sha256:435ebcc39eb2007d64392da737c15fc0fa065f68692afce5f9aa54c271ddae4d",
          "sha256": "435ebcc39eb2007d64392da737c15fc0fa065f68692afce5f9aa54c271ddae4d"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/qxmpp/blobs/sha256:68e2781798b80f1a83c0d82ef845fe1df06a0e5fa45716d8195a716d42036453",
          "sha256": "68e2781798b80f1a83c0d82ef845fe1df06a0e5fa45716d8195a716d42036453"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "qt"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "xcode",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [
        "build"
      ],
      "specs": [
        "stable"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/qxmpp.rb",
  "ruby_source_checksum": {
    "sha256": "619a6f3c3f6c93873781d2ff086731eaf138a0b67d75dce925c8ea840277178e"
  },
  "date_added": "2012-07-09T11:11:07-07:00",
  "readme": "<!--\nSPDX-FileCopyrightText: 2009 Manjeet Dahiya <manjeetdahiya@gmail.com>\n\nSPDX-License-Identifier: CC0-1.0\n-->\n<h1 align=\"center\">\n<picture>\n    <img alt=\"QXmpp logo\" src=\"./logo.svg\" height=\"150\">\n</picture>\n</h1>\n<p align=\"center\">\n    <a href=\"https://xmpp.org/extensions/xep-0459.html\">\n        <img alt=\"XMPP:2022 Client IM Mobile+ Compliance Badge\" src=\"https://img.shields.io/badge/XMPP%3A2022%20Client-Core%20IM%20Mobile%2B-green\">\n    </a>\n</p>\n<p align=\"center\">\n    <a href=\"https://github.com/qxmpp-project/qxmpp/actions\">\n        <img alt=\"Build Status\" src=\"https://github.com/qxmpp-project/qxmpp/workflows/tests/badge.svg\">\n    </a>\n    <a href=\"https://codecov.io/gh/qxmpp-project/qxmpp\">\n        <img alt=\"Code Coverage\" src=\"https://img.shields.io/codecov/c/github/qxmpp-project/qxmpp.svg\">\n    </a>\n    <a href=\"https://github.com/qxmpp-project/qxmpp/releases/latest\">\n        <img alt=\"Latest release\" src=\"https://img.shields.io/github/v/release/qxmpp-project/qxmpp\">\n    </a>\n    <a href=\"https://doc.qxmpp.org/\">\n        <img alt=\"Documentation\" src=\"https://img.shields.io/website?down_message=offline&label=documentation&up_message=online&url=https%3A%2F%2Fdoc.qxmpp.org%2F\">\n    </a>\n    <a href=\"xmpp:qxmpp@muc.kaidan.im?join\">\n        <img alt=\"Development Chat\" src=\"https://search.jabbercat.org/api/1.0/badge?address=qxmpp@muc.kaidan.im\">\n    </a>\n    <a href=\"https://liberapay.com/QXmpp/donate\">\n        <img alt=\"Donate using Liberapay\" src=\"https://img.shields.io/liberapay/patrons/QXmpp.svg?logo=liberapay\">\n    </a>\n</p>\n\nQXmpp is a cross-platform C++ XMPP client and server library. It is written\nin C++ and uses Qt framework.\n\nQXmpp strives to be as easy to use as possible, the underlying TCP socket, the\ncore XMPP RFCs (RFC6120 and RFC6121) and XMPP extensions have been nicely\nencapsulated into classes. QXmpp is ready to build XMPP clients complying with\nthe [XMPP Compliance Suites 2022][xmpp-compliance] for IM and Advanced Mobile.\nIt comes with full API documentation, automatic tests and some examples.\n\nQXmpp uses Qt extensively, and as such users need to a have working knowledge of\nC++ and Qt basics (Signals and Slots and Qt data types).\n\nQt is the only third party library which is required to build QXmpp, but\nlibraries such as GStreamer enable additional features.\n\nQXmpp is released under the terms of the GNU Lesser General Public License,\nversion 2.1 or later.\n\nBuilding QXmpp\n==============\n\nQXmpp requires Qt 5.15 or Qt 6.0 or higher with SSL enabled.\nIt uses CMake as build system.\n\nBuild from command line:\n\n    mkdir build\n    cd build\n    cmake ..\n    cmake --build .\n\nYou can pass the following arguments to CMake:\n\n    BUILD_SHARED                  to build with shared type library, otherwise static (default: true)\n    BUILD_DOCUMENTATION           to build the documentation, requires Doxygen (default: false)\n    BUILD_EXAMPLES                to build the examples (default: true)\n    BUILD_TESTS                   to build the unit tests (default: true)\n    BUILD_INTERNAL_TESTS          to build the unit tests testing private parts of the API (default: false)\n    BUILD_OMEMO                   to build the OMEMO module (default: false)\n    WITH_GSTREAMER                to enable audio/video over jingle (default: false)\n    QT_VERSION_MAJOR=5/6          to build with a specific Qt major version (default behaviour: prefer 6)\n\nFor building the OMEMO module [additional dependencies](src/omemo/README.md)\nare required.\n\nInstalling QXmpp\n================\n\nAfter building QXmpp, you can install the Headers, Libraries\nand Documentation using the following command:\n\nInstall from command line:\n\n    cmake --build . --target install\n\nExamples\n========\n\nLook at the example directory for various examples. Here is a description of\na few.\n\n* *example_0_connected*\nThis example just connects to the xmpp server and start receiving presences\n(updates) from the server. After running this example, you can see this user\nonline, if it's added in your roster (friends list).\n\n* *example_1_echoClient*\nThis is a very simple bot which echoes the message sent to it. Run this\nexample, send it a message from a friend of this bot and you will\nreceive the message back. This example shows how to receive and send messages.\n\nDocumentation\n=============\n\nYou can find the API documentation for the latest stable QXmpp version here:\n\nhttps://doc.qxmpp.org/\n\nThe API documentation of the master branch is also available:\n\nhttps://doc.qxmpp.org/qxmpp-dev/\n\nSupported Platforms\n===================\n\nIt should work on all the platforms supported by Qt. For a complete list of\nplatforms support by Qt, see:\n\nhttps://doc.qt.io/qt-5/supported-platforms.html\n\nHow to report a bug\n===================\n\nIf you think you have found a bug in QXmpp, we would like to hear about\nit so that we can fix it. Before reporting a bug, please check if the issue\nis already know at:\n\nhttps://github.com/qxmpp-project/qxmpp/issues\n\n[xmpp-compliance]: https://xmpp.org/extensions/xep-0459.html"
}
