{
  "name": "youtubedr",
  "full_name": "youtubedr",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Download Youtube Video in Golang",
  "license": "MIT",
  "homepage": "https://github.com/kkdai/youtube",
  "versions": {
    "stable": "2.8.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/kkdai/youtube/archive/v2.8.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0b3f77e4d5d7c909302804da22c1327c13d7002e10afe6435c0db659c2fe4f8a"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/youtubedr/blobs/sha256:dcd46ea00bab177fd432ac57c9437296c2f78bf8365d4af27455001a33fb1b6f",
          "sha256": "dcd46ea00bab177fd432ac57c9437296c2f78bf8365d4af27455001a33fb1b6f"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/youtubedr/blobs/sha256:dcd46ea00bab177fd432ac57c9437296c2f78bf8365d4af27455001a33fb1b6f",
          "sha256": "dcd46ea00bab177fd432ac57c9437296c2f78bf8365d4af27455001a33fb1b6f"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/youtubedr/blobs/sha256:dcd46ea00bab177fd432ac57c9437296c2f78bf8365d4af27455001a33fb1b6f",
          "sha256": "dcd46ea00bab177fd432ac57c9437296c2f78bf8365d4af27455001a33fb1b6f"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/youtubedr/blobs/sha256:ab79ea1e4d0c4d10912b3baa9e04c25abf2b32ecfa16638efaff1763af2f31d9",
          "sha256": "ab79ea1e4d0c4d10912b3baa9e04c25abf2b32ecfa16638efaff1763af2f31d9"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/youtubedr/blobs/sha256:ab79ea1e4d0c4d10912b3baa9e04c25abf2b32ecfa16638efaff1763af2f31d9",
          "sha256": "ab79ea1e4d0c4d10912b3baa9e04c25abf2b32ecfa16638efaff1763af2f31d9"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/youtubedr/blobs/sha256:ab79ea1e4d0c4d10912b3baa9e04c25abf2b32ecfa16638efaff1763af2f31d9",
          "sha256": "ab79ea1e4d0c4d10912b3baa9e04c25abf2b32ecfa16638efaff1763af2f31d9"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/youtubedr/blobs/sha256:7a6928623746c8960de09b60b88bd84111fce4e691bad00786dfcb170fab7e27",
          "sha256": "7a6928623746c8960de09b60b88bd84111fce4e691bad00786dfcb170fab7e27"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/youtubedr.rb",
  "ruby_source_checksum": {
    "sha256": "8ff51bc69e111ecb2e69f9695668eac9bcd3e8581fdeb2db29d4066ce2e7a027"
  },
  "date_added": "2020-11-26T12:50:42+00:00",
  "readme": "Download Youtube Video in Golang\n==================\n\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/kkdai/youtube/master/LICENSE)\n[![Go Reference](https://pkg.go.dev/badge/github.com/kkdai/youtube.svg)](https://pkg.go.dev/github.com/kkdai/youtube/v2)\n[![Build Status](https://github.com/kkdai/youtube/workflows/go/badge.svg?branch=master)](https://github.com/kkdai/youtube/actions)\n[![Coverage](https://codecov.io/gh/kkdai/youtube/branch/master/graph/badge.svg)](https://codecov.io/gh/kkdai/youtube)\n[![](https://goreportcard.com/badge/github.com/kkdai/youtube)](https://goreportcard.com/badge/github.com/kkdai/youtube)\n\n\nThis package is a Youtube video download package, for more detail refer [https://github.com/ytdl-org/youtube-dl](https://github.com/ytdl-org/youtube-dl) for more download options.\n\nThis tool is meant to be used to download CC0 licenced content, we do not support nor recommend using it for illegal activities.\n\n## Overview\n  * [Install](#installation)\n  * [Usage](#usage)\n  * [Example: Download video from \\[dotGo 2015 - Rob Pike - Simplicity is Complicated\\]](#download-dotGo-2015-rob-pike-video)\n\n## Installation\n\n### Install via go get\n\nPlease ensure you have installed Go 1.18 or later.\n\n```shell\ngo get github.com/kkdai/youtube/v2\n```\n\n### From source code\n\n```shell\ngit clone https://github.com/kkdai/youtube.git\ncd youtube\ngo run ./cmd/youtubedr\n```\n\n### Mac\n\n```shell\nbrew install youtubedr\n```\n\n### in Termux\n```shell\npkg install youtubedr\n```\n###  You can also find this package in\n- [archlinux](https://aur.archlinux.org/packages/youtubedr/)  (thanks to [cjsthompson](https://github.com/cjsthompson))\n- [Termux package](https://github.com/termux/termux-packages/tree/master/packages/youtubedr) (thanks to [kcubeterm](https://github.com/kcubeterm))\n- [Homebrew](https://formulae.brew.sh/formula/youtubedr) (thanks to [kkc](https://github.com/kkc))\n\n## Usage\n\n### Use the binary directly\nIt's really simple to use, just get the video id from youtube url - ex: `https://www.youtube.com/watch?v=rFejpH_tAHM`, the video id is `rFejpH_tAHM`\n\n```shell\n$ youtubedr download QAGDGja7kbs\n$ youtubedr download https://www.youtube.com/watch?v=rFejpH_tAHM\n```\n\n\n### Use this package in your golang program\n\nPlease check out the [example_test.go](example_test.go) for example code.\n\n\n## Example:\n * ### Get information of dotGo-2015-rob-pike video for downloading\n\n    `go get github.com/kkdai/youtube/v2/youtubedr`\n\n    Download video from [dotGo 2015 - Rob Pike - Simplicity is Complicated](https://www.youtube.com/watch?v=rFejpH_tAHM)\n\n    ```\n    youtubedr info https://www.youtube.com/watch?v=rFejpH_tAHM\n\n   Title: dotGo 2015 - Rob Pike - Simplicity is Complicated\n   Author: dotconferences\n   -----available streams-----\n   itag:  18 , quality: medium , type: video/mp4; codecs=\"avc1.42001E, mp4a.40.2\"\n   itag:  22 , quality:  hd720 , type: video/mp4; codecs=\"avc1.64001F, mp4a.40.2\"\n   itag: 137 , quality: hd1080 , type: video/mp4; codecs=\"avc1.640028\"\n   itag: 248 , quality: hd1080 , type: video/webm; codecs=\"vp9\"\n   ........\n    ```\n * ### Download dotGo-2015-rob-pike-video\n\n    `go get github.com/kkdai/youtube/v2/youtubedr`\n\n    Download video from [dotGo 2015 - Rob Pike - Simplicity is Complicated](https://www.youtube.com/watch?v=rFejpH_tAHM)\n\n    ```\n    youtubedr download https://www.youtube.com/watch?v=rFejpH_tAHM\n    ```\n\n * ### Download video to specific folder and name\n\n\t`go get github.com/kkdai/youtube/v2/youtubedr`\n\n\tDownload video from [dotGo 2015 - Rob Pike - Simplicity is Complicated](https://www.youtube.com/watch?v=rFejpH_tAHM) to current directory and name the file to simplicity-is-complicated.mp4\n\n\t```\n\tyoutubedr download -d ./ -o simplicity-is-complicated.mp4 https://www.youtube.com/watch?v=rFejpH_tAHM\n\t```\n\n * ### Download video with specific quality\n\n\t`go get github.com/kkdai/youtube/v2/youtubedr`\n\n\tDownload video from [dotGo 2015 - Rob Pike - Simplicity is Complicated](https://www.youtube.com/watch?v=rFejpH_tAHM) with specific quality\n\n\t```\n\tyoutubedr download -q medium https://www.youtube.com/watch?v=rFejpH_tAHM\n\t```\n\n   #### Special case by quality hd1080:\n   Installation of ffmpeg is necessary for hd1080\n   ```\n   ffmpeg   //check ffmpeg is installed, if not please download ffmpeg and set to your PATH.\n   youtubedr download -q hd1080 https://www.youtube.com/watch?v=rFejpH_tAHM\n   ```\n\n\n * ### Download video with specific itag\n\n    `go get github.com/kkdai/youtube/v2/youtubedr`\n\n    Download video from [dotGo 2015 - Rob Pike - Simplicity is Complicated](https://www.youtube.com/watch?v=rFejpH_tAHM)\n\n    ```\n    youtubedr download -q 18 https://www.youtube.com/watch?v=rFejpH_tAHM\n    ```\n\n## How it works\n\n- Parse the video ID you input in URL\n\t- ex: `https://www.youtube.com/watch?v=rFejpH_tAHM`, the video id is `rFejpH_tAHM`\n- Get video information via video id.\n\t- Use URL: `http://youtube.com/get_video_info?video_id=`\n- Parse and decode video information.\n\t- Download URL in \"url=\"\n\t- title in \"title=\"\n- Download video from URL\n\t- Need the string combination of \"url\"\n\n## Inspired\n- [https://github.com/ytdl-org/youtube-dl](https://github.com/ytdl-org/youtube-dl)\n- [https://github.com/lepidosteus/youtube-dl](https://github.com/lepidosteus/youtube-dl)\n- [拆解 Youtube 影片下載位置](http://hkgoldenmra.blogspot.tw/2013/05/youtube.html)\n- [iawia002/annie](https://github.com/iawia002/annie)\n- [How to get url from obfuscate video info: youtube video downloader with php](https://stackoverflow.com/questions/60607291/youtube-video-downloader-with-php)\n\n\n## Project52\nIt is one of my [project 52](https://github.com/kkdai/project52).\n\n\n## License\nThis package is licensed under MIT license. See LICENSE for details."
}
