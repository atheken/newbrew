{
  "name": "liburing",
  "full_name": "liburing",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Helpers to setup and teardown io_uring instances",
  "license": "MIT or LGPL-2.1-only",
  "homepage": "https://github.com/axboe/liburing",
  "versions": {
    "stable": "2.4",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/axboe/liburing/archive/refs/tags/liburing-2.4.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "2398ec82d967a6f903f3ae1fd4541c754472d3a85a584dc78c5da2fabc90706b"
    },
    "head": {
      "url": "https://github.com/axboe/liburing.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/liburing/blobs/sha256:ec174e48971a9620626df860e7adc952fa4d5cb395fde8c0ccd9ea6a665d01ac",
          "sha256": "ec174e48971a9620626df860e7adc952fa4d5cb395fde8c0ccd9ea6a665d01ac"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "linux",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/liburing.rb",
  "ruby_source_checksum": {
    "sha256": "5141427dd14682cb291e6f73a839efd7056662c715e958bc07e6006d0ccb1ba3"
  },
  "date_added": "2022-09-16T04:21:45+00:00",
  "readme": "liburing\n--------\n\nThis is the io_uring library, liburing. liburing provides helpers to setup and\nteardown io_uring instances, and also a simplified interface for\napplications that don't need (or want) to deal with the full kernel\nside implementation.\n\nFor more info on io_uring, please see:\n\nhttps://kernel.dk/io_uring.pdf\n\nSubscribe to io-uring@vger.kernel.org for io_uring related discussions\nand development for both kernel and userspace. The list is archived here:\n\nhttps://lore.kernel.org/io-uring/\n\n\nkernel version dependency\n--------------------------\n\nliburing itself is not tied to any specific kernel release, and hence it's\npossible to use the newest liburing release even on older kernels (and vice\nversa). Newer features may only be available on more recent kernels,\nobviously.\n\n\nulimit settings\n---------------\n\nio_uring accounts memory it needs under the rlimit memlocked option, which\ncan be quite low on some setups (64K). The default is usually enough for\nmost use cases, but bigger rings or things like registered buffers deplete\nit quickly. root isn't under this restriction, but regular users are. Going\ninto detail on how to bump the limit on various systems is beyond the scope\nof this little blurb, but check /etc/security/limits.conf for user specific\nsettings, or /etc/systemd/user.conf and /etc/systemd/system.conf for systemd\nsetups. This affects 5.11 and earlier, new kernels are less dependent\non RLIMIT_MEMLOCK as it is only used for registering buffers.\n\n\nRegressions tests\n-----------------\n\nThe bulk of liburing is actually regression/unit tests for both liburing and\nthe kernel io_uring support. Please note that this suite isn't expected to\npass on older kernels, and may even crash or hang older kernels!\n\n\nBuilding liburing\n-----------------\n\n    #\n    # Prepare build config (optional).\n    #\n    #  --cc  specifies the C   compiler.\n    #  --cxx speficies the C++ compiler.\n    #\n    ./configure --cc=gcc --cxx=g++;\n\n    #\n    # Build liburing.\n    #\n    make -j$(nproc);\n\n    #\n    # Install liburing (headers, shared/static libs, and manpage).\n    #\n    sudo make install;\n\nSee './configure --help' for more information about build config options.\n\n\nFFI support\n-----------\n\nBy default, the build results in 4 lib files:\n\n    2 shared libs:\n\n        liburing.so\n        liburing-ffi.so\n\n    2 static libs:\n\n        liburing.a\n        liburing-ffi.a\n\nLanguages and applications that can't use 'static inline' functions in\nliburing.h should use the FFI variants.\n\nliburing's main public interface lives in liburing.h as 'static inline'\nfunctions. Users wishing to consume liburing purely as a binary dependency\nshould link against liburing-ffi. It contains definitions for every 'static\ninline' function.\n\n\nLicense\n-------\n\nAll software contained within this repo is dual licensed LGPL and MIT, see\nCOPYING and LICENSE, except for a header coming from the kernel which is\ndual licensed GPL with a Linux-syscall-note exception and MIT, see\nCOPYING.GPL and <https://spdx.org/licenses/Linux-syscall-note.html>.\n\nJens Axboe 2022-05-19"
}
