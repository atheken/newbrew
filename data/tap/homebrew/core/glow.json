{
  "name": "glow",
  "full_name": "glow",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Render markdown on the CLI",
  "license": "MIT",
  "homepage": "https://github.com/charmbracelet/glow",
  "versions": {
    "stable": "1.5.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/charmbracelet/glow/archive/v1.5.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "b4ecf269b7c6447e19591b1d23f398ef2b38a6a75be68458390b42d3efc44b92"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/glow/blobs/sha256:3c0d7b294dd4a8a12bca0eb53c9dec78c43a98c28436bd949074ba22b6a55380",
          "sha256": "3c0d7b294dd4a8a12bca0eb53c9dec78c43a98c28436bd949074ba22b6a55380"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/glow/blobs/sha256:3c0d7b294dd4a8a12bca0eb53c9dec78c43a98c28436bd949074ba22b6a55380",
          "sha256": "3c0d7b294dd4a8a12bca0eb53c9dec78c43a98c28436bd949074ba22b6a55380"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/glow/blobs/sha256:3c0d7b294dd4a8a12bca0eb53c9dec78c43a98c28436bd949074ba22b6a55380",
          "sha256": "3c0d7b294dd4a8a12bca0eb53c9dec78c43a98c28436bd949074ba22b6a55380"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/glow/blobs/sha256:b6552b824d49b18f65dda0a80364c88952e6ec64513ce3fdcff8fb748acccbbe",
          "sha256": "b6552b824d49b18f65dda0a80364c88952e6ec64513ce3fdcff8fb748acccbbe"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/glow/blobs/sha256:b6552b824d49b18f65dda0a80364c88952e6ec64513ce3fdcff8fb748acccbbe",
          "sha256": "b6552b824d49b18f65dda0a80364c88952e6ec64513ce3fdcff8fb748acccbbe"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/glow/blobs/sha256:b6552b824d49b18f65dda0a80364c88952e6ec64513ce3fdcff8fb748acccbbe",
          "sha256": "b6552b824d49b18f65dda0a80364c88952e6ec64513ce3fdcff8fb748acccbbe"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/glow/blobs/sha256:cc5970c0f0ab674039f840c12fdb5e3764bf90c879831e6038bdb6c55ba12382",
          "sha256": "cc5970c0f0ab674039f840c12fdb5e3764bf90c879831e6038bdb6c55ba12382"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/glow.rb",
  "ruby_source_checksum": {
    "sha256": "b473acb7052710f2163f2f35da6c404601baace7758cc7fad6bbb9152270c750"
  },
  "date_added": "2020-01-12T15:50:09+00:00",
  "readme": "# Glow\n\nRender markdown on the CLI, with _pizzazz_!\n\n<p align=\"center\">\n    <img src=\"https://stuff.charm.sh/glow/glow-banner-github.gif\" alt=\"Glow Logo\">\n    <a href=\"https://github.com/charmbracelet/glow/releases\"><img src=\"https://img.shields.io/github/release/charmbracelet/glow.svg\" alt=\"Latest Release\"></a>\n    <a href=\"https://pkg.go.dev/github.com/charmbracelet/glow?tab=doc\"><img src=\"https://godoc.org/github.com/golang/gddo?status.svg\" alt=\"GoDoc\"></a>\n    <a href=\"https://github.com/charmbracelet/glow/actions\"><img src=\"https://github.com/charmbracelet/glow/workflows/build/badge.svg\" alt=\"Build Status\"></a>\n    <a href=\"https://goreportcard.com/report/github.com/charmbracelet/glow\"><img src=\"https://goreportcard.com/badge/charmbracelet/glow\" alt=\"Go ReportCard\"></a>\n</p>\n\n<p align=\"center\">\n    <img src=\"https://stuff.charm.sh/glow/glow-1.3-trailer-github.gif\" width=\"600\" alt=\"Glow UI Demo\">\n</p>\n\n## What is it?\n\nGlow is a terminal based markdown reader designed from the ground up to bring\nout the beauty—and power—of the CLI.\n\nUse it to discover markdown files, read documentation directly on the command\nline and stash markdown files to your own private collection, so you can read\nthem anywhere. Glow will find local markdown files in subdirectories or a local\nGit repository.\n\nBy the way, all data stashed is encrypted end-to-end: only you can decrypt it.\nMore on that below.\n\n## Installation\n\n### Package Manager\n\n```bash\n# macOS or Linux\nbrew install glow\n\n# macOS (with MacPorts)\nsudo port install glow\n\n# Arch Linux (btw)\npacman -S glow\n\n# Void Linux\nxbps-install -S glow\n\n# Nix\nnix-env -iA nixpkgs.glow\n\n# FreeBSD\npkg install glow\n\n# Solus\neopkg install glow\n\n# Windows (with Scoop or Chocolatey)\nscoop install glow\nchoco install glow\n\n# Android (with termux)\npkg install glow\n\n# Debian/Ubuntu\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install glow\n\n# Fedora/RHEL\necho '[charm]\nname=Charm\nbaseurl=https://repo.charm.sh/yum/\nenabled=1\ngpgcheck=1\ngpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo\nsudo yum install glow\n```\n\nOr download a binary from the [releases][releases] page. MacOS, Linux, Windows,\nFreeBSD and OpenBSD binaries are available, as well as Debian, RPM, and Alpine\npackages. ARM builds are also available for macOS, Linux, FreeBSD and OpenBSD.\n\n### Go\n\nOr just install it with `go`:\n```bash\ngo install github.com/charmbracelet/glow@latest\n```\n\n### Build (requires Go 1.13+)\n\n```bash\ngit clone https://github.com/charmbracelet/glow.git\ncd glow\ngo build\n```\n\n[releases]: https://github.com/charmbracelet/glow/releases\n\n\n## The TUI\n\nSimply run `glow` without arguments to start the textual user interface and\nbrowse local and stashed markdown. Glow will find local markdown files in the\ncurrent directory and below or, if you’re in a Git repository, Glow will search\nthe repo.\n\nMarkdown files can be read with Glow's high-performance pager. Most of the\nkeystrokes you know from `less` are the same, but you can press `?` to list\nthe hotkeys.\n\n### Stashing\n\nGlow works with the Charm Cloud to allow you to store any markdown files in\nyour own private collection. You can stash a local document from the Glow TUI by\npressing `s`.\n\nStashing is private, its contents will not be exposed publicly, and it's\nencrypted end-to-end. More on encryption below.\n\n## The CLI\n\nIn addition to a TUI, Glow has a CLI for working with Markdown. To format a\ndocument use a markdown source as the primary argument:\n\n```bash\n# Read from file\nglow README.md\n\n# Read from stdin\necho \"[Glow](https://github.com/charmbracelet/glow)\" | glow -\n\n# Fetch README from GitHub / GitLab\nglow github.com/charmbracelet/glow\n\n# Fetch markdown from HTTP\nglow https://host.tld/file.md\n```\n\n### Stashing\n\nYou can also stash documents from the CLI:\n\n```bash\nglow stash README.md\n```\n\nThen, when you run `glow` without arguments will you can browse through your\nstashed documents. This is a great way to keep track of things that you need to\nreference often.\n\n### Word Wrapping\n\nThe `-w` flag lets you set a maximum width at which the output will be wrapped:\n\n```bash\nglow -w 60\n```\n\n### Paging\n\nCLI output can be displayed in your preferred pager with the `-p` flag. This defaults\nto the ANSI-aware `less -r` if `$PAGER` is not explicitly set.\n\n### Styles\n\nYou can choose a style with the `-s` flag. When no flag is provided `glow` tries\nto detect your terminal's current background color and automatically picks\neither the `dark` or the `light` style for you.\n\n```bash\nglow -s [dark|light]\n```\n\nAlternatively you can also supply a custom JSON stylesheet:\n\n```bash\nglow -s mystyle.json\n```\n\nFor additional usage details see:\n\n```bash\nglow --help\n```\n\nCheck out the [Glamour Style Section](https://github.com/charmbracelet/glamour/blob/master/styles/gallery/README.md)\nto find more styles. Or [make your own](https://github.com/charmbracelet/glamour/tree/master/styles)!\n\n## The Config File\n\nIf you find yourself supplying the same flags to `glow` all the time, it's\nprobably a good idea to create a config file. Run `glow config`, which will open\nit in your favorite $EDITOR. Alternatively you can manually put a file named\n`glow.yml` in the default config path of you platform. If you're not sure where\nthat is, please refer to `glow --help`.\n\nHere's an example config:\n\n```yaml\n# style name or JSON path (default \"auto\")\nstyle: \"light\"\n# show local files only; no network (TUI-mode only)\nlocal: true\n# mouse support (TUI-mode only)\nmouse: true\n# use pager to display markdown\npager: true\n# word-wrap at width\nwidth: 80\n```\n\n## 🔒 Encryption: How It Works\n\nEncryption works by issuing symmetric keys (basically a generated password) and\nencrypting it with the local SSH public key generated by the open-source\n[charm][charmlib] library. That encrypted key is then sent up to our server.\nWe can’t read it since we don’t have your private key. When you want to decrypt\nsomething or view your stash, that key is downloaded from our server and\ndecrypted locally using the SSH private key. When you link accounts, the\nsymmetric key is encrypted for each new public key. This happens on your\nmachine and not our server, so we never see any unencrypted data.\n\n[charmlib]: https://github.com/charmbracelet/charm\n\n## Feedback\n\nWe’d love to hear your thoughts on this project. Feel free to drop us a note!\n\n* [Twitter](https://twitter.com/charmcli)\n* [The Fediverse](https://mastodon.social/@charmcli)\n* [Discord](https://charm.sh/chat)\n\n## License\n\n[MIT](https://github.com/charmbracelet/glow/raw/master/LICENSE)\n\n***\n\nPart of [Charm](https://charm.sh).\n\n<a href=\"https://charm.sh/\"><img alt=\"The Charm logo\" src=\"https://stuff.charm.sh/charm-badge.jpg\" width=\"400\"></a>\n\nCharm热爱开源 • Charm loves open source"
}
