{
  "name": "ncompress",
  "full_name": "ncompress",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Fast, simple LZW file compressor",
  "license": "Unlicense",
  "homepage": "https://github.com/vapier/ncompress",
  "versions": {
    "stable": "5.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/vapier/ncompress/archive/v5.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "96ec931d06ab827fccad377839bfb91955274568392ddecf809e443443aead46"
    },
    "head": {
      "url": "https://github.com/vapier/ncompress.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ncompress/blobs/sha256:f5a549a65439192ba3656d246d95c57979228f95d5c9ccfe26be0fd9744dae1d",
          "sha256": "f5a549a65439192ba3656d246d95c57979228f95d5c9ccfe26be0fd9744dae1d"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ncompress/blobs/sha256:9dbd83bf79e6dc3934b84e104305dc7772100aafe85a724275a821d3a4c68762",
          "sha256": "9dbd83bf79e6dc3934b84e104305dc7772100aafe85a724275a821d3a4c68762"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ncompress/blobs/sha256:1ed0a835e287915e90e45a75971aefd707578cf96ddcbe631fd8bab34000af98",
          "sha256": "1ed0a835e287915e90e45a75971aefd707578cf96ddcbe631fd8bab34000af98"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ncompress/blobs/sha256:c7bf47ebe6376a3b3a84b4441e8dff37c639cad3c00906a3aec98d6f2fdbe879",
          "sha256": "c7bf47ebe6376a3b3a84b4441e8dff37c639cad3c00906a3aec98d6f2fdbe879"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ncompress/blobs/sha256:d209c387414dfd51d7f7bf079edce89699d6a60eb248bf48d90d1977dd3dbc4d",
          "sha256": "d209c387414dfd51d7f7bf079edce89699d6a60eb248bf48d90d1977dd3dbc4d"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ncompress/blobs/sha256:b78cd2bde25384f42fd1f5d29ec6b1a909449e6f20c20c44c232885d0d99acbe",
          "sha256": "b78cd2bde25384f42fd1f5d29ec6b1a909449e6f20c20c44c232885d0d99acbe"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ncompress/blobs/sha256:55220d13762facae37b84f1b6fcc6ec696daee5cc8b8478b868f5f7e34123af2",
          "sha256": "55220d13762facae37b84f1b6fcc6ec696daee5cc8b8478b868f5f7e34123af2"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ncompress/blobs/sha256:e680253759776cc3de92aee1afac39c180f1758113bc56e25bbd469206df0c5a",
          "sha256": "e680253759776cc3de92aee1afac39c180f1758113bc56e25bbd469206df0c5a"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ncompress/blobs/sha256:7cc0946635cd04b532b9c458ec215f1631d08dea366741346308d0030edfa05b",
          "sha256": "7cc0946635cd04b532b9c458ec215f1631d08dea366741346308d0030edfa05b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": {
    "reason": ":provided_by_macos",
    "explanation": ""
  },
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/ncompress.rb",
  "ruby_source_checksum": {
    "sha256": "6efd7055e66f88cb63ff7706d3cbb5a60f82324b9c393aa78f782a57be285fa9"
  },
  "date_added": "2017-04-03T21:55:39+02:00",
  "readme": "# About\n\nThis is (N)compress.  It is an improved version of compress 4.1.\n\nCompress is a fast, simple LZW file compressor.  Compress does not have\nthe highest compression rate, but it is one of the fastest programs to\ncompress data.  Compress is the defacto standard in the UNIX community\nfor compressing files.\n\n(N)compress 4.2 introduced a special, fast compression hash algorithm.\nThis algorithm uses more memory than the old hash table. If you don't want\nthe faster hash table algorithm set 'Memory free for compress' below\n800000.\n\nStarting with compress 3.0, the output format changed in a backwards\nincompatible way.  This is not a big deal as compress 3.0 was first released\nin Jan 1985, while the first release of compress was available less than a\nyear prior.  There shouldn't be any need to produce files that only older\nversions of compress would accept.\n\nNewer versions of compress are still able to handle the output of older versions\nthough -- i.e. compress 3.0+ is able to decompress files produced by compress\n2.0 and older.\n\n# Building\n\nFor recent systems with GNU make, you can simply run `make` as the default\n'GNUMakefile' will get picked up.\n\n'build' is a menu driven shell script for compiling, testing and\ninstalling (N)compress. So to build and install (N)compress all you have to\ndo is run build.  Build will first test your system for default\nsettings. The current compile settings are stored in a special file\ncalled compress.def.\n\nFor user with problems with build there is a default makefile included\ncalled 'Makefile.def'. Also build is capable of generating a Makefile with\nall options (option genmake).\n\n# Support\n\nSend comments, complaints and especially patches relating to\n    https://github.com/vapier/ncompress/issues\n\n# Licensing\n\nThe ncompress code is released into the public domain.  See the\n[UNLICENSE](UNLICENSE) file for more details.\n\n# Patents\n\nAll existing patents on the LZW algorithm have\n[expired world-wide](http://en.wikipedia.org/wiki/LZW#Patent_issues).\nSo LZW is now patent free.\n\n# Remarks\n\n- Build is a bourne shell script. On some system it is necessary to type\n  'sh build'.\n\n- The build script usages tput for nice screen handling of the script.\n  If your system has no tput no problems.\n\n- For configuration testing build uses a lot of small C programs. During\n  those test stderr is redirected to /dev/null.\n  During the compilation of compress output is NOT redirected.\n\n- The /bin/sh under Ultrix can't handle ${var:-str} so use ksh for the\n  build script.\n\n- The output of (N)compress 4.2+ is not exactly the same as compress 4.0\n  because of different table reset point. The output of (N)compress 4.2+\n  is 100% compatible with compress 4.0.\n\n- Some systems has performance problems with reads bigger than BUFSIZ\n  (The read a head function is not working as expected). For those\n  system use the default BSIZE input buffer size.\n\n- compress can be slower on small files (<10Kb) because of a great\n  table reset overhead. Use cpio or tar to make 1 bigger file if\n  possible, it is faster and also gives a better compression ratio most\n  of the time.\n\n- files compressed on a large machine with more bits than allowed by\n  a version of compress on a smaller machine cannot be decompressed!  Use the\n  \"-b12\" flag to generate a file on a large machine that can be uncompressed\n  on a 16-bit machine."
}
