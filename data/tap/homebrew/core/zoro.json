{
  "name": "zoro",
  "full_name": "zoro",
  "tap": "homebrew/core",
  "oldname": "mr2",
  "oldnames": [
    "mr2"
  ],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Expose local server to external network",
  "license": "GPL-3.0-only",
  "homepage": "https://github.com/txthinking/zoro",
  "versions": {
    "stable": "20211230",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/txthinking/zoro/archive/v20211230.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "5e78704f4d955cc4fd6dcc3395392e52516f00296cb65454f6959d4b7b54e319"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoro/blobs/sha256:1494b28b437b7a43938455261dd3ec5f118d9f45ef85124893da72b948f57413",
          "sha256": "1494b28b437b7a43938455261dd3ec5f118d9f45ef85124893da72b948f57413"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoro/blobs/sha256:8a527ad3a8feeb3f659d75f0146843339e4377a63a72cd14e987c77bbebd3647",
          "sha256": "8a527ad3a8feeb3f659d75f0146843339e4377a63a72cd14e987c77bbebd3647"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoro/blobs/sha256:62e51e52666b734d3ab5bf05d39f2af1fa5bc657cc96c5c34e25fcddc2e0689c",
          "sha256": "62e51e52666b734d3ab5bf05d39f2af1fa5bc657cc96c5c34e25fcddc2e0689c"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoro/blobs/sha256:8f4b199fb8f35aaac204ae34d44c0df3d596b982d2adc50d2b3799b418bad6ef",
          "sha256": "8f4b199fb8f35aaac204ae34d44c0df3d596b982d2adc50d2b3799b418bad6ef"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoro/blobs/sha256:93d7641309e5826897e9407ed9f528240c68a22d7a8f0ac272321078718477fa",
          "sha256": "93d7641309e5826897e9407ed9f528240c68a22d7a8f0ac272321078718477fa"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoro/blobs/sha256:edbb86277a41769277b24643ec1b19652ab615b40d0760023477530a928535e0",
          "sha256": "edbb86277a41769277b24643ec1b19652ab615b40d0760023477530a928535e0"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoro/blobs/sha256:b018bcf6de41f3323380fe85ba6181e26540c61a46b9faa28a3fd845e04855a8",
          "sha256": "b018bcf6de41f3323380fe85ba6181e26540c61a46b9faa28a3fd845e04855a8"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zoro/blobs/sha256:0e5c2f190710ef2be7b10d20f89d3db1cecdad89ed9fc40e3de57e0aebdcad01",
          "sha256": "0e5c2f190710ef2be7b10d20f89d3db1cecdad89ed9fc40e3de57e0aebdcad01"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/zoro.rb",
  "ruby_source_checksum": {
    "sha256": "d66d20a6d187bc4ad387b8ebe1b9faad49f22114ef68fdb62406e0e01a4628ab"
  },
  "date_added": "2021-12-31T18:13:45+00:00",
  "readme": "# zoro\n\n[中文](README_ZH.md)\n\nzoro (mr2) can help you expose local server to external network. **Support both TCP/UDP**, of course support HTTP/HTTPS. Keep it **simple**, **stupid**.\n\n❤️ A project by [txthinking.com](https://www.txthinking.com)\n\n### Install via [nami](https://github.com/txthinking/nami)\n\n```\nnami install zoro\n```\n\n### Install via brew\n\n```\nbrew install zoro\n```\n\n### Usage\n\n```\nNAME:\n   zoro - Expose local TCP and UDP server to external network\n\nUSAGE:\n   zoro [global options] command [command options] [arguments...]\n\nCOMMANDS:\n   server       Run as server mode\n   client       Run as client mode\n   httpsserver  Run as https server mode\n   httpsclient  Run as https client mode\n   help, h      Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --help, -h     show help (default: false)\n   --version, -v  print the version (default: false)\n```\n\n## `server` and `client`\n\nOn remote server. Note that the firewall opens TCP and UDP on all relevant ports\n\n```\n$ zoro server --listen :9999 --password password\n```\n\n> More parameters: $ zoro server --help\n\nOn local. Assume your remote zoro server is `1.2.3.4:9999`, your local server is `127.0.0.1:8080`, want the remote server to open port `8888`\n\n```\n$ zoro client --server 1.2.3.4:9999 --password password --serverport 8888 --client 127.0.0.1:8080\n```\n\n> More parameters: $ zoro client --help\n\nThen access `1.2.3.4:8888` equals to access `127.0.0.1:8080`\n\n## `httpsserver` and `httpsclient`\n\nOn remote server. Assume your domain is `domain.com`, cert of `*.domain.com` is `./domain_com_cert.pem` and `./domain_com_cert_key.pem`, want https listen on `443`. Note that the firewall opens TCP on all relevant ports\n\n```\n$ zoro httpsserver --listen :9999 --password password --domain domain.com --cert ./domain_com_cert.pem --key ./domain_com_cert_key.pem --tlsport 443\n```\n\n> More parameters: $ zoro httpsserver --help\n\nOn local. Assume your remote zoro httpsserver is `1.2.3.4:9999`, your local HTTP 1.1 server is `127.0.0.1:8080`, want the remote server to open subdomain `hello`\n\n```\n$ zoro httpsclient --server 1.2.3.4:9999 --password password --subdomain hello --client 127.0.0.1:8080\n```\n\n> More parameters: $ zoro httpsclient --help\n\nThen access `https://hello.domain.com:443` equals to access `http://127.0.0.1:8080`\n\n## Example of `server` and `client`\n\n#### Expose local HTTP server\n\n```\n$ zoro client --server 1.2.3.4:9999 --password password --serverport 8888 --client 127.0.0.1:8080\n```\n\nThen access `1.2.3.4:8888` equals to access `127.0.0.1:8080`\n\n#### Expose local SSH\n\n```\n$ zoro client --server 1.2.3.4:9999 --password password --serverport 8888 --client 127.0.0.1:22\n```\n\nThen access `1.2.3.4:8888` equals to access `127.0.0.1:22`\n\n```\n$ ssh -oPort=8888 yourlocaluser@1.2.3.4\n```\n\n#### Expose local DNS server\n\n```\n$ zoro client --server 1.2.3.4:9999 --password password --serveport 8888 --client 127.0.0.1:53\n```\n\nThen access `1.2.3.4:8888` equals to access `127.0.0.1:53`\n\n```\n$ dig github.com @1.2.3.4 -p 8888\n```\n\n#### Expose local directory via HTTP\n\n```\n$ zoro client --server 1.2.3.4:9999 --password password --serverport 8888 --dir /path/to/www --dirport 8080\n```\n\nThen access `1.2.3.4:8888` equals to access `127.0.0.1:8080`, web root is /path/to/www\n\n#### Expose any TCP/UDP service\n\n```\n...\n```\n\n## About UDP\n\nIn some cases of multi-layer NAT, UDP may fail. I passed the test when I connected directly to the Wi-Fi provided by the ISP.\n\n## License\n\nLicensed under The GPLv3 License"
}
