{
  "name": "dynet",
  "full_name": "dynet",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Dynamic Neural Network Toolkit",
  "license": "Apache-2.0",
  "homepage": "https://github.com/clab/dynet",
  "versions": {
    "stable": "2.1.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/clab/dynet/archive/2.1.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "014505dc3da2001db54f4b8f3a7a6e7a1bb9f33a18b6081b2a4044e082dab9c8"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dynet/blobs/sha256:326d11401b0db3d2294c46c7f3835cf497954f61fd14f8b6508461ef7ec6d8cf",
          "sha256": "326d11401b0db3d2294c46c7f3835cf497954f61fd14f8b6508461ef7ec6d8cf"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dynet/blobs/sha256:5344a9cc883ddbea6def01dc950bed7aca9fe06ba67d52d10349ef46af17879b",
          "sha256": "5344a9cc883ddbea6def01dc950bed7aca9fe06ba67d52d10349ef46af17879b"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dynet/blobs/sha256:812e42a82c70b8c049582c897d8d6d645c7892cb29fe742bc4c857f6d915cb44",
          "sha256": "812e42a82c70b8c049582c897d8d6d645c7892cb29fe742bc4c857f6d915cb44"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dynet/blobs/sha256:88af1a5787e4b2d6919b16a94c72041009f72f2e0c58b03e11410206aa7b3eab",
          "sha256": "88af1a5787e4b2d6919b16a94c72041009f72f2e0c58b03e11410206aa7b3eab"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dynet/blobs/sha256:ad0cf700f000d6b03ad08ec1074508eb01f442019f6e1c59fe7a83325bb84add",
          "sha256": "ad0cf700f000d6b03ad08ec1074508eb01f442019f6e1c59fe7a83325bb84add"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dynet/blobs/sha256:8bd7104e80fd7166539f40cf30f4c67ac643f096920582ec6702f81b06ff6910",
          "sha256": "8bd7104e80fd7166539f40cf30f4c67ac643f096920582ec6702f81b06ff6910"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dynet/blobs/sha256:d699aaf34e601dca84a10d735a822954de02b2139757699da77df2632d9ae95c",
          "sha256": "d699aaf34e601dca84a10d735a822954de02b2139757699da77df2632d9ae95c"
        },
        "mojave": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dynet/blobs/sha256:edc5ba7539f3c224b091ae08b2f23ae667f6851ebbc10515e410fbe2efb2aec4",
          "sha256": "edc5ba7539f3c224b091ae08b2f23ae667f6851ebbc10515e410fbe2efb2aec4"
        },
        "high_sierra": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/dynet/blobs/sha256:a8b5c58b84c07911937f5b2c633e38e884f860ac97fc45881bfa817f6045c467",
          "sha256": "a8b5c58b84c07911937f5b2c633e38e884f860ac97fc45881bfa817f6045c467"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dynet/blobs/sha256:d6b8b9842ad483b362f47b1a5562e4cf839c26be13dd4fc525ed456f1dae230c",
          "sha256": "d6b8b9842ad483b362f47b1a5562e4cf839c26be13dd4fc525ed456f1dae230c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "eigen"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [
    "freeling"
  ],
  "conflicts_with_reasons": [
    "freeling ships its own copy of dynet"
  ],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/dynet.rb",
  "ruby_source_checksum": {
    "sha256": "917e0ab1fb904cab7d38a0c087df8846af6fd2bab5255db51789f9d27c3708b5"
  },
  "date_added": "2020-01-27T19:41:07-05:00",
  "readme": "<div align=\"center\">\n  <img alt=\"DyNet\" src=\"doc/source/images/dynet_logo.png\"><br><br>\n</div>\n\n---\n\n[![Build Status (Travis CI)](https://travis-ci.org/clab/dynet.svg?branch=master)](https://travis-ci.org/clab/dynet)\n[![Build Status (AppVeyor)](https://ci.appveyor.com/api/projects/status/github/clab/dynet?svg=true)](https://ci.appveyor.com/project/danielh/dynet-c3iuq)\n[![Build Status (Docs)](https://readthedocs.org/projects/dynet/badge/?version=latest)](http://dynet.readthedocs.io/en/latest/)\n[![PyPI version](https://badge.fury.io/py/dyNET.svg)](https://badge.fury.io/py/dyNET)\n\nThe Dynamic Neural Network Toolkit\n\n- [General](#general)\n- [Installation](#installation)\n  - [C++](#c-installation)\n  - [Python](#python-installation)\n- [Getting Started](#getting-started)\n- [Citing](#citing)\n- [Releases and Contributing](#releases-and-contributing)\n\n\n## General\n\nDyNet is a neural network library developed by Carnegie Mellon University and many others. It is written in C++ (with bindings in Python) and is designed to be efficient when run on either CPU or GPU, and to work well with networks that have dynamic structures that change for every training instance. For example, these kinds of networks are particularly important in natural language processing tasks, and DyNet has been used to build state-of-the-art systems for [syntactic parsing](https://github.com/clab/lstm-parser), [machine translation](https://github.com/neubig/lamtram), [morphological inflection](https://github.com/mfaruqui/morph-trans), and many other application areas.\n\nRead the [documentation](http://dynet.readthedocs.io/en/latest/) to get started, and feel free to contact the [dynet-users group](https://groups.google.com/forum/#!forum/dynet-users) group with any questions (if you want to receive email make sure to select \"all email\" when you sign up). We greatly appreciate any bug reports and contributions, which can be made by filing an issue or making a pull request through the [github page](http://github.com/clab/dynet).\n\nYou can also read more technical details in our [technical report](https://arxiv.org/abs/1701.03980).\n\n## Getting started\n\nYou can find tutorials about using DyNet [here (C++)](http://dynet.readthedocs.io/en/latest/tutorial.html#c-tutorial) and [here (python)](http://dynet.readthedocs.io/en/latest/tutorial.html#python-tutorial), and [here (EMNLP 2016 tutorial)](https://github.com/clab/dynet_tutorial_examples).\n\nOne aspect that sets DyNet apart from other tookits is the **auto-batching** feature. See the [documentation](http://dynet.readthedocs.io/en/latest/minibatch.html) about batching.\n\nThe `example` folder contains a variety of examples in C++ and python.\n\n\n## Installation\n\nDyNet relies on a number of external programs/libraries including CMake and\nEigen. CMake can be installed from standard repositories.\n\nFor example on **Ubuntu Linux**:\n\n    sudo apt-get install build-essential cmake\n\nOr on **macOS**, first make sure the Apple Command Line Tools are installed, then\nget CMake, and Mercurial with either homebrew or macports:\n\n    xcode-select --install\n    brew install cmake  # Using homebrew.\n    sudo port install cmake # Using macports.\n\nOn **Windows**, see [documentation](http://dynet.readthedocs.io/en/latest/install.html#windows-support).\n\nTo compile DyNet you also need a [specific version of the Eigen\nlibrary](https://github.com/clab/dynet/releases/download/2.1/eigen-b2e267dc99d4.zip). **If you use any of the\nreleased versions, you may get assertion failures or compile errors.**\nYou can get it easily using the following command:\n\n    mkdir eigen\n    cd eigen\n    wget https://github.com/clab/dynet/releases/download/2.1/eigen-b2e267dc99d4.zip\n    unzip eigen-b2e267dc99d4.zip\n\n\n### C++ installation\n\nYou can install dynet for C++ with the following commands\n\n    # Clone the github repository\n    git clone https://github.com/clab/dynet.git\n    cd dynet\n    mkdir build\n    cd build\n    # Run CMake\n    # -DENABLE_BOOST=ON in combination with -DENABLE_CPP_EXAMPLES=ON also\n    # compiles the multiprocessing c++ examples\n    cmake .. -DEIGEN3_INCLUDE_DIR=/path/to/eigen -DENABLE_CPP_EXAMPLES=ON\n    # Compile using 2 processes\n    make -j 2\n    # Test with an example\n    ./examples/xor\n\nFor more details refer to the [documentation](http://dynet.readthedocs.io/en/latest/install.html#building)\n\n### Python installation\n\nYou can install DyNet for python by using the following command\n\n    pip install git+https://github.com/clab/dynet#egg=dynet\n\nFor more details refer to the [documentation](http://dynet.readthedocs.io/en/latest/python.html#installing-dynet-for-python)\n\n## Citing\n\nIf you use DyNet for research, please cite this report as follows:\n\n    @article{dynet,\n      title={DyNet: The Dynamic Neural Network Toolkit},\n      author={Graham Neubig and Chris Dyer and Yoav Goldberg and Austin Matthews and Waleed Ammar and Antonios Anastasopoulos and Miguel Ballesteros and David Chiang and Daniel Clothiaux and Trevor Cohn and Kevin Duh and Manaal Faruqui and Cynthia Gan and Dan Garrette and Yangfeng Ji and Lingpeng Kong and Adhiguna Kuncoro and Gaurav Kumar and Chaitanya Malaviya and Paul Michel and Yusuke Oda and Matthew Richardson and Naomi Saphra and Swabha Swayamdipta and Pengcheng Yin},\n      journal={arXiv preprint arXiv:1701.03980},\n      year={2017}\n    }\n\n\n## Contributing\n\nWe welcome any contribution to DyNet! You can find the contributing guidelines [here](http://dynet.readthedocs.io/en/latest/contributing.html)"
}
