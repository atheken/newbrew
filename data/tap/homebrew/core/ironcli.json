{
  "name": "ironcli",
  "full_name": "ironcli",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Go version of the Iron.io command-line tools",
  "license": null,
  "homepage": "https://github.com/iron-io/ironcli",
  "versions": {
    "stable": "0.1.6",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/iron-io/ironcli/archive/0.1.6.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "2b9e65c36e4f57ccb47449d55adc220d1c8d1c0ad7316b6afaf87c8d393caae6"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ironcli/blobs/sha256:6ddf8d70647db887d9f340734921103d352617dd54614bf3cf71b8330e57d0a7",
          "sha256": "6ddf8d70647db887d9f340734921103d352617dd54614bf3cf71b8330e57d0a7"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ironcli/blobs/sha256:b37c7bf74c87bd1ceebcad3b17bf9cc07f940339361be2601e4029f5f8244bbc",
          "sha256": "b37c7bf74c87bd1ceebcad3b17bf9cc07f940339361be2601e4029f5f8244bbc"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ironcli/blobs/sha256:cb54c07fa03cbe8487c51bd5edad0510741e2d5b32eabbd93f545a529db6bdc4",
          "sha256": "cb54c07fa03cbe8487c51bd5edad0510741e2d5b32eabbd93f545a529db6bdc4"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ironcli/blobs/sha256:cda14c4a548c7dbc63045566cbd9d2c47b0fa12934436c63c9505bf38ad5173b",
          "sha256": "cda14c4a548c7dbc63045566cbd9d2c47b0fa12934436c63c9505bf38ad5173b"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ironcli/blobs/sha256:232ec828638d85d59736812abb50c879000f430724fe1575375ef0a41777a52e",
          "sha256": "232ec828638d85d59736812abb50c879000f430724fe1575375ef0a41777a52e"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ironcli/blobs/sha256:99be404dee323b0bb405e77576414392ce3ff66462230efa129636e6a4e2c2a3",
          "sha256": "99be404dee323b0bb405e77576414392ce3ff66462230efa129636e6a4e2c2a3"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ironcli/blobs/sha256:c4f4ad82734f93b32a2f64e1adaaf493fa38b4e34cbc9298fbbdc02851003343",
          "sha256": "c4f4ad82734f93b32a2f64e1adaaf493fa38b4e34cbc9298fbbdc02851003343"
        },
        "sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ironcli/blobs/sha256:14d4bcd4ac89e89fb09b27994ba372d1e25690724c99b7ffbfb0231466c01bca",
          "sha256": "14d4bcd4ac89e89fb09b27994ba372d1e25690724c99b7ffbfb0231466c01bca"
        },
        "el_capitan": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ironcli/blobs/sha256:62bed7f56cf23a148407527ff2b1234638ae0b365806ccc79c602ee081eed1dc",
          "sha256": "62bed7f56cf23a148407527ff2b1234638ae0b365806ccc79c602ee081eed1dc"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ironcli/blobs/sha256:65022e0f3c0a56a87bceb8bd8dd8d6a786b77d70c00c9170e5fc30e473a79264",
          "sha256": "65022e0f3c0a56a87bceb8bd8dd8d6a786b77d70c00c9170e5fc30e473a79264"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "dep",
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": true,
  "disable_date": "2022-09-14",
  "disable_reason": "unmaintained",
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/ironcli.rb",
  "ruby_source_checksum": {
    "sha256": "baa10a3c2e59c189178161d6c23e35d6a54c8d12b8cb4a3b18f8510cc99d7927"
  },
  "date_added": "2016-04-05T09:16:41+01:00",
  "readme": "# IronCLI\n\nGo version of the Iron.io command line tools.\n\n## Install\n\n### Quick and Easy (Recommended)\n\n`curl -sSL https://cli.iron.io/install | sh`\n\nIf you're concerned about the [potential insecurity](http://curlpipesh.tumblr.com/)\nof using `curl | sh`, feel free to use a two-step version of our installation and examine our\ninstallation script:\n\n```bash\ncurl -f -sSL https://cli.iron.io/install -O\nsh install\n```\n\n#### `curl | sh` as an Installation Method?\n\nWe'd like to explain why we're telling you to `curl | sh` to install this software.\nThe script at https://cli.iron.io/install has some relatively simple logic to download the\nright `ironcli` binary for your platform. When you run that script by piping the `curl` output\ninto `sh`, you're trusting us that it's safe and won't harm your computer. We hope that you do!\nBut if you don't please see the section just below this one on how to download and run the binary\nyourself without an install script.\n\n### See [other installation methods](#other-installation-methods) for more options.\n\n## Getting Started\n\n#### Before Getting Started\n\nBefore you can use IronWorker, be sure you've [created a free account with\nIron.io](http://www.iron.io) and [setup your Iron.io credentials on your\nsystem](http://dev.iron.io/worker/reference/configuration/) (either in a json\nfile or using ENV variables). You only need to do that once for your machine. If\nyou've done that, then you can continue.\n\n[See the official docs](http://dev.iron.io/worker/cli/) for more detailed info on using Docker for IronWorker.\n\n#### Actually Getting Started\n\nThe easiest way to get started is by digging around.\n\n`$ iron --help` for example usage and a list of commands\n\n## Contributing\n\nGive us a pull request! File a bug!\n\nSince go1.5, we are lab rats in the go1.5 vendoring experiment. This eliminates\nthe need to modify import paths and depend on package maintainers not to break things.\nFor more info, see: <https://golang.org/s/go15vendor>.\n\nWe use [dep](https://github.com/golang/dep) to manage the vendoring. To build ironcli:\n\n```sh\ndep ensure\ngo build\n```\n\n## Other Installation Methods\n\n### Download Yourself\n\nGrab the latest version for your system on the [Releases](https://github.com/iron-io/ironcli/releases) page.\n\nYou can either run the binary directly or add somewhere in your $PATH.\n\n### Use the iron/cli Docker image\n\nIf you have Docker installed, then you don't need to install anything else to use this.\nAll the commands are the same, but instead of starting the command with `iron`, change it to:\n\n```sh\ndocker run --rm -it -v \"$PWD\":/app -w /app iron/cli ...\n```\n\nIf you're using the Docker image, you either need to have your `iron.json` file in the local directory (it won't pick it up from $HOME),\nor set your Iron credentials in environment variables:\n\n```sh\nexport IRON_TOKEN=YOURTOKEN\nexport IRON_PROJECT_ID=YOURPROJECT_ID\n```\n\nAnd then use `-e` flags with the docker run command:\n\n```sh\ndocker run --rm -it -e IRON_TOKEN -e IRON_PROJECT_ID -v \"$PWD\":/app -w /app iron/cli ...\n```\n\non OSX with [HomeBrew](https://brew.sh):\n\n```sh\nbrew install ironcli\n```"
}
