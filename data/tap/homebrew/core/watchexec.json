{
  "name": "watchexec",
  "full_name": "watchexec",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Execute commands when watched files change",
  "license": "Apache-2.0",
  "homepage": "https://github.com/watchexec/watchexec",
  "versions": {
    "stable": "1.22.3",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/watchexec/watchexec/archive/refs/tags/v1.22.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "698ed1dc178279594542f325b23f321c888c9c12c1960fe11c0ca48ba6edad76"
    },
    "head": {
      "url": "https://github.com/watchexec/watchexec.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/watchexec/blobs/sha256:4ae9d3c73b16b82ea33f71f443f6fe2a6a9fdfea88a2fc52e23a690522598f40",
          "sha256": "4ae9d3c73b16b82ea33f71f443f6fe2a6a9fdfea88a2fc52e23a690522598f40"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/watchexec/blobs/sha256:74bb10397923802ffd6d6f1da2e24bb79e03501aeacb8bb5cb856af25d9c1614",
          "sha256": "74bb10397923802ffd6d6f1da2e24bb79e03501aeacb8bb5cb856af25d9c1614"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/watchexec/blobs/sha256:f25e5a2ffe2c5179bf322d25568d19e60a1fd439dd189f40f527ff4319b2291b",
          "sha256": "f25e5a2ffe2c5179bf322d25568d19e60a1fd439dd189f40f527ff4319b2291b"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/watchexec/blobs/sha256:fd5e0a49079d6eedef46b27d4cf167cd0ddb0e12c79d9652dd6c3c8c07f8d1c7",
          "sha256": "fd5e0a49079d6eedef46b27d4cf167cd0ddb0e12c79d9652dd6c3c8c07f8d1c7"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/watchexec/blobs/sha256:18751052458ba233a489ee07d0ea55b86061b3b72c511aec6010aa8ffe9aac9f",
          "sha256": "18751052458ba233a489ee07d0ea55b86061b3b72c511aec6010aa8ffe9aac9f"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/watchexec/blobs/sha256:f2110a8eb92f4bd7163fec5dafafc7ae152fa2f82d8e9d4d0c1e98a35341746c",
          "sha256": "f2110a8eb92f4bd7163fec5dafafc7ae152fa2f82d8e9d4d0c1e98a35341746c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/watchexec/blobs/sha256:58abe3ed90971e6fe00290562060e882c8e7d80a00aaa0aa724eb091da3e4e5c",
          "sha256": "58abe3ed90971e6fe00290562060e882c8e7d80a00aaa0aa724eb091da3e4e5c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "zlib"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/watchexec.rb",
  "ruby_source_checksum": {
    "sha256": "cc312270ac3eef8708d5e301d588cd5ce27dea05eca5f9061adf0c16ea2f07f2"
  },
  "date_added": "2017-01-18T10:14:47+00:00",
  "readme": "[![CI status on main branch](https://github.com/watchexec/watchexec/actions/workflows/tests.yml/badge.svg)](https://github.com/watchexec/watchexec/actions/workflows/tests.yml)\n\n# Watchexec\n\nSoftware development often involves running the same commands over and over. Boring!\n\n`watchexec` is a **simple**, standalone tool that watches a path and runs a command whenever it detects modifications.\n\nExample use cases:\n\n* Automatically run unit tests\n* Run linters/syntax checkers\n* Rebuild artifacts\n\n\n## Features\n\n* Simple invocation and use, does not require a cryptic command line involving `xargs`\n* Runs on OS X, Linux, and Windows\n* Monitors current directory and all subdirectories for changes\n* Coalesces multiple filesystem events into one, for editors that use swap/backup files during saving\n* Loads `.gitignore` and `.ignore` files\n* Uses process groups to keep hold of forking programs\n* Provides the paths that changed in environment variables\n* Does not require a language runtime, not tied to any particular language or ecosystem\n* [And more!](./crates/cli/#features)\n\n\n## Quick start\n\nWatch all JavaScript, CSS and HTML files in the current directory and all subdirectories for changes, running `npm run build` when a change is detected:\n\n    $ watchexec -e js,css,html npm run build\n\nCall/restart `python server.py` when any Python file in the current directory (and all subdirectories) changes:\n\n    $ watchexec -r -e py -- python server.py\n\nMore usage examples: [in the CLI README](./crates/cli/#usage-examples)!\n\n## Install\n\n<a href=\"https://repology.org/project/watchexec/versions\"><img align=\"right\" src=\"https://repology.org/badge/vertical-allrepos/watchexec.svg\" alt=\"Packaging status\"></a>\n\n- With [your package manager](./doc/packages.md) for Arch, Debian, Homebrew, Nix, Scoop, Chocolateyâ€¦\n- From binary with [Binstall](https://github.com/cargo-bins/cargo-binstall): `cargo binstall watchexec-cli`\n- As [pre-built binary package from Github](https://github.com/watchexec/watchexec/releases/latest)\n- From source with Cargo: `cargo install --locked watchexec-cli`\n\nAll options in detail: [in the CLI README](./crates/cli/#installation),\nin the online help (`watchexec -h`, `watchexec --help`, or `watchexec --manual`),\nand [in the manual page](./doc/watchexec.1.md) ([PDF](./doc/watchexec.1.pdf)).\n\n\n## Augment\n\nWatchexec pairs well with:\n\n- [checkexec](https://github.com/kurtbuilds/checkexec): to run only when source files are newer than a target file\n- [just](https://github.com/casey/just): a modern alternative to `make`\n- [systemfd](https://github.com/mitsuhiko/systemfd): socket-passing in development\n\n## Extend\n\n- [watchexec library](./crates/lib/): to create more specialised watchexec-powered tools! such as:\n  - [cargo watch](https://github.com/watchexec/cargo-watch): for Rust/Cargo projects.\n- [clearscreen](https://github.com/watchexec/clearscreen): to clear the (terminal) screen on every platform.\n- [command group](https://github.com/watchexec/command-group): to run commands in process groups.\n- [ignore files](./crates/ignore-files/): to find, parse, and interpret ignore files.\n- [project origins](./crates/project-origins/): to find the origin(s) directory of a project.\n- [notify](https://github.com/notify-rs/notify): to respond to file modifications (third-party).\n- [globset](https://crates.io/crates/globset): to match globs (third-party)."
}
