{
  "name": "scry",
  "full_name": "scry",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Code analysis server for Crystal programming language",
  "license": "MIT",
  "homepage": "https://github.com/crystal-lang-tools/scry/",
  "versions": {
    "stable": "0.9.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/crystal-lang-tools/scry/archive/v0.9.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "53bf972557f8b6a697d2aa727df465d6e7d04f6426fcd4559a4d77c90becad81"
    },
    "head": {
      "url": "https://github.com/crystal-lang-tools/scry.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_monterey": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/scry/blobs/sha256:e2b0c14e2bf3ca241385406bba1cdc4b7a317bae8c0472832468a882fbee4aef",
          "sha256": "e2b0c14e2bf3ca241385406bba1cdc4b7a317bae8c0472832468a882fbee4aef"
        },
        "arm64_big_sur": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/scry/blobs/sha256:84dae99092b3c1a96d098ad5f8d17148e9780d3d142ebb63401e78d95fd43df0",
          "sha256": "84dae99092b3c1a96d098ad5f8d17148e9780d3d142ebb63401e78d95fd43df0"
        },
        "monterey": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/scry/blobs/sha256:c1881e57ce99aa809f127209f7ab32c1e689cb4d0d8285d410db06ad44c0b406",
          "sha256": "c1881e57ce99aa809f127209f7ab32c1e689cb4d0d8285d410db06ad44c0b406"
        },
        "big_sur": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/scry/blobs/sha256:8560c26448338c483c2e5aaa488d39156260fa2e891bec02520ae8b8d9e1bcd1",
          "sha256": "8560c26448338c483c2e5aaa488d39156260fa2e891bec02520ae8b8d9e1bcd1"
        },
        "catalina": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/scry/blobs/sha256:da67d98abe3010dc12f6a4152a89dd86a79e1dd098d67afec4a07bfe30c0ccdd",
          "sha256": "da67d98abe3010dc12f6a4152a89dd86a79e1dd098d67afec4a07bfe30c0ccdd"
        },
        "mojave": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/scry/blobs/sha256:0f243e9970f781e847c7b6906d743e08c1f684c37797ecfd962a1617f7ce8b8f",
          "sha256": "0f243e9970f781e847c7b6906d743e08c1f684c37797ecfd962a1617f7ce8b8f"
        },
        "x86_64_linux": {
          "cellar": "/home/linuxbrew/.linuxbrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/scry/blobs/sha256:9aa343ca7529d5b803fa98ef2c702cc63423233a376963ea590a89458de61545",
          "sha256": "9aa343ca7529d5b803fa98ef2c702cc63423233a376963ea590a89458de61545"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "bdw-gc",
    "crystal",
    "libevent",
    "pcre"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": true,
  "disable_date": "2023-01-01",
  "disable_reason": "does_not_build",
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/scry.rb",
  "ruby_source_checksum": {
    "sha256": "77c53d84b68818ffaf0b56e5f0b5e9fe03ab90e69888de4c4b1edeab24535d91"
  },
  "date_added": "2021-07-14T10:50:40+00:00",
  "readme": "# Scry\n\n> Please see https://github.com/elbywan/crystalline âœ¨ Thanks to [@elbywan](https://github.com/elbywan)\n\n[![image](https://user-images.githubusercontent.com/3067335/220186770-d8d90178-500e-478c-87a2-5ff5fef2d4da.png)](https://github.com/elbywan/crystalline)\n\n\n<!-- [![Join the chat at https://gitter.im/crystal-scry/Lobby](https://badges.gitter.im/crystal-scry/Lobby.svg)](https://gitter.im/crystal-scry/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status](https://travis-ci.org/crystal-lang-tools/scry.svg?branch=master)](https://travis-ci.org/crystal-lang-tools/scry)\n\n![Scry logo](https://i.imgur.com/ticTfT8.png) -->\n\nScry is a code analysis server for [Crystal](http://crystal-lang.org).\nIt is an implementation of a [common language protocol](https://code.visualstudio.com/blogs/2016/06/27/common-language-protocol).\nIt is being built as a server for VSCode, but is compatible with any\nclient that implements this [protocol](https://microsoft.github.io/language-server-protocol).\n\nThe server is implemented in Crystal.\n\n## Installation\n\nTo install Scry download it from the [releases page](https://github.com/crystal-lang-tools/scry/releases) or compile the latest version using:\n\n> **Note:** Crystal is required in order to compile Scry.\n\n```bash\ngit clone https://github.com/crystal-lang-tools/scry.git\ncd scry\nshards build --verbose --release\n```\n\nThen, set your LSP client's `scry` binary path to point to `scry/bin/scry`.\n\n## Known issues\n\n- Completion feature is still experimental.\n- Unexpected diagnostics can appear on files using implicit `require`, try using explicit `require` at top of your files.\n- Go to definition only works for some methods and variables. Go to classes or macros definition is not supported yet.\n- Symbol listing works per file, searching for workspace symbols is not supported yet.\n\n## Roadmap\n\nOngoing, in [our](https://github.com/kofno/scry#contributors) free time.\n\nThe goal is to implement all of the currently supported Language Server features.\n\n- [Completion](https://microsoft.github.io/language-server-protocol/specification#textDocument_completion) **(WIP)**: compute completion items at a given cursor position.\n- [Diagnostics](https://microsoft.github.io/language-server-protocol/specification#textDocument_publishDiagnostics) **(WIP)**: provides problem detection for text document.\n- [Document Formatting](https://microsoft.github.io/language-server-protocol/specification#textDocument_formatting) **(WIP)**: this includes formatting of whole documents, document ranges and formatting on type.\n- [Goto Definition](https://microsoft.github.io/language-server-protocol/specification#textDocument_definition): **(WIP)** provides go to definition support for a symbol selected in a text document.\n- [Document Highlights](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentHighlight): highlights all 'equal' symbols in a text document.\n- [Hover](https://microsoft.github.io/language-server-protocol/specification#textDocument_hover): provides hover information for a symbol selected in a text document.\n- [Signature Help](https://microsoft.github.io/language-server-protocol/specification#textDocument_signatureHelp): provides signature help for a symbol selected in a text document.\n- [Find References](https://microsoft.github.io/language-server-protocol/specification#textDocument_references): finds all project-wide references for a symbol selected in a text document.\n- [List Document Symbols](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol): **(WIP)** lists all symbols defined in a text document.\n- [List Workspace Symbols](https://microsoft.github.io/language-server-protocol/specification#workspace_symbol): **(WIP)** lists all project-wide symbols.\n- [Code Actions:](https://microsoft.github.io/language-server-protocol/specification#textDocument_codeAction) compute commands for a given text document and range.\n- [CodeLens](https://microsoft.github.io/language-server-protocol/specification#textDocument_codeLens): compute CodeLens statistics for a given text document. (OK, maybe not this one)\n- [rename](https://microsoft.github.io/language-server-protocol/specification#textDocument_rename): project-wide rename of a symbol.\n\n## Contributing\n\n1. Fork it <https://github.com/crystal-lang-tools/scry/fork>\n2. Create your feature branch `git checkout -b my-new-feature`\n3. Commit your changes `git commit -am 'Add some feature'`\n4. Push to the branch `git push origin my-new-feature`\n5. Create a new Pull Request\n\n## Contributors\n\n- [@kofno](https://github.com/kofno) Ryan L. Bell - creator, maintainer\n- [@keplersj](https://github.com/keplersj) Kepler Sticka-Jones - contributor\n- [@faustinoaq](https://github.com/faustinoaq) Faustino Aguilar - contributor\n- [@laginha87](https://github.com/laginha87) Filipe Correia - contributor\n- [@bmulvihill](https://github.com/bmulvihill) Bryan Mulvihill - contributor\n\n[See all of Scry's contributors](https://github.com/crystal-lang-tools/scry/graphs/contributors)"
}
