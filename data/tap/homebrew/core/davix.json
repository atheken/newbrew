{
  "name": "davix",
  "full_name": "davix",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Library and tools for advanced file I/O with HTTP-based protocols",
  "license": "LGPL-2.1-or-later",
  "homepage": "https://github.com/cern-fts/davix",
  "versions": {
    "stable": "0.8.4",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/cern-fts/davix/releases/download/R_0_8_4/davix-0.8.4.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "519d56f746e86ea3fd615bc49e559b520df07e051e1ca3d8c092067958f3b2b7"
    },
    "head": {
      "url": "https://github.com/cern-fts/davix.git",
      "branch": "devel"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/davix/blobs/sha256:d6c39dcc41daaa79286a5f843a96438016dd3dc12e6b90496fa0c0a8c98879de",
          "sha256": "d6c39dcc41daaa79286a5f843a96438016dd3dc12e6b90496fa0c0a8c98879de"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/davix/blobs/sha256:63ddded6d7553a2b25b7577a90b6f0b26d71a9b0491aeb0538e6e8d96a453dc2",
          "sha256": "63ddded6d7553a2b25b7577a90b6f0b26d71a9b0491aeb0538e6e8d96a453dc2"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/davix/blobs/sha256:8077eff019705fe76a8bbc059e12a3925cd5e3619a1f5b1709a0efe9d7117dfb",
          "sha256": "8077eff019705fe76a8bbc059e12a3925cd5e3619a1f5b1709a0efe9d7117dfb"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/davix/blobs/sha256:6afd4fc8493c01b9d575ed87d170a8ca3b06b88c6fa7603b43dc8fa124488194",
          "sha256": "6afd4fc8493c01b9d575ed87d170a8ca3b06b88c6fa7603b43dc8fa124488194"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/davix/blobs/sha256:d5d56f9c9fe987cb03a000f86a0b0a7af42a801765ea7ec4c27264e41834f49d",
          "sha256": "d5d56f9c9fe987cb03a000f86a0b0a7af42a801765ea7ec4c27264e41834f49d"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/davix/blobs/sha256:dfa3470f6a0e655a4c07d5cdf4821e5ed115c1cce287208fe1feec7f7dcd79b0",
          "sha256": "dfa3470f6a0e655a4c07d5cdf4821e5ed115c1cce287208fe1feec7f7dcd79b0"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/davix/blobs/sha256:b41952cfa51be57c74dd2998a8c8d33234082d9b2ea9725d1b8b727bf1996235",
          "sha256": "b41952cfa51be57c74dd2998a8c8d33234082d9b2ea9725d1b8b727bf1996235"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake",
    "doxygen"
  ],
  "dependencies": [
    "openssl@3",
    "util-linux"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    {
      "python": "build"
    },
    "curl",
    "libxml2"
  ],
  "uses_from_macos_bounds": [
    {},
    {},
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/davix.rb",
  "ruby_source_checksum": {
    "sha256": "fcdfb72c5460cf6e2863c60f5f37ef91c9a8b9902225869e2893d396cdbcd181"
  },
  "date_added": "2014-05-28T07:19:28-07:00",
  "readme": "# Davix\n\n[![build status](https://gitlab.cern.ch/dmc/davix/badges/devel/pipeline.svg)](https://gitlab.cern.ch/dmc/davix/commits/devel)\n\n[Davix](http://dmc.web.cern.ch/projects/davix/home) aims to make the task of managing files over HTTP-based protocols simple. It is being developed by IT-ST at CERN, and while the project's purpose is its use on the [CERN grid](http://wlcg.web.cern.ch/), the functionality offered is generic.\n\n## Documentation\n\nVisit [https://davix.web.cern.ch](https://davix.web.cern.ch) to view the latest documentation.\n\n\n## HTTP File Management\nHTTP is gaining popularity for file management tasks, beyond its traditional use for serving web pages. It is versatile enough to be fit for this purpose; `PUT`, `MOVE` and `DELETE` requests can be used for basic file manipulation, for example. (uploading, moving, and deleting a file, respectively)\n\nSome common file-management operations are not possible to do with plain HTTP, however, which is why the [WebDAV](https://en.wikipedia.org/wiki/WebDAV) extensions were developed, which davix supports.\n\nDavix also supports a plethora of authentication methods:\n* x509 user certificate\n* VOMS proxy\n* RFC proxy with VOMS extensions support\n* username / password\n* AWS S3 compatible services\n* Microsoft Azure compatible services\n\n## Usage\nDavix provides a shared library as well as a few command line tools. The library offers two sets of APIs, a file-oriented and a POSIX-like interface.\n\nHere are some example invocations of the command-line tools.\n\n```\n# upload a file using a VOMS proxy\ndavix-put myfile https://someserver/dir/myfile -E /tmp/x509up_u1000\n# download a file from an Amazon S3 bucket\ndavix-get https://mybucket.s3.amazonaws.com/somefile --s3accesskey [..] --s3secretkey [..]\n# do an ls on a WebDAV-enabled server\ndavix-ls https://someserver/dir\n```\n\n## Compiling\n1. Install the necessary dependencies:\n   * cmake\n   * libxml2-devel\n   * openssl-devel\n\n2. Compile:\n```\ngit clone https://github.com/cern-fts/davix.git\ncd davix\ngit submodule update --recursive --init\nmkdir build && cd build\ncmake ..\nmake\n```\n\nYou can now try running an example command:\n```\n./src/tools/davix-get https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.0.1\n```\n\n## Release tarballs\n\nTo generate a blessed release tarball, run ``packaging/make-dist.sh`` from the root of this git repository.\nThe tarball will appear under ``./build``, and will correspond to whichever git commit or tag you're currently on.\n\n## Development\n\nThe official repository is the one on [GitHub](https://github.com/cern-fts/davix). It's automatically mirrored on [CERN Gitlab](https://gitlab.cern.ch/dmc/davix) for CI purposes. This means:\n* Use GitHub for new commits, issues, or pull requests.\n* Please don't commit directly on GitLab.\n* After a commit, GitLab will mirror the changes automatically, and run CI. Treat Gitlab as if it were ie a Jenkins CI instance.\n\nThe project uses a simplified [GitFlow](https://nvie.com/posts/a-successful-git-branching-model/) branching approach.\nThe main branch is the `devel` branch, with `master` being reserved only for tagged released.\n\nFeature branches are developed separately and merged into the `devel` branch.\nWhen preparing a release, either `devel` is merged directly into `master`\nor a release branch is created. Hotfix branches start from `master`, have a very\ntargeted objective before being merged back into `master` and should be employed \nonly in case of necessity. Changes done on release and hotfix branches \nmust be merged back into `devel`.\n\n## Contact\nSuggestions and patches are more than welcome. You can send an email to the [davix-devel](mailto:davix-devel@cern.ch) CERN mailing list, or contact directly the [current maintainer](mailto:georgios.bitzes@cern.ch)."
}
