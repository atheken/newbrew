{
  "name": "herrie",
  "full_name": "herrie",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Minimalistic audio player built upon Ncurses",
  "license": "BSD-2-Clause",
  "homepage": "https://github.com/EdSchouten/herrie",
  "versions": {
    "stable": "2.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/EdSchouten/herrie/releases/download/herrie-2.2/herrie-2.2.tar.bz2",
      "tag": null,
      "revision": null,
      "checksum": "142341072920f86b6eb570b8f13bf5fd87c06cf801543dc7d1a819e39eb9fb2b"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_monterey": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/herrie/blobs/sha256:6432c7e843bd2580b1b736d4df4cdc37a8e80133ec46e7707cd379e662f5f2ed",
          "sha256": "6432c7e843bd2580b1b736d4df4cdc37a8e80133ec46e7707cd379e662f5f2ed"
        },
        "arm64_big_sur": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/herrie/blobs/sha256:2e6dfaa27fef44c8bc0b4caf3250fed6dfcfca8cbdb5f8104a0ba1dc781371c1",
          "sha256": "2e6dfaa27fef44c8bc0b4caf3250fed6dfcfca8cbdb5f8104a0ba1dc781371c1"
        },
        "monterey": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/herrie/blobs/sha256:22afb3f4e7d5021cfd0dea01a4f64b8259134ce05b425882f118d2b40f9764ca",
          "sha256": "22afb3f4e7d5021cfd0dea01a4f64b8259134ce05b425882f118d2b40f9764ca"
        },
        "big_sur": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/herrie/blobs/sha256:41be543b395d9650113133b77d4d03d37febc9ecba23cb5f85abe8deb681f011",
          "sha256": "41be543b395d9650113133b77d4d03d37febc9ecba23cb5f85abe8deb681f011"
        },
        "catalina": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/herrie/blobs/sha256:8f1d86edb139e3385ac225852623f9c5018779a81b10c307a3ae872c1e64392d",
          "sha256": "8f1d86edb139e3385ac225852623f9c5018779a81b10c307a3ae872c1e64392d"
        },
        "mojave": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/herrie/blobs/sha256:4e3258f904116ff2eebbe9436ff3ea3bae676fe15bd0ea193d1d934353e2ffe3",
          "sha256": "4e3258f904116ff2eebbe9436ff3ea3bae676fe15bd0ea193d1d934353e2ffe3"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "pkg-config"
  ],
  "dependencies": [
    "gettext",
    "glib",
    "libid3tag",
    "libsndfile",
    "libvorbis",
    "mad"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "ncurses"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": true,
  "disable_date": "2022-07-31",
  "disable_reason": "repo_archived",
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/herrie.rb",
  "ruby_source_checksum": {
    "sha256": "26842c97aaf5e183b14d69f60405f79b66d53ffac59ac90f54e847852b1c04df"
  },
  "date_added": "2011-10-05T22:28:48-05:00",
  "readme": "Hello and thanks for downloading Herrie!\n\nThis document will discuss a small set of subjects that will help you\ninstall and use Herrie, but also ways to contact the developers to\nreport bugs and such.\n\n- What is Herrie?\n- How should I pronounce it?\n- What kind of platforms will it run on?\n- What are the dependencies of Herrie?\n- How do I compile and install Herrie?\n- I've installed it - now what?\n- How do I contact you (report bugs, ask questions, etc)?\n\nWhat is Herrie?\n~~~~~~~~~~~~~~~\nHerrie is a minimalistic music player that uses the command line. It is\nwritten to support a variety of operating systems, audio subsystems and\nfile formats, including playlists.\n\nHerrie has a split-screen user interface, with a playlist at the top of\nthe screen and a file browser at the bottom. When tracks are added to\nthe playlist, Herrie automatically consumes them one by one. It is thus\nan application that allows you to batch music for playback.\n\nHow should I pronounce it?\n~~~~~~~~~~~~~~~~~~~~~~~~~~\nHerrie is actually a Dutch word. Its meaning is similar to the English\nword 'clamour' (loud noise). Just pronounce it as the English given name\n'Harry' and you are a long way.\n\nWhat kind of platforms will it run on?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nHerrie should compile without a flaw on the following operating systems:\n\n- Cygwin\n- FreeBSD\n- Linux\n- Mac OS X (Darwin)\n- NetBSD\n- OpenBSD\n- Solaris\n\nThe application has been tested on little and big endian platforms, so\nthe chances are high it should just work on your obscure hardware as\nwell. At least Intel x86, SPARC and PowerPC should work.\n\nWhat are the dependencies of Herrie?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nHerrie is written in C and uses a lot of functions found in the GLib\nlibrary. It also uses some libraries for audio decompression and such.\nBelow is a list of libraries you should install prior to compiling\nHerrie:\n\n- dbus and dbus-glib (optional)\n- gettext (NLS, optional)\n- glib (requires 2.32)\n- libasound (ALSA, optional)\n- libao (AO, optional)\n- libcurl (HTTP and AudioScrobbler, optional)\n- libid3tag (MP3, optional)\n- libmad (MP3, optional)\n- libmodplug (optional)\n- libsndfile (requires 1.0.18, optional)\n- libvorbisfile (optional)\n- libxspf (optional)\n- ncursesw, ncurses or pdcurses (`XCurses')\n- pulseaudio (optional)\n\nAll optional dependencies can be disabled using the corresponding\nswitches below. On Debian-like systems, make sure to install all the\nappropriate -dev packages.\n\nHow do I compile and install Herrie?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nHerrie ships with a shellscript called `configure' which generates a\nMakefile for your specific system. Arguments can be passed to the\nconfigure script to change certain parameters:\n\n- no_dbus       Disable DBus integration\n- gst           Enable GStreamer format support\n- no_http       Disable support for HTTP audio streams\n- no_modplug    Disable libmodplug linkage\n- no_mp3        Disable MP3 audio file support\n- no_nls        Disable native language support\n- no_scrobbler  Disable AudioScrobbler support\n- no_sndfile    Disable libsndfile linkage (Wave/FLAC support)\n- no_vorbis     Disable Ogg Vorbis support\n- no_xspf       Disable XSPF (`Spiff') playlist support\n\n- alsa          Use ALSA audio output\n- ao            Use libao audio output\n- coreaudio     Use Apple's CoreAudio audio output\n- oss           Use Open Sound System output\n- null          Use placeholder audio output\n- pulse         Use PulseAudio audio output\n\n- ncurses       Use ncurses instead of ncursesw (breaks UTF-8 support)\n- xcurses       Build application against XCurses (PDCurses)\n\n- no_strip      Don't strip the application binary on installation\n- debug         Build with assertions and debug symbols\n- strict        Turn on stricter compiler flags for GCC\n- verbose       Print commands during compilation\n\nThere are also some environment variables which also have influence on\nthe generated Makefile:\n\n- CC            C compiler\n- CFLAGS        Prepend compiler flags\n- LDFLAGS       Prepend linkage flags\n- LINGUAS       Only install certain languages\n- INSTALL       install(1) application used by `make install'\n- CONFDIR       Change configuration file directory\n- MANDIR        Change Manual page directory\n- OS            Override operating system detection (for cross compilation)\n- PREFIX        Change installation prefix\n\nAfter running `./configure', a simple `make; make install' will suffice.\nWhen the DESTDIR variable is set during installation, its contents will\nbe prepended to the PREFIX. It is also possible to run the `configure'\nscript from a different directory, which causes all generated data to be\nstored in that directory.\n\nI've installed it - now what?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nHerrie also comes with a manual page. The manual page contains some more\ninformation about its basic usage and a list of configuration file\nswitches and keyboard bindings. Please take a look at it.\n\nHow do I contact you (report bugs, ask questions, etc)?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nWhen something goes wrong or when you have something to tell us, you can\ncontact us on IRC, but also by email. Please visit our website to obtain\nmore information on how to contact us:\n\n\thttp://herrie.info/"
}
