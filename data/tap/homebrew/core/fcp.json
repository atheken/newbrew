{
  "name": "fcp",
  "full_name": "fcp",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Significantly faster alternative to the classic Unix cp(1) command",
  "license": "BSD-3-Clause",
  "homepage": "https://github.com/Svetlitski/fcp/",
  "versions": {
    "stable": "0.2.1",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/Svetlitski/fcp/archive/refs/tags/v0.2.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "e835d014849f5a3431a0798bcac02332915084bf4f4070fb1c6914b1865295f2"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fcp/blobs/sha256:2581bfc5df020bbe4b83660fcf8c41d98f1bbadc4b2eeaa9d38e5d732706e1f3",
          "sha256": "2581bfc5df020bbe4b83660fcf8c41d98f1bbadc4b2eeaa9d38e5d732706e1f3"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fcp/blobs/sha256:86e9ee14f358f313fd20742cbc3c499853973ae51801cbc2a05cb467e8564bdf",
          "sha256": "86e9ee14f358f313fd20742cbc3c499853973ae51801cbc2a05cb467e8564bdf"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fcp/blobs/sha256:bb23fde600b15782fbf8d35106510d6f7dd8fcf869fde6571b066b81bea90aca",
          "sha256": "bb23fde600b15782fbf8d35106510d6f7dd8fcf869fde6571b066b81bea90aca"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fcp/blobs/sha256:0ab8468cb87e1b8e4c98492da40a211ba4afe8871a7dee9eb14899411515dcb2",
          "sha256": "0ab8468cb87e1b8e4c98492da40a211ba4afe8871a7dee9eb14899411515dcb2"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fcp/blobs/sha256:c042caa2bd2172e276c0655553ce7009598ae0b34dfbe6c38641382b57a02eea",
          "sha256": "c042caa2bd2172e276c0655553ce7009598ae0b34dfbe6c38641382b57a02eea"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fcp/blobs/sha256:f6623580eb5027ceb5acbe4a77d90009b4e5f2a702dfe8088b85afd56562f3f3",
          "sha256": "f6623580eb5027ceb5acbe4a77d90009b4e5f2a702dfe8088b85afd56562f3f3"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fcp/blobs/sha256:626455ae555f987dfc0f6d43a49be3bfdba29873622b0662ca05fb8c13ad70af",
          "sha256": "626455ae555f987dfc0f6d43a49be3bfdba29873622b0662ca05fb8c13ad70af"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fcp/blobs/sha256:73706dfe2bc62121136bb6ee95c3bb98f6ab584193078386abc23afc1e6f5ca6",
          "sha256": "73706dfe2bc62121136bb6ee95c3bb98f6ab584193078386abc23afc1e6f5ca6"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/fcp.rb",
  "ruby_source_checksum": {
    "sha256": "aa684e97c6970e1eed03522a8548def7e69f3243ba8cdfecad422f040573db50"
  },
  "date_added": "2021-06-24T03:28:11+00:00",
  "readme": "# fcp\n\n[![CI status](https://github.com/Svetlitski/fcp/actions/workflows/continuous_integration.yml/badge.svg?branch=master)](https://github.com/Svetlitski/fcp/actions/workflows/continuous_integration.yml)\n[![fcp crate](https://img.shields.io/crates/v/fcp.svg)](https://crates.io/crates/fcp)\n[![Packaging status](https://repology.org/badge/tiny-repos/fcp-faster-cp.svg)](https://repology.org/project/fcp-faster-cp/versions)\n\n\n`fcp` is a [significantly faster](#benchmarks) alternative to the classic Unix [`cp(1)`](https://man7.org/linux/man-pages/man1/cp.1.html) command.\n\n`fcp` aims to handle the most common use-cases of `cp` with much higher performance.\n\n`fcp` does _not_ aim to completely replace `cp` with its myriad options.\n\n**Note**: `fcp` is optimized for systems with an SSD. On systems with a HDD, `fcp` may exhibit poor performance.\n\n## Installation\n\nPlease note that `fcp` supports only Unix-like operating systems (e.g. Linux, macOS, etc.).\n\n### Pre-built binaries\n\nPre-built binaries for some systems can be found under [this repository's releases](https://github.com/Svetlitski/fcp/releases).\n\n### Via [`cargo`](https://github.com/rust-lang/cargo)\n\n`fcp` requires Rust version 1.53.0 or newer. `fcp` can be installed using `cargo` by running the following:\n\n```sh\ncargo install fcp\n```\n\n### Arch Linux\n\n`fcp` can be installed on Arch Linux via the [`fcp-bin` AUR](https://aur.archlinux.org/packages/fcp-bin/).\n\n### NixOS\n\nAs of NixOS 21.11 `fcp` is included in the stable channel. For earlier\nversions, `fcp` is available through `nixpkgs-unstable`. Assuming you've\nalready added the `nixpkgs-unstable` channel, `fcp` can be installed by running\nthe following:\n\n```sh\nnix-env -iA unstable.fcp\n```\n\n### macOS\n\n`fcp` can be installed on macOS via [Homebrew](https://brew.sh/) by running the following:\n\n```sh\nbrew install fcp\n```\n\n## Usage\n\nUsage information can be found by running `fcp --help`, and has been reproduced below:\n\n```\nfcp 0.2.1\n\nUSAGE:\n    fcp [OPTIONS] SOURCE DESTINATION_FILE\n    Copy SOURCE to DESTINATION_FILE, overwriting DESTINATION_FILE if it exists\n\n    fcp [OPTIONS] SOURCE ... DESTINATION_DIRECTORY\n    Copy each SOURCE into DESTINATION_DIRECTORY\n\nOPTIONS:\n    -h, --help\n            Output this usage information and exit.\n\n    -V, --version\n            Output version information and exit.\n```\n\n## Benchmarks\n\n`fcp` doesn't just _claim_ to be faster than `cp`, it _is_ faster than `cp`. As different operating systems display\ndifferent performance characteristics, the same benchmarks were run on both macOS and Linux.\n\n### macOS\n\nThe following benchmarks were run on a 2018 MacBook Pro<sup><a href=\"#footnote-1\">1</a></sup> (2.9 GHz 6-Core Intel Core i9, 16 GiB RAM, SSD) with [APFS](https://developer.apple.com/documentation/foundation/file_system/about_apple_file_system) as the filesystem.\n\n#### Large Files\n\nThe following shows the result of a benchmark which copies a directory containing 13 different 512 MB files using `cp` and `fcp`, with `fcp` being approximately **822x faster** on average (note the units of the axes for each plot)<sup><a href=\"#footnote-2\">2</a></sup>:\n\n![`fcp` is approximately 822x faster than `cp`, with `fcp`'s average time to copy being approximately 4.5 milliseconds, while `cp`'s average time to copy is approximately 3.7 seconds](https://user-images.githubusercontent.com/35482043/122131973-a3990080-cdff-11eb-92dc-3e0d5f47ac07.png)\n\n#### Linux Kernel Source\n\nThe following shows the result of a benchmark which copies the source tree of the Linux kernel using `cp` and `fcp`, with `fcp` being approximately 6x faster on average:\n\n![`fcp` is approximately 6x faster than `cp`, with `fcp`'s average time to copy being approximately 5.1 seconds, while `cp`'s average time to copy is approximately 30 seconds](https://user-images.githubusercontent.com/35482043/122131983-a7c51e00-cdff-11eb-8bbb-8c768998de56.png)\n\n### Linux\n\nThe following benchmarks were run on a bare-metal AWS EC2 instance (a1.metal, 16 CPUs, 32 GiB RAM, SSD) with [XFS](https://en.wikipedia.org/wiki/XFS) as the filesystem.\n\n#### Linux Kernel Source\n\nThe following shows the result of a benchmark which copies the source tree of the Linux kernel using `cp` and `fcp`, with `fcp` being approximately 10x faster on average:\n\n![`fcp` is nearly 10x faster than `cp`, with `fcp`'s average time to copy being approximately 675 milliseconds, while `cp`'s average time to copy is approximately 6.02 seconds](https://user-images.githubusercontent.com/35482043/122125946-ae9b6300-cdf6-11eb-97dd-0e0bfb916ede.png)\n\n#### Large Files\n\nThe following shows the result of a benchmark which copies a directory containing 13 different 512 MB files using `cp` and `fcp`, with `fcp` being approximately 1.4x faster on average:\n\n![`fcp` is approximately 1.4x faster than `cp, with `fcp`'s average time to copy being approximately 8 seconds, while `cp`'s average time to copy is approximately 11.3 seconds](https://user-images.githubusercontent.com/35482043/122125941-ae02cc80-cdf6-11eb-9899-a93ed0442f6f.png)\n\n\n## Methodology\n\n`fcp`'s high-performance can be attributed to several factors, but is primarily\nthe result of leveraging parallelism, distributing the work of walking\ndirectories and copying their contents across all of your machine's cores. This\nleads to a significant performance increase on systems with an SSD, as more I/O\nrequests are issued over the same period of time (as compared to a\nsingle-threaded approach), resulting in a higher-average queue depth, thus\nallowing higher utilization of the SSD (as a function of its maximum IOPS) and\ncorrespondingly higher throughput.\n\nAdditionally, on macOS (and perhaps in the future on other operating systems) `fcp`\nutilizes the system's underlying [copy-on-write](https://en.wikipedia.org/wiki/Copy-on-write)\ncapability, dramatically reducing the time needed to copy large files.\n\nThese two factors – in addition to an overall performance-conscious approach to this problem – serve\nto explain `fcp`'s significantly improved performance relative to `cp`.\n<br>\n<br>\n<br>\n\n<span id=\"footnote-1\">[1]</span> While in general [you should avoid benchmarking on\nlaptops](https://lemire.me/blog/my-sayings/), `fcp` is a developer tool and\nmany developers work primarily on laptops. Also unlike with Linux where you can\nrent by the second, the minimum tenancy for AWS EC2 macOS instances is 24\nhours, and these benchmarks took less than an hour.\n\n<span id=\"footnote-2\">[2]</span> The massive difference in performance in this case is due\nto `fcp` using `fclonefileat` and `fcopyfile` under the hood."
}
