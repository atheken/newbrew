{
  "name": "aws-sdk-cpp",
  "full_name": "aws-sdk-cpp",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "AWS SDK for C++",
  "license": "Apache-2.0",
  "homepage": "https://github.com/aws/aws-sdk-cpp",
  "versions": {
    "stable": "1.11.130",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/aws/aws-sdk-cpp.git",
      "tag": "1.11.130",
      "revision": "c84dab714ce4adfe87e09eae95870ce753259ebb",
      "checksum": null
    },
    "head": {
      "url": "https://github.com/aws/aws-sdk-cpp.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/aws-sdk-cpp/blobs/sha256:ee72049810eb47c14ba1815a172c176aa43930c093b3eab703eeda9c233f8711",
          "sha256": "ee72049810eb47c14ba1815a172c176aa43930c093b3eab703eeda9c233f8711"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/aws-sdk-cpp/blobs/sha256:3b4938c578afd6ccb6406a68fe063dd7be83e5a4bde62a4a1857cd414f63a842",
          "sha256": "3b4938c578afd6ccb6406a68fe063dd7be83e5a4bde62a4a1857cd414f63a842"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/aws-sdk-cpp/blobs/sha256:d17b85586d6bebbd2d2b32a199b62eddc20d696e5e6ae1e3865914971b7546ac",
          "sha256": "d17b85586d6bebbd2d2b32a199b62eddc20d696e5e6ae1e3865914971b7546ac"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/aws-sdk-cpp/blobs/sha256:9e8e62082552a928039123290fd37e02c92b85e7fded1e69aea95259ba4218ee",
          "sha256": "9e8e62082552a928039123290fd37e02c92b85e7fded1e69aea95259ba4218ee"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/aws-sdk-cpp/blobs/sha256:0052c9c37e79805dd1320ce780f027df37fbcdb798218b5058bba7764075f14a",
          "sha256": "0052c9c37e79805dd1320ce780f027df37fbcdb798218b5058bba7764075f14a"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/aws-sdk-cpp/blobs/sha256:2fd6ccee90e8587fff4cd23bb0c1ca8c1df16d2eb96d31a15bca248f869cf27a",
          "sha256": "2fd6ccee90e8587fff4cd23bb0c1ca8c1df16d2eb96d31a15bca248f869cf27a"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aws-sdk-cpp/blobs/sha256:97cd821fe8f3fd3994f166992ec1e4691889cdeff95f1d816c2756d63ad45f07",
          "sha256": "97cd821fe8f3fd3994f166992ec1e4691889cdeff95f1d816c2756d63ad45f07"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "curl"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/aws-sdk-cpp.rb",
  "ruby_source_checksum": {
    "sha256": "2dab564993d01e755fa04765ada11717bb9dac02262c9b5af1740cbd6de5dc31"
  },
  "date_added": "2016-04-21T09:30:11+01:00",
  "readme": "# AWS SDK for C++\nThe AWS SDK for C++ provides a modern C++ (version C++ 11 or later) interface for Amazon Web Services (AWS). It is meant to be performant and fully functioning with low- and high-level SDKs, while minimizing dependencies and providing platform portability (Windows, OSX, Linux, and mobile).\n\nAWS SDK for C++ is in now in General Availability and recommended for production use. We invite our customers to join\nthe development efforts by submitting pull requests and sending us feedback and ideas via GitHub Issues.\n\n## Version 1.11 is now Available!\n\nThis release introduces a refactored Asynchronous API and restructures the File Hierarchy of the project source code. Additionally, the minimum required version of cmake was raised to 3.13.\n* Asynchronous API refactoring is a partially breaking, backward incompatible change: all client methods such as OperationAsync and OperationCallable are no longer virtual methods but instead are conditionally compiled template methods. Having these methods as templates reduces the total binary size of the SDK by 40%. Individual client binary size may vary. In addition, it reduces build time of the SDK by up to 50% (release, unity build, SDK clients only).\n  A code change may be required if your code inherits SDK’s Client classes and overrides the virtual async methods. Regular synchronous/blocking call methods are still available for override.\n  Code changes are not required and SDK API are backward compatible if virtual async methods were not overwritten before.\n* Scripts and IDE project files not using the provided cmake build infrastructure must be reviewed and updated to reflect source tree changes.\n\nAll CRT libraries are git submodules of SDK for C++. It requires changes in git syntax to get all source code.\n* New users: If you haven't downloaded the source code for SDK for C++, you can get all git submodules recursively by:\n   ```\n   git clone --recurse-submodules https://github.com/aws/aws-sdk-cpp\n   ```\n* Existing users: If you’ve already downloaded source code for SDK for C++, e.g. in directory `aws-sdk-cpp`, you can update the git submodule by:\n   ```\n   cd aws-sdk-cpp\n   git checkout main\n   git pull origin main\n   git submodule update --init --recursive\n   ```\n* Alternatively, if you downloaded the code bundle from GitHub website and have no installation of git, you can download all the dependencies running the `prefetch_crt_dependency.sh` script from the root of the repository. It will download bundles of all dependencies from github website using curl and expand them in the right locations.\n\n\nSee Wiki page [Improving S3 Throughput with AWS SDK for CPP v1.9](https://github.com/aws/aws-sdk-cpp/wiki/Improving-S3-Throughput-with-AWS-SDK-for-CPP-v1.9) for more details, and create a new [issue](https://github.com/aws/aws-sdk-cpp/issues/new/choose) or [pull request](https://github.com/aws/aws-sdk-cpp/compare) if you have any feedback on this new version.\n\n## API Reference Docs\n\nThe AWS SDK C++ recently re-formatted their API docs to be more modularized for easier navigation. Please update any old bookmarks that you may have.\n\nThe root index of the documents can be found at https://sdk.amazonaws.com/cpp/api/LATEST/index.html\n\nfrom here each service specific documentation can be found under the `modules` tab. Upon opening one of these, you will see the associated class list of the client, including a links to the `core` module.\n\n## Upgrade Your SDK to Get Latest Security Patches\nThe AWS SDK for C++ has a dependency on cJSON. This dependency was updated to version 1.7.14 in the recent SDK updates. We would recommend to upgrade your SDK to version 1.9.67 for 1.9.x or 1.8.187 for 1.8.x. Thank @dkalinowski for reporting this issue: https://github.com/aws/aws-sdk-cpp/issues/1594\n\n__Jump To:__\n* [Getting Started](#Getting-Started)\n* [Issues and Contributions](#issues-and-contributions)\n* [Getting Help](#Getting-Help)\n* [Using the SDK and Other Topics](#Using-the-SDK-and-Other-Topics)\n\n# Getting Started\n\n## Building the SDK:\n\n### Minimum Requirements:\n* Visual Studio 2015 or later\n* OR GNU Compiler Collection (GCC) 4.9 or later\n* OR Clang 3.3 or later\n* 4GB of RAM\n  * 4GB of RAM is required to build some of the larger clients. The SDK build may fail on EC2 instance types t2.micro, t2.small and other small instance types due to insufficient memory.\n\n### Building From Source:\n\n#### To create an **out-of-source build**:\n1. Install CMake and the relevant build tools for your platform. Ensure these are available in your executable path.\n2. Create your build directory. Replace <BUILD_DIR> with your build directory name:\n\n3. Build the project:\n\n    ```sh\n   cd <BUILD_DIR>\n   cmake <path-to-root-of-this-source-code> -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH=<path-to-install>\n   cmake --build . --config=Debug\n   cmake --install . --config=Debug\n   ```\n\n#### Other Dependencies:\nTo compile in Linux, you must have the header files for libcurl, libopenssl. The packages are typically available in your package manager.\n\nDebian based Linux distributions example:\n   `sudo apt-get install libcurl-dev`\n\nRPM based Linux distributions example:\n   `sudo [yum|dnf|zypper] install libcurl-devel`\n\n### Building for Android\nTo build for Android, add `-DTARGET_ARCH=ANDROID` to your cmake command line. Currently we support Android APIs from 19 to 28 with Android NDK 19c and we are using build-in cmake toolchain file supplied by Android NDK, assuming you have the appropriate environment variables (ANDROID_NDK) set.\n\n##### Android on Windows\nBuilding for Android on Windows requires some additional setup.  In particular, you will need to run cmake from a Visual Studio developer command prompt (2015 or higher). Additionally, you will need 'git' and 'patch' in your path.  If you have git installed on a Windows system, then patch is likely found in a sibling directory (.../Git/usr/bin/). Once you've verified these requirements, your cmake command line will change slightly to use nmake:\n\n   ```sh\n   cmake -G \"NMake Makefiles\" `-DTARGET_ARCH=ANDROID` <other options> ..\n   ```\n\nNmake builds targets in a serial fashion.  To make things quicker, we recommend installing JOM as an alternative to nmake and then changing the cmake invocation to:\n\n   ```sh\n   cmake -G \"NMake Makefiles JOM\" `-DTARGET_ARCH=ANDROID` <other options> ..\n   ```\n\n### Building for Docker\n\nTo build for Docker, ensure your container meets the [minimum requirements](#minimum-requirements). By default, Docker Desktop is set to use 2 GB runtime memory. We have provided [Dockerfiles](https://github.com/aws/aws-sdk-cpp/tree/master/CI/docker-file) as templates for building the SDK in a container.\n\n\n### Building and running an app on EC2\nCheckout this walk through on how to set up an environment and build the [AWS SDK for C++ on an EC2 instance](https://github.com/aws/aws-sdk-cpp/wiki/Building-the-SDK-from-source-on-EC2).\n\n### Building aws-sdk-cpp - Using vcpkg\n\nYou can download and install aws-sdk-cpp using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    ./vcpkg install aws-sdk-cpp\n\nThe aws-sdk-cpp port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n# Issues and Contributions\nWe welcome all kinds of contributions, check [this guideline](./CONTRIBUTING.md) to learn how you can contribute or report issues.\n\n# Maintenance and support for SDK major versions\n\nFor information about maintenance and support for SDK major versions and our underlying dependencies, see the following in the AWS SDKs and Tools Shared Configuration and Credentials Reference Guide\n\n* [AWS SDKs and Tools Maintenance Policy](https://docs.aws.amazon.com/credref/latest/refdocs/maint-policy.html)\n* [AWS SDKs and Tools Version Support Matrix](https://docs.aws.amazon.com/credref/latest/refdocs/version-support-matrix.html)\n\n\n# Getting Help\n\nThe best way to interact with our team is through GitHub. You can [open an issue](https://github.com/aws/aws-sdk-cpp/issues/new/choose) and choose from one of our templates for guidance, bug reports, or feature requests.\n\nYou may also find help on community resources such as [StackOverFlow](https://stackoverflow.com/) with the tag [#aws-sdk-cpp](https://stackoverflow.com/questions/tagged/aws-sdk-cpp). If you have a support plan with [AWS Support](https://aws.amazon.com/premiumsupport/), you can also create a new support case.\n\nPlease make sure to check out our resources too before opening an issue:\n* Our [Developer Guide](https://docs.aws.amazon.com/sdk-for-cpp/v1/developer-guide/welcome.html) and [API reference](http://sdk.amazonaws.com/cpp/api/LATEST/index.html)\n* Our [Changelog](./CHANGELOG.md) for recent breaking changes.\n* Our [Contribute](./CONTRIBUTING.md) guide.\n* Our [samples repo](https://github.com/awsdocs/aws-doc-sdk-examples/tree/master/cpp).\n\n\n# Using the SDK and Other Topics\n* [Using the SDK](./docs/SDK_usage_guide.md)\n* [CMake Parameters](./docs/CMake_Parameters.md)\n* [Credentials Providers](./docs/Credentials_Providers.md)\n* [Client Configuration Parameters](./docs/ClientConfiguration_Parameters.md)\n* [Service Client](./docs/Service_Client.md)\n* [Memory Management](./docs/Memory_Management.md)\n* [Advanced Topics](./docs/Advanced_topics.md)\n* [Add as CMake external project](./docs/CMake_External_Project.md)\n* [Coding Standards](./docs/CODING_STANDARDS.md)\n* [License](./LICENSE)\n* [Code of Conduct](./CODE_OF_CONDUCT.md)"
}
