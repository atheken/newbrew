{
  "name": "west",
  "full_name": "west",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Zephyr meta-tool",
  "license": "Apache-2.0",
  "homepage": "https://github.com/zephyrproject-rtos/west",
  "versions": {
    "stable": "1.1.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/f5/5f/703817873bacfa4b1f796b1b6da5df7a26033d57a2e307b1d6f9c94344a9/west-1.1.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "e3487f54b6bd904580489b603ef1a6e099c6f2e656014c2b83c4b3c2175fa4df"
    },
    "head": {
      "url": "https://github.com/zephyrproject-rtos/west.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/west/blobs/sha256:033938c6c219f61ce3846cf9f57804ff66ded9f4d994a839f2e80a3585c8a5d4",
          "sha256": "033938c6c219f61ce3846cf9f57804ff66ded9f4d994a839f2e80a3585c8a5d4"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/west/blobs/sha256:6c52037f121bc26c812b88681c1d009173b6f2e7b2e9ae3005d128780450081f",
          "sha256": "6c52037f121bc26c812b88681c1d009173b6f2e7b2e9ae3005d128780450081f"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/west/blobs/sha256:0a146e72623bd339743c230d679a9d1b04bd43d2d0de5e8825b42ed9baf801a8",
          "sha256": "0a146e72623bd339743c230d679a9d1b04bd43d2d0de5e8825b42ed9baf801a8"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/west/blobs/sha256:c5ec0caa3e3df3c593ebc3ed967ee4bb6c62a84e850ad35f6939fddb35389d6b",
          "sha256": "c5ec0caa3e3df3c593ebc3ed967ee4bb6c62a84e850ad35f6939fddb35389d6b"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/west/blobs/sha256:80f990a6cf0eb15d4a2e107289764183ed68b6bb6949af703d5cb59ae8107770",
          "sha256": "80f990a6cf0eb15d4a2e107289764183ed68b6bb6949af703d5cb59ae8107770"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/west/blobs/sha256:cc7efbd750dcbf7b1044925caca6b6d0ea24a7faa5b9d9cb2b54c5bfbb470bb6",
          "sha256": "cc7efbd750dcbf7b1044925caca6b6d0ea24a7faa5b9d9cb2b54c5bfbb470bb6"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/west/blobs/sha256:982130e610ef3fed5ca58c473badd345fd67f4d9039e9e436d08b9ae741daf2e",
          "sha256": "982130e610ef3fed5ca58c473badd345fd67f4d9039e9e436d08b9ae741daf2e"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11",
    "pyyaml",
    "six"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/west.rb",
  "ruby_source_checksum": {
    "sha256": "0e8976ccb3b3f92950ea1c939a95c8940ebff7ade4c957da1117a90e454a1755"
  },
  "date_added": "2021-11-04T05:42:01+00:00",
  "readme": "This is the Zephyr RTOS meta tool, ``west``.\n\nhttps://docs.zephyrproject.org/latest/guides/west/index.html\n\nInstallation\n------------\n\nUsing pip::\n\n  pip3 install west\n\n(Use ``pip3 uninstall west`` to uninstall it.)\n\nBasic Usage\n-----------\n\nWest lets you manage multiple Git repositories under a single directory using a\nsingle file, called the *west manifest file*, or *manifest* for short.\nBy default the manifest file is named ``west.yml``.\nYou use ``west init`` to set up this directory, then ``west update`` to fetch\nand/or update the repositories named in the manifest.\n\nBy default, west uses `upstream Zephyr's manifest file\n<https://github.com/zephyrproject-rtos/zephyr/blob/main/west.yml>`_, but west\ndoesn't care if the manifest repository is zephyr or not. You can and are\nencouraged to make your own manifest repositories to meet your needs.\n\nFor more details, see the `West guide\n<https://docs.zephyrproject.org/latest/guides/west/index.html>`_ in the Zephyr\ndocumentation.\n\nExample usage using the upstream manifest file::\n\n  mkdir zephyrproject && cd zephyrproject\n  west init\n  west update\n\nWhat just happened:\n\n- ``west init`` clones the upstream *west manifest* repository, which in this\n  case is the zephyr repository. The manifest repository contains ``west.yml``,\n  a YAML description of the Zephyr installation, including Git repositories and\n  other metadata.\n\n- ``west update`` clones the other repositories named in the manifest file,\n  creating working trees in the installation directory ``zephyrproject``.\n\nUse ``west init -m`` to specify another manifest repository. Use ``--mr`` to\nuse a revision to inialize from; if not given, the remote's default branch is used.\nUse ``--mf`` to use a manifest file other than ``west.yml``.\n\nAdditional Commands\n-------------------\n\nWest has multiple sub-commands. After running ``west init``, you can\nrun them from anywhere under ``zephyrproject``.\n\nFor a list of available commands, run ``west -h``. Get help on a\ncommand with ``west <command> -h``.\n\nWest is extensible: you can add new commands to west without modifying its\nsource code. See `Extensions\n<https://docs.zephyrproject.org/latest/guides/west/extensions.html>`_ in the\ndocumentation for details.\n\nRunning the Tests\n-----------------\n\nFirst, install tox::\n\n  # macOS, Windows\n  pip3 install tox\n\n  # Linux\n  pip3 install --user tox\n\nThen, run the test suite locally from the top level directory::\n\n  tox\n\nSee the tox configuration file, tox.ini, for more details.\n\nHacking on West\n---------------\n\nThis section contains notes for getting started developing west itself.\n\nEditable Install\n~~~~~~~~~~~~~~~~\n\nTo run west \"live\" from the current source code tree, run this command from the\ntop level directory in the west repository::\n\n  pip3 install -e .\n\nThis is useful if you are actively working on west and don't want to re-package\nand install a wheel each time you run it.\n\nInstalling from Source\n~~~~~~~~~~~~~~~~~~~~~~\n\nYou can create and install a wheel package to install west as well.\nThe `wheel`_ Python package is required to do this. See \"Installing Wheel\"\nbelow if you need to do this.\n\nTo build the west wheel file::\n\n  # macOS, Linux\n  python3 setup.py bdist_wheel\n\n  # Windows\n  py -3 setup.py bdist_wheel\n\nThis will create a file named ``dist/west-x.y.z-py3-none-any.whl``,\nwhere ``x.y.z`` is the current version in setup.py.\n\nTo install the wheel::\n\n  pip3 install -U dist/west-x.y.z-py3-none-any.whl\n\nYou can ``pip3 uninstall west`` to remove this wheel before re-installing the\nversion from PyPI, etc.\n\nInstalling Wheel\n~~~~~~~~~~~~~~~~\n\nOn macOS and Windows, you can install wheel with::\n\n  pip3 install wheel\n\nThat also works on Linux, but you may want to install wheel from your\nsystem package manager instead -- e.g. if you installed pip from your\nsystem package manager. The wheel package is likely named something\nlike ``python3-wheel`` in that case.\n\n.. _wheel: https://wheel.readthedocs.io/en/latest/"
}
