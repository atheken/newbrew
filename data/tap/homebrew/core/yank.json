{
  "name": "yank",
  "full_name": "yank",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Copy terminal output to clipboard",
  "license": "MIT",
  "homepage": "https://github.com/mptre/yank",
  "versions": {
    "stable": "1.3.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/mptre/yank/archive/v1.3.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "40f5472df5f6356a4d6f48862a19091bd4de3f802b3444891b3bc4b710fb35ca"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/yank/blobs/sha256:286acb35142223b6e0274221c5a2527f022c79f51a8f5d81ef5261f08b651b99",
          "sha256": "286acb35142223b6e0274221c5a2527f022c79f51a8f5d81ef5261f08b651b99"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/yank/blobs/sha256:e5fd3a08d92bfeb4da493930b49df96b38ad624f815b3c3f27a661f5e35274ac",
          "sha256": "e5fd3a08d92bfeb4da493930b49df96b38ad624f815b3c3f27a661f5e35274ac"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/yank/blobs/sha256:3ca61de9c598eb8c2abd4b78874ff40af76cc83474ff1d2261979800a42d62f7",
          "sha256": "3ca61de9c598eb8c2abd4b78874ff40af76cc83474ff1d2261979800a42d62f7"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/yank/blobs/sha256:6805196d030a823a9e95dde8afd62ec87b21b6602f1cbcd7e40239638da40ceb",
          "sha256": "6805196d030a823a9e95dde8afd62ec87b21b6602f1cbcd7e40239638da40ceb"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/yank/blobs/sha256:7e58ab275e612ff3d6072c1765d5a21fb151c904f56f3c238249be022c14e07a",
          "sha256": "7e58ab275e612ff3d6072c1765d5a21fb151c904f56f3c238249be022c14e07a"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/yank/blobs/sha256:d41ad7e32d8c75ca170b883b39cd3f5b34f800e9ea555d128a11b1a198f08c53",
          "sha256": "d41ad7e32d8c75ca170b883b39cd3f5b34f800e9ea555d128a11b1a198f08c53"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/yank/blobs/sha256:a1c1f827b9e04877c3c9082c2f531a512be07ff8f0afb204aeea3fba013f74d8",
          "sha256": "a1c1f827b9e04877c3c9082c2f531a512be07ff8f0afb204aeea3fba013f74d8"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/yank/blobs/sha256:ac3f578746c21ef166d41389433354a0435093a8648e224ad55c648925f1764c",
          "sha256": "ac3f578746c21ef166d41389433354a0435093a8648e224ad55c648925f1764c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    {
      "expect": "test"
    }
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/yank.rb",
  "ruby_source_checksum": {
    "sha256": "b7fdc51fbcb619c77f35405dc7686acb5f2e238818b0839698c3c9277a8107aa"
  },
  "date_added": "2015-10-21T10:06:32+02:00",
  "readme": "# yank\n\nYank terminal output to clipboard.\n\n![yank](https://raw.githubusercontent.com/mptre/yank/gh-pages/screencast.gif)\n\n## Description\n\nThe\n[yank(1)][yank]\nutility reads input from `stdin` and display a selection interface that allows a\nfield to be selected and copied to the clipboard.\nFields are either recognized by a regular expression using the `-g` option or by\nsplitting the input on a delimiter sequence using the `-d` option.\n\nUsing the arrow keys will move the selected field.\nThe interface supports several Emacs and Vi like key bindings,\nconsult the man page for further reference.\nPressing the return key will invoke the yank command and write the selected\nfield to its `stdin`.\nThe yank command defaults to\n[xsel(1)][xsel]\nbut could be anything that accepts input on `stdin`.\nWhen invoking yank,\neverything supplied after the `--` option will be used as the yank command,\nsee examples below.\n\n## Motivation\n\nOthers including myself consider it a cache miss when resort to using the mouse.\nCopying output from the terminal is still one of the few cases where I still use\nthe mouse.\nSeveral terminal multiplexers solves this issue,\nhowever I don't want to be required to use a multiplexer but instead use a\nterminal agnostic solution.\n\n## Examples\n\n- Yank an environment variable key or value:\n\n  ```sh\n  $ env | yank -d =\n  ```\n\n- Yank a field from a CSV file:\n\n  ```sh\n  $ yank -d \\\", <file.csv\n  ```\n\n- Yank a whole line using the `-l` option:\n\n  ```sh\n  $ make 2>&1 | yank -l\n  ```\n\n- If `stdout` is not a terminal the selected field will be written to `stdout`\n  and exit without invoking the yank command.\n  Kill the selected PID:\n\n  ```sh\n  $ ps ux | yank -g [0-9]+ | xargs kill\n  ```\n\n- Yank the selected field to the clipboard as opposed of the default primary\n  clipboard:\n\n  ```sh\n  $ yank -- xsel -b\n  ```\n\n## Installation\n\n### Arch Linux\n\n```sh\n$ pacman -S yank\n```\n\n### Debian\n\n```sh\n$ sudo apt-get install yank\n```\n\nThe binary is installed at `/usr/bin/yank-cli` due to a naming conflict.\n\n### Fedora\n\nVersions 24/25/26/Rawhide:\n\n```sh\n$ sudo dnf install yank\n```\n\nThe binary is installed at `/usr/bin/yank-cli` due to a naming conflict.\nMan-pages are available as both `yank` and `yank-cli`.\n\n### Nix/NixOS\n\n```sh\n$ nix-env -i yank\n```\n\n### openSUSE\n\n```\n$ zypper install yank\n```\n\n### macOS via Homebrew\n\n```sh\n$ brew install yank\n```\n\n### macOS via MacPorts\n\n```sh\n$ sudo port install yank\n```\n\n### FreeBSD\n\n```sh\n$ pkg install yank\n```\n\n### OpenBSD\n\n```sh\n$ pkg_add yank\n```\n\n### From source\n\nThe install directory defaults to `/usr/local`:\n\n```sh\n$ make install\n```\n\nChange the install directory using the `PREFIX` variable:\n\n```sh\n$ make PREFIX=DIR install\n```\n\nThe default yank command can be defined using the `YANKCMD` variable.\nFor instance,\nmacOS users would prefer `pbcopy(1)`:\n\n```sh\n$ make YANKCMD=pbcopy\n```\n\n## License\n\nCopyright (c) 2015-2022 Anton Lindqvist.\nDistributed under the MIT license.\n\n[xsel]: http://www.vergenet.net/~conrad/software/xsel/\n[yank]: https://www.basename.se/yank/"
}
