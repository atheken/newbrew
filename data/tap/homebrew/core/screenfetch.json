{
  "name": "screenfetch",
  "full_name": "screenfetch",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Generate ASCII art with terminal, shell, and OS info",
  "license": "GPL-3.0",
  "homepage": "https://github.com/KittyKatt/screenFetch",
  "versions": {
    "stable": "3.9.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/KittyKatt/screenFetch/archive/v3.9.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "aa97dcd2a8576ae18de6c16c19744aae1573a3da7541af4b98a91930a30a3178"
    },
    "head": {
      "url": "https://github.com/KittyKatt/screenFetch.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenfetch/blobs/sha256:0d88f370f36c942227b1beb20c7fd27934beb6f8edcc3b8c1e713c1bf0910672",
          "sha256": "0d88f370f36c942227b1beb20c7fd27934beb6f8edcc3b8c1e713c1bf0910672"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenfetch/blobs/sha256:7a8a196b1d61f4515270b2009a878dd0ca86052333ef1fea478f085c53b9b042",
          "sha256": "7a8a196b1d61f4515270b2009a878dd0ca86052333ef1fea478f085c53b9b042"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenfetch/blobs/sha256:6f7e61ea4717eef72e68b006bcef5d6ff1aab08f7ba25f0a5c6b8e014ffb530b",
          "sha256": "6f7e61ea4717eef72e68b006bcef5d6ff1aab08f7ba25f0a5c6b8e014ffb530b"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenfetch/blobs/sha256:3c4aece890a6db78cd9ad157a977f6c8fcafa750c9a1d10dfd6b468a9fcb29a7",
          "sha256": "3c4aece890a6db78cd9ad157a977f6c8fcafa750c9a1d10dfd6b468a9fcb29a7"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenfetch/blobs/sha256:64f48b67bd19de55e86169870401c92fc53229b0dfb72d7fb82a266569cf6b1e",
          "sha256": "64f48b67bd19de55e86169870401c92fc53229b0dfb72d7fb82a266569cf6b1e"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenfetch/blobs/sha256:ab904d997e7f65041ea053d21da1b9acc385913f7d4051c7338bea85353a390b",
          "sha256": "ab904d997e7f65041ea053d21da1b9acc385913f7d4051c7338bea85353a390b"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenfetch/blobs/sha256:ab904d997e7f65041ea053d21da1b9acc385913f7d4051c7338bea85353a390b",
          "sha256": "ab904d997e7f65041ea053d21da1b9acc385913f7d4051c7338bea85353a390b"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenfetch/blobs/sha256:ab904d997e7f65041ea053d21da1b9acc385913f7d4051c7338bea85353a390b",
          "sha256": "ab904d997e7f65041ea053d21da1b9acc385913f7d4051c7338bea85353a390b"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/screenfetch/blobs/sha256:6f7e61ea4717eef72e68b006bcef5d6ff1aab08f7ba25f0a5c6b8e014ffb530b",
          "sha256": "6f7e61ea4717eef72e68b006bcef5d6ff1aab08f7ba25f0a5c6b8e014ffb530b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/screenfetch.rb",
  "ruby_source_checksum": {
    "sha256": "836ce3260ee79451297ec641f8cd12c460c7b325e5c5d864a9cb9ec607dd30e7"
  },
  "date_added": "2014-03-18T11:16:26+00:00",
  "readme": "\n# screenFetch - The Bash Screenshot Information Tool\n\n## What is screenFetch?\n\nscreenFetch is a \"Bash Screenshot Information Tool\". This handy Bash\nscript can be used to generate one of those nifty terminal theme\ninformation + ASCII distribution logos you see in everyone's screenshots\nnowadays. It will auto-detect your distribution and display an ASCII\nversion of that distribution's logo and some valuable information to the\nright. There are options to specify no ASCII art, colors, taking a\nscreenshot upon displaying info, and even customizing the screenshot\ncommand! This script is very easy to add to and can easily be extended.\n\n## How do I get screenFetch?\n\nPlease see [Installation](https://github.com/KittyKatt/screenFetch/wiki/Installation).\n\n## Running screenfetch\n\nTo run screenFetch, open a terminal of some sort and type in the command `screenfetch`\nor wherever you saved the script to. This will generate an ASCII logo with the\ninformation printed to the side of the logo. There are some options that may be\nspecified on the command line, and those are shown below or by executing `screenfetch -h`:\n\n      -v                 Verbose output.\n      -o 'OPTIONS'       Allows for setting script variables on the\n                         command line. Must be in the following format...\n                         'OPTION1=\"OPTIONARG1\";OPTION2=\"OPTIONARG2\"'\n      -d '+var;-var;var' Allows for setting what information is displayed\n                         on the command line. You can add displays with +var,var. You\n                         can delete displays with -var,var. Setting without + or - will\n                         set display to that explicit combination. Add and delete statements\n                         may be used in conjunction by placing a ; between them as so:\n                         +var,var,var;-var,var.\n      -n                 Do not display ASCII distribution logo.\n      -N                 Strip all color from output.\n      -w                 Wrap long lines.\n      -t                 Truncate output based on terminal width (Experimental!).\n      -p                 Output in portrait mode, with logo above info.\n      -s [-u IMGHOST]    Using this flag tells the script that you want it\n                         to take a screenshot. Use the -m flag if you would like\n                         to move it to a new location afterwards.\n      -c string          You may change the outputted colors with -c. The format is\n                         as follows: [0-9][0-9],[0-9][0-9]. The first argument controls the\n                         ASCII logo colors and the label colors. The second argument\n                         controls the colors of the information found. One argument may be\n                         used without the other.\n      -a 'PATH'          You can specify a custom ASCII art by passing the path\n                         to a Bash script, defining `startline` and `fulloutput`\n                         variables, and optionally `labelcolor` and `textcolor`.\n                         See the `asciiText` function in the source code for more\n                         information on the variables format.\n      -S 'COMMAND'       Here you can specify a custom screenshot command for\n                         the script to execute. Surrounding quotes are required.\n      -D 'DISTRO'        Here you can specify your distribution for the script\n                         to use. Surrounding quotes are required.\n      -A 'DISTRO'        Here you can specify the distribution art that you want\n                         displayed. This is for when you want your distro\n                         detected but want to display a different logo.\n      -E                 Suppress output of errors.\n      -C                 Add custom (extra) lines.\n                         For example:\n                               screenfetch -C 'IP WAN=192.168.0.12,IP BRIDGED=10.1.1.10'\n                         ... will add two extra lines:\n                               IP WAN: 192.168.0.12\n                               IP BRIDGED: 10.1.1.10\n      -V, --version      Display current script version.\n      -h, --help         Display this help.\n\n## Contact Me\n\nIf you would like to suggest something new, inform me of an issue in the\nscript, become part of the project, or talk to me about anything else,\nyou can either email me at `screenfetch@kittykatt.co` or you can connect\nto Rizon and reach me at `irc://irc.rizon.net/screenFetch`"
}
