{
  "name": "crystal-icr",
  "full_name": "crystal-icr",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Interactive console for Crystal programming language",
  "license": "MIT",
  "homepage": "https://github.com/crystal-community/icr",
  "versions": {
    "stable": "0.9.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/crystal-community/icr/archive/v0.9.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "2530293e94b60d69919a79b49e83270f1462058499ad37a762233df8d6e5992c"
    }
  },
  "revision": 2,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/crystal-icr/blobs/sha256:edde5bd51d5bb2b03570b20e45ebc53ce09832920f75a3e50cbac956f661c215",
          "sha256": "edde5bd51d5bb2b03570b20e45ebc53ce09832920f75a3e50cbac956f661c215"
        },
        "arm64_monterey": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/crystal-icr/blobs/sha256:bc8b1981630d79dc3e135ad87f1ddedee260a92c1a5a19b31fc681fe2b596ad4",
          "sha256": "bc8b1981630d79dc3e135ad87f1ddedee260a92c1a5a19b31fc681fe2b596ad4"
        },
        "arm64_big_sur": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/crystal-icr/blobs/sha256:13ef5cc2c563f77416cb551e301c9819e3948f736828fe87129f8a24bfebe399",
          "sha256": "13ef5cc2c563f77416cb551e301c9819e3948f736828fe87129f8a24bfebe399"
        },
        "ventura": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/crystal-icr/blobs/sha256:72683ff057900f8a0a07858f0b1087674c535897c4e6f43faadd4675f658e4af",
          "sha256": "72683ff057900f8a0a07858f0b1087674c535897c4e6f43faadd4675f658e4af"
        },
        "monterey": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/crystal-icr/blobs/sha256:10adec2a41f666a46c7e1095b95f8d3016dbf11f4087a1e222b69f3f18658041",
          "sha256": "10adec2a41f666a46c7e1095b95f8d3016dbf11f4087a1e222b69f3f18658041"
        },
        "big_sur": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/crystal-icr/blobs/sha256:7e4e298588d34c599657ef4d62d2fe4e44e5ec80a982b656eba12b2d7c8e416a",
          "sha256": "7e4e298588d34c599657ef4d62d2fe4e44e5ec80a982b656eba12b2d7c8e416a"
        },
        "x86_64_linux": {
          "cellar": "/home/linuxbrew/.linuxbrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/crystal-icr/blobs/sha256:d348dfeedacb2bb47173d3435fabe2862281d072bbe706ba00ef7a92e79520d1",
          "sha256": "d348dfeedacb2bb47173d3435fabe2862281d072bbe706ba00ef7a92e79520d1"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "crystal",
    "libevent",
    "libyaml",
    "openssl@3",
    "readline"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/crystal-icr.rb",
  "ruby_source_checksum": {
    "sha256": "73c28a93b66337eec38ca6cb90c9628199cd08b98a347863edb09fc191808b9d"
  },
  "date_added": "2016-12-30T14:18:37+00:00",
  "readme": "# ICR - Interactive Crystal [![Build Status](https://travis-ci.org/crystal-community/icr.svg?branch=master)](https://travis-ci.org/crystal-community/icr)\n\nInteractive console for [Crystal Programming Language](http://crystal-lang.org/).\n\n* [Usage](#usage)\n  * [Require local files](#require-local-files)\n* [Installation](#installation)\n  * [Arch Linux](#arch-linux)\n* [How does it work?](#how-does-it-work)\n* [Commands and special locals](#commands-and-special-locals)\n* [Update check](#update-check)\n* [Development](#development)\n* [Editor Integration](#editor-integration)\n* [Contributors](#contributors)\n\n## Usage\n\nIt's like irb, but for Crystal:\n\n![GIF demo](https://raw.githubusercontent.com/crystal-community/icr/master/demo/demo.gif)\n\n### Require local files\nYou can require local files by relative path (starts with `./`):\n```\nrequire \"./src/my_cool_lib\"\n```\n\nLibs can also be required from the cli:\n\n```\n$ icr -r colorize -r ./src/my_cool_lib\n```\n\n## Installation\nPrerequisites:\n* The latest version of crystal.\n* Readline (for Debian/Ubuntu install `libreadline6-dev` package).\n* LLVM development files.\n\nClone the repo:\n```\ngit clone https://github.com/crystal-community/icr.git\n```\nSwitch to repo-directory:\n```\ncd icr\n```\nBuild:\n```\nmake\n```\n\nInstall:\n\n```\nsudo make install\n```\n\n### As a shard dependency\n\nIf you would like to include icr as a dependency, you can add it to your `shard.yml`\n\n```yml\ndependencies:\n  icr:\n    github: crystal-community/icr\n    branch: master\n```\n\nThen just run `shards install` from your project!\n\nEnjoy!\n\n\n### Arch Linux\n\nArch Linux users can install ICR [from AUR](https://aur.archlinux.org/packages/crystal-icr/).\n\n\n## How does it work?\n* Every time you press `Enter` it adds a new instruction, generates a new crystal program, and executes it.\n* The output is split into 2 parts: regular program output (e.g. output from `puts 10`) and the value returned by the last command.\n* The regular output is saved, and when you type a new instruction, a new program is generated. The saved output is subtracted from the new output, and the difference is printed out. It creates an illusion that only new instructions are executed :)\n\n## Commands and special locals\n\n* `paste` - enables paste mode\n* `debug` - toggles debug mode off and on. In debug mode icr will print the code before executing it\n* `quit` or `exit` - exits current interactive console\n* `reset` - clears out all of the accumulated commands\n* `__` - holds the result of the last expression. Example:\n\n```crystal\nicr > \"5\" + \"2\"\n=> \"52\"\nicr > __.to_i - 10\n=> 42\n\n```\n\n## Update check\n\nICR periodically checks for the new releases on Github. If your current version is out of date, it will simply show you a notice at start.\n\nYou can disable this behavior using `--disable-update-check` CLI flag.\n\n## Development\n\nTo run tests:\n```\nmake test\n```\n\n## Editor integration\n\n - [inf-crystal.el](https://github.com/brantou/inf-crystal.el) - Connects REPL buffer to the ICR subprocess in Emacs\n\n## Contributors\n\n- [greyblake](https://github.com/greyblake) Potapov Sergey - creator, maintainer\n- [BlaXpirit](https://github.com/BlaXpirit) Oleh Prypin - fixes for Crystal 0.16\n- [puppetpies](https://github.com/puppetpies) Brian Hood - support of records\n- [jwoertink](https://github.com/jwoertink) Jeremy Woertink - support of -r option and number of other contributions\n- [veelenga](https://github.com/veelenga) V. Elenhaupt - maintenance\n- [MakeNowJust](https://github.com/MakeNowJust) TSUYUSATO Kitsune - syntax highlight support"
}
