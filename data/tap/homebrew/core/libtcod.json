{
  "name": "libtcod",
  "full_name": "libtcod",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "API for roguelike developers",
  "license": "BSD-3-Clause",
  "homepage": "https://github.com/libtcod/libtcod",
  "versions": {
    "stable": "1.24.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/libtcod/libtcod/archive/1.24.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "13e7ed49f91b897ac637e29295df8eeac24e284fbd9129bb09fd05dba0dcc1fb"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libtcod/blobs/sha256:11aa13a704fa606a3f6d35d0b98fdf0a129d074245a17bc5daf4f24ac076c6f4",
          "sha256": "11aa13a704fa606a3f6d35d0b98fdf0a129d074245a17bc5daf4f24ac076c6f4"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libtcod/blobs/sha256:e1d65ee49d8e100b6fe47c86fcaeacf1a5d6dd38a946ac622381e4d91bd5fbbf",
          "sha256": "e1d65ee49d8e100b6fe47c86fcaeacf1a5d6dd38a946ac622381e4d91bd5fbbf"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libtcod/blobs/sha256:34e498bbd75753bda91543a8a252f2866a93e443b72a345115cc5ac4c2bcc01d",
          "sha256": "34e498bbd75753bda91543a8a252f2866a93e443b72a345115cc5ac4c2bcc01d"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libtcod/blobs/sha256:24d540df6308f5b9257c8f5d4709baa942d07e734085c7bad5642a7728d2ef19",
          "sha256": "24d540df6308f5b9257c8f5d4709baa942d07e734085c7bad5642a7728d2ef19"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libtcod/blobs/sha256:b7c1bee7957509545be34d6f81d911806cf8e345ca8312553a0c977ee11812fd",
          "sha256": "b7c1bee7957509545be34d6f81d911806cf8e345ca8312553a0c977ee11812fd"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libtcod/blobs/sha256:57585379fc42bea09b2d9bf429892dc61705f8bb32629297e384e1168103bcb0",
          "sha256": "57585379fc42bea09b2d9bf429892dc61705f8bb32629297e384e1168103bcb0"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libtcod/blobs/sha256:10da3d61a23ba6008918b74ad416c4ee85242c74819c75be8be09401d7903d07",
          "sha256": "10da3d61a23ba6008918b74ad416c4ee85242c74819c75be8be09401d7903d07"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "autoconf",
    "automake",
    "libtool",
    "pkg-config",
    "python@3.11"
  ],
  "dependencies": [
    "sdl2"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": "10.15",
      "contexts": [],
      "specs": [
        "stable"
      ]
    }
  ],
  "conflicts_with": [
    "libzip",
    "minizip-ng"
  ],
  "conflicts_with_reasons": [
    "libtcod, libzip and minizip-ng install a `zip.h` header",
    "libtcod, libzip and minizip-ng install a `zip.h` header"
  ],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/libtcod.rb",
  "ruby_source_checksum": {
    "sha256": "c9c467ae812b5a26873ed40914e20b4a2b84a29542b8eb397d925e625a02a273"
  },
  "date_added": "2017-02-08T10:08:54+00:00",
  "readme": "# Introduction\n\nlibtcod is a free, fast, portable and uncomplicated API for roguelike developers providing a true color console, pathfinding, field-of-view, and a few other utilities frequently used in roguelikes.\n\n## Status\n\n[![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/libtcod/libtcod/builds.yml)](https://github.com/libtcod/libtcod/actions)\n[![Documentation Status](https://readthedocs.org/projects/libtcod/badge/?version=latest)](https://libtcod.readthedocs.io/en/latest/?badge=latest)\n[![codecov](https://codecov.io/gh/libtcod/libtcod/branch/main/graph/badge.svg?token=pmHy3jXemj)](https://codecov.io/gh/libtcod/libtcod)\n[![GitHub commits since latest release (by date)](https://img.shields.io/github/commits-since/libtcod/libtcod/latest)](https://github.com/libtcod/libtcod/blob/main/CHANGELOG.md)\n[![Packaging status](https://repology.org/badge/tiny-repos/libtcod.svg)](https://repology.org/project/libtcod/versions)\n\n# How do I get set up?\n\n## Using Vcpkg\n\nThis is the easiest way to get the latest stable version of libtcod for any project.\n\nLibtcod is included as a port in [Vcpkg](https://github.com/microsoft/vcpkg).\nYou can install libtcod via Vcpkg and then link the library using a [CMake](https://cmake.org/) script as you normally do for that package manager.\n\n## As a submodule\n\nThis is the best option for testing the development versions of libtcod.\n\nYou can include libtcod in a project by adding the libtcod repository as a [submodule](https://git-scm.com/book/en/v2/Git-Tools-Submodules) and then adding that directory to a [CMake](https://cmake.org/) script.\nYou will want to fork [this template project](https://github.com/HexDecimal/libtcod-vcpkg-template) if you plan on starting a project with this setup.\n\nIt is expected that Vcpkg will be used, but libtcod's CMake script can be configured to compile without using Vcpkg for dependencies.\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for details on configuring dependencies.\n\n## Using one of our downloads\n\nThis is not recommend as these releases are unwieldy, are more difficult to update, and are less cross-platform.\n*Do not upload binary files to your projects source repository.*\n\nIf you are programming in C or C++ then\nWindows and MacOS binaries are available from the\n[GitHub Releases page](https://github.com/libtcod/libtcod/releases).\n\nVarious C/C++ sample projects are included within\nthe repository which can be used as examples of various features.\n\nKeep in mind that as a C++ library, you may need to distribute the\nappropriate runtime with your program such as the\n[Visual Studio 2015 runtimes](https://www.microsoft.com/en-us/download/details.aspx?id=53587)\nor else the program will fail to run.\n\nFor those who wish to program in Python you can install python-tcod using\n[this installation guide](https://python-tcod.readthedocs.io/en/latest/installation.html).\nOnce installed you can follow\n[the Python 3 tutorial](http://rogueliketutorials.com/)\nor you can find Python example scripts on the\n[python-tcod repository](https://github.com/libtcod/python-tcod).\n\nA alternative version of the Python library (libtcodpy) exists in the binary\ndownloads, but you should avoid using this version as it is not as well\nmaintained.\n\n## Compiling from source\n\nThis is only recommended for libtcod developers.\nSee [CONTRIBUTING.md](CONTRIBUTING.md).\n\n# Getting Started\n\nThe latest documentation is [here](https://libtcod.readthedocs.io/en/latest).\nCurrently it's very incomplete, so most people will want to read the\n[1.6.4 documentation](https://libtcod.github.io/docs/index2.html?c=true&cpp=true&cs=false&py=false&lua=false)\ninstead.\nPython users should use the\n[python-tcod documentation](http://python-tcod.readthedocs.io).\n\nlibtcod comes with a sample application, implementations of which are provided\nin each of\nC ([samples_c.c](https://github.com/libtcod/libtcod/blob/master/samples/samples_c.c)),\nC++ ([samples_cpp.cpp](https://github.com/libtcod/libtcod/blob/master/samples/samples_cpp.cpp)),\nand Python ([samples_py.py](https://github.com/libtcod/python-tcod/blob/master/examples/samples_tcod.py)).\nThis provides a decent overview of the basic features, in an interactive\nfashion.\nEach should be identical for the most part, so if you are using Windows,\ndownloading the pre-compiled binaries and running the included `samples.exe`\nwhich is compiled from the C source code, should be representative of the other\nversions.\n\n# Contact / Community\n\nFor reporting bugs or requesting features you should use the [GitHub Issues page](https://github.com/libtcod/libtcod/issues).\nFor smaller questions or help with a tutorial or project you can join ``#libtcod`` on the [Roguelikes Discord](https://discord.gg/jEgZtqB) or on the [Libera.â€‹Chat](https://libera.chat/) IRC.\n\n# Sponsors\n\n[Sponsors donating $25 or more per month](https://github.com/sponsors/HexDecimal) will have their names or logos listed here.\n\n* [q00u](https://github.com/q00u)\n* [amaya30](https://github.com/amaya30)"
}
