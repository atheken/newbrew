{
  "name": "zsh-autopair",
  "full_name": "zsh-autopair",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Auto-close and delete matching delimiters in zsh",
  "license": "MIT",
  "homepage": "https://github.com/hlissner/zsh-autopair",
  "versions": {
    "stable": "1.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/hlissner/zsh-autopair/archive/v1.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "4b6f4d20d89ea08fd239089ad4133cff5ebdb71f07f589d5e41d0814d4cf4165"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/zsh-autopair/blobs/sha256:43069acaa2147e5783bd7af94b7a469e80a065f9e41f05f20e6a7d62eb9eda53",
          "sha256": "43069acaa2147e5783bd7af94b7a469e80a065f9e41f05f20e6a7d62eb9eda53"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    {
      "zsh": "test"
    }
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": "To activate autopair, add the following at the end of your .zshrc:\n\n  source $HOMEBREW_PREFIX/share/zsh-autopair/autopair.zsh\n\nYou will also need to restart your terminal for this change to take effect.\n",
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/zsh-autopair.rb",
  "ruby_source_checksum": {
    "sha256": "0d524116b7050ae6e359c20dfbdd3d8051cc8f6ea0401bfdfcb68afd6dbb4d2d"
  },
  "date_added": "2023-01-24T16:23:48+00:00",
  "readme": "[![Made with Doom Emacs](https://img.shields.io/badge/Made_with-Doom_Emacs-blueviolet.svg?style=flat-square&logo=GNU%20Emacs&logoColor=white)](https://github.com/hlissner/doom-emacs)\n[![MIT License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square)](./LICENSE)\n![ZSH 5.0.2+](https://img.shields.io/badge/zsh-v5.0.2-orange.svg?style=flat-square)\n[![Build Status](https://img.shields.io/travis/hlissner/zsh-autopair/master.svg?label=master&style=flat-square)](https://travis-ci.org/hlissner/zsh-autopair)\n\n# zsh-autopair\nA simple plugin that auto-closes, deletes and skips over matching delimiters in\nzsh intelligently. Hopefully.\n\n> NOTE: zsh-autopair is untested for versions of Zsh below 5.0.2. Please report\n> any issues you have in earlier versions!\n\nSpecifically, zsh-autopair does 5 things for you:\n\n1. It inserts matching pairs (by default, that means brackets, quotes and\n   spaces):\n\n   e.g. `echo |` => <kbd>\"</kbd> => `echo \"|\"`\n\n2. It skips over matched pairs:\n\n   e.g. `cat ./*.{py,rb|}` => <kbd>}</kbd> => `cat ./*.{py,rb}|`\n\n3. It auto-deletes pairs on backspace:\n\n   e.g. `git commit -m \"|\"` => <kbd>backspace</kbd> => `git commit -m |`\n\n4. And does all of the above only when it makes sense to do so. e.g. when the\n   pair is balanced and when the cursor isn't next to a boundary character:\n\n   e.g. `echo \"|\"\"` => <kbd>backspace</kbd> => `echo |\"\"` (doesn't aggressively eat up too many quotes)\n\n5. Spaces between brackets are expanded and contracted.\n\n   e.g. `echo [|]` => <kbd>space</kbd> => `echo [ | ]` => <kbd>backspace</kbd> => `echo [|]`\n\n\n<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-refresh-toc -->\n**Table of Contents**\n\n- [Install](#install)\n    - [Antigen](#antigen)\n    - [zgen](#zgen)\n    - [zplug](#zplug)\n- [Configuration](#configuration)\n    - [Adding/Removing pairs](#addingremoving-pairs)\n- [Troubleshooting & compatibility issues](#troubleshooting--compatibility-issues)\n    - [zgen & prezto compatibility](#zgen--prezto-compatibility)\n    - [text on right-side of cursor interfere with completion](#text-on-right-side-of-cursor-interfere-with-completion)\n    - [zsh-autopair & isearch?](#zsh-autopair--isearch)\n    - [Midnight Commander](#midnight-commander)\n- [Other resources](#other-resources)\n\n<!-- markdown-toc end -->\n\n## Install\nDownload and source `autopair.zsh`\n\n```bash\nif [[ ! -d ~/.zsh-autopair ]]; then\n  git clone https://github.com/hlissner/zsh-autopair ~/.zsh-autopair\nfi\n\nsource ~/.zsh-autopair/autopair.zsh\nautopair-init\n```\n\n### Antigen\n`antigen bundle hlissner/zsh-autopair`\n\n### zgen\n```bash\nif ! zgen saved; then\n    echo \"Creating a zgen save\"\n\n    # ... other plugins\n    zgen load hlissner/zsh-autopair\n\n    zgen save\nfi\n```\n\n### zplug\nLoad autopair _after compinit_, otherwise, the plugin won't work.\n```bash\nzplug \"hlissner/zsh-autopair\", defer:2\n```\n\n\n## Configuration\nzsh-autopair sets itself up. You can prevent this by setting\n`AUTOPAIR_INHIBIT_INIT`.\n\n**Options:**\n* `AUTOPAIR_BETWEEN_WHITESPACE` (default: blank): if set, regardless of whether\n  delimiters are unbalanced or do not meet a boundary check, pairs will be\n  auto-closed if surrounded by whitespace, BOL or EOL.\n* `AUTOPAIR_INHIBIT_INIT` (default: blank): if set, autopair will not\n  automatically set up keybinds. [Check out the initialization\n  code](autopair.zsh#L118) if you want to know what it does.\n* `AUTOPAIR_PAIRS` (default: ``('`' '`' \"'\" \"'\" '\"' '\"' '{' '}' '[' ']' '(' ')'\n  ' ' ' ')``): An associative array that map pairs. Only one-character pairs are\n  supported. To modify this, see the \"Adding/Removing pairs\" section.\n* `AUTOPAIR_LBOUNDS`/`AUTOPAIR_RBOUNDS` (default: see below): Associative lists\n  of regex character groups dictating the 'boundaries' for autopairing depending\n  on the delimiter. These are their default values:\n\n  ```bash\n  AUTOPAIR_LBOUNDS=(all '[.:/\\!]')\n  AUTOPAIR_LBOUNDS+=(quotes '[]})a-zA-Z0-9]')\n  AUTOPAIR_LBOUNDS+=(spaces '[^{([]')\n  AUTOPAIR_LBOUNDS+=(braces '')\n  AUTOPAIR_LBOUNDS+=('`' '`')\n  AUTOPAIR_LBOUNDS+=('\"' '\"')\n  AUTOPAIR_LBOUNDS+=(\"'\" \"'\")\n\n  AUTOPAIR_RBOUNDS=(all '[[{(<,.:?/%$!a-zA-Z0-9]')\n  AUTOPAIR_RBOUNDS+=(quotes '[a-zA-Z0-9]')\n  AUTOPAIR_RBOUNDS+=(spaces '[^]})]')\n  AUTOPAIR_RBOUNDS+=(braces '')\n  ```\n\n  For example, if `$AUTOPAIR_LBOUNDS[braces]=\"[a-zA-Z]\"`, then braces (`{([`) won't be\n  autopaired if the cursor follows an alphabetical character.\n\n  Individual delimiters can be used too. Setting `$AUTOPAIR_RBOUNDS['{']=\"[0-9]\"` will\n  cause <kbd>{</kbd> specifically to not be autopaired when the cursor precedes a number.\n\n### Adding/Removing pairs\nYou can change the designated pairs in zsh-autopair by modifying the\n`AUTOPAIR_PAIRS` envvar. This can be done _before_ initialization like so:\n\n``` sh\ntypeset -gA AUTOPAIR_PAIRS\nAUTOPAIR_PAIRS+=(\"<\" \">\")\n```\n\nOr after initialization; however, you'll have to bind keys to `autopair-insert`\nmanually:\n\n```sh\nAUTOPAIR_PAIRS+=(\"<\" \">\")\nbindkey \"<\" autopair-insert\n# prevents breakage in isearch\nbindkey -M isearch \"<\" self-insert\n```\n\nTo _remove_ pairs, use `unset 'AUTOPAIR_PAIRS[<]'`. Unbinding is optional.\n\n## Troubleshooting & compatibility issues\n### zgen & prezto compatibility\nPrezto's Editor module is known to reset autopair's bindings. A workaround is to\n_defer autopair from initializing_ (by setting `AUTOPAIR_INHIBIT_INIT=1`) and\ninitialize it manually (by calling `autopair-init`):\n\n``` sh\nsource \"$HOME/.zgen/zgen.zsh\"\n\n# Add this\nAUTOPAIR_INHIBIT_INIT=1\n\nif ! zgen saved; then\n    zgen prezto\n    # ...\n    zgen load hlissner/zsh-autopair 'autopair.zsh'\n    #...\n    zgen save\nfi\n\n# And this\nautopair-init\n```\n\n### text on right-side of cursor interfere with completion\nBind <kbd>Tab</kbd> to `expand-or-complete-prefix` and completion will ignore\nwhat's to the right of cursor:\n\n`bindkey '^I' expand-or-complete-prefix`\n\nThis has the unfortunate side-effect of overwriting whatever's right of the\ncursor, however.\n\n### zsh-autopair & isearch?\nzsh-autopair silently disables itself in isearch, as the two are incompatible.\n\n### Midnight Commander\nMC hangs when zsh-autopair tries to bind the space key. This also breaks the MC\nsubshell.\n\nDisable space expansion to work around this: `unset 'AUTOPAIR_PAIRS[ ]'`\n\n## Other resources\n* Works wonderfully with [zsh-syntax-highlight] and\n  `ZSH_HIGHLIGHT_HIGHLIGHTERS+=brackets`, but zsh-syntax-highlight must be\n  loaded *after* zsh-autopair.\n* Mixes well with these vi-mode zsh modules: [surround], [select-quoted], and\n  [select-bracketed] (they're built into zsh as of zsh-5.0.8)\n* Other relevant repositories of mine:\n  + [dotfiles]\n  + [emacs.d]\n  + [vimrc]\n  + [zshrc]\n\n\n[dotfiles]: https://github.com/hlissner/dotfiles\n[vimrc]: https://github.com/hlissner/.vim\n[emacs.d]: https://github.com/hlissner/doom-emacs\n[zshrc]: https://github.com/hlissner/dotfiles/blob/master/config/zsh/.zshrc\n[zsh-syntax-highlighting]: https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters/pattern.md\n[surround]: https://github.com/zsh-users/zsh/blob/master/Functions/Zle/surround\n[select-quoted]: https://github.com/zsh-users/zsh/blob/master/Functions/Zle/select-quoted\n[select-bracketed]: https://github.com/zsh-users/zsh/blob/master/Functions/Zle/select-bracketed"
}
