{
  "name": "ifacemaker",
  "full_name": "ifacemaker",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Generate interfaces from structure methods",
  "license": "Apache-2.0",
  "homepage": "https://github.com/vburenin/ifacemaker",
  "versions": {
    "stable": "1.2.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/vburenin/ifacemaker/archive/refs/tags/v1.2.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "3bbe9d742995ca5804da15f0f01ed85ff5d68b6b3e22b04c1491492eb703aa54"
    },
    "head": {
      "url": "https://github.com/vburenin/ifacemaker.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ifacemaker/blobs/sha256:87408de1f42dcab543551dd12efc8f8616779595ec9d001bac8d5e41272b5fcf",
          "sha256": "87408de1f42dcab543551dd12efc8f8616779595ec9d001bac8d5e41272b5fcf"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ifacemaker/blobs/sha256:87408de1f42dcab543551dd12efc8f8616779595ec9d001bac8d5e41272b5fcf",
          "sha256": "87408de1f42dcab543551dd12efc8f8616779595ec9d001bac8d5e41272b5fcf"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ifacemaker/blobs/sha256:87408de1f42dcab543551dd12efc8f8616779595ec9d001bac8d5e41272b5fcf",
          "sha256": "87408de1f42dcab543551dd12efc8f8616779595ec9d001bac8d5e41272b5fcf"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ifacemaker/blobs/sha256:6e5a0afe3650cf97a62be0c43e830b786c769430dce3cdbe51e7abc4f157861c",
          "sha256": "6e5a0afe3650cf97a62be0c43e830b786c769430dce3cdbe51e7abc4f157861c"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ifacemaker/blobs/sha256:6e5a0afe3650cf97a62be0c43e830b786c769430dce3cdbe51e7abc4f157861c",
          "sha256": "6e5a0afe3650cf97a62be0c43e830b786c769430dce3cdbe51e7abc4f157861c"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ifacemaker/blobs/sha256:6e5a0afe3650cf97a62be0c43e830b786c769430dce3cdbe51e7abc4f157861c",
          "sha256": "6e5a0afe3650cf97a62be0c43e830b786c769430dce3cdbe51e7abc4f157861c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ifacemaker/blobs/sha256:e76f770fa867389cf4b882db3ba239a4a35e0902ee5137d2860e975964fb0317",
          "sha256": "e76f770fa867389cf4b882db3ba239a4a35e0902ee5137d2860e975964fb0317"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/ifacemaker.rb",
  "ruby_source_checksum": {
    "sha256": "5f4f936c9cb00e125b01fcc420791c3183728bbc22fb5cccdb1118adf1708adb"
  },
  "date_added": "2022-04-02T14:18:43+00:00",
  "readme": "# ifacemaker [![Build Status](https://travis-ci.com/vburenin/ifacemaker.svg?branch=master)](https://travis-ci.com/vburenin/ifacemaker)\n\nThis is a development helper program that generates a Golang interface by inspecting\nthe structure methods of an existing `.go` file. The primary use case is to generate\ninterfaces for gomock, so that gomock can generate mocks from those interfaces. This\nmakes unit testing easier.\n\n## Install\n\n```\ngo install github.com/vburenin/ifacemaker@latest\n```\n\n## Usage\nHere is the help output of ifacemaker:\n\n```\n$ ifacemaker --help\nUsage:\n  ifacemaker [OPTIONS]\n\nApplication Options:\n  -f, --file=          Go source file to read, either filename or glob\n  -s, --struct=        Generate an interface for this structure name\n  -i, --iface=         Name of the generated interface\n  -p, --pkg=           Package name for the generated interface\n  -y, --iface-comment= Comment for the interface, default is '// <iface> ...'\n  -d, --doc=           Copy docs from methods (default: true)\n  -D, --type-doc       Copy type doc from struct\n  -c, --comment=       Append comment to top, default is '// Code generated by ifacemaker; DO NOT EDIT.'\n  -o, --output=        Output file name. If not provided, result will be printed to stdout.\n\nHelp Options:\n  -h, --help           Show this help message\n$\n```\n\nAs an example, let's say you wanted to generate an interface for the Human structure\nin this sample code:\n\n```\npackage main\n\nimport \"fmt\"\n\ntype Human struct {\n\tname string\n\tage  int\n}\n\n// Returns the name of our Human.\nfunc (h *Human) GetName() string {\n\treturn h.name\n}\n\n// Our Human just had a birthday! Increase its age.\nfunc (h *Human) Birthday() {\n\th.age += 1\n\tfmt.Printf(\"I am now %d years old!\\n\", h.age)\n}\n\n// Make the Human say hello.\nfunc (h *Human) SayHello() {\n\tfmt.Printf(\"Hello, my name is %s, and I am %d years old.\\n\", h.name, h.age)\n}\n\nfunc main() {\n\thuman := &Human{name: \"Bob\", age: 30}\n\thuman.GetName()\n\thuman.SayHello()\n\thuman.Birthday()\n}\n```\n\nThe ifacemaker helper program can generate this interface for you:\n\n```\n$ ifacemaker -f human.go -s Human -i HumanIface -p humantest -y \"HumanIface makes human interaction easy\" -c \"DONT EDIT: Auto generated\"\n// DONT EDIT: Auto generated\n\npackage humantest\n\n// HumanIface makes human interaction easy\ntype HumanIface interface {\n\t// Returns the name of our Human.\n\tGetName() string\n\t// Our Human just had a birthday! Increase its age.\n\tBirthday()\n\t// Make the Human say hello.\n\tSayHello()\n}\n\n$\n```\n\nIn the above example, ifacemaker inspected the structure methods of the Human struct\nand generated an interface called HumanIface in the humantest package. Note that the\nifacemaker program preserves docstrings by default.\n\nYou can tell ifacemaker to write its output to a file, versus stdout, using the `-o`\nparameter:\n\n```\n$ ifacemaker -f human.go -s Human -i HumanIface -p humantest -y \"HumanIface makes human interaction easy\" -c \"DONT EDIT: Auto generated\" -o humaniface.go\n$\n```\n\nYou can also run it with `Docker`:\n\n```\n$ docker run --rm -v $(pwd):/tmp/ vburenin/ifacemaker -f /tmp/human.go -s Human -i HumanIface -p humantest -y \"HumanIface makes human interaction easy\" -c \"DONT EDIT: Auto generated\" -o /tmp/humaniface.go\n$\n```"
}
