{
  "name": "clib",
  "full_name": "clib",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Package manager for C programming",
  "license": "MIT",
  "homepage": "https://github.com/clibs/clib",
  "versions": {
    "stable": "2.8.3",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/clibs/clib/archive/2.8.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0ad8262d13ef138a12452e67e081e3eb31a264e2040cfce09417e8f7eed4e1f5"
    },
    "head": {
      "url": "https://github.com/clibs/clib.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clib/blobs/sha256:2e32fd4fabf6ae444d06ac04f3f469fc8b45a6313db7d5d33da2c41974e5d991",
          "sha256": "2e32fd4fabf6ae444d06ac04f3f469fc8b45a6313db7d5d33da2c41974e5d991"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clib/blobs/sha256:531b420f544115b76de3f062ca797e29d8d67033606d900fb4f24110be6d79a4",
          "sha256": "531b420f544115b76de3f062ca797e29d8d67033606d900fb4f24110be6d79a4"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clib/blobs/sha256:5570b36fd28e42add8fc2bacc2bde04bbba0964c703b54a166cb28edade444da",
          "sha256": "5570b36fd28e42add8fc2bacc2bde04bbba0964c703b54a166cb28edade444da"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clib/blobs/sha256:191e02d060b9a2802b7bc9e99dd3a68572ee3cc68f732f5de4208a32c7961586",
          "sha256": "191e02d060b9a2802b7bc9e99dd3a68572ee3cc68f732f5de4208a32c7961586"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clib/blobs/sha256:690ee73163b6fa61ad18f2edf33191f073e547ffa1b996573daf1d563e235043",
          "sha256": "690ee73163b6fa61ad18f2edf33191f073e547ffa1b996573daf1d563e235043"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clib/blobs/sha256:42094b31e28fa21086e7765abb6d09e02eff56bea9088227895dee48e97c1477",
          "sha256": "42094b31e28fa21086e7765abb6d09e02eff56bea9088227895dee48e97c1477"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/clib/blobs/sha256:f9fae1b2b9a3c8dd01a954573192eb2106fd0b2590c83180210c11cbdbe38be8",
          "sha256": "f9fae1b2b9a3c8dd01a954573192eb2106fd0b2590c83180210c11cbdbe38be8"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "curl"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/clib.rb",
  "ruby_source_checksum": {
    "sha256": "aaf1d82e2aa9872a645f800db9516e2747079bb904981c10f743a3c8e6eab97e"
  },
  "date_added": "2014-02-26T13:12:11+00:00",
  "readme": "# clib(1)\n\n  [![Build Status](https://travis-ci.org/clibs/clib.svg?branch=master)](https://travis-ci.org/clibs/clib)\n  [![Codacy Badge](https://app.codacy.com/project/badge/Grade/a196ec36c31349e18b6e4036eab1d02c)](https://www.codacy.com/gh/clibs/clib?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=clibs/clib&amp;utm_campaign=Badge_Grade)\n\n  Package manager for the C programming language.\n\n  ![c package manager screenshot](https://i.cloudup.com/GwqOU2hh9Y.png)\n\n## Installation\n\n  Expects [libcurl](http://curl.haxx.se/libcurl/) to be installed and linkable.\n\n  With [homebrew](https://github.com/Homebrew/homebrew):\n\n```sh\n$ brew install clib\n```\n\n  Or [MacPorts](https://www.macports.org):\n\n```sh\n$ sudo port selfupdate\n$ sudo port install clib\n```\n\n  With git:\n\n```sh\n$ git clone https://github.com/clibs/clib.git /tmp/clib\n$ cd /tmp/clib\n$ make install\n```\n\n  Ubuntu:\n\n```sh\n# install libcurl\n$ sudo apt-get install libcurl4-gnutls-dev -qq\n# clone\n$ git clone https://github.com/clibs/clib.git /tmp/clib && cd /tmp/clib\n# build\n$ make\n# put on path\n$ sudo make install\n```\n\n## About\n\n  Basically the lazy-man's copy/paste promoting smaller C utilities, also\n  serving as a nice way to discover these sort of libraries. From my experience\n  C libraries are scattered all over the web and discovery is relatively poor. The footprint of these libraries is usually quite large and unfocused. The goal of `clibs` is to provide\n  stand-alone \"micro\" C libraries for developers to quickly install without coupling\n  to large frameworks.\n\n  You should use `clib(1)` to fetch these files for you and check them into your repository, the end-user and contributors should not require having `clib(1)` installed. This allows `clib(1)` to fit into any new or existing C workflow without friction.\n\n  The wiki [listing of packages](https://github.com/clibs/clib/wiki/Packages) acts as the \"registry\" and populates the `clib-search(1)` results.\n\n## Usage\n\n```\n  clib <command> [options]\n\n  Options:\n\n    -h, --help     Output this message\n    -V, --version  Output version information\n\n  Commands:\n\n    init                 Start a new project\n    i, install [name...] Install one or more packages\n    up, update [name...] Update one or more packages\n    upgrade [version]    Upgrade clib to a specified or latest version\\\n    configure [name...]  Configure one or more packages\n    build [name...]      Build one or more packages\n    search [query]       Search for packages\n    help <cmd>           Display help for cmd\n```\n\nMore about the Command Line Interface [here](https://github.com/clibs/clib/wiki/Command-Line-Interface).\n\n## Examples\n\n More examples and best practices at [BEST_PRACTICE.md](https://github.com/clibs/clib/blob/master/BEST_PRACTICE.md).\n\n Install a few dependencies to `./deps`:\n\n```sh\n$ clib install clibs/ms clibs/commander\n```\n\n Install them to `./src` instead:\n\n```sh\n$ clib install clibs/ms clibs/commander -o src\n```\n\n When installing libraries from the `clibs` org you can omit the name:\n\n```sh\n$ clib install ms file hash\n```\n\n Install some executables:\n\n```sh\n$ clib install visionmedia/mon visionmedia/every visionmedia/watch\n```\n\n## clib.json\n\n Example of a clib.json explicitly listing the source:\n\n```json\n{\n  \"name\": \"term\",\n  \"version\": \"0.0.1\",\n  \"repo\": \"clibs/term\",\n  \"description\": \"Terminal ansi escape goodies\",\n  \"keywords\": [\"terminal\", \"term\", \"tty\", \"ansi\", \"escape\", \"colors\", \"console\"],\n  \"license\": \"MIT\",\n  \"src\": [\"src/term.c\", \"src/term.h\"]\n}\n```\n\n Example of a clib.json for an executable:\n\n```json\n{\n  \"name\": \"mon\",\n  \"version\": \"1.1.1\",\n  \"repo\": \"visionmedia/mon\",\n  \"description\": \"Simple process monitoring\",\n  \"keywords\": [\"process\", \"monitoring\", \"monitor\", \"availability\"],\n  \"license\": \"MIT\",\n  \"install\": \"make install\"\n}\n```\n\n See [explanation of clib.json](https://github.com/clibs/clib/wiki/Explanation-of-clib.json) for more details.\n\n## Contributing\n\n If you're interested in being part of this initiative let me know and I'll add you to the `clibs` organization so you can create repos here and contribute to existing ones.\n \n If you have any issues, questions or suggestions, please open an issue [here](https://github.com/clibs/clib/issues). \n \n You can also find us on Gitter: https://gitter.im/clibs/clib\n \n Also feel free to open a GitHub Discussion [here](https://github.com/clibs/clib/discussions).\n\n Before committing to the repository, please run `make commit-hook`. This installs a commit hook which formats `.c` and `.h` files.\n\n## Articles\n\n  - [Introducing Clib](https://medium.com/code-adventures/b32e6e769cb3) - introduction to clib\n  - [The Advent of Clib: the C Package Manager](https://web.archive.org/web/20200128184218/http://blog.ashworth.in/2014/10/19/the-advent-of-clib-the-c-package-manager.html) - overview article about clib"
}
