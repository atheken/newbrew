{
  "name": "libwbxml",
  "full_name": "libwbxml",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Library and tools to parse and encode WBXML documents",
  "license": "LGPL-2.1",
  "homepage": "https://github.com/libwbxml/libwbxml",
  "versions": {
    "stable": "0.11.8",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/libwbxml/libwbxml/archive/libwbxml-0.11.8.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "a6fe0e55369280c1a7698859a5c2bb37c8615c57a919b574cd8c16458279db66"
    },
    "head": {
      "url": "https://github.com/libwbxml/libwbxml.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libwbxml/blobs/sha256:98d058e5bcb1eb4846a21d474774cbec312ce4b49c37585eae02c601c64e201e",
          "sha256": "98d058e5bcb1eb4846a21d474774cbec312ce4b49c37585eae02c601c64e201e"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libwbxml/blobs/sha256:fe2ac6ea506094bb84685b873d59cb9b0ea225b2ce56cb13b2fc1197bcd6b906",
          "sha256": "fe2ac6ea506094bb84685b873d59cb9b0ea225b2ce56cb13b2fc1197bcd6b906"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libwbxml/blobs/sha256:ac5e42ae5a76a5d3cf1d731b80b40ae019ffd90c0cef0ea4ad24d700958f3dc3",
          "sha256": "ac5e42ae5a76a5d3cf1d731b80b40ae019ffd90c0cef0ea4ad24d700958f3dc3"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libwbxml/blobs/sha256:a3d9904a0466a386a6572f5dbe8834960511574475511cc5096e5751c5a2c1c1",
          "sha256": "a3d9904a0466a386a6572f5dbe8834960511574475511cc5096e5751c5a2c1c1"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libwbxml/blobs/sha256:08e5267c81b874f8115b1fb110a3a0553553863b139c950e60aeead99701ac7f",
          "sha256": "08e5267c81b874f8115b1fb110a3a0553553863b139c950e60aeead99701ac7f"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libwbxml/blobs/sha256:1d656b5fd3c1c1486db641b7e00a129b71071c1f26a522dad2bc29795d6c2a85",
          "sha256": "1d656b5fd3c1c1486db641b7e00a129b71071c1f26a522dad2bc29795d6c2a85"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libwbxml/blobs/sha256:1a5739cb2c803bc0580ef5cab2c58effaa2d849f7f0d55060f325a5cd9cf8ec2",
          "sha256": "1a5739cb2c803bc0580ef5cab2c58effaa2d849f7f0d55060f325a5cd9cf8ec2"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libwbxml/blobs/sha256:ec4cdd3a2ead2da218798ef2a020fe2ef66f18b44d6a995977838af60257e8a2",
          "sha256": "ec4cdd3a2ead2da218798ef2a020fe2ef66f18b44d6a995977838af60257e8a2"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake",
    "doxygen",
    "graphviz"
  ],
  "dependencies": [
    "wget"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "expat"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/libwbxml.rb",
  "ruby_source_checksum": {
    "sha256": "b355dd8bde76f907d4bee57eaf36660f656b8a42c455ac243c5bcd85f837049e"
  },
  "date_added": "2010-10-14T08:44:50-07:00",
  "readme": "    WBXML Library\n    -------------\n    \n    The WBXML Library (aka libwbxml) contains a library and its associated tools to Parse,\n    Encode and Handle WBXML documents.\n\n    The WBXML format is a binary representation of XML, defined by the Wap Forum, and used\n    to reduce bandwidth in mobile communications. \n    \n    \n    Dependency:\n    -----------\n    \n    The WBXML Library needs Expat to enable XML Parsing feature (and so XML to WBXML conversion).\n    \n    \n    High Level API:\n    ---------------\n    \n                        -------------------------\n                (1)     |                       |\n  [ WBXML ] --------->  |                       | ----------> [ XML ]\n                        |     WBXML Library     |\n  [ WBXML ] <---------  |                       | <---------- [ XML ]\n                        |                       |     (2)\n                        -------------------------      \n    \n    The high level API permits to:\n        - (1) Convert a WBXML Document to an XML Document\n        - (2) Convert an XML Document to a WBXML Document\n\n\n    Inside the WBXML Library:\n    -------------------------\n    \n  [ WBXML ]                                                                   [ XML ]\n      |                                                                           |\n      |  -------------------------                       -----------------------  |\n      |  |   WBXML Parser (1)    |                       |  Expat XML Parser   |  |\n      |  |                       |                       |                     |  |\n      |  -------------------------                       -----------------------  |\n      |    |WBXML Callbacks (3)|                           |XML Callbacks (4)|    |\n       \\                                                                         /\n        \\                                                                       /\n         -------------------------> [ WBXML Tree (2) ] <------------------------\n\n                                           ||\n                                           ||\n                                           \\/                                           \n\n                                 -----------------------\n                                 |  WBXML Encoder (5)  |\n                                 |                     |\n                                 -----------------------\n                                      |           |\n                                      |           |\n                                     /             \\\n  [ WBXML ] <-----------------------                ------------------------> [ XML ]\n  \n  \n    The WBXML Library contains:\n        - (1) A WBXML Parser, with a SAX like interface (ie: this is a kind of Expat, but for WBXML)\n        - (2) A WBXML Tree structure (an internal representation of a WBXML/XML Document)\n        - (3) Libwbxml Callbacks to convert a WBXML Document to a WBXML Tree\n        - (4) Expat Callbacks to convert an XML Document to a WBXML Tree\n        - (5) A WBXML Encoder, that encodes a WBXML Tree to a WBXML Document or to an XML Document \n\n\t    \n\tIf you find bugs, or simply use this library, feel free to contact me.\n\n\n    Supported Languages:\n    --------------------\n        - WML 1.0, 1.1, 1.2, 1.3\n        - WTA 1.0\n        - WTA-WML 1.2\n        - CHANNEL 1.1, 1.2\n        - SI 1.0 (tested)\n        - SL 1.0 (tested)\n        - CO 1.0\n        - PROV 1.0 (tested)\n        - EMN 1.0 (tested)\n        - DRMREL 1.0 (tested)\n        - Ericsson / Nokia OTA Settings v7.0 (tested)\n        - SYNCML 1.0, 1.1, 1.2\n        - WV CSP 1.1, 1.2 (partially tested)\n\n\n    TOOLS:\n    ------\n    \n    Two tools are provided:\n        - wbxml2xml: (WBXML => XML)\n            wbxml2xml -i -o output.xml input.wbxml\n            wbxml2xml -i 4 -l CSP12 -o output.xml input.wbxml\n            Options:\n                -o output.xml : output file\n                -m X (Generation mode - Default: 1) with:\n                   0: Compact Generation\n                   1: Indent Generation\n                   2: Canonical Generation\n                -i X (Indent delta when using mode '1' - Default: 1)\n                -k (Keep Ignorable Whitespaces - Default: FALSE)\n                -l X (Force Language Type of document to parse)\n                    WML10 : WML 1.0\n                    WML11 : WML 1.1\n                    WML12 : WML 1.2\n                    WML13 : WML 1.3\n                    WTA10 : WTA 1.0\n                    WTAWML12 : WTAWML 1.2\n                    CHANNEL11 : CHANNEL 1.1\n                    CHANNEL12 : CHANNEL 1.2\n                    SI10 : SL 1.0\n                    SL10 : SI 1.0\n                    CO10 : CO 1.0\n                    PROV10 : PROV 1.0\n                    EMN10 : EMN 1.0\n                    DRMREL10 : DRMREL 1.0\n                    OTA : OTA Settings\n                    SYNCML10 : SYNCML 1.0\n                    DEVINF10 : DEVINF 1.0\n                    SYNCML11 : SYNCML 1.1\n                    DEVINF11 : DEVINF 1.1\n                    METINF11 : METINF 1.1\n                    SYNCML12 : SYNCML 1.2\n                    DEVINF12 : DEVINF 1.2\n                    METINF12 : METINF 1.2\n                    CSP11 : WV CSP 1.1\n                    CSP12 : WV CSP 1.2                  \n            Note: '-' can be used to mean stdin on input or stdout on output             \n            \n        - xml2wbxml: (XML => WBXML)\n            xml2wbxml -o output.wbxml input.xml\n            xml2wbxml -k -n -v 1.1 -o output.wbxml input.xml\n            Options:\n                -o output.wbxml : output file\n                -k : keep ignorable whitespaces (Default: ignore)\n                -n : do NOT generate String Table (Default: generate)\n                -v X (WBXML Version of output document)\n                    1.0 : WBXML 1.0\n                    1.1 : WBXML 1.1\n                    1.2 : WBXML 1.2\n                    1.3 : WBXML 1.3                \n            Note: '-' can be used to mean stdin on input or stdout on output\n\n\n    CONTACT:\n    --------\n\n        Please use GitHub to report bugs, ask questions or submit code:\n        https://github.com/libwbxml/libwbxml\n\n        Releases can be found on GitHub too:\n        https://github.com/libwbxml/libwbxml/releases\n\n        In the past, releases were published on SourceForge:\n        https://sourceforge.net/projects/libwbxml/\n\n        Today, releases are only published on GitHub."
}
