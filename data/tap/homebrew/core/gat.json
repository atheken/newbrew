{
  "name": "gat",
  "full_name": "gat",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Cat alternative written in Go",
  "license": "MIT",
  "homepage": "https://github.com/koki-develop/gat",
  "versions": {
    "stable": "0.12.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/koki-develop/gat/archive/refs/tags/v0.12.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "a97c362d54d3d2a05111fac780b6beb62db818ae1e92a33f53576c59267146e6"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gat/blobs/sha256:d82dd6ec2febde6778b102a41c5e35f169bb2bff02861e390a53ef999c61d2fc",
          "sha256": "d82dd6ec2febde6778b102a41c5e35f169bb2bff02861e390a53ef999c61d2fc"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gat/blobs/sha256:d82dd6ec2febde6778b102a41c5e35f169bb2bff02861e390a53ef999c61d2fc",
          "sha256": "d82dd6ec2febde6778b102a41c5e35f169bb2bff02861e390a53ef999c61d2fc"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gat/blobs/sha256:d82dd6ec2febde6778b102a41c5e35f169bb2bff02861e390a53ef999c61d2fc",
          "sha256": "d82dd6ec2febde6778b102a41c5e35f169bb2bff02861e390a53ef999c61d2fc"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gat/blobs/sha256:354af6e477139615bc48a0d67c146a787b52c36bf6cf7ecfd31bf7fabd789eb1",
          "sha256": "354af6e477139615bc48a0d67c146a787b52c36bf6cf7ecfd31bf7fabd789eb1"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gat/blobs/sha256:354af6e477139615bc48a0d67c146a787b52c36bf6cf7ecfd31bf7fabd789eb1",
          "sha256": "354af6e477139615bc48a0d67c146a787b52c36bf6cf7ecfd31bf7fabd789eb1"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gat/blobs/sha256:354af6e477139615bc48a0d67c146a787b52c36bf6cf7ecfd31bf7fabd789eb1",
          "sha256": "354af6e477139615bc48a0d67c146a787b52c36bf6cf7ecfd31bf7fabd789eb1"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gat/blobs/sha256:5b609395810b46bc353642ac06edbf54adcd52b75777b3a1d31f395a64ce596c",
          "sha256": "5b609395810b46bc353642ac06edbf54adcd52b75777b3a1d31f395a64ce596c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/gat.rb",
  "ruby_source_checksum": {
    "sha256": "d257e655d1607682dad2a47f5996198fd8a8425f65706c666a270036e1d98290"
  },
  "date_added": "2023-04-10T06:48:04+09:00",
  "readme": "<p align=\"center\">\n<img src=\"./assets/logo_light.svg#gh-light-mode-only\" >\n<img src=\"./assets/logo_dark.svg#gh-dark-mode-only\" >\n</p>\n\n<p align=\"center\">\ncat alternative written in Go.\n</p>\n\n<p align=\"center\">\n<a href=\"https://github.com/koki-develop/gat/releases/latest\"><img src=\"https://img.shields.io/github/v/release/koki-develop/gat\" alt=\"GitHub release (latest by date)\"></a>\n<a href=\"https://github.com/koki-develop/gat/releases/latest\"><img alt=\"GitHub all releases\" src=\"https://img.shields.io/github/downloads/koki-develop/gat/total?style=flat\"></a>\n<a href=\"https://github.com/koki-develop/gat/actions/workflows/ci.yml\"><img src=\"https://img.shields.io/github/actions/workflow/status/koki-develop/gat/ci.yml?logo=github\" alt=\"GitHub Workflow Status\"></a>\n<a href=\"https://codeclimate.com/github/koki-develop/gat/maintainability\"><img src=\"https://img.shields.io/codeclimate/maintainability/koki-develop/gat?style=flat&amp;logo=codeclimate\" alt=\"Maintainability\"></a>\n<a href=\"https://goreportcard.com/report/github.com/koki-develop/gat\"><img src=\"https://goreportcard.com/badge/github.com/koki-develop/gat\" alt=\"Go Report Card\"></a>\n<a href=\"./LICENSE\"><img src=\"https://img.shields.io/github/license/koki-develop/gat\" alt=\"LICENSE\"></a>\n</p>\n\n<p align=\"center\">\n<img src=\"./docs/demo.gif\" >\n</p>\n\n## Contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [LICENSE](#license)\n\n## Installation\n\n### Homebrew\n\n```console\n$ brew install gat\n```\n\n### Homebrew Tap\n\n```console\n$ brew install koki-develop/tap/gat\n```\n\n### `go install`\n\n```console\n$ go install github.com/koki-develop/gat@latest\n```\n\n### Releases\n\nDownload the binary from the [releases page](https://github.com/koki-develop/gat/releases/latest).\n\n## Usage\n\n```console\n$ gat --help\ncat alternative written in Go.\n\nUsage:\n  gat [file]... [flags]\n\nFlags:\n  -c, --force-color     force colored output\n  -f, --format string   output format (default \"terminal256\")\n  -h, --help            help for gat\n  -l, --lang string     language for syntax highlighting\n      --list-formats    print a list of supported output formats\n      --list-langs      print a list of supported languages for syntax highlighting\n      --list-themes     print a list of supported themes with preview\n  -p, --pretty          whether to format a content pretty\n  -t, --theme string    highlight theme (default \"monokai\")\n  -v, --version         version for gat\n```\n\n### `-l`, `--lang`\n\nExplicitly set the language for syntax highlighting.  \nSee [languages.md](./docs/languages.md) for valid languages.\n\n### `-f`, `--format`\n\nSet the output format ( default: `terminal256` ).  \nAlternatively, it can be set using the `GAT_FORMAT` environment variable.\nSee [formats.md](./docs/formats.md) for valid formats.\n\n### `-t`, `--theme`\n\nSet the highlight theme ( default: `monokai` ).  \nAlternatively, it can be set using the `GAT_THEME` environment variable.\nSee [themes.md](./docs/themes.md) for valid themes.\n\n## `-p`, `--pretty`\n\nFormat a content pretty.  \nFor unsupported languages, this flag is ignored.\n\n## `-c`, `--force-color`\n\n`gat` disables colored output when piped to another program.  \nSettings the `--force-color` forces colored output to be enabled.  \nThis is useful, for example, when used in combination with the `less -R` command.\n\n![](/docs/gess.gif)\n\nIt is also useful to declare the following function to allow `gat` to be used with a pager.\n\n```sh\nfunction gess() {\n  gat --force-color \"$@\" | less -R\n}\n```\n\n## Print Image\n\nIf your terminal supports Sixel, you can print images.\n\n![](./docs/image.png)\n\nSupported image formats include:\n\n- JPEG\n- PNG\n- GIF (animation not supported)\n\n## LICENSE\n\n[MIT](./LICENSE)"
}
