{
  "name": "squashfuse",
  "full_name": "squashfuse",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "FUSE filesystem to mount squashfs archives",
  "license": "BSD-2-Clause",
  "homepage": "https://github.com/vasi/squashfuse",
  "versions": {
    "stable": "0.3.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/vasi/squashfuse/archive/refs/tags/0.3.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "cc59722e1c7fafb142146f394eacec20f020330ada848113c2e1fc83ab679c05"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/squashfuse/blobs/sha256:f6d9fd789829988a17d6bca4f362fea0baf9f59ff32fa080ad55cc0baa2501ce",
          "sha256": "f6d9fd789829988a17d6bca4f362fea0baf9f59ff32fa080ad55cc0baa2501ce"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "autoconf",
    "automake",
    "libtool",
    "pkg-config"
  ],
  "dependencies": [
    "libfuse",
    "lz4",
    "lzo",
    "squashfs",
    "xz",
    "zstd"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "linux",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/squashfuse.rb",
  "ruby_source_checksum": {
    "sha256": "1f4a03c0d28fea27ef94fdeff04b38a348be11480e6733fd016f5398c61d3a32"
  },
  "date_added": "2018-07-19T07:25:03-07:00",
  "readme": "         squashfuse - Mount SquashFS archives using FUSE\n\n               https://github.com/vasi/squashfuse\n\nSquashfuse lets you mount SquashFS archives in user-space. It supports almost\nall features of the SquashFS format, yet is still fast and memory-efficient. So\nthat everyone can use it, squashfuse supports many different operating systems\nand is available under a permissing license.\n\nSquashFS is an efficiently compressed, read-only storage format. Support for it\nhas been built into the Linux kernel since 2009. It is very common on Live CDs\nand embedded Linux distributions.\n\nQuick start:\n  $ ./configure && make\n  $ ./squashfuse foo.squashfs mountpoint\n\n\n1. Table of contents\n====================\n0. Introduction\n1. Table of contents\n2. Getting started\n   - System requirements\n   - Getting the source\n   - Building\n   - Usage\n3. About squashfuse\n   - Is squashfuse for you?\n   - What's included?\n   - Features\n   - Known bugs\n4. References\n   - Licensing\n   - Acknowledgements\n   - Links\n\n\n2. Getting started\n==================\n\n2a. System requirements\n-----------------------\nTo build and use squashfuse, you must be able to use the terminal of your\noperating system.\n\nRuntime requirements:\n  - FUSE 2.5 or later\n  - At least one of the following compression libraries\n      - zlib\n      - lzo2\n      - xz (aka. liblzma)\n      - lz4\n      - zstd\n  - (optional) libattr, for better extended attribute support on Linux\n\nBuild requirements:\n  - A C compiler\n  - make (any variant)\n  - sed\n  - (optional) pkg-config, for detection of dependencies\n\nTo build from the development repository, rather than a tarball, you'll need:\n  - autoconf 2.60 or later\n  - automake 1.11 or later\n  - libtool 2\n\nKnown fully-supported platforms:\n  - Linux\n  - Mac OS X\n  - FreeBSD\n  - NetBSD\n  - OpenIndiana\n  - Android\n  - other platforms may work too!\n\nFor a precise list of packages you will need on your OS, and other platform\nnotes, please see the file `PLATFORMS'.\n\n\n2b. Getting the source\n----------------------\nThe squashfuse distribution can be downloaded from SourceForge:\nhttps://sourceforge.net/projects/squashfuse/files/\n\nThe development repository uses git, at GitHub:\nhttp://github.com/vasi/squashfuse\n\n\n2c. Installation\n----------------\nSquashfuse is built with the usual `configure && make'. If you need more\ndetailed instructions:\n\n0. Ensure you're at your terminal, in the directory containing this README.\n\n1. (if needed) If the file `configure' is already present, skip this step.\n   Otherwise, run `./autogen.sh' to generate one.\n\n2. Run `./configure' to set up the build. You can find useful configuration\n   options in the file `CONFIGURATION', or by running `./configure --help'.\n\n   If configure fails, check that you really have all the requirements\n   installed. You may also want to check the `PLATFORMS' file to see if there\n   are any special notes for your operating system.\n\n3. Run `make' to build `squashfuse'.\n\n4. (optional) If you want to use squashfuse in this directory, that's ok.\n   But if you'd rather install it, run `make install'. If you need root\n   privileges, `sudo make install' may work.\n\n\n2d. Example: Ubuntu\n-------------------\n\nFor example on Ubuntu 16.04:\n\nsudo apt-get -y install git autoconf libtool make gcc libtool libfuse-dev liblzma-dev\nlibtoolize --force\naclocal\nautoheader\nautomake --force-missing --add-missing\nautoconf\n./configure --with-xz=/usr/lib/\nmake\n\n\n2e. Usage\n---------\nYou'll need a SquashFS archive to use squashfuse. If you don't already have\none, you can create one using the `mksquashfs' utility from the squashfs-tools\nproject.\n\nTo create a SquashFS archive:\n  $ mksquashfs DIRECTORY ARCHIVE\n\nTo mount a SquashFS archive with squashfuse:\n  $ squashfuse ARCHIVE MOUNTPOINT\n\nTo unmount when you're done:\n  $ umount MOUNTPOINT         # On Mac/BSD\n  $ fusermount -u MOUNTPOINT  # On Linux\n\nFor more options, see the man page squashfuse(1).\n\n\n3. About squashfuse\n===================\n\n3a. Is squashfuse for you?\n--------------------------\nSquashfuse is a great option if you have a SquashFS archive, and:\n  - You're not running Linux, or\n  - You don't have root access, or\n  - You're too concerned about security to use root, or\n  - You find it inconvenient to elevate privileges, or\n  - SquashFS is not built into your kernel, but FUSE is, or\n  - You want to hack on the SquashFS format without risking kernel panics.\n\nSquashfuse is probably not the right tool for the job, if:\n  - You don't have FUSE.\n    More and more systems have FUSE, but some don't. Squashfuse requires it.\n    \n  - You have a very old SquashFS archive.\n    Neither squashfuse nor the Linux kernel support SquashFS versions less\n    than 4.0. Use `unsquashfs' from the squashfs-tools project.\n\n  - You want to create or modify a SquashFS archive.\n    Neither squashfuse nor the Linux kernel support write access, use\n    `mksquashfs' from squashfs-tools.\n\n  - You want to extract an entire SquashFS archive.\n    If you don't want to mount anything, it's more efficient and convenient\n    to just use unsquashfs.\n\n  - You want your root filesystem `/' to be SquashFS.\n    This isn't well-tested, though it may be possible.\n  \n  - You're highly concerned about bugs.\n    The SquashFS kernel module has seen much more testing than squashfuse.\n\n\nIf you don't yet use SquashFS, consider starting, now that squashfuse exists.\nFor many uses, the chief drawbacks of SquashFS were requiring Linux and root\naccess, but squashfuse has that covered.\n\n  - Use SquashFS for archival and backup, instead of tar.\n    It offers faster creation (multi-core), and browsing without unpacking.\n  \n  - Use SquashFS instead of zip. \n    It has better compression, and faster directory lookup.\n    \n  - Use SquashFS instead of compressed disk images like DMG, uzip or Partimage.\n    It has better compression and portability.\n  \n\n3b. What's included?\n--------------------\nSquashfuse currently comprises three programs:\n\n  * squashfuse      Allows you to mount a squashfs filesystem.\n  \n  * squashfuse_ll   Like `squashfuse', but implemented using the low-level\n                    FUSE API. It's a tiny bit faster, but less portable.\n  \n  * squashfuse_ls   Lists all the files in a squashfs archive. A demonstration\n                    of using the squashfuse core in the absence of FUSE.\n\n\n3c. Features\n------------\nSquashfuse supports the following SquashFS features: \n  - zlib, LZO, LZMA2, LZ4 and zstd decompression\n  - Fast, indexed directory lookup\n  - Fast, indexed seeking within files\n  - Caching of decompressed blocks\n  - De-duplicated files\n  - Sparse files\n  - Extended attributes\n  - Files larger than 4GB\n\nSquashfuse is missing the following features:\n  - LZMA1 compression (deprecated)\n  - Support for SquashFS versions less than 4.0\n  - Multi-core decompression\n\n\n3c. Known bugs\n--------------\n- On 32-bit systems with a large inode cache, when mounting a large SquashFS\n  archive created with the \"-no-exports\" option, squashfuse_ll may use a large\n  amount of memory. This is due to a bug in the FUSE API, where ino_t is shrunk\n  to 32-bits.\n\n\n4. References\n=============\n\n4a. Licensing\n-------------\nSquashfuse is copyright (c) 2012-2014 Dave Vasilevsky <dave@vasilevsky.ca>\nSquashfuse is distributed under the 2-clause BSD license. See the file LICENSE\nfor details.\n\n\n4b. Acknowledgements\n--------------------\nThanks to:\n\n* Phillip Lougher, for designing the SquashFS format, and implementing support\n  in the kernel. Also for providing permission to use and distribute\n  squashfs_fs.h under a BSD-style license.\n\n* Maël Kerbiriou, for implementing LZ4 support.\n\n\n4c. Links\n---------\n* SquashFS\n  - SquashFS home page, includeing squashfs-tools:\n    http://squashfs.sourceforge.net/\n  - squashfs-tools for non-Linux: https://github.com/vasi/squashfs-tools\n\n* FUSE\n  - FUSE home page: http://fuse.sourceforge.net/\n  - OSXFUSE (FUSE for Macs): http://osxfuse.github.io/\n\n* Other implementations of the SquashFS format\n  - Linux kernel: https://github.com/torvalds/linux/tree/master/fs/squashfs\n  - 7-zip / p7zip: http://www.7-zip.org/\n  - GRUB 2 bootloader: http://www.gnu.org/software/grub/"
}
