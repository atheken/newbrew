{
  "name": "serveit",
  "full_name": "serveit",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Synchronous server and rebuilder of static content",
  "license": "MIT",
  "homepage": "https://github.com/garybernhardt/serveit",
  "versions": {
    "stable": "0.0.3",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/garybernhardt/serveit/archive/v0.0.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "5bbefdca878aab4a8c8a0c874c02a0a033cf4321121c9e006cb333d9bd7b6d52"
    },
    "head": {
      "url": "https://github.com/garybernhardt/serveit.git",
      "branch": "master"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/serveit/blobs/sha256:e17a21fd5705de1b2e96656ad703f51c8f1781601f295ff7028cfc859bd0ca44",
          "sha256": "e17a21fd5705de1b2e96656ad703f51c8f1781601f295ff7028cfc859bd0ca44"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/serveit.rb",
  "ruby_source_checksum": {
    "sha256": "e5556abc77ba15b3e5d8211b504f6686f438835b2f115f5b312d5b253755a7e8"
  },
  "date_added": "2015-06-28T02:47:56+01:00",
  "readme": "# ServeIt\n\nServeIt is a tool for previewing content in a browser, automatically rebuilding it when things change.\nIt replaces tools like [guard](https://github.com/guard/guard) that do asynchronous rebuilds when files change.\n\nServeIt is strictly synchronous: it performs builds when requests come in, blocking the request until the build completes.\nThis means that the served content will never be stale or inconsistent, as it can be with asynchronous tools.\n\nYou can use ServeIt to preview a markdown file as you write it, to serve your blog as you write a post, to review a book as you edit it, etc.\n\n## Usage\n\nTo serve the current directory at `http://localhost:8000` as a purely static site, including a simple directory listing, run:\n\n```\n$ serveit\n```\n\nThat's useful, but most content isn't static.\nI'm using the command below to preview this README as I write it.\nWhenever I refresh the page, ServeIt runs `multimarkdown` to regenerate the HTML:\n\n```\n$ serveit 'multimarkdown README.md > README.html'\n```\n\n(You should try this yourself; it will make ServeIt's purpose and behavior much more clear than simply reading.)\n\nWhen I go to `localhost:8000`, the `multimarkdown` command will be run, then I get a simple directory listing:\n\n> <p><h3>Listing for /</h3></p>\n> <a href=\"/..\">..</a><br>\n> <a href=\"/.git\">.git</a><br>\n> <a href=\"/.gitignore\">.gitignore</a><br>\n> <a href=\"/README.html\">README.html</a><br>\n> <a href=\"/README.md\">README.md</a><br>\n> <a href=\"/serveit\">serveit</a><br>\n\nIf I click on `README.html`, I see this README file rendered as HTML.\nWhen I load or reload any page, ServeIt will check for changes to any files in its current working directory.\nIf there was a change, *no matter what the change is*, then the command will be re-run, regenerating the HTML file.\nThe HTTP request only completes once the build is finished.\n\n## Theory of Operation\n\nServeIt does exactly two things:\n\n1. Serve static files.\n2. Run a command when anything changes on disk, which may change the static files that it's serving.\n\nServeIt works well for building more complex content, like blogs or books.\nHowever, it has no advanced concepts like dependency tracking; those are jobs for other tools.\n\nYou can use whatever build tool you like -- `serveit make`, `serveit rake`, `serveit grunt`, etc., and these tools can do arbitrary build tasks.\nWhile writing this README, I'm sloppily letting ServeIt serve its own git repository directory, including detritus like the `.git` directory.\nWhen working on my book, I have a more rigorous build system.\nIt uses `rake` rules to rebuild only chapters that have changed, and output goes into a `build` directory that doesn't contain any of the source files.\n\nServeIt doesn't know about any details of the build.\nIt will never be extended to know details of the build.\n*ServeIt does not do builds. It serves files and runs commands when files change!*\n\n## Is It Fast Enough?\n\nServeIt's file change tracking is naive: it simply crawls the current directory recursively, building a list of paths and their modification times.\nComputers are fast now; this is not a performance problem.\nMy machine takes about 30 ms to check for changes in a directory of 10,000 files.\nIf your blog has 1,000,000 files in it, ServeIt will be slow.\nDon't do that.\n\nServeIt adds a trivial amount of overhead to requests -- generally less than a millisecond.\nIf the build becomes annoyingly slow, that's a build tool problem that can be solved with incremental builds using `make`, `rake`, or whatever tool you like.\nOr, even better, it can be solved by reducing the complexity of the build.\nReducing build complexity is usually more effective and reliable than increasing complexity by adding subtle incremental build rules.\n\n## Options\n\nYou can change ServeIt's server root with `-s`.\nThis is useful when your build output goes into a specific directory.\nTo build and serve my book, I run this command in the root of its repo:\n\n```\nserveit -s build rake\n```\n\nThis runs `rake` in the repo root, where there's a Rakefile.\nWhen I reload, the Rakefile incrementally builds the book into the `build` directory.\nServeIt is serving the `build` directory because of the `-s` argument, so I see my rendered changes upon reload.\n\nYou can ignore files or directories with `-i YOUR_IGNORED_DIR`.\nSpecify it multiple times to ignore multiple paths.\n\n## Practicalities\n\nServeIt requires Ruby 1.9.3 or later, but has no other dependencies."
}
