{
  "name": "syck",
  "full_name": "syck",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Extension for reading and writing YAML",
  "license": "MIT",
  "homepage": "https://github.com/indeyets/syck",
  "versions": {
    "stable": "0.70",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.s3.amazonaws.com/downloads/indeyets/syck/syck-0.70.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "4c94c472ee8314e0d76eb2cca84f6029dc8fc58bfbc47748d50dcb289fda094e"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/syck/blobs/sha256:db727a32ae139eaa822db6255785076859d23f8586693a99cf76c59a65f5a578",
          "sha256": "db727a32ae139eaa822db6255785076859d23f8586693a99cf76c59a65f5a578"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/syck/blobs/sha256:af0789d6b4cc6f239e74176c2ffcdef761b9da87d248405568cdac1aa9ec3c48",
          "sha256": "af0789d6b4cc6f239e74176c2ffcdef761b9da87d248405568cdac1aa9ec3c48"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/syck/blobs/sha256:00e98131174e989c13cde7eb0564b19581f0a60f0a5786c39d017ba7cd1ae893",
          "sha256": "00e98131174e989c13cde7eb0564b19581f0a60f0a5786c39d017ba7cd1ae893"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/syck/blobs/sha256:ed01cbb1fce9251ef7e957b1e449bd0e5b6233804f0ab5c0ff5e6694c4f573e1",
          "sha256": "ed01cbb1fce9251ef7e957b1e449bd0e5b6233804f0ab5c0ff5e6694c4f573e1"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/syck/blobs/sha256:a854609908189dcfc4de73c7213104e4d3b35ed4583bbe0e86fda899817ced7b",
          "sha256": "a854609908189dcfc4de73c7213104e4d3b35ed4583bbe0e86fda899817ced7b"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/syck/blobs/sha256:bd7841201573c4b79fc9f28a1b5a981fb138553e5a3fc8712ccba26b16059504",
          "sha256": "bd7841201573c4b79fc9f28a1b5a981fb138553e5a3fc8712ccba26b16059504"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/syck/blobs/sha256:cc1bf3857c3d847854b54f45a25c5b1696c811f369c811521a07e2f5a4431e81",
          "sha256": "cc1bf3857c3d847854b54f45a25c5b1696c811f369c811521a07e2f5a4431e81"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/syck/blobs/sha256:4baab04685bbb2fb536170a1bd069cfdec7fb5b2bc802ce6a80a4be933d8530a",
          "sha256": "4baab04685bbb2fb536170a1bd069cfdec7fb5b2bc802ce6a80a4be933d8530a"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/syck/blobs/sha256:a5a983847ae0e83a5f1d83adac736c602f7cce9ae00b9700d81ed766b4fe54bb",
          "sha256": "a5a983847ae0e83a5f1d83adac736c602f7cce9ae00b9700d81ed766b4fe54bb"
        },
        "sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/syck/blobs/sha256:5a5f8c0f9a9def7ab59a052d85fbb128bc9a1c9c9b7ea2f9639109147eeba252",
          "sha256": "5a5f8c0f9a9def7ab59a052d85fbb128bc9a1c9c9b7ea2f9639109147eeba252"
        },
        "el_capitan": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/syck/blobs/sha256:a2270f693ce6e8f0542f7d57dc6c8fcb731a268aee3c75a314523446c68602d6",
          "sha256": "a2270f693ce6e8f0542f7d57dc6c8fcb731a268aee3c75a314523446c68602d6"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/syck.rb",
  "ruby_source_checksum": {
    "sha256": "4a195012bb644c245ecdd6149325e3cf3dc85372079f47a52c2c540b53be9512"
  },
  "date_added": "2010-01-30T23:25:51-08:00",
  "readme": "\n \n\n                             . syck .\n\n                         [ version 0.70 ]\n\n\n\n\n\nINSTALLATION\n\n   ./bootstrap\n   ./configure\n   make\n   make check\n   sudo make install\n\nIf the unit tests don't pass, notify me immediately.  This distribution\nis tested on FreeBSD and Linux.  I don't release it unless the tests\npass on those machines.  If tests aren't passing, then that's a problem.\n\nABOUT\n\nSyck is the Scripters' YAML Cobble-Yourself-a-Parser Kit.  I don't\nmuch care if the acronym works, as long as the library does!\n\nThe whole point of Syck is to make parsing and emitting YAML very\nsimple for scripting languages through C bindings.  It doesn't strive\nto be a pull parser or very extendible.  It just is concerned with\nloading a YAML document into a C structure which can be easily \ntranslated into a scripting language's internal native data type.\n\nRUBY INSTALLATION\n\nYou don't need to `make install', but please configure and make libsyck\nas outlined above.\n\n   cd ext/ruby\n   ruby install.rb config\n   ruby install.rb setup\n   sudo ruby install.rb install\n\nSyck works best with Ruby.  Ruby's symbol table is leveraged, as well\nas Ruby's VALUE system.  (You can read more about that below.)\n\nSyck is now included with Ruby (beginning with Ruby 1.8.0.)  Please\nvoice your support for Syck/YAML in Ruby distributions on the various\nplatforms.\n\nPYTHON INSTALLATION\n\nYou'll need to `make install' as described above.\n\n   cd ext/python/\n   python setup.py build\n   sudo python setup.py install\n\nPHP INSTALLATION\n\nYou'll need to `make install' as described above.\n\n   ln -s lib include    # or cp -r lib include\n   cd ext/php/\n   phpize\n   ./configure --with-syck=../..\n   make\n   sudo make install\n\nHOW SYCK IS SO GREAT\n\nFor example, in Ruby everything evaluates to a VALUE.  I merely\nsupply a handler to Syck that will take a SyckNode and transform\nit into a Ruby VALUE.\n\nA simple Ruby YAML::load could be built like so:\n\n  static VALUE\n  YAML_load( VALUE str )\n  {\n    SyckParser* parser;\n    parser = syck_new_parser();\n    syck_parser_handler( parser, YAML_handler );\n    return syck_parse( parser, str );\n  }\n\n  static VALUE\n  YAML_handler( SyckNode* node )\n  {\n    switch( node->kind )\n    {\n      case SYCK_MAP:\n        VALUE key;\n        VALUE h = rb_hash_new();\n        for ( key = node->content[0]; key != null; key++ )\n        {\n          rb_hash_set( h, key, key++ );\n        }\n        return h;\n      break;\n    }\n  }\n\nFor most C developers, it should be a no-brainer to bring\nbasic YAML serialization to PHP, Tcl, Cocoa, etc.\n\nInstructions for using Syck's API are available in the\nREADME.EXT in this very same directory."
}
