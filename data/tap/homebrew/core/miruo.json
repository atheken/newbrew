{
  "name": "miruo",
  "full_name": "miruo",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Pretty-print TCP session monitor/analyzer",
  "license": "GPL-3.0",
  "homepage": "https://github.com/KLab/miruo/",
  "versions": {
    "stable": "0.9.6b",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/KLab/miruo/archive/0.9.6b.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0b31a5bde5b0e92a245611a8e671cec3d330686316691daeb1de76360d2fa5f1"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/miruo/blobs/sha256:b9bb44cd7fe123593bf3e89da14aa5b2987bf1b616ae671bfa5d7e1d9adb992b",
          "sha256": "b9bb44cd7fe123593bf3e89da14aa5b2987bf1b616ae671bfa5d7e1d9adb992b"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/miruo/blobs/sha256:3a56112e32e6ba542f3679e87d247d10850c74ad6e9d7f82504a40caa0737de1",
          "sha256": "3a56112e32e6ba542f3679e87d247d10850c74ad6e9d7f82504a40caa0737de1"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/miruo/blobs/sha256:cd45391af46ccd1a166e139e2aa6020e0e75999a094e5e4a4eabb8ca5056fc97",
          "sha256": "cd45391af46ccd1a166e139e2aa6020e0e75999a094e5e4a4eabb8ca5056fc97"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/miruo/blobs/sha256:de0e2a37948da0d8fa4a0b34e89ee1b5511fdc85d3ec7037b66f39aba60df795",
          "sha256": "de0e2a37948da0d8fa4a0b34e89ee1b5511fdc85d3ec7037b66f39aba60df795"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/miruo/blobs/sha256:cd83d74247835df4ef5036c68c8d93539ef3b2eac56ffc839334d1f95c557e61",
          "sha256": "cd83d74247835df4ef5036c68c8d93539ef3b2eac56ffc839334d1f95c557e61"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/miruo/blobs/sha256:61fbf984ade171a70ae80af4695a78ed35331a143cdc12ddf4440fee74889807",
          "sha256": "61fbf984ade171a70ae80af4695a78ed35331a143cdc12ddf4440fee74889807"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/miruo/blobs/sha256:044456429802d6f6d8ba2a8d00547e0e0695e99edd1cceb1af29e70eb004d13f",
          "sha256": "044456429802d6f6d8ba2a8d00547e0e0695e99edd1cceb1af29e70eb004d13f"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/miruo/blobs/sha256:a71716a29094f72b62cc6a84284abb509916907c5559b25a2b85196148b86c84",
          "sha256": "a71716a29094f72b62cc6a84284abb509916907c5559b25a2b85196148b86c84"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/miruo/blobs/sha256:36df62e0454d4b7e5743a002a2ff3293e087a9fb607c369f3d23732d87330e4e",
          "sha256": "36df62e0454d4b7e5743a002a2ff3293e087a9fb607c369f3d23732d87330e4e"
        },
        "sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/miruo/blobs/sha256:dbe92dd3ab515528597eb76aa986f4e9d8dd512504d76ca60b86b5dc5dc70449",
          "sha256": "dbe92dd3ab515528597eb76aa986f4e9d8dd512504d76ca60b86b5dc5dc70449"
        },
        "el_capitan": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/miruo/blobs/sha256:8a5402f68bcb73e22f13fb0b049caea5d186520e81bf77889c91a558d9988c59",
          "sha256": "8a5402f68bcb73e22f13fb0b049caea5d186520e81bf77889c91a558d9988c59"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/miruo/blobs/sha256:f079697d80cff4b00726c8c149727a4a19c3db789e417692f470175ad9f24f25",
          "sha256": "f079697d80cff4b00726c8c149727a4a19c3db789e417692f470175ad9f24f25"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "libpcap"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/miruo.rb",
  "ruby_source_checksum": {
    "sha256": "bce2dff4051631512a8dcc998f4f977dd584966f3ac5cdb6ec9558b17892bad0"
  },
  "date_added": "2015-05-21T21:23:20+01:00",
  "readme": "[![Build Status](https://travis-ci.org/KLab/miruo.svg?branch=master)](https://travis-ci.org/KLab/miruo)\n\n# はじめに\n  miruo はパケットキャプチャ型の TCP セッションモニタです。\n  以下のような特徴があります。\n\n  - TCP セッション単位でパケットをまとめて表示できます\n  - TCP の接続、切断部分のみをコンパクトに表示できます\n  - セグメントが再送された TCP セッションを発見できます\n  - 通信に時間がかかった TCP セッションを発見できます\n  - RST で中断された TCP セッションを発見できます\n  - IP でフラグメントされたセグメントを発見できます\n  - tcpdump の -w で保存されたファイルを利用できます\n  - 軽量で高速に動作します\n\n## インストール方法\n\n    $ tar zxvf miruo-x.y.z.tar.gz\n    $ cd miruo-x.y.z\n    $ ./configure\n    $ make\n    $ sudo make install\n\n# 使い方\n\n    usage: miruo [option] [expression]\n\n    option\n      -h, --help                     # help\n      -V, --version                  # version\n      -i, --interface=dev            # eth0,bond0,any...\n      -v, --view-data=NUM            #\n      -T, --long-connect=time[ms]    # Threshold of connection time for lookup. Default 0ms(off)\n      -t, --long-delay=time[ms]      # Threshold of long delay time for lookup. Default 0ms(off)\n      -r, --retransmit=time[ms]      # Threshold of retransmit time for lookup. Default 1000ms\n      -s, --stat=interval[sec]       # statistics view interval. Default 0sec(off)\n      -f, --file=file                # read file(for tcpdump -w)\n      -S, --syn=[0|1]                # syn retransmit lookup mode.default=1. 0=ignore 1=lookup\n      -R, --rst=[0|1|2]              # rst lookup mode.default=1. (see README)\n      -F, --fragment=[0|1]           # ip fragment lookup. default=1\n      -C, --color=[0|1]              # color 0=off 1=on\n      -L, --session-limit=NUM        # active session limit. Default 1024\n      -l, --segment-limit=NUM        # active segment limit. Default 65536\n      -m, --dpi-mode=mode            # deep packet inspection mode. (now support only http)\n      -q, --quiet                    #\n          --all                      # all session lookup\n          --live                     # live mode(all segment lookup)\n\n`expression` には tcpdump と同じ書式でフィルタを記述できます。\n\nただし、`tcp[13] & 2 != 0` などのような、TCP の一部のパケットのみを抽出するルールを書いてしまうと、TCP セッションを追跡できなくなるので注意してください。フィルタの書式については tcpdump の man を参照してください。\n\n**良い例**\n\n    # miruo -T3000 host dbserver and port 3306\n\n  *MySQL に3秒以上接続しているセッションを表示します*\n\n**悪い例**\n\n    # miruo -T3000 dst host dbserver and dst port 3306\n\n  *SYN/ACK などをキャプチャできないので TCP を追跡できなくなります*\n\n## オプションの詳細\n\n<dl>\n  <dt>-h, --help</dt>\n  <dd>ヘルプを表示します。</dd>\n\n  <dt>-V, --version</dt>\n  <dd>バージョンを表示します。</dd>\n\n  <dt> -i, --interface=dev</dt>\n  <dd>ネットワークインターフェイスを指定します。\n  <code>any</code> も指定できます。</dd>\n\n  <dt>-v, --view-data=NUM</dt>\n  <dd>この値が <code>0</code> の場合は、再送や遅延したパケットと、接続や切断に関するパケットのみを表示します。\n  <code>0</code> 以外の値を指定すると、指定された数だけ他のパケットも表示されるようになります。\n  デフォルト値は <code>0</code> です。</dd>\n\n  <dt>-T, --long-connect=time[ms]</dt>\n  <dd>接続から切断までの時間が、ここで指定した時間以上だったセッションを表示するように指示します。\n  デフォルト値は <code>0</code> で、接続時間による抽出は行いません。</dd>\n\n  <dt>-t, --long-delay=time[ms]</dt>\n  <dd>ここで指定した時間よりも、長い時間をかけて到達したパケットを発見します。\n  デフォルト値は <code>0</code> で、到達時間による抽出は行いません。</dd>\n\n  <dt>-r, --retransmit=time[ms]</dt>\n  <dd><code>0</code> を指定すると、再送されたTCPセグメントを無視します。\n  <code>0</code> 以外の値を指定すると、指定された時間（ミリ秒単位）以上の時間をかけて再送されたセグメントを表示します。\n  デフォルトは <code>1000</code>（ミリ秒）です。</dd>\n\n  <dt>-s, --stat=interval[sec]</dt>\n  <dd>定期的にstderrへ統計情報を出力します。\n  デフォルト値は <code>0</code> で、統計情報を表示しません。</dd>\n\n  <dt>-f, --file=file</dt>\n  <dd><code>tcpdump -w</code> で保存したファイルを利用したい時にファイル名を指定してください。</dd>\n\n  <dt>-S, --syn=[0|1]</dt>\n  <dd>\n    SYN もしくは SYN/ACK の再送を検出するかどうかを指定します。<br/>\n    <ul>\n      <li><strong>0:</strong> 検出しません</li>\n      <li><strong>1:</strong> 検出します</li>\n    </ul>\n    SYN と SYN/ACK の再送検出は、<code>-r</code> オプションとは独立して処理されます。\n    <code>-r</code> オプションの指定内容に関わらず、ここで <code>1</code> を指定すると再送を検出しますし、<code>0</code> を指定すると検出しなくなります。\n  </dd>\n\n  <dt>-R, --rst=[0|1|2]</dt>\n  <dd>\n    RST フラグで中断されたセッションを検出するかどうかを指定します。<br/>\n    <ul>\n      <li><strong>0:</strong> 検出しません</li>\n      <li><strong>1:</strong> 検出はしますが、FINを送った後のRSTは検出しません</li>\n      <li><strong>2:</strong> 全てのRSTを検出します</li>\n    </ul>\n    デフォルト値は <code>1</code> です。\n  </dd>\n\n  <dt>-F, --fragment=[0|1]</dt>\n  <dd>\n    IP フラグメントを検出するかどうか指定します。<br/>\n    <ul>\n      <li><strong>0:</strong> 検出しません</li>\n      <li><strong>1:</strong> 検出します</li>\n    </ul>\n    デフォルト値は <code>1</code> です。\n  </dd>\n\n  <dt>-C, --color=[0|1]</dt>\n  <dd>カラー表示をしたくない場合は <code>0</code> を指定してください。\n  デフォルトは <code>1</code> ですが、標準出力をファイルに落とす場合や、パイプで他のコマンドに渡す場合は <code>0</code> になります。\n  パイプで grep などに渡したいけど、カラー表示をしたいような時には明示的に <code>1</code> を指定してください</dd>\n\n  <dt>-L, --session-limit=NUM</dt>\n  <dd>同時に保持できるセッション数を指定します。\n  これは、miruo の内部バッファの最大値を指定するオプションで、意図せずに大量のメモリ（サーバリソース）を使い過ぎないように制限するためのものです。\n  デフォルト値は <code>1024</code> ですが、統計情報（後述）の <code>DropSession</code> の項目が <code>0</code> ならば増やす必要はないでしょう。</dd>\n\n  <dt>-l, --segment-limit=NUM</dt>\n  <dd>同時に保持できるセグメント数を指定します。\n  これは、miruo の内部バッファの最大値を指定するオプションで、意図せずに大量のメモリ（サーバリソース）を使い過ぎないように制限するためのものです。\n  デフォルト値は <code>65536</code> ですが、統計情報（後述）の <code>DropSegment</code> の項目が <code>0</code> ならば増やす必要はないでしょう。</dd>\n\n  <dt>-m, --dpi-mode=mode</dt>\n  <dd>\n    TCP セグメントのペイロードを解析してプロトコル固有の情報を表示したい場合は以下のモード（プロトコル名）を指定します。<br/>\n    <ul>\n      <li><strong>http:</strong> HTTPリクエスト・レスポンスの情報を表示します</li>\n    </ul>\n  </dd>\n\n  <dt>-q, --quiet</dt>\n  <dd>シンプルな表示になります。\n  横幅が <code>80</code> 文字以内じゃないと我慢出来ない場合に指定するとよいかもです。</dd>\n\n  <dt>--all</dt>\n  <dd>すべてのセッションを表示します。</dd>\n\n  <dt>--live</dt>\n  <dd>すべてのパケットをリアルタイムに表示します。</dd>\n</dl>\n\n## 統計情報\n\n`-s` オプションを指定すると、定期的に `stderr` へ統計情報を出力するようになります。\n各項目の意味は以下のとおりです。\n\n    ===== Session Statistics =====\n    Capture Time    : 00:01:03     開始してからの経過時間\n    Total Sessions  : 0            追跡したTCPセッションの数\n      Lookup        : 0            表示したTCPセッションの数\n        LongConnect : 0            LongConnectTimeを超えたセッションの数\n        LongDelay   : 0            LongDelayTimeを超えたセッションの数\n        Retransmit  : 0            再送が発生したセッションの数\n        Timeout     : 0            タイムアウトしたセッションの数\n        Error       : 0            追跡しきれなくてエラーになった数\n        RST         : 0            RSTでリセットされたセッションの数\n        fragment    : 0            IPフラグメントされたセッションの数\n    ------------------------------\n    LongConnectTime : 0 [ms]       -Tオプションの設定値\n    LongDelayTime   : 0 [ms]       -tオプションの設定値\n    RetransmitTime  : 1000 [ms]    -rオプションの設定値\n    ------------------------------\n    ActiveSession   : 0            現在追跡しているTCPセッションの数\n    ActiveSessionMax: 0            同時に追跡したTCPセッションの最大数\n    ActiveSessionLim: 1024         同時に追跡可能なTCPセッションの最大数(-Lオプションで指定)\n    ActiveSegment   : 0            現在保持しているTCPセグメントの数\n    ActiveSegmentMax: 0            同時に保持する必要があったセグメントの最大数\n    ActiveSegmentLim: 65536        同時に保持可能なセグメントの最大数(-lオプションで指定)\n    DropSession     : 0            保持しきれなくて捨ててしまったTCPセッションの数\n    DropSegment     : 0            保持しきれなくて捨ててしまったTCPセグメントの数\n    ------------------------------\n    CPU   : 0.0%                   miruoのCPU使用率\n    VSZ   : 6100KB                 miruoが確保した仮想メモリサイズ\n    RSS   : 2932KB                 miruoが利用している物理メモリサイズ\n    ===== libpcap Statistics =====\n    recv  : 89                     libpcapがキャプチャできたパケット数\n    drop  : 0                      libpcapがドロップしたパケット数\n    ifdrop: 0                      インターフェイスがドロップしたパケット数\n    ===== Header Error Count =====\n    L2    : 0                      データリンク層のヘッダ解析に失敗した数\n    IP    : 0                      IPヘッダの解析に失敗した数\n    TCP   : 0                      TCPヘッダの解析に失敗した数\n    ==============================\n\n\n***表示結果の説明***\n\n    -------------------------------------------------------------------------------\n    3615             2.196 |  192.168.61.88:38001 == 192.168.56.136:3306  | Total 92 segments, 43278 bytes\n    3615:0000 17:57:19.193 |          SYN_SENT >----S-> SYN_RECV          | 5C503355/00000000   74 - <mss=1460, sackOK, timestamp 898447130 0, wscale=7>\n    3615:0001 17:57:19.193 |       ESTABLISHED <-A--S-< SYN_RECV          | 6BCBB846/5C503356   74 - <mss=1460, sackOK, timestamp 899636678 898447130, wscale=7>\n    3615:0002 17:57:19.193 |       ESTABLISHED >-A----> ESTABLISHED       | 5C503356/6BCBB847   66 - <timestamp 898447130 899636678>\n    3615:0003 17:57:19.193 |       ESTABLISHED <-AP---< ESTABLISHED       | 6BCBB847/5C503356  126 - <timestamp 899636678 898447130>\n    3615:0004 17:57:19.193 |       ESTABLISHED >-A----> ESTABLISHED       | 5C503356/6BCBB883   66 - <timestamp 898447130 899636678>\n    3615:0005 17:57:19.193 |       ESTABLISHED >-AP---> ESTABLISHED       | 5C503356/6BCBB883  150 - <timestamp 898447130 899636678>\n    3615:****              |                                              |\n    3615:0085 17:57:19.265 |       ESTABLISHED <-A----< ESTABLISHED       | 6BCC1685/5C505E8E 1514 - <timestamp 899636696 898447148>\n    3615:0086 17:57:19.265 |       ESTABLISHED <-AP---< ESTABLISHED       | 6BCC1C2D/5C505E8E  687 - <timestamp 899636696 898447148>\n    3615:0087 17:57:19.265 |       ESTABLISHED >-A----> ESTABLISHED       | 5C505E8E/6BCC1E9A   66 - <timestamp 898447148 899636696>\n    3615:0088 17:57:21.389 |       ESTABLISHED >-AP---> ESTABLISHED       | 5C505E8E/6BCC1E9A   71 - <timestamp 898447679 899636696>\n    3615:0089 17:57:21.389 |         FIN_WAIT1 >-A---F> ESTABLISHED       | 5C505E93/6BCC1E9A   66 - <timestamp 898447679 899636696>\n    3615:0090 17:57:21.389 |         FIN_WAIT2 <-A---F< LAST_ACK          | 6BCC1E9A/5C505E94   66 - <timestamp 899637227 898447679>\n    3615:0091 17:57:21.389 |         TIME_WAIT >-A----> CLOSED            | 5C505E94/6BCC1E9B   66 - <timestamp 898447679 899637227>\n    -------------------------------------------------------------------------------\n\n一番左の 3615 を、`セッションID` と呼びます。値自体には意味はなく、新しいTCPセッションが開始される度に miruo が内部でインクリメントして割り当てていきます。その隣のコロンで区切られた数値を `パケットID` と呼びます。最初の SYN を 0番とし、パケットが到着する度にインクリメントしていきます。`セッションID` と `パケットID` は、TCP や IP のプロトコルとは全く無関係なパラメータで、miruo の内部で利用している管理用の ID です。そのため、値自体は特別な意味を持ちませんが、上記の表示例の場合だと、\n\n> 3615の88番のパケットが、到着するまでに2秒以上かかっているみたい\n\nなどと表現できるので、問題点を他の人と共有する際に便利だと思います。\n\n次に表示しているのはパケットをキャプチャした時刻です。\n先頭の行は接続時間（接続から切断までの経過時間）を表しており、この時間が `-T` オプションで指定した値を超えたセッションが表示されます。\n\n中央の広い部分は、見ての通りなので説明は割愛します(^^;\n\n`5C503355/00000000` や `6BCBB846/5C503356` はTCPヘッダのシーケンス番号/応答番号です。\n\n74 とか 66 とか 1514 の数値はパケットサイズです。\n環境によっては 1514 以上の値が表示される場合があるかもしれませんが、それはきっと、故障でもバグでもなく、`TOE（TCP Offload Engine）` の影響だと思います。\n\n`-` と表示されている部分には、IP のフラグメントが発生している場合に `F` と表示されるようになります。`-F` オプションに <code>0</code> を指定すると、この項目は表示されません。\n\n最後の `<>` で囲まれている部分は、TCP ヘッダのオプションです。\n\n# ライセンス\nCopyright (C) 2011-2015 KLab Inc.\n\nこのプログラムは `GNU General Public License version 3（GNU GPLv3）` の下で自由に配布することが出来ます。\n\n`GNU GPLv3` の詳細は、http://www.gnu.org/licenses/gpl-3.0.txt をご覧ください。"
}
