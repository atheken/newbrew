{
  "name": "gotify",
  "full_name": "gotify",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Command-line interface for pushing messages to gotify/server",
  "license": "MIT",
  "homepage": "https://github.com/gotify/cli",
  "versions": {
    "stable": "2.2.3",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/gotify/cli/archive/refs/tags/v2.2.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "9446aa09a675bca2a8fd0448e6c45e28630e31f7578cc9e1587d09f24e59f66a"
    },
    "head": {
      "url": "https://github.com/gotify/cli.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gotify/blobs/sha256:089f351450dbfda3a863d43b567bdfee951b403b29a274929431899cd216d2bc",
          "sha256": "089f351450dbfda3a863d43b567bdfee951b403b29a274929431899cd216d2bc"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gotify/blobs/sha256:089f351450dbfda3a863d43b567bdfee951b403b29a274929431899cd216d2bc",
          "sha256": "089f351450dbfda3a863d43b567bdfee951b403b29a274929431899cd216d2bc"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gotify/blobs/sha256:089f351450dbfda3a863d43b567bdfee951b403b29a274929431899cd216d2bc",
          "sha256": "089f351450dbfda3a863d43b567bdfee951b403b29a274929431899cd216d2bc"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gotify/blobs/sha256:ece8f7f186f1e4116a314969b5615ca03228d1a320edf72eed4075ce133e1540",
          "sha256": "ece8f7f186f1e4116a314969b5615ca03228d1a320edf72eed4075ce133e1540"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gotify/blobs/sha256:ece8f7f186f1e4116a314969b5615ca03228d1a320edf72eed4075ce133e1540",
          "sha256": "ece8f7f186f1e4116a314969b5615ca03228d1a320edf72eed4075ce133e1540"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gotify/blobs/sha256:ece8f7f186f1e4116a314969b5615ca03228d1a320edf72eed4075ce133e1540",
          "sha256": "ece8f7f186f1e4116a314969b5615ca03228d1a320edf72eed4075ce133e1540"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/gotify/blobs/sha256:387b4dc3b5651bc315acb0c331a0b2dc9eaf12a0c3aa983c00bbfebf69e03f94",
          "sha256": "387b4dc3b5651bc315acb0c331a0b2dc9eaf12a0c3aa983c00bbfebf69e03f94"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/gotify.rb",
  "ruby_source_checksum": {
    "sha256": "15180dea42ceef0ba5afb3bbe0ce767dde57935a33dc48ef33b24d2c483b6de4"
  },
  "date_added": "2021-12-11T18:23:25+00:00",
  "readme": "# Gotify-CLI [![travus-badge][travis-badge]][travis] [![badge-release][badge-release]][release]\n\nGotify-CLI is a command line client for pushing messages to [gotify/server][gotify/server]. It is **not** required to push messages. See [alternatives](#alternatives).\n\n<p align=\"center\">\n    <img src=\"gotify_cli.gif\"/>\n</p>\n\n## Features\n\n* stores token/url in a config file\n* initialization wizard\n* piping support (`echo message | gotify push`)\n* simple to use\n* watch and push script result changes (`gotify watch \"curl http://example.com/api | jq '.data'\"`)\n\n## Alternatives\n\nYou can simply use [curl](https://curl.haxx.se/), [HTTPie](https://httpie.org/) or any other http-client to push messages.\n\n```bash\n$ curl -X POST \"https://push.example.de/message?token=<apptoken>\" -F \"title=my title\" -F \"message=my message\"\n$ http -f POST \"https://push.example.de/message?token=<apptoken>\" title=\"my title\" message=\"my message\"\n```\n\n## Installation\n\n### Manually\n\nDownload the [latest release][release] for your os: (this example uses version `v2.2.0`)\n\n```bash\n$ wget -O gotify https://github.com/gotify/cli/releases/download/v2.2.0/gotify-cli-linux-amd64\n# or\n$ curl -Lo gotify https://github.com/gotify/cli/releases/download/v2.2.0/gotify-cli-linux-amd64\n```\n\nMake `gotify` executable:\n\n```bash\n$ chmod +x gotify\n```\n\nTest if the Gotify-CLI works: *(When it doesn't work, you may have downloaded the wrong file or your device/os isn't supported)*\n\n```bash\n$ gotify version\n```\n\nIt should output something like this:\n\n```bash\nVersion:   2.2.0\nCommit:    95cc125e39f805a1369b0c746c8bf3af15797a57\nBuildDate: 2020-09-25-16:27:04\n```\n\n*(optional)* Move the executable to a folder on your `$PATH`:\n\n```bash\n$ mv gotify /usr/bin/gotify\n```\n\n### Arch Linux\n\nGotify-CLI is available [in the AUR][AUR], so you can install it with\n[any AUR helper][AUR-helpers], i.e. [`yay`][yay]:\n\n```bash\n$ yay -S gotify-cli\n```\n\n> Maintenance of the AUR package is not performed by the Gotify team.\n\n### macOS\n\nGotify-CLI is available [in Homebrew][brew], so you can install it with:\n\n```bash\n$ brew install gotify\n```\n\n> Maintenance of the Brew package is not performed by the Gotify team.\n\n## Usage\n\nNow you can either run the initialization wizard or [create a config manually](#Configuration). This tutorial uses the wizard.\n```bash\n$ gotify init\n```\nWhen you've finished initializing Gotify-CLI, you are ready to push messages to [gotify/server][gotify/server].\n\nHere are some examples commands, you can view the \"push help\" via `gotify help push` (or have a look at [push help](#push-help)).\n```json\n$ gotify push my message\n$ gotify push \"my message\"\n$ echo my message | gotify push\n$ gotify push < somefile\n$ gotify push -t \"my title\" -p 10 \"my message\"\n$ gotify watch \"curl http://example.com/api | jq '.data'\"\n```\n\n## Help\n\n**Uses version `v2.2.0`**\n\n```bash\nNAME:\n   Gotify - The official Gotify-CLI\n\nUSAGE:\n   gotify [global options] command [command options] [arguments...]\n\nVERSION:\n   2.2.0\n\nCOMMANDS:\n     init        Initializes the Gotify-CLI\n     version, v  Shows the version\n     config      Shows the config\n     push, p     Pushes a message\n     watch       watch the result of a command and pushes output difference\n     help, h     Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --help, -h     show help\n   --version, -v  print the version\n```\n\n### Watch help\n\n```\nNAME:\n   gotify watch - watch the result of a command and pushes output difference\n\nUSAGE:\n   gotify watch [command options] <cmd>\n\nOPTIONS:\n   --interval value, -n value  watch interval (sec) (default: 2)\n   --priority value, -p value  Set the priority (default: 0)\n   --exec value, -x value      Pass command to exec (default: \"sh -c\")\n   --title value, -t value     Set the title (empty for command)\n   --token value               Override the app token [$GOTIFY_TOKEN]\n   --url value                 Override the Gotify URL\n   --output value, -o value    Output verbosity (short|default|long) (default: \"default\")\n```\n\n### Push help\n\n```bash\n$ gotify help push\nNAME:\n   gotify push - Pushes a message\n\nUSAGE:\n   gotify push [command options] <message-text>\n\nDESCRIPTION:\n   the message can also provided in stdin f.ex:\n   echo my text | gotify push\n\nOPTIONS:\n   --priority value, -p value    Set the priority (default: 0)\n   --title value, -t value       Set the title (empty for app name)\n   --token value                 Override the app token [$GOTIFY_TOKEN]\n   --url value                   Override the Gotify URL\n   --quiet, -q                   Do not output anything (on success)\n   --contentType value           The content type of the message. See https://gotify.net/docs/msgextras#client-display\n   --disable-unescape-backslash  Disable evaluating \\n and \\t (if set, \\n and \\t will be seen as a string)\n```\n\n## Configuration\n\n**Note: The config can be created by `gotify init`.**\n\nGotify-CLI will search the following paths for a config file:\n* `/etc/gotify/cli.json`\n* `$XDG_CONFIG_HOME/gotify/cli.json`\n* `~/.gotify/cli.json`\n* `./cli.json`\n\n### Structure\n\n| name  | description | example |\n| ----- | ----------- | ------- |\n| token | an application token (a client token will not work) | `A4ZudDRdLT40L5X` |\n| url   | the URL to your [gotify/server][gotify/server]      | `https://gotify.example.com` |\n| defaultPriority   | Default priority ( set to 0 if not present)       | `6` |\n\n### Config example\n\n```json\n{\n  \"token\": \"A4ZudDRdLT40L5X\",\n  \"url\": \"https://gotify.example.com\",\n  \"defaultPriority\": 6\n}\n```\n\n## Configuration option\n\nIf needed, you can disable SSL handcheck validation using an environment variable:\n```\nexport GOTIFY_SKIP_VERIFY_TLS=True\n```\n\n\n### Dockerfile\nThe Dockerfile contains the steps necessary to build a new version of the CLI and then run it in\na minimal Alpine container.\n\n**Build:**\n\n```bash\ndocker build -t gotify/gotify-cli .\n```\n\n**Run (this assumes your `cli.json` file is in the current working directory):**\n\n```bash\ndocker run -it -v \"$PWD/cli.json:/home/app/cli.json\" gotify/gotify-cli:latest push -p 5 \"Test from Gotify CLI\"\n```\n\n [gotify/server]: https://github.com/gotify/server\n [travis-badge]: https://app.travis-ci.com/gotify/cli.svg?branch=master\n [travis]: https://app.travis-ci.com/gotify/cli\n [badge-release]: https://img.shields.io/github/release/gotify/cli.svg\n [release]: https://github.com/gotify/cli/releases/latest\n [AUR]: https://aur.archlinux.org/packages/gotify-cli\n [AUR-helpers]: https://wiki.archlinux.org/title/AUR_helpers\n [yay]: https://aur.archlinux.org/packages/yay/\n [brew]: https://brew.sh"
}
