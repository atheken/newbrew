{
  "name": "rbenv-bundler",
  "full_name": "rbenv-bundler",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Makes shims aware of bundle install paths",
  "license": "Apache-2.0",
  "homepage": "https://github.com/carsomyr/rbenv-bundler",
  "versions": {
    "stable": "1.0.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/carsomyr/rbenv-bundler/archive/1.0.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "6840d4165242da4606cd246ee77d484a91ee926331c5a6f840847ce189f54d74"
    },
    "head": {
      "url": "https://github.com/carsomyr/rbenv-bundler.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/rbenv-bundler/blobs/sha256:3b3c53b05f0504b05399bd47595ef5134e91c1a15475765550498b027d135a8c",
          "sha256": "3b3c53b05f0504b05399bd47595ef5134e91c1a15475765550498b027d135a8c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "rbenv"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/rbenv-bundler.rb",
  "ruby_source_checksum": {
    "sha256": "f4e1227ec90fc044cd6a69cfdf01ab933ae0317de0424052b60cc7da39a2ec93"
  },
  "date_added": "2012-08-31T19:53:44-07:00",
  "readme": "<!-- Marked Style: GitHub -->\n\n# rbenv-bundler: Bundler Integration for rbenv\n\nThis plugin transparently makes rbenv's shims aware of bundle installation\npaths. It saves you from the hassle of having to type `bundle exec` when working\nwith per-project gemsets and will enable `rbenv which` to report\nBundler-installed gem executables if available.\n\n### Installation\n\n1.  Get [rbenv](https://github.com/sstephenson/rbenv.git) working. Read the\n    documentation thoroughly and be sure to set up your Bash environment\n    correctly.\n\n2.  Install the plugin.\n\n        $ git clone -- https://github.com/carsomyr/rbenv-bundler.git \\\n          ~/.rbenv/plugins/bundler\n\n    Alternatively, through Homebrew:\n\n        $ brew install rbenv-bundler\n\n3.  Make sure that there is a `1.8.7`+ system or rbenv Ruby with the Bundler gem\n    installed, available for the plugin's use.\n\n        $ ruby -r bundler -e \"puts RUBY_VERSION\"\n          2.1.4\n\n### Usage\n\n1.  **Important**: The plugin is opt-in. If you wish to enable it, type `rbenv\n    bundler on`. Type `rbenv bundler off` to disable.\n\n2.  Just as you would run `rbenv rehash` upon installation of a new Ruby\n    distribution or a gem with associated executable, you will also need to run\n    it inside Bundler-controlled project directories with local, rbenv-installed\n    Ruby versions set.\n\n        $ # Suppose the project uses Ruby version `2.1.4`.\n        $ rbenv local 2.1.4\n\n        $ # Install the version-specific Bundler gem.\n        $ gem install bundler\n\n        $ # Suppose you already have a Gemfile.\n        $ bundle install\n\n        $ # The plugin will automagically rehash for you on `bundle install` or\n        $ # `bundle update`, so this step isn't necessary.\n        $ # rbenv rehash\n\n        $ # If `rake` is a Bundler-installed gem executable, report its location\n        $ # with `rbenv which`. The result should look like\n        $ # `${RBENV_ROOT}/versions/2.1.4/lib/ruby/gems/2.1.0/gems/rake-10.3.2\n        $ # /bin/rake` instead of `${RBENV_ROOT}/versions/2.1.4/bin/rake`.\n        $ rbenv which rake\n\n        $ # Run `rake` without having to type `bundle exec rake`.\n        $ rake\n\n\n### Version History\n\n**1.0.1** (Jul 1, 2021)\n\n*   Fix an issue with platform gems not being found in the `Gemfile.lock`.\n\n**1.00** (Nov 8, 2017)\n\n*   Fix the `Bundler` monkey patch for Bundler version 1.16 and later.\n\n**0.99** (Oct 27, 2014)\n\n*   Compute MD5 hashes in a cross-platform way to support Mac OS X, Linux, and\n    various BSDs.\n\n**0.98** (Aug 28, 2014)\n\n*   Improve plugin root directory detection to take into account Homebrew's\n    symlink usage.\n*   Change the plugin's on/off behavior to be opt-in instead of opt-out.\n    Additionally, it keeps track of on/off state _per rbenv installation_ (not\n    as if the vast majority of users would need this kind of isolation).\n*   Fix issue [\\#42](https://github.com/carsomyr/rbenv-bundler/issues/42), where\n    Bundler would behave differently when a given gem's internal `bin`\n    directory, as opposed to the rbenv Ruby's `bin` directory, is prepended onto\n    the `PATH` environment variable. This caused shims for gems like `unicorn`\n    to fail mysteriously.\n\n**0.97** (Feb 20, 2014)\n\n*   Recognize Rubinius as a valid Ruby engine.\n*   Spoof RubyGems platform information to handle the case when the Ruby parsing\n    the Gemfile has a platform different from the project Ruby.\n\n**0.96** (May 29, 2013)\n\n*   Automagically rehash after `bundle install` and `bundle update`. This is\n    achieved by intercepting either command and using an internally provided\n    script that rehashes afterwards.\n*   Optimize rehash times by not running the `rehash.rb` script if discovered\n    Gemfiles haven't changed. This is achieved by comparing the modification\n    times of Gemfile manifests against their Gemfiles. Slow shell initialization\n    should now be a thing of the past.\n\n**0.95** (Jan 10, 2013)\n\n*   Fix rbenv version detection to look for `.ruby-version` files in addition to\n    `.rbenv-version` files.\n*   Set up the `PATH` environment variable correctly when building rbenv Ruby\n    profiles.\n*   Make rbenv Ruby profile discovery more robust.\n\n**0.94** (Jul 21, 2012)\n\n*   Relicense the project to the Apache License, Version 2.0.\n*   Change the `rehash.rb` script so that it detects the `BUNDLE_GEMFILE`\n    environment variable and looks for a Bundler-controlled project there.\n*   Fix issue [\\#21](https://github.com/carsomyr/rbenv-bundler/issues/21), where\n    the `RbenvBundler#ensure_capable_ruby` method would claim JRuby 1.9.x as\n    capable when it's not (lack of `Kernel#fork`).\n*   Fix issue [\\#22](https://github.com/carsomyr/rbenv-bundler/issues/22). This\n    addresses the corner cases when either the `manifest.txt` file doesn't exist\n    or the `ruby_profiles.yml` file is first created.\n\n**0.93** (May 4, 2012)\n\n*   Fix issue [\\#19](https://github.com/carsomyr/rbenv-bundler/issues/19), where\n    a crash would result from rbenv Ruby profiles not being updated to reflect\n    the removal of a Ruby. The `rehash.rb` script now checks the recency of the\n    `~/.rbenv/versions` directory instead of rbenv Ruby directories to determine\n    if Rubies have been added or removed.\n*   Fix issue [\\#17](https://github.com/carsomyr/rbenv-bundler/issues/17), where\n    the `rehash.rb` script would attempt to parse empty child process output\n    when building rbenv Ruby profiles. Such situations are now detected and\n    skipped.\n*   Mask the return value of the `rehash.rb` script. Change the rehash hook so\n    that it doesn't cause the shell to exit prematurely from `-e` being in\n    effect.\n\n**0.92** (Apr 14, 2012)\n\n*   Ensure that a capable Ruby runs the `rehash.rb` script. Change the\n    `rehash.rb` script so that if it detects an inappropriate Ruby version, it\n    will attempt to locate and `Kernel#exec` an appropriate one.\n*   Build rbenv Ruby profiles to induce correct Bundler search behavior. With\n    knowledge of each Ruby(Gems) implementation's version information and\n    directory structure, the `rehash.rb` script can configure Bundler to exhibit\n    the correct search behavior in all cases.\n*   Fix issue [\\#14](https://github.com/carsomyr/rbenv-bundler/issues/14), where\n    Git-based dependencies would not resolve correctly with the `rehash.rb`\n    script. When using a Git repository as a dependency, Bundler loads its\n    .gemspec file, which in turn may modify the Ruby state arbitrarily in ways\n    that aren't readily reversible. To sidestep such behavior, the plugin now\n    forks a child process for making sensitive Bundler calls.\n*   Fix issue [\\#12](https://github.com/carsomyr/rbenv-bundler/issues/12), where\n    setups without `--path` specified would sometimes pick gem executables with\n    incorrect versions. As a result of reconciling different use cases, the\n    plugin has been rearchitected to use a helper script, `rehash.rb`, to\n    explore Bundler-controlled directories and create a gemspec manifest for\n    each project. That way, a gem executable satisfying Gemfile version\n    constraints can be picked every time.\n\n**0.91** (Jan 18, 2012)\n\n*   The plugin now scans `~/.bundle/config` in addition to, and as a fallback\n    for, the project-local Bundler configuration file. Credit [@mbrictson]\n    (https://github.com/mbrictson).\n*   Fix issue [\\#6](https://github.com/carsomyr/rbenv-bundler/issues/6), where\n    nonexistent directories would cause the rehash mechanism to return\n    prematurely. Credit [@mbrictson](https://github.com/mbrictson).\n\n**0.90** (Sep 28, 2011)\n\n*   Update plugin scripts to use the `RBENV_DIR` environment variable.\n*   Start release tagging.\n\n### License\n\n    Copyright 2012-2014 Roy Liu\n\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n    use this file except in compliance with the License. You may obtain a copy\n    of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n    License for the specific language governing permissions and limitations\n    under the License."
}
