{
  "name": "shairport",
  "full_name": "shairport",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Airtunes emulator",
  "license": "MIT",
  "homepage": "https://github.com/abrasive/shairport",
  "versions": {
    "stable": "1.1.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/abrasive/shairport/archive/1.1.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "1b60df6d40bab874c1220d7daecd68fcff3e47bda7c6d7f91db0a5b5c43c0c72"
    },
    "head": {
      "url": "https://github.com/abrasive/shairport.git",
      "branch": "master"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/shairport/blobs/sha256:6ec34c1a6192a444706e3bec92cb08424651737c23428cf32bd09fb87e08ec22",
          "sha256": "6ec34c1a6192a444706e3bec92cb08424651737c23428cf32bd09fb87e08ec22"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/shairport/blobs/sha256:cc2f0f9f0a61452bbc6024ff53289c9769478d6c869e14c6b82eb122c2417e61",
          "sha256": "cc2f0f9f0a61452bbc6024ff53289c9769478d6c869e14c6b82eb122c2417e61"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/shairport/blobs/sha256:4ec084bdb28e1a1402ea518d2a7f9342ba3310b2b69d61e41c4aa1cbcfa2cd0c",
          "sha256": "4ec084bdb28e1a1402ea518d2a7f9342ba3310b2b69d61e41c4aa1cbcfa2cd0c"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/shairport/blobs/sha256:bf78aa5d7f7dac89cd5a98ce2b953ad02a439cf07ac22c48e7a7c50f805328cb",
          "sha256": "bf78aa5d7f7dac89cd5a98ce2b953ad02a439cf07ac22c48e7a7c50f805328cb"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/shairport/blobs/sha256:50066fb9c883277e109868b5023557545c56ed1424f3b2dae4b39c7491f09203",
          "sha256": "50066fb9c883277e109868b5023557545c56ed1424f3b2dae4b39c7491f09203"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/shairport/blobs/sha256:241a4d9155fb3a9c0e0e5f0fcb46c79e9d1febf07d09780d0865cd80379fdfcb",
          "sha256": "241a4d9155fb3a9c0e0e5f0fcb46c79e9d1febf07d09780d0865cd80379fdfcb"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/shairport/blobs/sha256:eb61653e41a172eef6f5458c35e7f8a3627d730e44c2e361903cb75b96fd747b",
          "sha256": "eb61653e41a172eef6f5458c35e7f8a3627d730e44c2e361903cb75b96fd747b"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shairport/blobs/sha256:510b4ed23f8c1c12f5a2c756bcdeaf4e7b86ff0574b29b951b9b26c806a29cf4",
          "sha256": "510b4ed23f8c1c12f5a2c756bcdeaf4e7b86ff0574b29b951b9b26c806a29cf4"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "pkg-config"
  ],
  "dependencies": [
    "openssl@3"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": true,
  "deprecation_date": "2022-10-16",
  "deprecation_reason": "unmaintained",
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/shairport.rb",
  "ruby_source_checksum": {
    "sha256": "72c0102e299cd80fd92175e9510873242fbea92b0731f84f36f66027b49081c7"
  },
  "date_added": "2015-11-17T11:57:35+01:00",
  "readme": "ShairPort is no longer maintained\n=========\n\nAs I no longer use Shairport myself, I am no longer maintaining or supporting Shairport.\nThanks to everyone who has contributed over the years; it's been a great experience.\nFor the ongoing user, there are a great many forks and ports to choose from now, many of which are of a very high quality and well maintained.\n\n— James\n\nShairPort\n---------\n\nBy [James Laird](mailto:jhl@mafipulation.org) ([announcement](http://mafipulation.org/blagoblig/2011/04/08#shairport))\n\nWhat it is\n----------\nThis program emulates an AirPort Express for the purpose of streaming music from iTunes and compatible iPods and iPhones. It implements a server for the Apple RAOP protocol.\nShairPort does not support AirPlay v2 (video and photo streaming).\n\nBuild Requirements\n------------------\nRequired:\n* OpenSSL\n\nOptionally:\n* libao\n* PulseAudio\n* avahi\n\nDebian/Raspbian users can get the basics with\n`apt-get install libssl-dev libavahi-client-dev libasound2-dev`\n\n\nRuntime Requirements\n--------------------\nYou must be running an mDNS (Bonjour) daemon. On a Mac, this will be running already. Otherwise, you must be running avahi-daemon or Howl.\nAs an alternative, you may use the tinysvcmdns backend, which embeds a lightweight mDNS daemon. It is, however, way less robust than bonjour or avahi.\nCheck the [mDNS Backends] section for more information.\n\nHow to get started\n-------------\n```\n./configure\nmake\n./shairport -a 'My Shairport Name'\n```\n\nThe triangle-in-rectangle AirTunes (now AirPlay) logo will appear in the iTunes status bar of any machine on the network, or on iPod/iPhone play controls screen. Choose your access point name to start streaming to the ShairPort instance.\n\nAudio Outputs\n-------------\nShairport supports different audio backends.\nFor a list of available backends and their options, run `shairport -h`.\nNote that options are supplied to backends at the end of the commandline, separated by --, for example:\n```\nshairport -o ao -- -d mydriver -o setting=thing\n```\n\nmDNS Backends\n-------------\nShairport uses mDNS to advertise the service. Multiple backends are available to perform the task.\nFor a list of available backends, run `shairport -h`.\nThe backends prefixed by 'external' rely on external programs that should be present in your path.\nBy default, shairport will try all backends, in the order they are listed by `shairport -h`, until one works.\nYou can force the use of a specific backend using `shairport -m tinysvcmdns` for example.\n\nMetadata\n--------\n\nThe following metadata can be output for the currently playing track:\n\n  * artist\n  * title\n  * album\n  * artwork\n  * genre\n  * comment\n\nTo enable the output of metadata, the `-M <directory name>` flag must be set to\ninstruct `shairport` where to save the output. This directory must exist. A\nfifo named `now_playing` will be created, and records will be written to it\nwhen tracks are changed. The end of a set of metadata is delimited by a\nzero-length line. Cover filenames are relative to the cover directory. Files\nare not deleted.\n\nAn example::\n\n    artist=Arcade Fire\n    title=City With No Children\n    album=The Suburbs\n    artwork=cover-e6450a45ab900815e831434f5ee0499c.jpg\n    genre=Rock\n    comment=\n    \n\nThanks\n------\nBig thanks to David Hammerton for releasing an ALAC decoder, which is reproduced here in full.\nThanks to everyone who has worked to reverse engineer the RAOP protocol - after finding the keys, everything else was pretty much trivial.\nThanks also to Apple for obfuscating the private key in the ROM image, using a scheme that made the deobfuscation code itself stand out like a flare.\nThanks to Ten Thousand Free Men and their Families for having a computer and stuff.\nThanks to wtbw.\n\nContributors to version 1.x\n---------------------------\n* [James Laird](http://mafipulation.org)\n* [Paul Lietar](http://www.lietar.net/~paul)\n* [Quentin Smart](http://github.com/sm3rt)\n* [Brendan Shanks](http://github.com/mrpippy)\n* [Peter Körner](http://mazdermind.de)\n* [Muffinman](http://github.com/therealmuffin)\n* [Skaman](http://github.com/skaman)\n* [Weston](http://github.com/wnielson)\n* [allesblinkt](http://github.com/allesblinkt)\n\nContributors to version 0.x\n---------------------------\n* [James Laird](mailto:jhl@mafipulation.org), author\n* [David Hammerton](http://craz.net/), ALAC decoder\n* [Albert Zeyer](http://www.az2000.de), maintainer\n* [Preston Marshall](mailto:preston@synergyeoc.com)\n* [Mads Mætzke Tandrup](mailto:mads@tandrup.org)\n* [Martin Spasov](mailto:mspasov@gmail.com)\n* [Oleg Kertanov](mailto:okertanov@gmail.com)\n* [Rafał Kwaśny](mailto:mag@entropy.be)\n* [Rakuraku Jyo](mailto:jyo.rakuraku@gmail.com)\n* [Vincent Gijsen](mailto:vtj.gijsen@gmail.com)\n* [lars](mailto:lars@namsral.com)\n* [Stuart Shelton](https://blog.stuart.shelton.me/)\n* [Andrew Webster](mailto:andywebs@gmail.com)\n\nKnown Ports and Tools\n---------------------\n* Java:\n    * [JAirPort](https://github.com/froks/JAirPort)\n    * [RPlay](https://github.com/bencall/RPlay)\n* Windows:\n    * [shairport4w](http://sf.net/projects/shairport4w)\n* OS X:\n    * [ShairportMenu](https://github.com/rcarlsen/ShairPortMenu), a GUI wrapper as a menu widget\n    * [MacShairport](https://github.com/joshaber/MacShairport)"
}
