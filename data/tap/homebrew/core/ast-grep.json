{
  "name": "ast-grep",
  "full_name": "ast-grep",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Code searching, linting, rewriting",
  "license": "MIT",
  "homepage": "https://github.com/ast-grep/ast-grep",
  "versions": {
    "stable": "0.9.3",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/ast-grep/ast-grep/archive/refs/tags/0.9.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "e277e1da29d8733153a7987d8a4951c3d035577fba74054483d81ec18a6fd50e"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ast-grep/blobs/sha256:13193226f51f96f9e1fa9c2ab4745e6f785452a70ade78baae7ea8b9244648f2",
          "sha256": "13193226f51f96f9e1fa9c2ab4745e6f785452a70ade78baae7ea8b9244648f2"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ast-grep/blobs/sha256:ee37b434e5eee452c23cef49c7c10bb32e0a20ceb9bc2914cc8a96ff343b21a9",
          "sha256": "ee37b434e5eee452c23cef49c7c10bb32e0a20ceb9bc2914cc8a96ff343b21a9"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ast-grep/blobs/sha256:a29937524be3f2d686c5dc8891ebc79be7b540330a09286ad9f1c899e50b2ae8",
          "sha256": "a29937524be3f2d686c5dc8891ebc79be7b540330a09286ad9f1c899e50b2ae8"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ast-grep/blobs/sha256:eeb455f7c9adc0eed8d8f0130b15ae394a02d4d2d1567cc5b0459e89f808dd98",
          "sha256": "eeb455f7c9adc0eed8d8f0130b15ae394a02d4d2d1567cc5b0459e89f808dd98"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ast-grep/blobs/sha256:864e11f521cbba7263ffaa5474598a2663d8e61cf9b9a9e1afec32850a3915b8",
          "sha256": "864e11f521cbba7263ffaa5474598a2663d8e61cf9b9a9e1afec32850a3915b8"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ast-grep/blobs/sha256:6592ec19129e23c36e6d2fcc6683c408682778a32664183f29176dff11b50cd6",
          "sha256": "6592ec19129e23c36e6d2fcc6683c408682778a32664183f29176dff11b50cd6"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ast-grep/blobs/sha256:a8c2ff6384c28addc077391196dda1a9e31b96fc192439ea47d03ffd87b99eb9",
          "sha256": "a8c2ff6384c28addc077391196dda1a9e31b96fc192439ea47d03ffd87b99eb9"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/ast-grep.rb",
  "ruby_source_checksum": {
    "sha256": "88fa82af5a66edd973bc88545e3cacbaa2b246195c34ae8e2a5e133f16b1a220"
  },
  "date_added": "2023-05-17T13:16:07+08:00",
  "readme": "<p align=center>\n  <img src=\"https://ast-grep.github.io/logo.svg\" alt=\"ast-grep\"/>\n</p>\n\n<p align=\"center\">\n   <img src=\"https://github.com/ast-grep/ast-grep/actions/workflows/coverage.yaml/badge.svg\" alt=\"coverage badge\"/>\n   <a href=\"https://app.codecov.io/gh/ast-grep/ast-grep\"><img src=\"https://codecov.io/gh/ast-grep/ast-grep/branch/main/graph/badge.svg?token=37VX8H2EWV\"/></a>\n   <a href=\"https://discord.gg/4YZjf6htSQ\" target=\"_blank\"><img alt=\"Discord\" src=\"https://img.shields.io/discord/1107749847722889217?label=Discord\"></a>\n   <img src=\"https://img.shields.io/github/stars/ast-grep/ast-grep?style=social\" alt=\"Badge\"/>\n   <img src=\"https://img.shields.io/github/forks/ast-grep/ast-grep?style=social\" alt=\"Badge\"/>\n   <img alt=\"GitHub Sponsors\" src=\"https://img.shields.io/github/sponsors/HerringtonDarkholme?style=social\">\n</p>\n\n\n## ast-grep(sg)\n\nast-grep(sg) is a CLI tool for code structural search, lint, and rewriting.\n\n## Introduction\nast-grep is a AST-based tool to search code by pattern code. Think it as your old-friend `grep` but it matches AST nodes instead of text.\nYou can write patterns as if you are writing ordinary code. It will match all code that has the same syntactical structure.\nYou can use `$` sign + upper case letters as wildcard, e.g. `$MATCH`, to match any single AST node. Think it as REGEX dot `.`, except it is not textual.\n\nTry the [online playground](https://ast-grep.github.io/playground.html) for a taste!\n\n## Demo\n\n![output](https://user-images.githubusercontent.com/2883231/183275066-8d9c342f-46cb-4fa5-aa4e-b98aac011869.gif)\n\n## Installation\nYou can install it from [npm](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm), [pip](https://pypi.org/), [cargo](https://doc.rust-lang.org/cargo/getting-started/installation.html), [homebrew](https://brew.sh/) or [scoop](https://scoop.sh/)!\n\n```bash\nnpm install --global @ast-grep/cli\npip install ast-grep-cli\ncargo install ast-grep\n\n# install via homebrew, thank @henryhchchc\nbrew install ast-grep\n\n# install via scoop, thank @brian6932\nscoop install main/ast-grep\n```\nOr you can build ast-grep from source. You need install rustup, clone the repository and then\n```bash\ncargo install --path ./crates/cli\n```\n[Packages](https://repology.org/project/ast-grep/versions) are available on other platforms too.\n\n## Command line usage example\n\nast-grep has following form.\n```\nsg --pattern 'var code = $PATTERN' --rewrite 'let code = new $PATTERN' --lang ts\n```\n\n### Example\n\n* [Rewrite code in null coalescing operator](https://twitter.com/Hchan_mgn/status/1547061516993699841?s=20&t=ldDoj4U2nq-FRKQkU5GWXA)\n\n```bash\nsg -p '$A && $A()' -l ts -r '$A?.()'\n```\n\n* [Rewrite](https://twitter.com/Hchan_mgn/status/1561802312846278657) [Zodios](https://github.com/ecyrbe/zodios#migrate-to-v8)\n```bash\nsg -p 'new Zodios($URL,  $CONF as const,)' -l ts -r 'new Zodios($URL, $CONF)' -i\n```\n\n* [Implement eslint rule using YAML.](https://twitter.com/Hchan_mgn/status/1560108625460355073)\n\n\n## Sponsor\n![Sponsors](https://raw.githubusercontent.com/HerringtonDarkholme/sponsors/main/sponsorkit/sponsors.svg)\n\nIf you find ast-grep interesting and useful for your work, please [buy me a coffee](https://github.com/sponsors/HerringtonDarkholme)\nso I can spend more time on the project!\n\n## Feature Highlight\n\nast-grep's core is an algorithm to search and replace code based on abstract syntax tree produced by tree-sitter.\nIt can help you to do lightweight static analysis and massive scale code manipulation in an intuitive way.\n\nKey highlights:\n\n* An intuitive pattern to find and replace AST.\nast-grep's pattern looks like ordinary code you would write every day. (You can call the pattern is isomorphic to code).\n\n* jQuery like API for AST traversal and manipulation.\n\n* YAML configuration to write new linting rules or code modification.\n\n* Written in compiled language, with tree-sitter based parsing and utilizing multiple cores.\n\n* Beautiful command line interface :)\n\nast-grep's vision is to democratize abstract syntax tree magic and to liberate one from cumbersome AST programming!\n\n* If you are an open source library author, ast-grep can help your library users adopt breaking changes more easily.\n* if you are a tech lead in your team, ast-grep can help you enforce code best practice tailored to your business need.\n* If you are a security researcher, ast-grep can help you write rules much faster.\n\n\n## CLI Screenshot\n\n### Search\n| Feature | Command | Screenshot |\n| ------- | ------- | ---------- |\n| Search  | `sg -p 'Some($A)' -l rs` | ![image](https://github.com/ast-grep/ast-grep/assets/2883231/002db3a2-8a79-4838-ad5c-563634183c3f) |\n| Rewrite | `sg -p '$F && $F($$$ARGS)' -r '$F?.($$$ARGS)' -l ts` | ![image](https://github.com/ast-grep/ast-grep/assets/2883231/ad9394d8-3aea-4b96-8d54-6e01f06174d2)|\n| Report  | `sg scan` | ![image](https://user-images.githubusercontent.com/2883231/187094977-fd544d4b-64de-4bba-8bea-8c0de047b352.png) |"
}
