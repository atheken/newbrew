{
  "name": "cargo-binstall",
  "full_name": "cargo-binstall",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Binary installation for rust projects",
  "license": "GPL-3.0-only",
  "homepage": "https://github.com/cargo-bins/cargo-binstall",
  "versions": {
    "stable": "1.1.2",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/cargo-bins/cargo-binstall/archive/refs/tags/v1.1.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "520b99ecb1122fcfe8bcc0a9010646cf2cbce1b4f739d881c6f314060dd6a53a"
    },
    "head": {
      "url": "https://github.com/cargo-bins/cargo-binstall.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-binstall/blobs/sha256:5e4bb93e272dbcdf75bf08152b127450a5ee7f2541105f5744a11222600ebb04",
          "sha256": "5e4bb93e272dbcdf75bf08152b127450a5ee7f2541105f5744a11222600ebb04"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-binstall/blobs/sha256:e97c02441b4c846e903e3899252c8d76ce78da8e98ab9ce1c1342298208f8168",
          "sha256": "e97c02441b4c846e903e3899252c8d76ce78da8e98ab9ce1c1342298208f8168"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-binstall/blobs/sha256:3a542035f8267a901a58e3a4d19aabf96417fb11471507874e90c2ba2f9485f6",
          "sha256": "3a542035f8267a901a58e3a4d19aabf96417fb11471507874e90c2ba2f9485f6"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-binstall/blobs/sha256:fe6e59f5cfed01f26309859185e4c71a73206996d7525aad53c7456773304c5d",
          "sha256": "fe6e59f5cfed01f26309859185e4c71a73206996d7525aad53c7456773304c5d"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-binstall/blobs/sha256:22912c932ddf43227ed9c8805e3bd926a2965e906fbe0964d4c4656e59993261",
          "sha256": "22912c932ddf43227ed9c8805e3bd926a2965e906fbe0964d4c4656e59993261"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-binstall/blobs/sha256:b7291a495c088c587ab64eb9e001ee8a9ed436fc164084a3feaf7c7cf8db1fe2",
          "sha256": "b7291a495c088c587ab64eb9e001ee8a9ed436fc164084a3feaf7c7cf8db1fe2"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-binstall/blobs/sha256:9753bdd31b2a09b4fc9b72efe7f4ecf309ee20696de9481376d12265a4c1a4a0",
          "sha256": "9753bdd31b2a09b4fc9b72efe7f4ecf309ee20696de9481376d12265a4c1a4a0"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/cargo-binstall.rb",
  "ruby_source_checksum": {
    "sha256": "c9815784f9f499cf1bdca5d8ecfb956ae2239efffffd933df1b215cdd3460c6a"
  },
  "date_added": "2023-07-03T18:00:19-04:00",
  "readme": "# Cargo B(inary)Install\n\n`cargo binstall` provides a low-complexity mechanism for installing rust binaries as an alternative to building from source (via `cargo install`) or manually downloading packages. This is intended to work with existing CI artifacts and infrastructure, and with minimal overhead for package maintainers.\n\n`binstall` works by fetching the crate information from `crates.io`, then searching the linked `repository` for matching releases and artifacts, with fallbacks to [quickinstall](https://github.com/alsuren/cargo-quickinstall) and finally `cargo install` if these are not found.\nTo support `binstall` maintainers must add configuration values to `Cargo.toml` to allow the tool to locate the appropriate binary package for a given version and target. See [SUPPORT.md](./SUPPORT.md) for more detail.\n\n## Status\n\n![Build](https://github.com/cargo-bins/cargo-binstall/workflows/Rust/badge.svg)\n[![GitHub tag](https://img.shields.io/github/tag/cargo-bins/cargo-binstall.svg)](https://github.com/cargo-bins/cargo-binstall)\n[![Crates.io](https://img.shields.io/crates/v/cargo-binstall.svg)](https://crates.io/crates/cargo-binstall)\n\nYou probably want to **[see this page as it was when the latest version was published](https://crates.io/crates/cargo-binstall)** for accurate documentation.\n\n## Installation\n\nHere are the one-liners for installing pre-compiled `cargo-binstall` binary from release on Linux and macOS:\n\n```\ncurl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash\n```\n\nAnd the one-liner for installing a pre-compiled `cargo-binstall` binary from release on Windows (x86_64 and aarch64):\n\n```\nSet-ExecutionPolicy Unrestricted -Scope Process; iex (iwr \"https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.ps1\").Content\n```\n\nTo get started _using_ `cargo-binstall` first install the binary (either via `cargo install cargo-binstall` or by downloading a pre-compiled [release](https://github.com/cargo-bins/cargo-binstall/releases)), then extract it using `tar` or `unzip` and move it into `$HOME/.cargo/bin`.\nWe recommend using the pre-compiled ones because we optimize those more than a standard source build does.\n\n| OS      | Arch    | URL                                                          |\n| ------- | ------- | ------------------------------------------------------------ |\n| linux   | x86\\_64 | https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz |\n| linux   | armv7   | https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-armv7-unknown-linux-musleabihf.tgz |\n| linux   | arm64   | https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-aarch64-unknown-linux-musl.tgz |\n| macos   | x86\\_64 | https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-apple-darwin.zip |\n| macos   | m1      | https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-aarch64-apple-darwin.zip |\n| macos   | universal | https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-universal-apple-darwin.zip |\n| windows | x86\\_64 | https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-pc-windows-msvc.zip |\n| windows | arm64 | https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-aarch64-pc-windows-msvc.zip |\n\nWe also provide pre-built artifacts with debuginfo for Linux and Mac.\nThese artifacts are suffixed with `.full.tgz` on Linux and `.full.zip` on Mac and Windows.\n\nTo upgrade cargo-binstall, use `cargo binstall cargo-binstall`!\n\n## Usage\n\nSupported packages can be installed using `cargo binstall NAME` where `NAME` is the crates.io package name.\n\nPackage versions and targets may be specified using the `--version` and `--target` arguments respectively, and will be installed into `$HOME/.cargo/bin` by default. For additional options please see `cargo binstall --help`.\n\n```\n[garry] âžœ  ~ cargo binstall radio-sx128x --version 0.14.1-alpha.5\n21:14:15 [INFO] Resolving package: 'radio-sx128x'\n21:14:18 [INFO] This will install the following binaries:\n21:14:18 [INFO]   - sx128x-util (sx128x-util-x86_64-apple-darwin -> /Users/ryankurte/.cargo/bin/sx128x-util-v0.14.1-alpha.5)\n21:14:18 [INFO] And create (or update) the following symlinks:\n21:14:18 [INFO]   - sx128x-util (/Users/ryankurte/.cargo/bin/sx128x-util-v0.14.1-alpha.5 -> /Users/ryankurte/.cargo/bin/sx128x-util)\n21:14:18 [INFO] Do you wish to continue? yes/[no]\n? yes\n21:14:20 [INFO] Installing binaries...\n21:14:21 [INFO] Done in 6.212736s\n```\n\n## Unsupported crates\n\nNowadays, `cargo-binstall` is smart enough. All you need just passing the crate name.\n\n```shell\ncargo binstall --no-confirm --no-symlinks cargo-edit cargo-watch cargo-tarpaulin \\\n    watchexec-cli cargo-outdated just fnm broot stylua\n```\n\nIf your favorite package fails to install, you can instead specify the `pkg-url`, `bin-dir`, and `pkg-fmt` at the command line, with values as documented in [SUPPORT.md](./SUPPORT.md).\n\nFor example:\n\n```shell\n$ cargo-binstall \\\n  --pkg-url=\"{ repo }/releases/download/{ version }/{ name }-{ version }-{ target }.{ archive-format }\" \\\n  --pkg-fmt=\"txz\" \\\n  crate_name\n```\n\n## Upgrade installed crates\n\nThe most ergonomic way to upgrade the installed crates is with [`cargo-update`](https://github.com/nabijaczleweli/cargo-update). `cargo-update` automatically uses `cargo-binstall` to install the updates if `cargo-binstall` is present.\n\nSupported crates such as `cargo-binstall` itself can also be updated with `cargo-binstall` as in the example in [Installation](#installation) above.\n\n## FAQ\n\n- Why use this?\n  - Because `wget`-ing releases is frustrating, `cargo install` takes a not inconsequential portion of forever on constrained devices,\n    and often putting together actual _packages_ is overkill.\n- Why use the cargo manifest?\n  - Crates already have these, and they already contain a significant portion of the required information.\n    Also, there's this great and woefully underused (IMO) `[package.metadata]` field.\n- Is this secure?\n  - Yes and also no? We're not (yet? [#1](https://github.com/cargo-bins/cargo-binstall/issues/1)) doing anything to verify the CI binaries are produced by the right person/organization.\n    However, we're pulling data from crates.io and the cargo manifest, both of which are _already_ trusted entities, and this is\n    functionally a replacement for `curl ... | bash` or `wget`-ing the same files, so, things can be improved but it's also fairly moot\n- What do the error codes mean?\n  - You can find a full description of errors including exit codes here: <https://docs.rs/binstalk/latest/binstalk/errors/enum.BinstallError.html>\n- Can I use it in CI?\n  - Yes! For GitHub Actions, we recommend the excellent [taiki-e/install-action](https://github.com/marketplace/actions/install-development-tools), which has explicit support for selected tools and uses `cargo-binstall` for everything else.\n  - Additionally, we provide a minimal GitHub Action that installs `cargo-binstall`:\n    ```yml\n      - uses: cargo-bins/cargo-binstall@main\n    ``` \n- Are debug symbols available?\n  - Yes! Extra pre-built packages with a `.full` suffix are available and contain split debuginfo, documentation files, and extra binaries like the `detect-wasi` utility.\n\n---\n\nIf you have ideas/contributions or anything is not working the way you expect (in which case, please include an output with `--log-level debug`) and feel free to open an issue or PR."
}
