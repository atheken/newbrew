{
  "name": "joshuto",
  "full_name": "joshuto",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Ranger-like terminal file manager written in Rust",
  "license": "LGPL-3.0-or-later",
  "homepage": "https://github.com/kamiyaa/joshuto",
  "versions": {
    "stable": "0.9.5",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/kamiyaa/joshuto/archive/refs/tags/v0.9.5.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "14155a02cfeb0993a4906635a3c121589451e155e067d1c0d1673abdd1494ca8"
    },
    "head": {
      "url": "https://github.com/kamiyaa/joshuto.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/joshuto/blobs/sha256:b0fa5caad0bb515343b50a5b71284bac2ef80fa1e20d45e946c5de2827a57ac7",
          "sha256": "b0fa5caad0bb515343b50a5b71284bac2ef80fa1e20d45e946c5de2827a57ac7"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/joshuto/blobs/sha256:4b03edb2446a540b08c27d2479f57adc879f1ed88ce0df4938a278a1bed6337b",
          "sha256": "4b03edb2446a540b08c27d2479f57adc879f1ed88ce0df4938a278a1bed6337b"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/joshuto/blobs/sha256:e7ed4e863b3abbee175c615e364e1fabbcaceb4965e31ff59bb950c41f1dc608",
          "sha256": "e7ed4e863b3abbee175c615e364e1fabbcaceb4965e31ff59bb950c41f1dc608"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/joshuto/blobs/sha256:623f1906e443bc94b46ffd9e45ddc33f1dc187facdac07b92a0ab34bebd956fe",
          "sha256": "623f1906e443bc94b46ffd9e45ddc33f1dc187facdac07b92a0ab34bebd956fe"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/joshuto/blobs/sha256:4aa2f3762feadd6fecb14d428696f1345cb44a33ca4a58201884dccfd084fd41",
          "sha256": "4aa2f3762feadd6fecb14d428696f1345cb44a33ca4a58201884dccfd084fd41"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/joshuto/blobs/sha256:51bd053858f7a35857b16c4c22584786a3e1664c71d663eaf18808e5290d4c52",
          "sha256": "51bd053858f7a35857b16c4c22584786a3e1664c71d663eaf18808e5290d4c52"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/joshuto/blobs/sha256:31b3d66a76fd106b2419e14b5de5635ba3b1500956de864a765c837da471d62f",
          "sha256": "31b3d66a76fd106b2419e14b5de5635ba3b1500956de864a765c837da471d62f"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/joshuto.rb",
  "ruby_source_checksum": {
    "sha256": "68503035c8e26f3eae18899d27babe84bcaa016861f41b8c364c8a5c939282a3"
  },
  "date_added": "2023-05-31T14:04:55-04:00",
  "readme": "[![Linux build](https://github.com/kamiyaa/joshuto/actions/workflows/rust-linux-main.yml/badge.svg)](https://github.com/kamiyaa/joshuto/actions/workflows/rust-linux-main.yml)\n\n[![MacOS build](https://github.com/kamiyaa/joshuto/actions/workflows/rust-macos-main.yml/badge.svg)](https://github.com/kamiyaa/joshuto/actions/workflows/rust-macos-main.yml)\n\n# joshuto\n\n[ranger](https://github.com/ranger/ranger)-like terminal file manager written in Rust.\n\n![Alt text](screenshot.png?raw=true \"joshuto\")\n\n## Dependencies\n\n- [cargo](https://github.com/rust-lang/cargo/) >= 1.55\n- [rustc](https://www.rust-lang.org/) >= 1.55\n- xsel/xclip/wl-clipboard (optional, for clipboard support)\n- fzf (optional)\n- zoxide (optional)\n\nAlso see [Cargo.toml](Cargo.toml)\n\n## Building\n\n```\n~$ cargo build\n```\n\n## Installation\n\n#### For single user\n\n```\n~$ cargo install --path=. --force\n```\n\n#### For single user with cargo\n\n```\n~$ cargo install --git https://github.com/kamiyaa/joshuto.git --force\n```\n\n#### System wide\n\n```\n~# cargo install --path=. --force --root=/usr/local     # /usr also works\n```\n\n#### Packaging status\n\n##### Fedora ([COPR](https://copr.fedorainfracloud.org/coprs/atim/joshuto/))\n\n```\nsudo dnf copr enable atim/joshuto -y\nsudo dnf install joshuto\n```\n\n##### Arch ([AUR](https://aur.archlinux.org))\n\n- [release](https://aur.archlinux.org/packages/joshuto)\n\n```\n[yay/paru] -S joshuto\n```\n\n- [build from source](https://aur.archlinux.org/packages/joshuto-git)\n\n```\n[yay/paru] -S joshuto-git\n```\n\n##### Arch ([archlinuxcn](https://github.com/archlinuxcn/repo/))\n\n- [stable version (x86_64)](https://github.com/archlinuxcn/repo/tree/master/archlinuxcn/joshuto)\n- [stable version (aarch64)](https://github.com/archlinuxcn/repo/tree/master/alarm/joshuto)\n\n```\n[yay/paru] -S joshuto\n```\n\n- [latest git version (x86_64)](https://github.com/archlinuxcn/repo/tree/master/archlinuxcn/joshuto-git)\n- [latest git version (aarch64)](https://github.com/archlinuxcn/repo/tree/master/alarm/joshuto-git)\n\n```\n[yay/paru] -S joshuto-git\n```\n\n##### Gentoo ([gentoo-zh](https://github.com/microcai/gentoo-zh/tree/master/app-misc/joshuto))\n\n```\nsudo eselect repository enable gentoo-zh\nsudo emerge -av app-misc/joshuto\n```\n\n##### NixOS\n\n> Here's an example of using it in a nixos configuration\n\n```nix\n{\n  description = \"My configuration\";\n\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs/nixos-unstable\";\n    joshuto.url = \"github:kamiyaa/joshuto\";\n  };\n\n  outputs = { nixpkgs, joshuto, ... }:\n    {\n      nixosConfigurations = {\n        hostname = nixpkgs.lib.nixosSystem\n          {\n            system = \"x86_64-linux\";\n            modules = [\n              {\n                nixpkgs.overlays = [ joshuto.overlays.default ];\n                environment.systemPackages = with pkgs;[\n                  joshuto\n                ];\n              }\n            ];\n          };\n      };\n    };\n}\n```\n\n> Temporary run, not installed on the system\n\n```sh\nnix run github:kamiyaa/joshuto\n```\n\n##### MacOS ([MacPorts](https://ports.macports.org/port/joshuto/details/))\n\n```\nsudo port install joshuto\n```\n\n##### MacOS/Linux [Homebrew](https://brew.sh/)\n\n```\nbrew install joshuto\n```\n\n## Usage\n\n```\n~ $ joshuto\n```\n\n#### Navigation\n- Move up: `arrow_up` or `k`\n- Move down: `arrow_down` or `j`\n- Move to parent directory: `arrow_left` or `h`\n- Open file or directory: `arrow_right` or `l`\n- Go to the top: `home` or `g g`\n- Go to the bottom: `end` or `G`\n- Page up: `page_up` or `ctrl+u`\n- Page down: `page_down` or `ctrl+d`\n\n#### Tab Management\n- Open a new tab: `ctrl+t`\n- Open a new tab with current directory: `T`\n- Close the current tab: `W` or `ctrl+w`\n- Switch to next tab: `\\t`\n- Switch to previous tab: `backtab`\n\n#### File Operations\n- Rename file: `a` to append or `A` to prepend\n- Delete file: `delete` or `d d`\n- Cut file: `d d`\n- Copy file: `y y`\n- Paste file: `p p`\n- Paste file with overwrite: `p o`\n- Symlink files: `p l` for absolute path, `p L` for relative path\n\n#### Miscellaneous\n- Toggle hidden files: `z h`\n- Reload directory list: `R`\n- Change directory: `c d`\n- Show tasks: `w`\n- Set mode: `=`\n- Enter command mode: `:`\n\nSee [docs#quit](/docs/configuration/keymap.toml.md#quit-quit-joshuto) for exiting into current directory\nand other usages\n\n## Configuration\n\nCheck out [docs](/docs) for details and [config](/config) for examples\n\n#### [joshuto.toml](/config/joshuto.toml)\n\n- general configurations\n\n#### [keymap.toml](/config/keymap.toml)\n\n- for keybindings\n\n#### [mimetype.toml](/config/mimetype.toml)\n\n- for opening files with applications\n\n#### [theme.toml](/config/theme.toml)\n\n- color customizations\n\n#### [bookmarks.toml](/config/bookmarks.toml)\n\n- bookmarks\n\n## Contributing\n\nSee [docs](/docs)\n\n## Bugs/Feature Request\n\nPlease create an issue :)\n\n## Features\n\n- Tabs\n- Devicons\n- Fuzzy search via [fzf](https://github.com/junegunn/fzf)\n- Ctrl/Shift/Alt support\n- Bulk rename\n- File previews\n  - See [Image previews](/docs/image_previews) for more details\n- Exit to current directory\n- Asynch File IO (cut/copy/paste)\n- Custom colors/theme\n- Line numbers\n  - Jump to number\n- File chooser\n- Trash support\n\n## TODOs\n\n- [x] Built-in command line\n  - Mostly working\n  - Currently implementation is kind of janky\n  - [ ] Tab autocomplete (in progress)"
}
