{
  "name": "pandoc-crossref",
  "full_name": "pandoc-crossref",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Pandoc filter for numbering and cross-referencing",
  "license": "GPL-2.0-or-later",
  "homepage": "https://github.com/lierdakil/pandoc-crossref",
  "versions": {
    "stable": "0.3.16.0d",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/lierdakil/pandoc-crossref/archive/v0.3.16.0d.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "fb23c2db8ccb6ee9ca7eba83944a9e9d7730758daa2747b97bd5b62304dd41b7"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pandoc-crossref/blobs/sha256:0a550c4427792109fb41374966f395fad9c71d8be6813ea34a93c220a2b86c84",
          "sha256": "0a550c4427792109fb41374966f395fad9c71d8be6813ea34a93c220a2b86c84"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pandoc-crossref/blobs/sha256:0a1bba2a0a1a5a430ab22783e3e735a64cff24ee4722f68c734de76b38bb2588",
          "sha256": "0a1bba2a0a1a5a430ab22783e3e735a64cff24ee4722f68c734de76b38bb2588"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pandoc-crossref/blobs/sha256:10ff2f844cb7709eafe1b55fbc4932e0744cf1fd29cd41734bab8d2603b519d4",
          "sha256": "10ff2f844cb7709eafe1b55fbc4932e0744cf1fd29cd41734bab8d2603b519d4"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pandoc-crossref/blobs/sha256:41f29db33d0fb5097c334911fc559d6b3c85ee8713bc849d18f47df246157bef",
          "sha256": "41f29db33d0fb5097c334911fc559d6b3c85ee8713bc849d18f47df246157bef"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pandoc-crossref/blobs/sha256:2af3894534ab8dec5f0f6fdb7808fa6f9ab9e3767ba7ec580c5ec2ce20cc0147",
          "sha256": "2af3894534ab8dec5f0f6fdb7808fa6f9ab9e3767ba7ec580c5ec2ce20cc0147"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pandoc-crossref/blobs/sha256:c182e6dd570ac1e45197d2db1481f10fb97e77132da5119cc1a1c34ab804a1e7",
          "sha256": "c182e6dd570ac1e45197d2db1481f10fb97e77132da5119cc1a1c34ab804a1e7"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pandoc-crossref/blobs/sha256:1e8f9932b565b62d530f299e2bc783d30e74b77baef925e5cb26566c2ad066a5",
          "sha256": "1e8f9932b565b62d530f299e2bc783d30e74b77baef925e5cb26566c2ad066a5"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cabal-install",
    "ghc"
  ],
  "dependencies": [
    "pandoc"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    {
      "unzip": "build"
    },
    "zlib"
  ],
  "uses_from_macos_bounds": [
    {},
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/pandoc-crossref.rb",
  "ruby_source_checksum": {
    "sha256": "85d5f22ed9b61dfb194c9f3d6a6cbd0e2fd2c7e07e2a29e5c5b72b71fe143a0b"
  },
  "date_added": "2016-04-02T17:47:57+08:00",
  "readme": "# pandoc-crossref filter ![Build status](https://github.com/lierdakil/pandoc-crossref/workflows/Haskell%20CI/badge.svg)\n\npandoc-crossref is a pandoc filter for numbering figures, equations,\ntables and cross-references to them.\n\nThe input file (like\n[demo.md](https://raw.githubusercontent.com/lierdakil/pandoc-crossref/master/docs/demo/demo.md)) can\nbe converted into\n[HTML](http://lierdakil.github.io/pandoc-crossref/demo/output.html),\n[LaTeX](http://lierdakil.github.io/pandoc-crossref/demo/output.latex),\n[PDF](http://lierdakil.github.io/pandoc-crossref/demo/output.pdf),\n[Markdown](http://lierdakil.github.io/pandoc-crossref/demo/output.md) or other\nformats.\n\nOptionally, you can use cleveref for LaTeX/PDF output, e.g. [cleveref\nPDF](http://lierdakil.github.io/pandoc-crossref/demo/output-cref.pdf),\n[cleveref\nLaTeX](http://lierdakil.github.io/pandoc-crossref/demo/output-cref.latex),\nand listings package, e.g. [listings\nPDF](http://lierdakil.github.io/pandoc-crossref/demo/output-listings.pdf),\n[listings\nLaTeX](http://lierdakil.github.io/pandoc-crossref/demo/output-listings.latex)\n\nYou can also enable per-chapter numbering (as with `--chapters` for\nlatex output). You need to specify `-M chapters` for non-LaTeX/PDF\noutput however. Examples:\n[HTML](http://lierdakil.github.io/pandoc-crossref/demo/output-chapters.html),\n[Markdown](http://lierdakil.github.io/pandoc-crossref/demo/output-chapters.md),\n[LaTeX](http://lierdakil.github.io/pandoc-crossref/demo/output-chapters.latex),\n[PDF](http://lierdakil.github.io/pandoc-crossref/demo/output-chapters.pdf).\n\nThis work is inspired by\n[pandoc-fignos](https://github.com/tomduck/pandoc-fignos) and\n[pandoc-eqnos](https://github.com/tomduck/pandoc-eqnos) by @tomduck.\n\nThis package tries to use LaTeX labels and references if output type is\nLaTeX. It also tries to supplement rudimentary LaTeX configuration that\nshould mimic metadata configuration by setting `header-includes`\nvariable.\n\n## Installation\n\nThe easiest option to get pandoc-crossref on Windows, macOS, or Linux, is to\ndownload pre-built executables available at the [releases\npage](https://github.com/lierdakil/pandoc-crossref/releases/latest).\nBear in mind that those are a product of automated build scripts, and as\nsuch, provided as-is, with zero guarantees. Feel free to open issues if those\ndon't work though, I'll try to do what I can.\n\n**WARNING:** When using pre-built executables, **make sure that your pandoc\nversion matches the version pandoc-crossref was built against, otherwise\nweird stuff will likely happen.** Feel free to open issues if there's a new\nversion of pandoc available, for which there are no pandoc-crossref builds.\n\n**NOTE:** Linux and Windows binaries are packed with `upx` (not macOS though, since upx apparently has questionable interactions with Apple's x86 emulation on A1 processors). If you don't like the overhead, and don't mind 40-megabyte binaries, you can unpack those manually with `upx -d pandoc-crossref`. Also please notice that upx-packed binaries can break in some exotic environments, like empty chroot with no access to `/proc`, etc.\n\nAlso, for those feeling adventurous, the automatic builds for the latest commits are available. Latest builds can be found on the [nightlies tag](https://github.com/lierdakil/pandoc-crossref/releases/tag/nightlies) (despite the name, those aren't actually built nightly, but on each push instead)\n\nIf you don't trust random binaries downloaded off the Internet (which is\ncompletely reasonable), you're welcome to build from source. You have two\npreferred options for that: building from Hackage with `cabal-install`, or from\nrepository with `stack` (you'll only need `stack` and maybe `git`). See below\nfor build instructions.\n\nIf you're completely new to Haskell, the latter, i.e. building from repo\nwith `stack`, is the easier option in most cases.\n\nThis repository is also a nix flake. You can use `nix` to get it installed.\n\nAlternatively, you can use a version provided by a third party. At the\ntime of writing, pandoc-crossref is provided on the following platforms\n(that I am aware of):\n\n-   Arch Linux\n-   NixOS or Nix package manager (via `nixpkgs.haskellPackages`\n    attribute)\n-   MacOS (via [Homebrew](https://brew.sh))\n-   FreeBSD official binary package [textproc/hs-pandoc-crossref](https://www.freshports.org/textproc/hs-pandoc-crossref/)\n-   Any Linux distribution (via [Linuxbrew](https://docs.brew.sh/Linuxbrew))\n-   Gentoo Linux (via gentoo-haskell overlay)\n-   Windows (via [scoop](https://scoop.sh/))\n\n### Building from Hackage with `cabal-install`\n\nYou'll need to get GHC and `cabal-install` installed first. By far the easiest way to get those is via [ghcup].\n\n[ghcup]: https://www.haskell.org/ghcup/\n\nDescribing using `ghcup` is out of scope for this small guide, but TL;DR is this:\n\n```\nghcup install ghc\nghcup install cabal\n```\n\nAfter you got `cabal-install` and `ghc`, run:\n\n``` bash\ncabal v2-update\ncabal v2-install --install-method=copy pandoc pandoc-crossref\n```\n\nThis will get `pandoc-crossref` and `pandoc` executables copied to `$HOME/.cabal/bin` (by default, if not, check your cabal config file `installdir` setting -- find out where your config file is by running `cabal help user-config`), which you can then add to `PATH` or copy/move the symlinks where you want them.\n\nRefer to cabal documentation if you need to build a particular version (TL;DR: add `--constraint pandoc-crossref==<version>` to the installation command)\n\n### Building from repo with `stack`\n\nFirst of all, get `stack` if you don't have it already: see the [official stack documentation][]. Note that `stack` can also be installed via [ghcup], and on Linux it is usually available in your package manager.\n\n[official stack documentation]: https://docs.haskellstack.org/en/stable/README/#how-to-install\n\nIf you have `git`, you can now clone the repository and build:\n\n``` bash\ngit clone https://github.com/lierdakil/pandoc-crossref.git\ncd pandoc-crossref\ngit checkout <commit/tag/branch>\nstack install\n```\n\nIf you don't have `git`, just download the sources for your preferred commit/branch/tag via the GitHub interface, and run `stack install` in the directory that contains `stack.yaml` file.\n\nThis will install pandoc-crossef executable to `$HOME/.local/bin`. You might also want to separately run `stack install pandoc` in the same directory (i.e. the root of the repository, the one containing `stack.yaml` file)\n\n### Installing as a nix flake\n\nTL;DR:\n\n```\nnix profile install github:lierdakil/pandoc-crossref\n```\n\nwill install the latest commit from the `master` branch. You can also specify a commit, branch or tag, e.g.:\n\n```\nnix profile install github:lierdakil/pandoc-crossref/71c8c8508c222bf4110794457fdf0391b05fb9a9\n```\n\nYou can also get the corresponding `pandoc` version installed via\n\n```\nnix profile install github:lierdakil/pandoc-crossref#pandoc\n```\n\nSince you will generally want both, there's an option to install both at the\nsame time, too:\n\n```\nnix profile install github:lierdakil/pandoc-crossref#pandoc-with-crossref\n```\n\nAside from added convenience, this guarantees pandoc and pandoc-crossref\nversions to be consistent across updates.\n\nFinally, you can start a nix shell with both `pandoc` and `pandoc-crossref`\nusing\n\n```\nnix develop github:lierdakil/pandoc-crossref\n```\n\n**Warning**: this uses [haskell.nix][] infrastructure for builds (because\nHaskell support in Nix is borked, and has been for a long time). This means that\nunless you use their substituters, you'll build multiple GHC versions from\nsource. To avoid that, add `https://cache.iog.io` to `substituters` in\n`nix.conf` and `hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=` to\n`trusted-public-keys`.\n\n[haskell.nix]: https://github.com/input-output-hk/haskell.nix\n\nYou can also use pandoc-crossref's binary cache by adding `https://pandoc-crossref.cachix.org` and `pandoc-crossref.cachix.org-1:LI9ABFTkGpPCTkUTzoopVSSpb1a26RSTJNMsqVbDtPM=` to `substituters` and `trusted-public-keys` respectively.\n\nThe flake includes both by default, so if you're a nix trusted user and accept\nthese configurations during flake evaluation those will be used automatically.\n\n### Notice Fedora users\n\n`cabal-install` package is not enough to build pandoc-crossref (see\n[\\#132](https://github.com/lierdakil/pandoc-crossref/issues/132)).\nTo get a sane Haskell build environment, you need to install the\n`haskell-platform` package (`dnf install haskell-platform`).\n\nWhile on topic, if you don't want to rebuild pandoc itself from source,\nmake sure you have `pandoc` and `ghc-pandoc-devel` dnf packages before\nattempting to build pandoc-crossref.\n\n## Usage\n\nUsage information is available at\n<https://lierdakil.github.io/pandoc-crossref/>\n\n## Projects\nThe following projects use this filter:\n\n- [TechnicalMarkdown](https://github.com/gabyx/TechnicalMarkdown)\n\n# License\n\nThis program is free software; you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation; either version 2 of the License, or (at your\noption) any later version.\n\nSee\n[LICENSE](https://github.com/lierdakil/pandoc-crossref/blob/master/LICENSE)\nfor details.\n\n© 2016 Nikolay Yakimov et al\n\nContributors (per GPL, holders of copyright on their respective\ncontributions):\n\n<!-- BEGIN CONTRIBUTORS LIST -->\n-   Nikolay Yakimov\n-   Raphael Das Gupta\n-   Masamichi Hosoda\n-   gesh\n-   Felix Yan\n-   Wlad\n-   Wandmalfarbe\n-   Silas Benson\n-   shutingrz\n-   Shaun Jackman\n-   scoavoux\n-   Salim B\n-   Matthew Salganik\n-   Jan-T. Brinkmann\n-   hseg\n-   Han Joosten\n-   Hadrien Mary\n-   Gleb Popov\n-   Gabriel Nützi\n-   David Arnold\n-   Chris Black\n-   Bart Mesuere\n-   Albert\n\n<!-- END CONTRIBUTORS LIST -->\n\nThis repository includes code from <https://github.com/roelvandijk/roman-numerals>, covered by a different license. See\n[licenses/LICENSE.roman-numerals](https://github.com/lierdakil/pandoc-crossref/blob/master/licenses/LICENSE.roman-numerals)\nfor details."
}
