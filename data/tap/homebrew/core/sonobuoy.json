{
  "name": "sonobuoy",
  "full_name": "sonobuoy",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Kubernetes component that generates reports on cluster conformance",
  "license": "Apache-2.0",
  "homepage": "https://github.com/vmware-tanzu/sonobuoy",
  "versions": {
    "stable": "0.56.17",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/vmware-tanzu/sonobuoy/archive/v0.56.17.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "6795a8fc3a04014cb9cdf42534940b2bb2858b814c765bfe09ca71a31babbc92"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sonobuoy/blobs/sha256:e3d235acf4a115a6fab26dda39765b885b182ed5782039e7337aca15bc021c30",
          "sha256": "e3d235acf4a115a6fab26dda39765b885b182ed5782039e7337aca15bc021c30"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sonobuoy/blobs/sha256:e3d235acf4a115a6fab26dda39765b885b182ed5782039e7337aca15bc021c30",
          "sha256": "e3d235acf4a115a6fab26dda39765b885b182ed5782039e7337aca15bc021c30"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sonobuoy/blobs/sha256:e3d235acf4a115a6fab26dda39765b885b182ed5782039e7337aca15bc021c30",
          "sha256": "e3d235acf4a115a6fab26dda39765b885b182ed5782039e7337aca15bc021c30"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sonobuoy/blobs/sha256:3b700866d19295f22ce03e53cf26381ce944da2b1db769e9cd024d94876260de",
          "sha256": "3b700866d19295f22ce03e53cf26381ce944da2b1db769e9cd024d94876260de"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sonobuoy/blobs/sha256:3b700866d19295f22ce03e53cf26381ce944da2b1db769e9cd024d94876260de",
          "sha256": "3b700866d19295f22ce03e53cf26381ce944da2b1db769e9cd024d94876260de"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sonobuoy/blobs/sha256:3b700866d19295f22ce03e53cf26381ce944da2b1db769e9cd024d94876260de",
          "sha256": "3b700866d19295f22ce03e53cf26381ce944da2b1db769e9cd024d94876260de"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sonobuoy/blobs/sha256:565b50a24bc8c908131ff342cd6424b37c5b49f1f17b75ab905b86ecc0a8e7ea",
          "sha256": "565b50a24bc8c908131ff342cd6424b37c5b49f1f17b75ab905b86ecc0a8e7ea"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/sonobuoy.rb",
  "ruby_source_checksum": {
    "sha256": "873a5805d0415dc87b6f101122713281596ba6278dc13d716c9b7de51523cde1"
  },
  "date_added": "2018-10-20T22:08:51+02:00",
  "readme": "# ![Sonobuoy Logo](site/themes/sonobuoy/static/img/sonobuoy-logo.png)\n\n[![Test](https://github.com/vmware-tanzu/sonobuoy/actions/workflows/ci-test.yaml/badge.svg)](https://github.com/vmware-tanzu/sonobuoy/actions/workflows/ci-test.yaml/badge.svg)\n[![Lint](https://github.com/vmware-tanzu/sonobuoy/actions/workflows/ci-lint.yaml/badge.svg)](https://github.com/vmware-tanzu/sonobuoy/actions/workflows/ci-lint.yaml/badge.svg)\n\n## [Overview][oview]\n\nSonobuoy is a diagnostic tool that makes it easier to understand the state of a Kubernetes cluster by running a set of\nplugins (including [Kubernetes][k8s] conformance tests) in an accessible and non-destructive manner. It is a\ncustomizable, extendable, and cluster-agnostic way to generate clear, informative reports about your cluster.\n\nIts selective data dumps of Kubernetes resource objects and cluster nodes allow for the following use cases:\n\n* Integrated end-to-end (e2e) [conformance-testing][e2ePlugin]\n* Workload debugging\n* Custom data collection via extensible plugins\n\nStarting v0.20, Sonobuoy supports Kubernetes v1.17 or later. Sonobuoy releases will be independent of Kubernetes\nrelease, while ensuring that new releases continue to work functionally across different versions of Kubernetes. Read\nmore about the new release cycles in [our blog][decoupling-sonobuoy-k8s].\n\n> Note: You can skip this version enforcement by running Sonobuoy with the `--skip-preflight` flag.\n\n## Prerequisites\n\n* Access to an up-and-running Kubernetes cluster. If you do not have a cluster, we recommend either:\n  * following the [AWS Quickstart for Kubernetes][quickstart] instructions.\n  * setting up a local cluster using [KinD][kind]\n\n* An admin `kubeconfig` file, and the KUBECONFIG environment variable set.\n\n* For some advanced workflows it may be required to have `kubectl` installed.\n  See [installing via Homebrew (MacOS)][brew] or [building the binary (Linux)][linux].\n\n* The `sonobuoy images` subcommand requires [Docker](https://www.docker.com) to be installed.\n  See [installing Docker][docker].\n\n## Installation\n\nThe following methods exist for installing Sonobuoy:\n\n### Install binary\n\n1. Download the [latest release][releases] for your client platform.\n2. Extract the tarball:\n\n   ```\n   tar -xvf <RELEASE_TARBALL_NAME>.tar.gz\n   ```\n\n   Move the extracted `sonobuoy` executable to somewhere on your `PATH`.\n\n### Install with Hombrew (MacOS)\n\n1. Run the command:\n  \n   ```\n   brew install sonobuoy\n   ```\n\n## Getting Started\n\nTo launch conformance tests (ensuring [CNCF][cncf] conformance) and wait until they are finished run:\n\n```bash\nsonobuoy run --wait\n```\n\n> Note: Using `--mode quick` will significantly shorten the runtime of Sonobuoy. It runs just a single test, helping to quickly validate your Sonobuoy and Kubernetes configuration.\n\nGet the results from the plugins (e.g. e2e test results):\n\n```bash\nresults=$(sonobuoy retrieve)\n```\n\nInspect results for test failures. This will list the number of tests failed and their names:\n\n```bash\nsonobuoy results $results\n```\n\n> Note: The `results` command has lots of useful options for various situations. See the [results page][results] for more details.\n\nYou can also extract the entire contents of the file to get much more [detailed data][snapshot] about your cluster.\n\nSonobuoy creates a few resources in order to run and expects to run within its own namespace.\n\nDeleting Sonobuoy entails removing its namespace as well as a few cluster scoped resources.\n\n```bash\nsonobuoy delete --wait\n```\n\n> Note: The --wait option ensures the Kubernetes namespace is deleted, avoiding conflicts if another Sonobuoy run is started quickly.\n\nIf you have an issue with permissions in your cluster but you still want to run Sonobuoy, you can use `--aggregator-permissions` flag. Read more details about it [here][aggregator-permissions].\n\n### Other Tests\n\nBy default, `sonobuoy run` runs the Kubernetes conformance tests but this can easily be configured. The same plugin that\nhas the conformance tests has all the Kubernetes end-to-end tests which include other tests such as:\n\n* tests for specific storage features\n* performance tests\n* scaling tests\n* provider specific tests\n* and many more\n\nTo modify which tests you want to run, checkout our page on the [e2e plugin][e2ePlugin].\n\nIf you want to run other tests or tools which are not a part of the Kubernetes end-to-end suite, refer to our\ndocumentation on [custom plugins][customPlugins].\n\n### Monitoring Sonobuoy during a run\n\nYou can check on the status of each of the plugins running with:\n\n```bash\nsonobuoy status\n```\n\nYou can also inspect the logs of all Sonobuoy containers:\n\n```bash\nsonobuoy logs\n```\n\n## Troubleshooting\n\nIf you encounter any problems that the documentation does not address, [file an issue][issue].\n\n## Docker Hub rate limit\n\nThis year, Docker has started rate limiting image pulls from Docker Hub. We're planning a future release with a better\nuser interface to work around this. Until then, this is the recommended approach.\n\n### Sonobuoy Pod\n\nSonobuoy by default pulls from Docker Hub for [`sonobuoy/sonobuoy` image](https://hub.docker.com/r/sonobuoy/sonobuoy).\nIf you're encountering rate limit on this, you can use VMware-provided mirror with:\n\n```bash\nsonobuoy run --sonobuoy-image projects.registry.vmware.com/sonobuoy/sonobuoy:<VERSION>\n```\n\n### Conformance\n\nKubernetes end-to-end conformance test pulls several images from Docker Hub as part of testing. To override this, you\nwill need to create a registry manifest file locally (e.g. `conformance-image-config.yaml`) containing the following:\n\n```yaml\ndockerLibraryRegistry: mirror.gcr.io/library\n```\n\nThen on running conformance:\n\n```bash\nsonobuoy run --sonobuoy-image projects.registry.vmware.com/sonobuoy/sonobuoy:<VERSION> --e2e-repo-config conformance-image-config.yaml\n```\n\nTechnically `dockerGluster` is also a registry pulling from Docker Hub, but it's not part of Conformance test suite at\nthe moment, so overriding `dockerLibraryRegistry` should be enough.\n\n## Known Issues\n\n### Leaked End-to-end namespaces\n\nThere are some Kubernetes e2e tests that may leak resources. Sonobuoy can help clean those up as well by deleting all\nnamespaces prefixed with `e2e`:\n\n```bash\nsonobuoy delete --all\n```\n\n### Run on Google Cloud Platform (GCP)\n\nSonobuoy requires admin permissions which won't be automatic if you are running via Google Kubernetes Engine (GKE)\ncluster. You must first create an admin role for the user under which you run Sonobuoy:\n\n```bash\nkubectl create clusterrolebinding <your-user-cluster-admin-binding> --clusterrole=cluster-admin --user=<your.google.cloud.email@example.org>\n```\n\n### Run on Kubernetes for Docker Desktop\n\nWe don't recommend running via a cluster set up via Docker Desktop. Known issues include:\n\n- `kubectl logs` will not function\n- `sonobuoy logs` will not function\n- `sonobuoy retrieve` will not function\n- `systemd-logs` plugin will hang\n\nMost of these issues revolve around issues with kube-proxy on Docker Desktop so if you know of how to resolve these\nissues, let us know.\n\n### Certified-Conformance bug (versions v0.53.0 and v0.53.1)\n\nThese versions of Sonobuoy have a bug that runs the wrong set of tests without additional actions. See more\ndetails [here][issue1388]. The simplest way to avoid this is to update your version of Sonobuoy to >= v0.53.2.\n\n## Strategy Document\n\nSee our current [strategy document][strategy] and [roadmap][roadmap] for context on what our highest priority use cases and work items\nwill be. Feel free to make comments on Github or start conversations in Slack.\n\n## Contributing\n\nThanks for taking the time to join our community and start contributing! We welcome pull requests. Feel free to dig\nthrough the [issues][issue] and jump in.\n\nThe most common build/test functions are called via the Makefile:\n\n```\n// Build the binary\n$ make build\n\n// Run local unit tests\n$ make test\n```\n\nIf you make changes which change output, you may fail tests which utilize the golden file testing pattern (e.g. correct data is stored in external files), update them by running:\n```\n$ make golden\n```\n\nIn most cases, running integration tests is more simply done in CI when you open a pull request.\nYou can dig into scripts/build_funcs.sh and our .github/workflows/ci-test.yaml for exact details of existing test flows.\n\n### Before you start\n\n* Please familiarize yourself with the [Code of Conduct][coc] before contributing.\n* See [CONTRIBUTING.md][contrib] for instructions on the developer certificate of origin that we require.\n* There is a [Slack channel][slack] if you want to interact with other members of the community\n\n## Changelog\n\nSee [the list of releases][releases] to find out about feature changes.\n\n[decoupling-sonobuoy-k8s]: https://sonobuoy.io/decoupling-sonobuoy-and-kubernetes\n\n[airgap]: https://sonobuoy.io/docs/airgap\n\n[brew]: https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-with-homebrew-on-macos\n\n[cncf]: https://github.com/cncf/k8s-conformance#certified-kubernetes\n\n[coc]: https://github.com/vmware-tanzu/sonobuoy/blob/main/CODE_OF_CONDUCT.md\n\n[contrib]: https://github.com/vmware-tanzu/sonobuoy/blob/main/CONTRIBUTING.md\n\n[docker]: https://docs.docker.com/get-docker/\n\n[docs]: https://sonobuoy.io/docs\n\n[e2ePlugin]: https://sonobuoy.io/docs/e2eplugin\n\n[customPlugins]: https://sonobuoy.io/docs/plugins\n\n[gen]: https://sonobuoy.io/docs/gen\n\n[issue]: https://github.com/vmware-tanzu/sonobuoy/issues\n\n[issue1388]: https://sonobuoy.io/docs/issue1388\n\n[k8s]: https://github.com/kubernetes/kubernetes\n\n[kind]: https://github.com/kubernetes-sigs/kind\n\n[linux]: https://kubernetes.io/docs/tasks/tools/install-kubectl/#tabset-1\n\n[oview]: https://youtu.be/8QK-Hg2yUd4\n\n[plugins]: https://sonobuoy.io/docs/plugins\n\n[quickstart]: https://aws.amazon.com/quickstart/architecture/vmware-kubernetes/\n\n[releases]: https://github.com/vmware-tanzu/sonobuoy/releases\n\n[results]: https://sonobuoy.io/docs/results\n\n[slack]: https://kubernetes.slack.com/messages/sonobuoy\n\n[snapshot]:https://sonobuoy.io/docs/snapshot\n\n[sonobuoyconfig]: https://sonobuoy.io/docs/sonobuoy-config\n\n[strategy]: https://sonobuoy.io/docs/strategy\n\n[aggregator-permissions]: https://sonobuoy.io/docs/aggregator-permissions\n\n[roadmap]: https://github.com/vmware-tanzu/sonobuoy/wiki"
}
