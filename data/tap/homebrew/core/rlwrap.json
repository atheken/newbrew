{
  "name": "rlwrap",
  "full_name": "rlwrap",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Readline wrapper: adds readline support to tools that lack it",
  "license": "GPL-2.0-or-later",
  "homepage": "https://github.com/hanslub42/rlwrap",
  "versions": {
    "stable": "0.46.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/hanslub42/rlwrap/archive/refs/tags/0.46.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "c537e8a53df36f1f996601d776203478ad56fab1d67b3c1a63057badb0851cec"
    },
    "head": {
      "url": "https://github.com/hanslub42/rlwrap.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/rlwrap/blobs/sha256:6cc64e120040bde8ff3680d02a5233073756f3a9ecfa159230636574747be809",
          "sha256": "6cc64e120040bde8ff3680d02a5233073756f3a9ecfa159230636574747be809"
        },
        "arm64_monterey": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/rlwrap/blobs/sha256:800128c200ac5cd3ba45d50a835bd48f9ffb62e04886d1d615604477a599b91b",
          "sha256": "800128c200ac5cd3ba45d50a835bd48f9ffb62e04886d1d615604477a599b91b"
        },
        "arm64_big_sur": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/rlwrap/blobs/sha256:4273ede2a9d3c9c7812e596db58b7ec36446fb9e26d9fcbe908f8afa68cf8672",
          "sha256": "4273ede2a9d3c9c7812e596db58b7ec36446fb9e26d9fcbe908f8afa68cf8672"
        },
        "ventura": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/rlwrap/blobs/sha256:9e480ae1326e022bbec1454240504e1361fb8b62c9df64b378f5072d6e27fb35",
          "sha256": "9e480ae1326e022bbec1454240504e1361fb8b62c9df64b378f5072d6e27fb35"
        },
        "monterey": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/rlwrap/blobs/sha256:073698b12b6cb3cb5bc9934bd1b0048562ba32b320fcc2cef9b5652b7354f825",
          "sha256": "073698b12b6cb3cb5bc9934bd1b0048562ba32b320fcc2cef9b5652b7354f825"
        },
        "big_sur": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/rlwrap/blobs/sha256:b4b03c2fa68bfb2210e7fda2153bc6a6866ae3c16105465d14818e3ea87795b6",
          "sha256": "b4b03c2fa68bfb2210e7fda2153bc6a6866ae3c16105465d14818e3ea87795b6"
        },
        "catalina": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/rlwrap/blobs/sha256:a46ae39723ca361493eb0b81e15cd85de9a2b0b9ff26d8de49d0f606b328658c",
          "sha256": "a46ae39723ca361493eb0b81e15cd85de9a2b0b9ff26d8de49d0f606b328658c"
        },
        "x86_64_linux": {
          "cellar": "/home/linuxbrew/.linuxbrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/rlwrap/blobs/sha256:d8ea0283b1103d38b58122b54334229769b61fd78cf1d9f1d4716437389cbc3e",
          "sha256": "d8ea0283b1103d38b58122b54334229769b61fd78cf1d9f1d4716437389cbc3e"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "autoconf",
    "automake"
  ],
  "dependencies": [
    "readline"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/rlwrap.rb",
  "ruby_source_checksum": {
    "sha256": "c63797398fc56489acc3e8412bfa3fc0fbaced75b5974695c72bb32f18eaeb0c"
  },
  "date_added": "2009-10-20T14:18:52-04:00",
  "readme": "rlwrap v 0.46 October 2022\n\n## WHAT IT IS:\n\n`rlwrap` is a 'readline wrapper', a small utility that uses the [GNU\nReadline](https://tiswww.case.edu/php/chet/readline/rltop.html)\nlibrary to allow the editing of keyboard input for any command.\n\nI couldn't find anything like it when I needed it, so I wrote this one\nback in 1999.  By now, there are (and, in hindsight, even then there\nwere) a number of good readline wrappers around, like `rlfe`,\ndistributed as part of the GNU readline library, and the amazing\n`socat`.\n\nYou should consider using `rlwrap` especially when you need\nuser-defined completion (by way of completion word lists) and\npersistent history, or if you want to program 'special effects' using\nthe filter mechanism.\n\nAs it is often used with older or even obsolete software, `rlwrap`\nstrives to compile and run on a fairly wide range of not necessarily\nrecent Unix-like systems (FreeBSD, OSX, HP-UX, AIX, Solaris, QNX,\ncygwin, linux and probably quite a few more) This would not have been\nwithout [Polarhome](http://polarhome.com)'s now retired 'dinosaur zoo'\nof ageing Unix systems\n\n## HOW TO USE IT:\n\nIf \n\n    $ <command> <args>\n\ndisplays the infamous `^[[D` when you press a left arrow key, or if\nyou just want decent input history and completion, try:\n\n    $ rlwrap [-options] <command> <args>\n\nYou should not notice any difference compared to directly calling `<command>\n<args>`, except that you now can edit `<command>`'s input and recall\nits entire input history using the arrow keys.\n\n\nInput history is remembered accross invocations, separately for\ndifferent `<command>`s. `CTRL-R` will search the input\nhistory, like in `bash`.  With the `-r` and `-f` options you can specify the list of\nwords which `rlwrap` will use as possible completions, taking them\nfrom a file (`-f` option) or from `<command>`'s past in/output (-r\noption).\n\n`rlwrap` continually monitors `<command>`'s terminal settings, so that\nit can do the right thing when it asks for single keypresses or\nfor a password.\n\nCommands that already use Readline, or a similar library, will always\nask for (and get) single keypresses, so that `rlwrap`ping them doesn't\nhave any noticeable effect. To overcome this, one can use rlwrap with the\n`--always-readline` (`-a`)  option; `rlwrap` will then use its own line\nediting and history. Unforunately, in that case, `rlwrap` cannot\ndetect whether `<command>` asks for a password. This can be remedied\nby giving the password prompt (excluding trailing space and possibly\nthe first few letters) as an argument to the -a option.\n \n## EXAMPLES:\nRun netcat with command-line editing:\n\n    rlwrap nc localhost 80\n\nRun lprolog and use its saved input history and lib.pl to build a\ncompletion word list:\n  \n    rlwrap -f lib.pl -f . lprolog\n\nRun smbclient (which already uses readline), add all input and output\nto the completion list, complete local filenames, avoid showing (and\nstoring) passwords:\n\n    rlwrap -cra -assword: smbclient '\\\\PEANUT\\C' \n\n## INSTALLATION:\nUsually just\n\n    ./configure;\n    make\n    sudo make install\n\nSee the INSTALL file for more information.\n\n## FILTERS\n\nFilters are `perl` or `python` plugins that enable complete (albeit\nsomewhat fragile) control over `rlwrap`'s input and output, echo,\nprompt, history and completion. They aren't used a lot, and remain\ntherefore somewhat untested. `rlwrap -z listing` lists the installed\nfilters, `rlwrap -z <somefilter>` displays a short help text for `<somefilter>`\n\n## AUTHORS\n\nThe GNU Readline library (written by Brian Fox and Chet Ramey) does\nall the hard work behind the scenes, the pty-handling code (written by\nGeoff C. Wing) was taken practically unchanged from rxvt, and\ncompletion word lists are managed by Damian Ivereigh's libredblack\nlibrary. The rest was written by Hans Lub (hanslub42@gmail.com).\n\n## HOMEPAGE\nhttps://github.com/hanslub42/rlwrap"
}
