{
  "name": "hcloud",
  "full_name": "hcloud",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Command-line interface for Hetzner Cloud",
  "license": "MIT",
  "homepage": "https://github.com/hetznercloud/cli",
  "versions": {
    "stable": "1.36.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/hetznercloud/cli/archive/v1.36.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d281bff826b626cd1e33ab7a3342988a647941fd02c643cf96da1bd7e2cf3c9d"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hcloud/blobs/sha256:45a315aa3aeb460670361a852d4ed1df2e277b77c538af03c7e37d1cc8334d2e",
          "sha256": "45a315aa3aeb460670361a852d4ed1df2e277b77c538af03c7e37d1cc8334d2e"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hcloud/blobs/sha256:45a315aa3aeb460670361a852d4ed1df2e277b77c538af03c7e37d1cc8334d2e",
          "sha256": "45a315aa3aeb460670361a852d4ed1df2e277b77c538af03c7e37d1cc8334d2e"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hcloud/blobs/sha256:45a315aa3aeb460670361a852d4ed1df2e277b77c538af03c7e37d1cc8334d2e",
          "sha256": "45a315aa3aeb460670361a852d4ed1df2e277b77c538af03c7e37d1cc8334d2e"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hcloud/blobs/sha256:88d067f3eaa27e9a0e8338359e9a6301a79c3369d0d8d77384f91e76d4613302",
          "sha256": "88d067f3eaa27e9a0e8338359e9a6301a79c3369d0d8d77384f91e76d4613302"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hcloud/blobs/sha256:88d067f3eaa27e9a0e8338359e9a6301a79c3369d0d8d77384f91e76d4613302",
          "sha256": "88d067f3eaa27e9a0e8338359e9a6301a79c3369d0d8d77384f91e76d4613302"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hcloud/blobs/sha256:88d067f3eaa27e9a0e8338359e9a6301a79c3369d0d8d77384f91e76d4613302",
          "sha256": "88d067f3eaa27e9a0e8338359e9a6301a79c3369d0d8d77384f91e76d4613302"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hcloud/blobs/sha256:9bab4d41a18d7fb2eeccae5fca3e13854a40fb541ffc6ddd2dbce31c12209871",
          "sha256": "9bab4d41a18d7fb2eeccae5fca3e13854a40fb541ffc6ddd2dbce31c12209871"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/hcloud.rb",
  "ruby_source_checksum": {
    "sha256": "e7c728e276e85f562a266cd8088e2d6f27346803f483617b0a37481b4b989f01"
  },
  "date_added": "2018-04-09T20:24:25-07:00",
  "readme": "# hcloud: Command-line interface for Hetzner Cloud\n\n[![Build status](https://travis-ci.org/hetznercloud/cli.svg?branch=master)](https://travis-ci.org/hetznercloud/cli)\n\n`hcloud` is a command-line interface for interacting with Hetzner Cloud.\n\n[![asciicast](https://asciinema.org/a/157991.png)](https://asciinema.org/a/157991)\n\n## Installation\n\nYou can download pre-built binaries for Linux, FreeBSD, macOS, and Windows on\nthe [releases page](https://github.com/hetznercloud/cli/releases).\n\nOn macOS and Linux, you can install `hcloud` via [Homebrew](https://brew.sh/):\n\n    brew install hcloud\n\n\nOn Windows, you can install `hcloud` via [Scoop](https://scoop.sh/)\n\n    scoop install hcloud\n\n### Third-party packages\n\nThere are unofficial packages maintained by third-party users. Please note\nthat these packages aren’t supported nor maintained by Hetzner Cloud and\nmay not always be up-to-date. Downloading the binary or building from source\nis still the recommended install method.\n\n### Build manually\n\nIf you have Go installed, you can build and install the latest version of\n`hcloud` with:\n\n    go install github.com/hetznercloud/cli/cmd/hcloud@latest\n\n> Binaries built in this way do not have the correct version embedded. Use our\nprebuilt binaries or check out [`.goreleaser.yml`](.goreleaser.yml) to learn\nhow to embed it yourself.\n\n## Getting Started\n\n1.  Visit the Hetzner Cloud Console at [console.hetzner.cloud](https://console.hetzner.cloud/),\n    select your project, and create a new API token.\n\n2.  Configure the `hcloud` program to use your token:\n\n        hcloud context create my-project\n\n3.  You’re ready to use the program. For example, to get a list of available server\n    types, run:\n\n        hcloud server-type list\n\nSee `hcloud help` for a list of commands.\n\n## Shell Completion\n\n`hcloud` provides completions for various shells.\n\n### Bash\n\nTo load completions into the current shell execute:\n\n    source <(hcloud completion bash)\n\nIn order to make the completions permanent, append the line above to\nyour `.bashrc`.\n\n### Zsh\n\nIf shell completions are not already enabled for your environment need\nto enable them. Add the following line to your `~/.zshrc` file:\n\n    autoload -Uz compinit; compinit\n\nTo load completions for each session execute the following commands:\n\n    mkdir -p ~/.config/hcloud/completion/zsh\n    hcloud completion zsh > ~/.config/hcloud/completion/zsh/_hcloud\n\nFinally, add the following line to your `~/.zshrc` file, *before* you\ncall the `compinit` function:\n\n    fpath+=(~/.config/hcloud/completion/zsh)\n\nIn the end your `~/.zshrc` file should contain the following two lines\nin the order given here.\n\n    fpath+=(~/.config/hcloud/completion/zsh)\n    #  ... anything else that needs to be done before compinit\n    autoload -Uz compinit; compinit\n    # ...\n\nYou will need to start a new shell for this setup to take effect.\n\n### Fish\n\nTo load completions into the current shell execute:\n\n    hcloud completion fish | source\n\nIn order to make the completions permanent execute once:\n\n     hcloud completion fish > ~/.config/fish/completions/hcloud.fish\n\n### PowerShell:\n\nTo load completions into the current shell execute:\n\n    PS> hcloud completion powershell | Out-String | Invoke-Expression\n\nTo load completions for every new session, run\nand source this file from your PowerShell profile.\n\n    PS> hcloud completion powershell > hcloud.ps1\n\n## Output configuration\n\nYou can control output via the `-o` option:\n\n* For `list` commands, you can specify `-o noheader` to omit the table header.\n\n* For `list` commands, you can specify `-o columns=id,name` to only show certain\n  columns in the table.\n\n* For `describe` commands, you can specify `-o json` to get a JSON representation\n  of the resource. The schema is identical to those in the Hetzner Cloud API which\n  are documented at [docs.hetzner.cloud](https://docs.hetzner.cloud).\n\n* For `describe` commands, you can specify `-o format={{.ID}}` to format output\n  according to the given [Go template](https://golang.org/pkg/text/template/).\n  The template’s input is the resource’s corresponding struct in the\n  [hcloud-go](https://godoc.org/github.com/hetznercloud/hcloud-go/hcloud) library.\n\n## Configure hcloud using environment variables\n\nYou can use the following environment variables to configure `hcloud`:\n\n* `HCLOUD_TOKEN`\n* `HCLOUD_CONTEXT`\n* `HCLOUD_CONFIG`\n\nWhen using `hcloud` in scripts, for example, it may be cumbersome to work with\ncontexts. Instead of creating a context, you can set the token via the `HCLOUD_TOKEN`\nenvironment variable. When combined with tools like [direnv](https://direnv.net), you\ncan configure a per-directory context by setting `HCLOUD_CONTEXT=my-context` via `.envrc`.\n\n## Examples\n\n### List all servers\n\n```\n$ hcloud server list\nID       NAME                    STATUS    IPV4\n210216   test1                   running   78.46.122.12\n210729   ubuntu-8gb-nbg1-dc3-1   running   94.130.177.158\n```\n\n### Create a server\n\n```\n$ hcloud server create --name test --image debian-9 --type cx11 --ssh-key demo\n   7s [====================================================================] 100%\nServer 325211 created\n```\n\n## License\n\nMIT license"
}
