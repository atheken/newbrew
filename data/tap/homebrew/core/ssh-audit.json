{
  "name": "ssh-audit",
  "full_name": "ssh-audit",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "SSH server & client auditing",
  "license": "MIT",
  "homepage": "https://github.com/jtesta/ssh-audit",
  "versions": {
    "stable": "2.9.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/09/71/aa82438fa0660fc0bc63fd84bcc4be8c3f7456752ce31d4fd1221bd63b4c/ssh-audit-2.9.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "7e68baaaa1fa42b68bcf5eefc81eb02805631e421bd84b6ae639d0cb86eb893d"
    },
    "head": {
      "url": "https://github.com/jtesta/ssh-audit.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ssh-audit/blobs/sha256:52cdbe85ff2ae19e72029ac6751cd5553f96ea158f1fee1f9f1f76659aef3e91",
          "sha256": "52cdbe85ff2ae19e72029ac6751cd5553f96ea158f1fee1f9f1f76659aef3e91"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ssh-audit/blobs/sha256:52cdbe85ff2ae19e72029ac6751cd5553f96ea158f1fee1f9f1f76659aef3e91",
          "sha256": "52cdbe85ff2ae19e72029ac6751cd5553f96ea158f1fee1f9f1f76659aef3e91"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ssh-audit/blobs/sha256:52cdbe85ff2ae19e72029ac6751cd5553f96ea158f1fee1f9f1f76659aef3e91",
          "sha256": "52cdbe85ff2ae19e72029ac6751cd5553f96ea158f1fee1f9f1f76659aef3e91"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ssh-audit/blobs/sha256:0a10628210e4b2003ae24c7ecac43bbfbedcbc9f99ec51d5ce23fa54a140da27",
          "sha256": "0a10628210e4b2003ae24c7ecac43bbfbedcbc9f99ec51d5ce23fa54a140da27"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ssh-audit/blobs/sha256:0a10628210e4b2003ae24c7ecac43bbfbedcbc9f99ec51d5ce23fa54a140da27",
          "sha256": "0a10628210e4b2003ae24c7ecac43bbfbedcbc9f99ec51d5ce23fa54a140da27"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ssh-audit/blobs/sha256:0a10628210e4b2003ae24c7ecac43bbfbedcbc9f99ec51d5ce23fa54a140da27",
          "sha256": "0a10628210e4b2003ae24c7ecac43bbfbedcbc9f99ec51d5ce23fa54a140da27"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ssh-audit/blobs/sha256:62e991c6ee5e1bf92d4e687acaf9d27b941386bc4cb9466db881fc44b45eca4e",
          "sha256": "62e991c6ee5e1bf92d4e687acaf9d27b941386bc4cb9466db881fc44b45eca4e"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/ssh-audit.rb",
  "ruby_source_checksum": {
    "sha256": "ae1ad51b37ca185d2dfe611b19dacc15b92e7d3d1ad3b8916880b431777e4c72"
  },
  "date_added": "2016-10-24T11:39:48+02:00",
  "readme": "# ssh-audit\n[![License](https://img.shields.io/badge/license-MIT-brightgreen.svg)](https://github.com/jtesta/ssh-audit/blob/master/LICENSE)\n[![PyPI Downloads](https://img.shields.io/pypi/dm/ssh-audit)](https://pypi.org/project/ssh-audit/)\n[![Docker Pulls](https://img.shields.io/docker/pulls/positronsecurity/ssh-audit)](https://hub.docker.com/r/positronsecurity/ssh-audit)\n[![Build Status](https://github.com/jtesta/ssh-audit/actions/workflows/tox.yaml/badge.svg)](https://github.com/jtesta/ssh-audit/actions)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/jtesta/ssh-audit/blob/master/CONTRIBUTING.md)\n\n**ssh-audit** is a tool for ssh server & client configuration auditing.\n\n[jtesta/ssh-audit](https://github.com/jtesta/ssh-audit/) (v2.0+) is the updated and maintained version of ssh-audit forked from [arthepsy/ssh-audit](https://github.com/arthepsy/ssh-audit) (v1.x) due to inactivity.\n\n- [Features](#features)\n- [Usage](#usage)\n- [Screenshots](#screenshots)\n    - [Server Standard Audit Example](#server-standard-audit-example)\n    - [Server Policy Audit Example](#server-policy-audit-example)\n    - [Client Standard Audit Example](#client-standard-audit-example)\n- [Hardening Guides](#hardening-guides)\n- [Pre-Built Packages](#pre-built-packages)\n- [Web Front-End](#web-front-end)\n- [ChangeLog](#changelog)\n\n## Features\n- SSH1 and SSH2 protocol server support;\n- analyze SSH client configuration;\n- grab banner, recognize device or software and operating system, detect compression;\n- gather key-exchange, host-key, encryption and message authentication code algorithms;\n- output algorithm information (available since, removed/disabled, unsafe/weak/legacy, etc);\n- output algorithm recommendations (append or remove based on recognized software version);\n- output security information (related issues, assigned CVE list, etc);\n- analyze SSH version compatibility based on algorithm information;\n- historical information from OpenSSH, Dropbear SSH and libssh;\n- policy scans to ensure adherence to a hardened/standard configuration;\n- runs on Linux and Windows;\n- supports Python 3.7 - 3.11;\n- no dependencies\n\n## Usage\n```\nusage: ssh-audit.py [options] <host>\n\n   -h,  --help             print this help\n   -1,  --ssh1             force ssh version 1 only\n   -2,  --ssh2             force ssh version 2 only\n   -4,  --ipv4             enable IPv4 (order of precedence)\n   -6,  --ipv6             enable IPv6 (order of precedence)\n   -b,  --batch            batch output\n   -c,  --client-audit     starts a server on port 2222 to audit client\n                               software config (use -p to change port;\n                               use -t to change timeout)\n   -d,  --debug            Enable debug output.\n   -g,  --gex-test=<x[,y,...]>  dh gex modulus size test\n                   <min1:pref1:max1[,min2:pref2:max2,...]>\n                   <x-y[:step]>\n   -j,  --json             JSON output (use -jj to enable indents)\n   -l,  --level=<level>    minimum output level (info|warn|fail)\n   -L,  --list-policies    list all the official, built-in policies\n        --lookup=<alg1,alg2,...>    looks up an algorithm(s) without\n                                    connecting to a server\n   -m,  --manual           print the man page (Windows only)\n   -M,  --make-policy=<policy.txt>  creates a policy based on the target server\n                                    (i.e.: the target server has the ideal\n                                    configuration that other servers should\n                                    adhere to)\n   -n,  --no-colors        disable colors\n   -p,  --port=<port>      port to connect\n   -P,  --policy=<\"policy name\" | policy.txt>  run a policy test using the\n                                                   specified policy\n   -t,  --timeout=<secs>   timeout (in seconds) for connection and reading\n                               (default: 5)\n   -T,  --targets=<hosts.txt>  a file containing a list of target hosts (one\n                                   per line, format HOST[:PORT])\n        --threads=<threads>    number of threads to use when scanning multiple\n                                   targets (-T/--targets) (default: 32)\n   -v,  --verbose          verbose output\n```\n* if both IPv4 and IPv6 are used, order of precedence can be set by using either `-46` or `-64`.\n* batch flag `-b` will output sections without header and without empty lines (implies verbose flag).\n* verbose flag `-v` will prefix each line with section type and algorithm name.\n* an exit code of 0 is returned when all algorithms are considered secure (for a standard audit), or when a policy check passes (for a policy audit).\n\nBasic server auditing:\n```\nssh-audit localhost\nssh-audit 127.0.0.1\nssh-audit 127.0.0.1:222\nssh-audit ::1\nssh-audit [::1]:222\n```\n\nTo run a standard audit against many servers (place targets into servers.txt, one on each line in the format of `HOST[:PORT]`):\n\n```\nssh-audit -T servers.txt\n```\n\nTo audit a client configuration (listens on port 2222 by default; connect using `ssh -p 2222 anything@localhost`):\n\n```\nssh-audit -c\n```\n\nTo audit a client configuration, with a listener on port 4567:\n```\nssh-audit -c -p 4567\n```\n\nTo  list all official built-in policies (hint: use resulting policy names with `-P`/`--policy`):\n```\nssh-audit -L\n```\n\nTo run a policy audit against a server:\n```\nssh-audit -P [\"policy name\" | path/to/server_policy.txt] targetserver\n```\n\nTo run a policy audit against a client:\n```\nssh-audit -c -P [\"policy name\" | path/to/client_policy.txt]\n```\n\nTo run a policy audit against many servers:\n```\nssh-audit -T servers.txt -P [\"policy name\" | path/to/server_policy.txt]\n```\n\nTo create a policy based on a target server (which can be manually edited):\n```\nssh-audit -M new_policy.txt targetserver\n```\n\n## Screenshots\n\n### Server Standard Audit Example\nBelow is a screen shot of the standard server-auditing output when connecting to an unhardened OpenSSH v5.3 service:\n![screenshot](https://user-images.githubusercontent.com/2982011/64388792-317e6f80-d00e-11e9-826e-a4934769bb07.png)\n\n### Server Policy Audit Example\nBelow is a screen shot of the policy auditing output when connecting to an un-hardened Ubuntu Server 20.04 machine (hint: use `-L`/`--list-policies` to see names of built-in policies to use with `-P`/`--policy`):\n![screenshot](https://user-images.githubusercontent.com/2982011/94370881-95178700-00c0-11eb-8705-3157a4669dc0.png)\n\nAfter applying the steps in the hardening guide (see below), the output changes to the following:\n![screenshot](https://user-images.githubusercontent.com/2982011/94370873-87620180-00c0-11eb-9a59-469f61a56ce1.png)\n\n### Client Standard Audit Example\nBelow is a screen shot of the client-auditing output when an unhardened OpenSSH v7.2 client connects:\n![client_screenshot](https://user-images.githubusercontent.com/2982011/68867998-b946c100-06c4-11ea-975f-1f47e4178a74.png)\n\n## Hardening Guides\nGuides to harden server & client configuration can be found here: [https://www.ssh-audit.com/hardening_guides.html](https://www.ssh-audit.com/hardening_guides.html)\n\n## Pre-Built Packages\nPre-built packages are available for Windows (see the releases page), PyPI, Snap, and Docker:\n\nTo install from PyPI:\n```\n$ pip3 install ssh-audit\n```\n\nTo install the Snap package:\n```\n$ snap install ssh-audit\n```\n\nTo install from Dockerhub:\n```\n$ docker pull positronsecurity/ssh-audit\n```\n(Then run with: `docker run -it -p 2222:2222 positronsecurity/ssh-audit 10.1.1.1`)\n\nThe status of various other platform packages can be found below (via Repology):\n\n<a href=\"https://repology.org/project/ssh-audit/versions\"><img src=\"https://repology.org/badge/vertical-allrepos/ssh-audit.svg?columns=4\" alt=\"Packaging status\" align=\"center\"></a>\n\n## Web Front-End\nFor convenience, a web front-end on top of the command-line tool is available at [https://www.ssh-audit.com/](https://www.ssh-audit.com/).\n\n## ChangeLog\n\n### v3.0.0-dev (2023-??-??)\n - Results from concurrent scans against multiple hosts are no longer improperly combined; bug discovered by [Adam Russell](https://github.com/thecliguy).\n - Hostname resolution failure no longer causes scans against multiple hosts to terminate unexpectedly; credit [Dani Cuesta](https://github.com/daniel-cues).\n - Algorithm recommendations resulting from warnings are now printed in yellow instead of red; credit [Adam Russell](https://github.com/thecliguy).\n - Fixed crash during GEX tests.\n - Added 1 new key exchange: `curve448-sha512@libssh.org`.\n\n### v2.9.0 (2023-04-29)\n - Dropped support for Python 3.6, as it reached EOL at the end of 2021.\n - Added Ubuntu Server & Client 22.04 hardening policies.\n - Removed experimental warning tag from `sntrup761x25519-sha512@openssh.com`.\n - Updated CVE database; credit [Alexandre Zanni](https://github.com/noraj).\n - Added `-g` and `--gex-test` for granular GEX modulus size tests; credit [Adam Russell](https://github.com/thecliguy).\n - Snap packages now print more user-friendly error messages when permission errors are encountered.\n - JSON 'target' field now always includes port number; credit [tomatohater1337](https://github.com/tomatohater1337).\n - JSON output now includes recommendations and CVE data.\n - Mixed host key/CA key types (i.e.: RSA host keys signed with ED25519 CAs, etc.) are now properly handled.\n - Warnings are now printed for 2048-bit moduli; partial credit [Adam Russell](https://github.com/thecliguy).\n - SHA-1 algorithms now cause failures.\n - CBC mode ciphers are now warnings instead of failures.\n - Generic failure/warning messages replaced with more specific reasons (i.e.: 'using weak cipher' => 'using broken RC4 cipher').\n - Updated built-in policies to include missing host key size information.\n - Added built-in policies for OpenSSH 8.8, 8.9, 9.0, 9.1, 9.2, and 9.3.\n - Added 33 new host keys: `dsa2048-sha224@libassh.org`, `dsa2048-sha256@libassh.org`, `dsa3072-sha256@libassh.org`, `ecdsa-sha2-1.3.132.0.10-cert-v01@openssh.com`, `eddsa-e382-shake256@libassh.org`, `eddsa-e521-shake256@libassh.org`, `null`, `pgp-sign-dss`, `pgp-sign-rsa`, `spki-sign-dss`, `spki-sign-rsa`, `ssh-dss-sha224@ssh.com`, `ssh-dss-sha384@ssh.com`, `ssh-dss-sha512@ssh.com`, `ssh-ed448-cert-v01@openssh.com`, `ssh-rsa-sha224@ssh.com`, `ssh-rsa-sha2-256`, `ssh-rsa-sha2-512`, `ssh-rsa-sha384@ssh.com`, `ssh-rsa-sha512@ssh.com`, `ssh-xmss-cert-v01@openssh.com`, `ssh-xmss@openssh.com`, `webauthn-sk-ecdsa-sha2-nistp256@openssh.com`, `x509v3-ecdsa-sha2-1.3.132.0.10`, `x509v3-sign-dss-sha1`, `x509v3-sign-dss-sha224@ssh.com`, `x509v3-sign-dss-sha256@ssh.com`, `x509v3-sign-dss-sha384@ssh.com`, `x509v3-sign-dss-sha512@ssh.com`, `x509v3-sign-rsa-sha1`, `x509v3-sign-rsa-sha224@ssh.com`, `x509v3-sign-rsa-sha384@ssh.com`, `x509v3-sign-rsa-sha512@ssh.com`.\n - Added 46 new key exchanges: `diffie-hellman-group14-sha224@ssh.com`, `diffie-hellman_group17-sha512`, `diffie-hellman-group-exchange-sha224@ssh.com`, `diffie-hellman-group-exchange-sha384@ssh.com`, `ecdh-sha2-1.2.840.10045.3.1.1`, `ecdh-sha2-1.2.840.10045.3.1.7`, `ecdh-sha2-1.3.132.0.1`, `ecdh-sha2-1.3.132.0.16`, `ecdh-sha2-1.3.132.0.26`, `ecdh-sha2-1.3.132.0.27`, `ecdh-sha2-1.3.132.0.33`, `ecdh-sha2-1.3.132.0.34`, `ecdh-sha2-1.3.132.0.35`, `ecdh-sha2-1.3.132.0.36`, `ecdh-sha2-1.3.132.0.37`, `ecdh-sha2-1.3.132.0.38`, `ecdh-sha2-4MHB+NBt3AlaSRQ7MnB4cg==`, `ecdh-sha2-5pPrSUQtIaTjUSt5VZNBjg==`, `ecdh-sha2-9UzNcgwTlEnSCECZa7V1mw==`, `ecdh-sha2-D3FefCjYoJ/kfXgAyLddYA==`, `ecdh-sha2-h/SsxnLCtRBh7I9ATyeB3A==`, `ecdh-sha2-m/FtSAmrV4j/Wy6RVUaK7A==`, `ecdh-sha2-mNVwCXAoS1HGmHpLvBC94w==`, `ecdh-sha2-qCbG5Cn/jjsZ7nBeR7EnOA==`, `ecdh-sha2-qcFQaMAMGhTziMT0z+Tuzw==`, `ecdh-sha2-VqBg4QRPjxx1EXZdV0GdWQ==`, `ecdh-sha2-wiRIU8TKjMZ418sMqlqtvQ==`, `ecdh-sha2-zD/b3hu/71952ArpUG4OjQ==`, `ecmqv-sha2`, `gss-13.3.132.0.10-sha256-*`, `gss-curve25519-sha256-*`, `gss-curve448-sha512-*`, `gss-gex-sha1-*`, `gss-gex-sha256-*`, `gss-group14-sha1-*`, `gss-group14-sha256-*`, `gss-group15-sha512-*`, `gss-group16-sha512-*`, `gss-group17-sha512-*`, `gss-group18-sha512-*`, `gss-group1-sha1-*`, `gss-nistp256-sha256-*`, `gss-nistp384-sha256-*`, `gss-nistp521-sha512-*`, `m383-sha384@libassh.org`, `m511-sha512@libassh.org`.\n - Added 28 new ciphers: `3des-cfb`, `3des-ecb`, `3des-ofb`, `blowfish-cfb`, `blowfish-ecb`, `blowfish-ofb`, `camellia128-cbc@openssh.org`, `camellia128-ctr@openssh.org`, `camellia192-cbc@openssh.org`, `camellia192-ctr@openssh.org`, `camellia256-cbc@openssh.org`, `camellia256-ctr@openssh.org`, `cast128-cfb`, `cast128-ecb`, `cast128-ofb`, `cast128-12-cbc@ssh.com`, `idea-cfb`, `idea-ecb`, `idea-ofb`, `rijndael-cbc@ssh.com`, `seed-ctr@ssh.com`, `serpent128-gcm@libassh.org`, `serpent256-gcm@libassh.org`, `twofish128-gcm@libassh.org`, `twofish256-gcm@libassh.org`, `twofish-cfb`, `twofish-ecb`, `twofish-ofb`\n - Added 5 new MACs: `hmac-sha1-96@openssh.com`, `hmac-sha224@ssh.com`, `hmac-sha256-2@ssh.com`, `hmac-sha384@ssh.com`, `hmac-whirlpool`.\n\n### v2.5.0 (2021-08-26)\n - Fixed crash when running host key tests.\n - Handles server connection failures more gracefully.\n - Now prints JSON with indents when `-jj` is used (useful for debugging).\n - Added MD5 fingerprints to verbose output.\n - Added `-d`/`--debug` option for getting debugging output; credit [Adam Russell](https://github.com/thecliguy).\n - Updated JSON output to include MD5 fingerprints.  Note that this results in a breaking change in the 'fingerprints' dictionary format.\n - Updated OpenSSH 8.1 (and earlier) policies to include `rsa-sha2-512` and `rsa-sha2-256`.\n - Added OpenSSH v8.6 & v8.7 policies.\n - Added 3 new key exchanges: `gss-gex-sha1-eipGX3TCiQSrx573bT1o1Q==`, `gss-group1-sha1-eipGX3TCiQSrx573bT1o1Q==`, and `gss-group14-sha1-eipGX3TCiQSrx573bT1o1Q==`.\n - Added 3 new MACs: `hmac-ripemd160-96`, `AEAD_AES_128_GCM`, and `AEAD_AES_256_GCM`.\n\n### v2.4.0 (2021-02-23)\n - Added multi-threaded scanning support.\n - Added built-in Windows manual page (see `-m`/`--manual`); credit [Adam Russell](https://github.com/thecliguy).\n - Added version check for OpenSSH user enumeration (CVE-2018-15473).\n - Added deprecation note to host key types based on SHA-1.\n - Added extra warnings for SSHv1.\n - Added built-in hardened OpenSSH v8.5 policy.\n - Upgraded warnings to failures for host key types based on SHA-1.\n - Fixed crash when receiving unexpected response during host key test.\n - Fixed hang against older Cisco devices during host key test & gex test.\n - Fixed improper termination while scanning multiple targets when one target returns an error.\n - Dropped support for Python 3.5 (which reached EOL in Sept. 2020).\n - Added 1 new key exchange: `sntrup761x25519-sha512@openssh.com`.\n\n### v2.3.1 (2020-10-28)\n - Now parses public key sizes for `rsa-sha2-256-cert-v01@openssh.com` and `rsa-sha2-512-cert-v01@openssh.com` host key types.\n - Flag `ssh-rsa-cert-v01@openssh.com` as a failure due to SHA-1 hash.\n - Fixed bug in recommendation output which suppressed some algorithms inappropriately.\n - Built-in policies now include CA key requirements (if certificates are in use).\n - Lookup function (`--lookup`) now performs case-insensitive lookups of similar algorithms; credit [Adam Russell](https://github.com/thecliguy).\n - Migrated pre-made policies from external files to internal database.\n - Split single 3,500 line script into many files (by class).\n - Added setup.py support; credit [Ganden Schaffner](https://github.com/gschaffner).\n - Added 1 new cipher: `des-cbc@ssh.com`.\n\n### v2.3.0 (2020-09-27)\n - Added new policy auditing functionality to test adherence to a hardening guide/standard configuration (see `-L`/`--list-policies`, `-M`/`--make-policy` and `-P`/`--policy`).  For an in-depth tutorial, see <https://www.positronsecurity.com/blog/2020-09-27-ssh-policy-configuration-checks-with-ssh-audit/>.\n - Created new man page (see `ssh-audit.1` file).\n - 1024-bit moduli upgraded from warnings to failures.\n - Many Python 2 code clean-ups, testing framework improvements, pylint & flake8 fixes, and mypy type comments; credit [Jürgen Gmach](https://github.com/jugmac00).\n - Added feature to look up algorithms in internal database (see `--lookup`); credit [Adam Russell](https://github.com/thecliguy).\n - Suppress recommendation of token host key types.\n - Added check for use-after-free vulnerability in PuTTY v0.73.\n - Added 11 new host key types: `ssh-rsa1`, `ssh-dss-sha256@ssh.com`, `ssh-gost2001`, `ssh-gost2012-256`, `ssh-gost2012-512`, `spki-sign-rsa`, `ssh-ed448`, `x509v3-ecdsa-sha2-nistp256`, `x509v3-ecdsa-sha2-nistp384`, `x509v3-ecdsa-sha2-nistp521`, `x509v3-rsa2048-sha256`.\n - Added 8 new key exchanges: `diffie-hellman-group1-sha256`, `kexAlgoCurve25519SHA256`, `Curve25519SHA256`, `gss-group14-sha256-`, `gss-group15-sha512-`, `gss-group16-sha512-`, `gss-nistp256-sha256-`, `gss-curve25519-sha256-`.\n - Added 5 new ciphers: `blowfish`, `AEAD_AES_128_GCM`, `AEAD_AES_256_GCM`, `crypticore128@ssh.com`, `seed-cbc@ssh.com`.\n - Added 3 new MACs: `chacha20-poly1305@openssh.com`, `hmac-sha3-224`, `crypticore-mac@ssh.com`.\n\n### v2.2.0 (2020-03-11)\n - Marked host key type `ssh-rsa` as weak due to [practical SHA-1 collisions](https://eprint.iacr.org/2020/014.pdf).\n - Added Windows builds.\n - Added 10 new host key types: `ecdsa-sha2-1.3.132.0.10`, `x509v3-sign-dss`, `x509v3-sign-rsa`, `x509v3-sign-rsa-sha256@ssh.com`, `x509v3-ssh-dss`, `x509v3-ssh-rsa`, `sk-ecdsa-sha2-nistp256-cert-v01@openssh.com`, `sk-ecdsa-sha2-nistp256@openssh.com`, `sk-ssh-ed25519-cert-v01@openssh.com`, and `sk-ssh-ed25519@openssh.com`.\n - Added 18 new key exchanges: `diffie-hellman-group14-sha256@ssh.com`, `diffie-hellman-group15-sha256@ssh.com`, `diffie-hellman-group15-sha384@ssh.com`, `diffie-hellman-group16-sha384@ssh.com`, `diffie-hellman-group16-sha512@ssh.com`, `diffie-hellman-group18-sha512@ssh.com`, `ecdh-sha2-curve25519`, `ecdh-sha2-nistb233`, `ecdh-sha2-nistb409`, `ecdh-sha2-nistk163`, `ecdh-sha2-nistk233`, `ecdh-sha2-nistk283`, `ecdh-sha2-nistk409`, `ecdh-sha2-nistp192`, `ecdh-sha2-nistp224`, `ecdh-sha2-nistt571`, `gss-gex-sha1-`, and `gss-group1-sha1-`.\n - Added 9 new ciphers: `camellia128-cbc`, `camellia128-ctr`, `camellia192-cbc`, `camellia192-ctr`, `camellia256-cbc`, `camellia256-ctr`, `aes128-gcm`, `aes256-gcm`, and `chacha20-poly1305`.\n - Added 2 new MACs: `aes128-gcm` and `aes256-gcm`.\n\n### v2.1.1 (2019-11-26)\n - Added 2 new host key types: `rsa-sha2-256-cert-v01@openssh.com`, `rsa-sha2-512-cert-v01@openssh.com`.\n - Added 2 new ciphers: `des`, `3des`.\n - Added 3 new PuTTY vulnerabilities.\n - During client testing, client IP address is now listed in output.\n\n### v2.1.0 (2019-11-14)\n - Added client software auditing functionality (see `-c` / `--client-audit` option).\n - Added JSON output option (see `-j` / `--json` option; credit [Andreas Jaggi](https://github.com/x-way)).\n - Fixed crash while scanning Solaris Sun_SSH.\n - Added 9 new key exchanges: `gss-group1-sha1-toWM5Slw5Ew8Mqkay+al2g==`, `gss-gex-sha1-toWM5Slw5Ew8Mqkay+al2g==`, `gss-group14-sha1-`, `gss-group14-sha1-toWM5Slw5Ew8Mqkay+al2g==`, `gss-group14-sha256-toWM5Slw5Ew8Mqkay+al2g==`, `gss-group15-sha512-toWM5Slw5Ew8Mqkay+al2g==`, `diffie-hellman-group15-sha256`, `ecdh-sha2-1.3.132.0.10`, `curve448-sha512`.\n - Added 1 new host key type: `ecdsa-sha2-1.3.132.0.10`.\n - Added 4 new ciphers: `idea-cbc`, `serpent128-cbc`, `serpent192-cbc`, `serpent256-cbc`.\n - Added 6 new MACs: `hmac-sha2-256-96-etm@openssh.com`, `hmac-sha2-512-96-etm@openssh.com`, `hmac-ripemd`, `hmac-sha256-96@ssh.com`, `umac-32@openssh.com`, `umac-96@openssh.com`.\n\n### v2.0.0 (2019-08-29)\n - Forked from https://github.com/arthepsy/ssh-audit (development was stalled, and developer went MIA).\n - Added RSA host key length test.\n - Added RSA certificate key length test.\n - Added Diffie-Hellman modulus size test.\n - Now outputs host key fingerprints for RSA and ED25519.\n - Added 5 new key exchanges: `sntrup4591761x25519-sha512@tinyssh.org`, `diffie-hellman-group-exchange-sha256@ssh.com`, `diffie-hellman-group-exchange-sha512@ssh.com`, `diffie-hellman-group16-sha256`, `diffie-hellman-group17-sha512`.\n - Added 3 new encryption algorithms: `des-cbc-ssh1`, `blowfish-ctr`, `twofish-ctr`.\n - Added 10 new MACs: `hmac-sha2-56`, `hmac-sha2-224`, `hmac-sha2-384`, `hmac-sha3-256`, `hmac-sha3-384`, `hmac-sha3-512`, `hmac-sha256`, `hmac-sha256@ssh.com`, `hmac-sha512`, `hmac-512@ssh.com`.\n - Added command line argument (`-t` / `--timeout`) for connection & reading timeouts.\n - Updated CVEs for libssh & Dropbear.\n\n### v1.7.0 (2016-10-26)\n - implement options to allow specify IPv4/IPv6 usage and order of precedence\n - implement option to specify remote port (old behavior kept for compatibility)\n - add colors support for Microsoft Windows via optional colorama dependency\n - fix encoding and decoding issues, add tests, do not crash on encoding errors\n - use mypy-lang for static type checking and verify all code\n\n### v1.6.0 (2016-10-14)\n - implement algorithm recommendations section (based on recognized software)\n - implement full libssh support (version history, algorithms, security, etc)\n - fix SSH-1.99 banner recognition and version comparison functionality\n - do not output empty algorithms (happens for misconfigured servers)\n - make consistent output for Python 3.x versions\n - add a lot more tests (conf, banner, software, SSH1/SSH2, output, etc)\n - use Travis CI to test for multiple Python versions (2.6-3.5, pypy, pypy3)\n\n### v1.5.0 (2016-09-20)\n - create security section for related security information\n - match and output assigned CVE list and security issues for Dropbear SSH\n - implement full SSH1 support with fingerprint information\n - automatically fallback to SSH1 on protocol mismatch\n - add new options to force SSH1 or SSH2 (both allowed by default)\n - parse banner information and convert it to specific software and OS version\n - do not use padding in batch mode\n - several fixes (Cisco sshd, rare hangs, error handling, etc)\n\n### v1.0.20160902\n - implement batch output option\n - implement minimum output level option\n - fix compatibility with Python 2.6\n\n### v1.0.20160812\n - implement SSH version compatibility feature\n - fix wrong mac algorithm warning\n - fix Dropbear SSH version typo\n - parse pre-banner header\n - better errors handling\n\n### v1.0.20160803\n - use OpenSSH 7.3 banner\n - add new key-exchange algorithms\n\n### v1.0.20160207\n - use OpenSSH 7.2 banner\n - additional warnings for OpenSSH 7.2\n - fix OpenSSH 7.0 failure messages\n - add rijndael-cbc failure message from OpenSSH 6.7\n\n### v1.0.20160105\n - multiple additional warnings\n - support for none algorithm\n - better compression handling\n - ensure reading enough data (fixes few Linux SSH)\n\n### v1.0.20151230\n - Dropbear SSH support\n\n### v1.0.20151223\n - initial version"
}
