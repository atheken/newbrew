{
  "name": "multi-git-status",
  "full_name": "multi-git-status",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Show uncommitted, untracked and unpushed changes for multiple Git repos",
  "license": "MIT",
  "homepage": "https://github.com/fboender/multi-git-status",
  "versions": {
    "stable": "2.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/fboender/multi-git-status/archive/refs/tags/2.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d26a71cd2efd80416c28d59632665341bc393d2d5fdde20dd588f959b0faea6a"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/multi-git-status/blobs/sha256:53e83339d5b1ba46e4522cb29684f64fc3ff879c8bc94a0b02436048778a29a7",
          "sha256": "53e83339d5b1ba46e4522cb29684f64fc3ff879c8bc94a0b02436048778a29a7"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/multi-git-status.rb",
  "ruby_source_checksum": {
    "sha256": "1fe48077f713defbbc827cde6c77a2a78b08967d5ffd8dc0411f30b8b974f0e5"
  },
  "date_added": "2021-07-03T14:15:46+00:00",
  "readme": "mgitstatus\n==========\n\nShow uncommitted, untracked and unpushed changes in multiple Git\nrepositories.  Scan for .git dirs up to **DEPTH** directories deep.\nThe default is 2.  If **DEPTH** is 0, the scan is infinitely deep.\n\n![](https://raw.githubusercontent.com/fboender/multi-git-status/master/screenshot.png)\n\nmgitstatus shows:\n\n* **Uncommitted changes** if there are unstaged or uncommitted changes on the\n  checked out branch.\n* **Untracked files** if there are untracked files which are not ignored.\n* **Needs push (BRANCH)** if the branch is tracking a (remote) branch which is\n  behind.\n* **Needs upstream (BRANCH)** if a branch does not have a local or remote\n  upstream branch configured. Changes in the branch may otherwise never be\n  pushed or merged.\n* **Needs pull (BRANCH)** if the branch is tracking a (remote) branch which is\n  ahead. This requires that the local git repo already knows about the remote\n  changes (i.e. you've done a `fetch`), or that you specify the `-f` option.\n  mgitstatus does NOT contact the remote by default.\n* **X stashes** if there are stashes.\n\nSince there are a lot of different states a git repository can be in,\nmgitstatus makes no guarantees that *all* states are taken into account.\n\nmgitstatus can also list dirs that are not a repo, if given the `-w`\nswitch. To ignore certain repos, set the `mgitstatus.ignore` git config flag\nfor that repo to `true`. (See \"usage\" below for an example).\n\n\n# Usage\n\n    Usage: mgitstatus [--version] [-w] [-e] [-f] [--throttle SEC] [-c] [-d/--depth=2] [--flatten] [--no-X] [DIR [DIR]...]\n\n    mgitstatus shows uncommitted, untracked and unpushed changes in multiple Git\n    repositories. By default, mgitstatus scans two directories deep. This can be\n    changed with the -d (--depth) option.  If DEPTH is 0, the scan is infinitely\n    deep.\n\n      --version        Show version\n      -w               Warn about dirs that are not Git repositories\n      -e               Exclude repos that are 'ok'\n      -f               Do a 'git fetch' on each repo (slow for many repos)\n      --throttle SEC   Wait SEC seconds between each 'git fetch' (-f option)\n      -c               Force color output (preserve colors when using pipes)\n      -d, --depth=2    Scan this many directories deep\n      --flatten        Show only one status per line\n\n    You can limit output with the following options:\n\n      --no-push\n      --no-pull\n      --no-upstream\n      --no-uncommitted\n      --no-untracked\n      --no-stashes\n      --no-ok          (same as -e)\n\nThe following example scans all directories under the current dir, with a\ndepth of 2. That means the current dir and all directories directly under it.\n\n    ~/Projects/fboender $ mgitstatus\n    ./mgitstatus: ok\n    ./mdpreview: ok\n    ./snippets: ok\n    ./boxes: ok\n    ./ansible-cmdb: Uncommitted changes Untracked files\n    ./scriptform: Uncommitted changes\n\nFor more examples, see the [manual page](mgitstatus.1.md).\n\n# Installation\n\nmgitstatus requires make.\n\nThe following steps will install mgitstatus:\n\n    # Clone the repo\n    $ git clone https://github.com/fboender/multi-git-status.git\n    $ cd multi-git-status\n\n    # Install globally (all users)\n    $ sudo make install\n\n    # Install locally (only your user)\n    $ PREFIX=~/.local make install\n\n# License\n\nCopyright 2016-2022, Ferry Boender (et al).\n\nLicensed under the MIT license. For more information, see the LICENSE.txt file."
}
