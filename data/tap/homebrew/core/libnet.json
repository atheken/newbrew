{
  "name": "libnet",
  "full_name": "libnet",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "C library for creating IP packets",
  "license": "BSD-2-Clause",
  "homepage": "https://github.com/libnet/libnet",
  "versions": {
    "stable": "1.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/libnet/libnet/releases/download/v1.2/libnet-1.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "caa4868157d9e5f32e9c7eac9461efeff30cb28357f7f6bf07e73933fb4edaa7"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libnet/blobs/sha256:a723fce072aa1d71f2d9f3af1fe647e40348ae679705a902e6fe884c6650d3d0",
          "sha256": "a723fce072aa1d71f2d9f3af1fe647e40348ae679705a902e6fe884c6650d3d0"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libnet/blobs/sha256:e35635f157e1fa140f454b451ef60d5dadc60f0f7513fbcd82399193d4ab9155",
          "sha256": "e35635f157e1fa140f454b451ef60d5dadc60f0f7513fbcd82399193d4ab9155"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libnet/blobs/sha256:bc8839eea92ce445c790f503ec9342bbc254fba52751a3ac0ed90b5d13bed2f6",
          "sha256": "bc8839eea92ce445c790f503ec9342bbc254fba52751a3ac0ed90b5d13bed2f6"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libnet/blobs/sha256:938743e30a5f50726f54c9b2cbcd1e72e6897c4964259ee692dab300d9628738",
          "sha256": "938743e30a5f50726f54c9b2cbcd1e72e6897c4964259ee692dab300d9628738"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libnet/blobs/sha256:8fbd2bdf18193db957bf4312cf8b3d90ded8a141831430350a9e60f13d421e40",
          "sha256": "8fbd2bdf18193db957bf4312cf8b3d90ded8a141831430350a9e60f13d421e40"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libnet/blobs/sha256:9ecd86c12061ee31384cc784031ee4b0fb05e3ae79ff6c4c6b3f2e61690e8ad4",
          "sha256": "9ecd86c12061ee31384cc784031ee4b0fb05e3ae79ff6c4c6b3f2e61690e8ad4"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libnet/blobs/sha256:0ecfbf2539a6e051ca8aa5962c0ee7cb57ffd173cf654b0eec8152c1a3fbf133",
          "sha256": "0ecfbf2539a6e051ca8aa5962c0ee7cb57ffd173cf654b0eec8152c1a3fbf133"
        },
        "mojave": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libnet/blobs/sha256:cadba638a54f4d5646a3510439ab89317ed23df3c45b12704b78065bb127fbc4",
          "sha256": "cadba638a54f4d5646a3510439ab89317ed23df3c45b12704b78065bb127fbc4"
        },
        "high_sierra": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libnet/blobs/sha256:44e7b11e8f900f9d6f8e0d1a5deed99c46078dd2dbc997937f713ce5a1ac0f38",
          "sha256": "44e7b11e8f900f9d6f8e0d1a5deed99c46078dd2dbc997937f713ce5a1ac0f38"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libnet/blobs/sha256:755c46e11346388df5a8a3e2f50bf7bb449abfc889abfc561a1784e5d17c8b97",
          "sha256": "755c46e11346388df5a8a3e2f50bf7bb449abfc889abfc561a1784e5d17c8b97"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "doxygen"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/libnet.rb",
  "ruby_source_checksum": {
    "sha256": "c4a0d1b53b9f9cb245f0d276e6486e342850ec936f64722e9a92edb65cfff50b"
  },
  "date_added": "2009-12-22T02:15:17+00:00",
  "readme": "[![1b][]][1] [![2b][]][2] [![3b][]][3] [![CodeDocs Status][]][CodeDocs] <img align=\"right\" src=\"doc/libnet.gif\">\n\nPacket Construction and Injection\n=================================\n\nLibnet is an API to help with the construction and injection of network\npackets.  It provides a portable framework for low-level network packet\nwriting and handling (use libnet in conjunction with libpcap and you can\nwrite some really cool stuff).  Libnet includes packet creation at the\nIP layer and at the link layer as well as a host of supplementary and\ncomplementary functionality.\n\nLibnet is very handy with which to write network tools and network test\ncode.  Some projects, available in Debian/Ubuntu and OpenBSD, using\nlibnet are:\n\n- [arping](https://github.com/ThomasHabets/arping)\n- [ettercap](https://www.ettercap-project.org/)\n- [ipguard](http://ipguard.deep.perm.ru/)\n- [isic](http://isic.sourceforge.net/)\n- [nemesis](https://github.com/libnet/nemesis/)\n- [packit](http://packetfactory.openwall.net/projects/packit/)\n- [tcptraceroute](https://web.archive.org/web/20130424094134/http://michael.toren.net/code/tcptraceroute/)\n- [yersinia](https://web.archive.org/web/20180522141004/http://www.yersinia.net/)\n\n> **NOTE:** Legacy code written for *libnet-1.0.x* is unfortunately\n>           **incompatible** with *libnet-1.1.x* and later.  \n>           See the [Migration Guide](doc/MIGRATION.md) for porting help.\n\n\nUsing -lnet\n-----------\n\nLibnet is installed as a library and a set of include files.  The main\ninclude file to use in your program is:\n\n    #include <libnet.h>\n\nTo get the correct search paths to both the header and library files,\nuse the standard `pkg-config` tool (old `libnet-config` is deprecated):\n\n    $ pkg-config --libs --static --cflags libnet\n    -I/usr/local/include -L/usr/local/lib -lnet\n\nThe prefix path `/usr/local/` shown here is only the default.  Use the\n`configure` script to select a different prefix when installing libnet.\n\nFor GNU autotools based projects, use the following in `configure.ac`:\n\n    # Check for required libraries\n    PKG_CHECK_MODULES([libnet], [libnet >= 1.2])\n\nand in your `Makefile.am`:\n\n    proggy_CFLAGS = $(libnet_CFLAGS)\n    proggy_LDADD  = $(libnet_LIBS)\n\n> Online docs available at <https://codedocs.xyz/libnet/libnet/>.  See\n> the man page and [sample test code](sample/) for more information.\n\n\nBuilding\n--------\n\nFirst download the [latest release][] from GitHub.  Libnet employs the\n[GNU configure and build system][autotools].  The release tarballs and\nzip files ship with a pre-built `configure` script:\n\n    $ tar xf libnet-x.y.z.tar.gz\n    $ cd libnet-x.y.z/\n    $ ./configure && make\n    $ sudo make install\n\nTo list available options, type <kbd>./configure --help</kbd>\n\n### Building from GIT/GitHub\n\nWhen building from GIT, use <kbd>./autogen.sh</kbd> to generate the\n`configure` script.  For this you need the full suite of the GNU\nautotools: autoconf (>=2.69), automake (>=1.14), libtool (>=2.4.2).\n\nHow to install the dependencies varies by system, but on many Debian derived\nsystems, `apt` can be used:\n\n    $ sudo apt install autoconf automake libtool\n    $ ./autogen.sh\n    $ ./configure && make\n    $ sudo make install\n\n\n### Using Conan\n\nLibnet is available on [Conan Center](https://conan.io/center/libnet).  To use,\nadd `libnet/1.2` to your `conanfile.txt`\n\n### Building with Docker\n\nFirst build the dev. contrainer:\n\n    $ cd .devcontainer\n    $ docker build -t libnet-builder .\n\nThen compile libnet with docker:\n\n    $ cd ..\n    $ docker run -it --rm -v $(pwd):$(pwd) --workdir=$(pwd) libnet-builder\n    $ ./autogen.sh\n    $ ./configure\n    $ make\n\n\n### Running Unit Tests with CMocka\n\nRunning tests in the dev. container (above):\n\n    $ ./autogen.sh\n    $ ./configure --enable-tests\n    $ make\n    $ sudo ./tests/libnet_unit_tests\n\nApproximate output:\n\n    $ ./tests/libnet_unit_tests\n    [==========] Running 1 test(s).\n    [ RUN      ] test_libnet_build_ethernet\n    [       OK ] test_libnet_build_ethernet\n    [==========] 1 test(s) run.\n    [  PASSED  ] 1 test(s).\n\n### Building the Documentation\n\nTo build the documentation (optional) you need doxygen and pod2man:\n\n    $ sudo apt install doxygen\n    $ sudo apt install pod2man || sudo apt install perl\n\nFor neat graphics in the HTML documentation, also install graphviz.\nThere is also a PDF version of the docs, to build that you need quite a\nfew more packages:\n\n    $ sudo apt install texlive-extra-utils texlive-latex-extra \\\n                       texlive-fonts-recommended latex-xcolor  \\\n                       texlive-font-utils\n\nFor Microsoft CHM docs you need the HTML Help Workshop, which is part\nof Visual Studio: http://go.microsoft.com/fwlink/p/?linkid=154968, on\nUNIX and GNU/Linux systems, see `chmcmd`, which is available in the\n[FreePascal](http://www.freepascal.org/) suite:\n\n    $ sudo apt install fp-utils-3.0.4\n\n\nOrigin & References\n-------------------\n\nLibnet is widely used, but had been unmaintained for a long time and its\nauthor unreachable.  This version was forked from the 1.1.3 release\ncandidate from [packetfactory.net][origin], bug fixed, developed, and\nre-released.\n\nUse GitHub issues and pull request feature for questions and patches:\n\n  http://github.com/libnet/libnet\n\nSome old docs are available at:\n\n  http://packetfactory.openwall.net/projects/libnet/index.html\n\n-------------------------------------------------------------------------\n- v1.1 (c) 1998 - 2004 Mike D. Schiffman <mike@infonexus.com>  \n  http://www.packetfactory.net/libnet\n- v1.1.3 and later (c) 2009 - 2013 Sam Roberts <vieuxtech@gmail.com>  \n  http://github.com/libnet/libnet\n-------------------------------------------------------------------------\n\n[latest release]:  https://github.com/libnet/libnet/releases\n[autotools]:       https://autotools.io/\n[origin]:          http://packetfactory.openwall.net/projects/libnet/\n[1]:               https://github.com/libnet/libnet/actions/workflows/build.yml/\n[1b]:              https://github.com/libnet/libnet/actions/workflows/build.yml/badge.svg\n[2]:               https://github.com/libnet/libnet/actions/workflows/build-freebsd.yml/\n[2b]:              https://github.com/libnet/libnet/actions/workflows/build-freebsd.yml/badge.svg\n[3]:               https://github.com/libnet/libnet/actions/workflows/build-windows.yml/\n[3b]:              https://github.com/libnet/libnet/actions/workflows/build-windows.yml/badge.svg\n[CodeDocs]:        https://codedocs.xyz/libnet/libnet/\n[CodeDocs Status]: https://codedocs.xyz/libnet/libnet.svg"
}
