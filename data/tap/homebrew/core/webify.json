{
  "name": "webify",
  "full_name": "webify",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Wrapper for shell commands as web services",
  "license": "MIT",
  "homepage": "https://github.com/beefsack/webify",
  "versions": {
    "stable": "1.5.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/beefsack/webify/archive/v1.5.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "66805a4aef4ed0e9c49e711efc038e2cd4e74aa2dc179ea93b31dc3aa76e6d7b"
    },
    "head": {
      "url": "https://github.com/beefsack/webify.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/webify/blobs/sha256:4eada7fc709a5269b78b9f1c002a74e192be12631223a288be54e3fb64e0bbe6",
          "sha256": "4eada7fc709a5269b78b9f1c002a74e192be12631223a288be54e3fb64e0bbe6"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/webify/blobs/sha256:9a80b61c908b93e32695c8aa4cd4a3a1bfba81364cd8db7dff8dc5d46792240b",
          "sha256": "9a80b61c908b93e32695c8aa4cd4a3a1bfba81364cd8db7dff8dc5d46792240b"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/webify/blobs/sha256:2e846193c20d268355845e6d7e8e05dfc6f505749f6560d5ea6b4c8b1e4daf0f",
          "sha256": "2e846193c20d268355845e6d7e8e05dfc6f505749f6560d5ea6b4c8b1e4daf0f"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/webify/blobs/sha256:99d3f367eb9e00999b733e1aff3ab1d8000b4e36885a5e74ca1faf44e96274b8",
          "sha256": "99d3f367eb9e00999b733e1aff3ab1d8000b4e36885a5e74ca1faf44e96274b8"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/webify/blobs/sha256:fa86b0d119e772525b310e2074115745dfcd4791ab9a8401d43674b5d7d09b43",
          "sha256": "fa86b0d119e772525b310e2074115745dfcd4791ab9a8401d43674b5d7d09b43"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/webify/blobs/sha256:284df018b49ddc0c2a3b8e0800c1997abebee41d198edbd7d725be2f88a8c5e4",
          "sha256": "284df018b49ddc0c2a3b8e0800c1997abebee41d198edbd7d725be2f88a8c5e4"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/webify/blobs/sha256:7b6543358b1c92e8e8cc71584ed52802a039c9327edc839dcc75216fbd23558c",
          "sha256": "7b6543358b1c92e8e8cc71584ed52802a039c9327edc839dcc75216fbd23558c"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/webify/blobs/sha256:8a58b27bcb9d6f9cd611b8f7dfb6192f617854cfcaf8638b388f6dd88ec40f70",
          "sha256": "8a58b27bcb9d6f9cd611b8f7dfb6192f617854cfcaf8638b388f6dd88ec40f70"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/webify/blobs/sha256:9701f9952fb05880c48c5ca26d14807cf324c2210d4b45d0fb5408243d8d76cc",
          "sha256": "9701f9952fb05880c48c5ca26d14807cf324c2210d4b45d0fb5408243d8d76cc"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/webify/blobs/sha256:9bfcea38ac0326979bfc1c189dd9bf3c19437a5d92c8cade9a41f3c1fe976d83",
          "sha256": "9bfcea38ac0326979bfc1c189dd9bf3c19437a5d92c8cade9a41f3c1fe976d83"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/webify.rb",
  "ruby_source_checksum": {
    "sha256": "3c204fddaba37d73404a8ce40b6fc8cd57e05cd3c0b916e71d44029d63b7bf58"
  },
  "date_added": "2020-09-22T22:36:35+00:00",
  "readme": "<p align=\"center\"><img src=\"https://i.imgur.com/I2HvDxv.png\"></p>\n<h1 align=\"center\">webify</h1>\n<p align=\"center\"><b>Turn functions and commands into web services</b></p>\n<p align=\"center\">\n  <a href=\"https://github.com/beefsack/webify/actions\"><img src=\"https://github.com/beefsack/webify/workflows/build/badge.svg\" alt=\"Build Status\"></a>\n  <a href=\"https://goreportcard.com/report/github.com/beefsack/webify\"><img src=\"https://goreportcard.com/badge/github.com/beefsack/webify\" alt=\"Go Report Card\"></a>\n  <a href=\"https://opensource.org/licenses/MIT\"><img src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" alt=\"MIT License\"></a>\n</p>\n<p align=\"center\"><img src=\"https://i.imgur.com/OipBB3v.gif\"></p>\n\nFor a real world example, see [turning a Python function into a web\nservice](examples/python-function).\n\n## Overview\n\n`webify` is a very basic CGI server which forwards all requests to a single\nscript. A design goal is to be as zero-config as possible.\n\n`webify` invokes your script and writes the request body to your process'\nstdin. Stdout is then passed back to the client as the HTTP response body.\n\nIf your script returns a non-zero exit code, the HTTP response status code will\nbe 500.\n\n## Installation\n\n`webify` is available from the [project's releases page](https://github.com/beefsack/webify/releases).\n\nOn macOS, it can also be installed via [MacPorts](https://ports.macports.org/port/py-boltons/summary):\n\n```bash\nsudo port install webify\n```\n\n## Usage\n\n```bash\n# Make a web service out of `wc` to count the characters in the request body.\n$ webify wc -c\n2020/08/25 12:42:32 listening on :8080, proxying to wc -c\n\n...\n\n$ curl -d 'This is a really long sentence' http://localhost:8080\n30\n```\n\n### Official Docker image\n\nThe official Docker image is [beefsack/webify](https://hub.docker.com/r/beefsack/webify).\n\nIt can be configured using the following environment variables:\n\n* `ADDR` - the address to listen on inside the container, defaults to `:80`\n* `SCRIPT` - the command to execute, defaults to `/script`\n\n#### Mounting script and running official image\n\n```\n$ docker run -it --rm -p 8080:80 -v /path/to/my/script:/script beefsack/webify:latest\n2020/08/25 04:27:46 listening on :80, proxying to /script\n\n...\n\n$ curl -d 'Some data' http://localhost:8080\n```\n\n#### Building a new image using official image as base\n\nCreate a `Dockerfile` like the following:\n\n```\nFROM beefsack/webify:latest\nCOPY myscript /script\n```\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)"
}
