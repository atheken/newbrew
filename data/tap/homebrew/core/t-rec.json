{
  "name": "t-rec",
  "full_name": "t-rec",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Blazingly fast terminal recorder that generates animated gif images for the web",
  "license": "GPL-3.0-only",
  "homepage": "https://github.com/sassman/t-rec-rs",
  "versions": {
    "stable": "0.7.6",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/sassman/t-rec-rs/archive/v0.7.6.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "a261104e33d6f60a8f9fe51c2339b79875ddb5ff5b9e7de68e7e52f9d25bf19e"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/t-rec/blobs/sha256:f66c613c2713d64447c565f01e31ac69153ebf9dcefb3c3292fa5ec92c7b96fc",
          "sha256": "f66c613c2713d64447c565f01e31ac69153ebf9dcefb3c3292fa5ec92c7b96fc"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/t-rec/blobs/sha256:10e8931e0466e77574f5528464d94d78fefa4a303219341605430c0cd992441c",
          "sha256": "10e8931e0466e77574f5528464d94d78fefa4a303219341605430c0cd992441c"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/t-rec/blobs/sha256:bedf1fd21666f526ffa3aad1196c3b7847b17734af07c984affcd2d20646ba16",
          "sha256": "bedf1fd21666f526ffa3aad1196c3b7847b17734af07c984affcd2d20646ba16"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/t-rec/blobs/sha256:b2d905a57f708846827719505b1a6c7e43f45a0e2a1e0b4112039288b64d8194",
          "sha256": "b2d905a57f708846827719505b1a6c7e43f45a0e2a1e0b4112039288b64d8194"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/t-rec/blobs/sha256:52275aef2850a0cac76c8fb91ce392bd29b6c494312b7f563896922bd8c78a8c",
          "sha256": "52275aef2850a0cac76c8fb91ce392bd29b6c494312b7f563896922bd8c78a8c"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/t-rec/blobs/sha256:a1ea4ff9e0fd2f102ff606a9de2f7a851f51d518cd36cd70192fadf8d0ad2680",
          "sha256": "a1ea4ff9e0fd2f102ff606a9de2f7a851f51d518cd36cd70192fadf8d0ad2680"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/t-rec/blobs/sha256:3d3e2cb3b655b70016073b173db82dc545abb140388880ac0ae8c205c0732a1b",
          "sha256": "3d3e2cb3b655b70016073b173db82dc545abb140388880ac0ae8c205c0732a1b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [
    "imagemagick"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/t-rec.rb",
  "ruby_source_checksum": {
    "sha256": "61c6705e15c723ce34ddcf0b5c07bcb9ba03578a6b5bf4414313a2bdbf5d0a9b"
  },
  "date_added": "2020-11-30T20:31:44+00:00",
  "readme": "<div align=\"center\">\n <img src=\"https://github.com/sassman/t-rec-rs/blob/main/resources/logo.png?raw=true\" width=\"250\" height=\"250\">\n <h1><strong>t-rec: Terminal Recorder</strong></h1>\n\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n[![crates.io](https://img.shields.io/crates/v/t-rec.svg)](https://crates.io/crates/t-rec)\n[![dependency status](https://deps.rs/repo/github/sassman/t-rec-rs/status.svg)](https://deps.rs/repo/github/sassman/t-rec-rs)\n[![Build Status](https://github.com/sassman/t-rec-rs/workflows/Build/badge.svg)](https://github.com/sassman/t-rec-rs/actions?query=branch%3Amain+workflow%3ABuild+)\n[![LOC](https://tokei.rs/b1/github/sassman/t-rec-rs?category=code)](https://github.com/Aaronepower/tokei)\n\nBlazingly fast terminal recorder that generates animated gif images for the web written in rust.\n\n</div>\n\n\n# Demo\n\n![demo](./docs/demo.gif)\n\n## Features\n- Screenshotting your terminal with 4 frames per second (every 250ms)\n- Generates high quality small sized animated gif images or mp4 videos\n- **Build-In idle frames detection and optimization** (for super fluid presentations)\n- Applies (can be disabled) border decor effects like drop shadow\n- Runs on MacOS, Linux and NetBSD\n- Uses native efficient APIs\n- Runs without any cloud service and entirely offline\n- No issues with terminal sizes larger than 80x24\n- No issues with fonts or colors\n- No issues with curses based programs\n- No issues with escape sequences\n- No record and replay - just one simple command to rule them all\n- Can record every arbitrary window you want (e.g. browser, ide)\n- Written in Rust ðŸ¦€\n\n## Installation on MacOS\n### with homebrew\n```sh\nbrew install t-rec\n```\n\n### with macports\n```sh\nsudo port selfupdate\nsudo port install t-rec\n```\n\n### with cargo\n**NOTE** `t-rec` depends on `imagemagick`.\n```sh\nbrew install imagemagick\ncargo install -f t-rec \n```\n**NOTE** `-f` just makes sure the latest version is installed\n\n## Installation on Linux\n### as .deb\n\n```sh\nsudo apt-get install imagemagick\nwget https://github.com/sassman/t-rec-rs/releases/download/v0.5.0/t-rec_0.5.0_amd64.deb\nsudo dpkg -i t-rec_0.5.0_amd64.deb\n```\n\n### as snap\n\n[![Get it from the Snap Store](https://snapcraft.io/static/images/badges/en/snap-store-black.svg)](https://snapcraft.io/t-rec)\n\n- installation [for Linux Mint](https://snapcraft.io/install/t-rec/mint)\n- installation [for Arch Linux](https://snapcraft.io/install/t-rec/arch)\n\n*TL;DR:*\n```sh\nsudo snap install t-rec --classic\n/snap/bin/t-rec --version\nt-rec 0.4.3\n```\n\n### from AUR\n\n`t-rec` can be installed from available [AUR packages](https://aur.archlinux.org/packages/?O=0&SeB=nd&K=Blazingly+fast+terminal+recorder&outdated=&SB=n&SO=a&PP=50&do_Search=Go) using an [AUR helper](https://wiki.archlinux.org/index.php/AUR_helpers). For example,\n\n```\nparu -S t-rec\n```\n\nIf you prefer, you can clone the [AUR packages](https://aur.archlinux.org/packages/?O=0&SeB=nd&K=Blazingly+fast+terminal+recorder&outdated=&SB=n&SO=a&PP=50&do_Search=Go) and then compile them with [makepkg](https://wiki.archlinux.org/index.php/Makepkg). For example,\n\n```\ngit clone https://aur.archlinux.org/t-rec.git\ncd t-rec\nmakepkg -si\n```\n\n### Installation on NetBSD\n```\npkgin install t-rec\n```\n\nOr, if you prefer to build from source,\n```\ncd /usr/pkgsrc/multimedia/t-rec\nmake install\n```\n\n### with cargo\n```sh\nsudo apt-get install libx11-dev imagemagick\ncargo install -f t-rec\n```\n\n| tested on those distros |\n|-------------------------|\n| ubuntu 20.10 on GNOME |\n| ![demo-ubuntu](./docs/demo-ubuntu.gif) |\n| ubuntu 20.10 on i3wm | \n| ![demo-ubuntu-i3wm](./docs/demo-ubuntu-i3wm.gif) |\n| linux mint 20 on cinnamon | \n| ![demo-mint](./docs/demo-mint.gif) |\n| ArcoLinux 5.4 on Xfwm4 | \n| ![demo-arco](./docs/demo-arco-xfwm4.gif) |\n\n## Usage\n```sh\nt-rec\n```\n\nor with specifying a different program to launch\n\n```sh\nt-rec /bin/sh\n```\n\n### Full Options\n\n```sh\nt-rec 0.7.0\nSven Assmann <sven.assmann.it@gmail.com>\nBlazingly fast terminal recorder that generates animated gif images for the web written in rust.\n\nUSAGE:\n    t-rec [OPTIONS] [shell or program to launch]\n\nARGS:\n    <shell or program to launch>    If you want to start a different program than $SHELL you can\n                                    pass it here. For example '/bin/sh'\n\nOPTIONS:\n    -b, --bg <bg>                     Background color when decors are used [default: transparent]\n                                      [possible values: white, black, transparent]\n    -d, --decor <decor>               Decorates the animation with certain, mostly border effects\n                                      [default: none] [possible values: shadow, none]\n    -e, --end-pause <s | ms | m>      to specify the pause time at the end of the animation, that\n                                      time the gif will show the last frame\n    -h, --help                        Print help information\n    -l, --ls-win                      If you want to see a list of windows available for recording\n                                      by their id, you can set env var 'WINDOWID' or `--win-id` to\n                                      record this specific window only\n    -m, --video                       Generates additionally to the gif a mp4 video of the recording\n    -M, --video-only                  Generates only a mp4 video and not gif\n    -n, --natural                     If you want a very natural typing experience and disable the\n                                      idle detection and sampling optimization\n    -q, --quiet                       Quiet mode, suppresses the banner: 'Press Ctrl+D to end\n                                      recording'\n    -s, --start-pause <s | ms | m>    to specify the pause time at the start of the animation, that\n                                      time the gif will show the first frame\n    -v, --verbose                     Enable verbose insights for the curious\n    -V, --version                     Print version information\n    -w, --win-id <win-id>             Window Id (see --ls-win) that should be captured, instead of\n                                      the current terminal\n```\n\n### Disable idle detection & optimization\n\nIf you are not happy with the idle detection and optimization, you can disable it with the `-n` or `--natural` parameter.\nBy doing so, you would get the very natural timeline of typing and recording as you do it. \nIn this case there will be no optimizations performed.\n\n### Enable shadow border decor\n\nIn order to enable the drop shadow border decor you have to pass `-d shadow` as an argument. If you only want to change \nthe color of the background you can use `-b black` for example to have a black background.\n\n### Record Arbitrary windows\n\nYou can record not only the terminal but also every other window. There 3 ways to do so:\n\n1) use `-w | --win-id` argument to name the Window Id that should be recorded\n```sh\nt-rec --ls-win | grep -i calc\nCalculator | 45007\n\nt-rec -w 45007 \n```\n\n2) use the env var `TERM_PROGRAM` like this:\n- for example lets record a window 'Google Chrome'\n- make sure chrome is running and visible on screen\n```sh\nTERM_PROGRAM=\"google chrome\" t-rec\n\nFrame cache dir: \"/var/folders/m8/084p1v0x4770rpwpkrgl5b6h0000gn/T/trec-74728.rUxBx3ohGiQ2\"\nRecording window: \"Google Chrome 2\"\nPress Ctrl+D to end recording\n\n```\n\nthis is how it looks then:\n![demo-chrome](./docs/demo-chrome.gif)\n\n3) use the env var `WINDOWID` like this:\n- for example let's record a `VSCode` window\n- figure out the window id program, and make it \n- make sure the window is visible on screen\n- set the variable and run `t-rec`\n\n```sh\nt-rec --ls-win | grep -i code\nCode | 27600\n\n# set the WINDOWID variable and run t-rec\nWINDOWID=27600 t-rec\n\nFrame cache dir: \"/var/folders/m8/084p1v0x4770rpwpkrgl5b6h0000gn/T/trec-77862.BMYiHNRWqv9Y\"\nPress Ctrl+D to end recording\n\n```\n\nthis is how it looks then:\n![demo-vscode](./docs/demo-vscode.gif)\n\n## Contribute\n\nTo contribute to t-rec you can either checkout existing issues [labeled with `good first issue`][4] or [open a new issue][5] and describe your problem.\nAlso every PR is welcome. Support for Linux and Windows needs to be done.\n\n## On the web & social media\n\n- t-rec [on producthunt.com](https://www.producthunt.com/posts/t-rec)\n- t-rec [on hacker news](https://news.ycombinator.com/item?id=24742378)\n- t-rec [on reddit](https://www.reddit.com/r/rust/comments/j8tqs9/trec_a_blazingly_fast_terminal_recorder_that/)\n\n## License\n\n- **[GNU GPL v3 license](https://www.gnu.org/licenses/gpl-3.0)**\n- Copyright 2020 - 2021 Â© [Sven Assmann][2].\n\n[2]: https://www.d34dl0ck.me\n[4]: https://github.com/sassman/t-rec-rs/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22\n[5]: https://github.com/sassman/t-rec-rs/issues/new/choose"
}
