{
  "name": "docui",
  "full_name": "docui",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "TUI Client for Docker",
  "license": "MIT",
  "homepage": "https://github.com/skanehira/docui",
  "versions": {
    "stable": "2.0.4",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/skanehira/docui/archive/2.0.4.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "9af1a720aa7c68bea4469f1d7eea81ccb68e15a47ccfc9c83011a06d696ad30d"
    },
    "head": {
      "url": "https://github.com/skanehira/docui.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/docui/blobs/sha256:de82677b66e326d6af704b75aa714a5da131360dd5e4ddaed8c4db3c960d6351",
          "sha256": "de82677b66e326d6af704b75aa714a5da131360dd5e4ddaed8c4db3c960d6351"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/docui/blobs/sha256:b051dececee7d5ec01e3b2a2c235dfc919bdca2a856c1235aacb0ff99fc4a06c",
          "sha256": "b051dececee7d5ec01e3b2a2c235dfc919bdca2a856c1235aacb0ff99fc4a06c"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/docui/blobs/sha256:30638ca04ad60f4c2406405d151dad2c5854a6b7404dcb1d5be3917a93efcd14",
          "sha256": "30638ca04ad60f4c2406405d151dad2c5854a6b7404dcb1d5be3917a93efcd14"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/docui/blobs/sha256:3c319302fe8034da24518213725028fe4c0c0473f1e7f43e5a0750850e46142a",
          "sha256": "3c319302fe8034da24518213725028fe4c0c0473f1e7f43e5a0750850e46142a"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/docui/blobs/sha256:01b2add3c6c9fe6d6c732dd06ef244a891396db8701fef01b963f0c3c4595e65",
          "sha256": "01b2add3c6c9fe6d6c732dd06ef244a891396db8701fef01b963f0c3c4595e65"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/docui/blobs/sha256:17950b11df021726ebb04675ffc92c096e94ab213c32b803888ab3c16e360f60",
          "sha256": "17950b11df021726ebb04675ffc92c096e94ab213c32b803888ab3c16e360f60"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/docui/blobs/sha256:85812a1ae880fa35f8f03fb7632d6e1cae1288c673c02d5ef41763a998e1ce42",
          "sha256": "85812a1ae880fa35f8f03fb7632d6e1cae1288c673c02d5ef41763a998e1ce42"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/docui/blobs/sha256:da3b5097f43474a93b7fd5d9cdd27c351b4c86214041369a7e3c41690574fe45",
          "sha256": "da3b5097f43474a93b7fd5d9cdd27c351b4c86214041369a7e3c41690574fe45"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/docui/blobs/sha256:7b07a4c7b3432386b5708ec2a9fbc319fd30d1abd12ec03d802a2e2a49bfaf7b",
          "sha256": "7b07a4c7b3432386b5708ec2a9fbc319fd30d1abd12ec03d802a2e2a49bfaf7b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go@1.17"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": true,
  "disable_date": "2023-06-19",
  "disable_reason": "repo_archived",
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/docui.rb",
  "ruby_source_checksum": {
    "sha256": "8d23631b73d752b14f4f0f93127cbbe27ec3db7f5d875a6d670bdd66adae4e18"
  },
  "date_added": "2020-12-06T16:57:19+00:00",
  "readme": "# docui - TUI Client for Docker Written in Go\n\n[![Go Report Card](https://goreportcard.com/badge/github.com/skanehira/docui?)](https://goreportcard.com/report/github.com/skanehira/docui)\n[![CircleCI](https://img.shields.io/circleci/project/github/skanehira/docui.svg?style=flat-square)](https://goreportcard.com/report/github.com/skanehira/docui)\n[![CircleCI](https://img.shields.io/github/release/skanehira/docui.svg?style=flat-square)](https://github.com/skanehira/docui/releases)\n![GitHub All Releases](https://img.shields.io/github/downloads/skanehira/docui/total.svg?style=flat)\n![GitHub commits](https://img.shields.io/github/commits-since/skanehira/docui/1.0.0.svg?style=flat-square)\n\n# This repository is no longer maintenance. Please use [lazydocker](https://github.com/jesseduffield/lazydocker) instead.\n\n## About docui\n![demo](https://github.com/skanehira/docui/blob/images/images/docui.v2-demo.gif?raw=true)\n\ndocui is a TUI Client for Docker.\nIt can do the following:\n\n- image\n    - search/pull/remove\n    - save/import/load\n    - inspect/filtering\n\n- container\n    - create/remove\n    - start/stop/kill\n    - export/commit\n    - inspect/rename/filtering\n    - exec cmd\n\n- volume\n    - create/remove\n    - inspect/filtering\n\n- network\n    - remove\n    - inspect/filtering\n\n## Supported OSes\n- Mac\n- Linux\n\n## Required Tools\n- Go Ver.1.11.4~\n- Docker Engine Ver.18.06.1~\n- Git\n\n## Installation\n### Environment variables\nThe following environment variables must be set.\n\n```\nexport LC_CTYPE=en_US.UTF-8\nexport TERM=xterm-256color\n```\n\n### From Source\n\nIf you have not installed go and set GOPATH/GOBIN,\nyou must install and set env before installing docui.\n\nThis project uses [Go Modules](https://github.com/golang/go/wiki/Modules) for dependencies introduced in Go 1.11.\n\nUse go get or git clone:\n\n```\n$ go get -d github.com/skanehira/docui\n$ cd $GOPATH/src/github.com/skanehira/docui\n$ GO111MODULE=on go install\n```\n\n```\n$ git clone https://github.com/skanehira/docui.git\n$ cd docui/\n$ GO111MODULE=on go install\n```\n\nMake sure your PATH includes the $GOPATH/bin directory so your commands can be easily used:\n\n```sh\nexport PATH=$PATH:$GOPATH/bin\n```\n\n### Homebrew\n\n```sh\n$ brew install docui\n```\n\n### Nix\n\ndocui is available on nixpkgs unstable channel:\n\n```sh\n$ nix-env -i docui\n```\n\n## Update\n\nUse git pull:\n\n```sh\n$ git pull\n$ GO111MODULE=on go install\n```\n\n## Log file\n\nCheck [wiki](https://github.com/skanehira/docui/blob/master/wiki.md).\n\n## Use on Docker\n```\n$ docker run --rm -itv /var/run/docker.sock:/var/run/docker.sock skanehira/docui\n```\n\n## Build Docker Image\n```sh\n$ make docker-build\n```\n\n## Keybindings\n| panel            | operation              | key                                                |\n|------------------|------------------------|----------------------------------------------------|\n| all              | change panel           | <kbd>Tab</kbd> / <kbd>Shift</kbd> + <kbd>Tab</kbd> |\n| all              | quit                   | <kbd>q</kbd>                                       |\n| list panels      | next entry             | <kbd>j</kbd> / <kbd>↓</kbd>                        |\n| list panels      | previous entry         | <kbd>k</kbd> / <kbd>↑</kbd>                        |\n| list panels      | next page              | <kbd>Ctrl</kbd> / <kbd>f</kbd>                     |\n| list panels      | previous page          | <kbd>Ctrl</kbd> / <kbd>b</kbd>                     |\n| list panels      | scroll to top          | <kbd>g</kbd>                                       |\n| list panels      | scroll to bottom       | <kbd>G</kbd>                                       |\n| image list       | pull image             | <kbd>p</kbd>                                       |\n| image list       | search images          | <kbd>f</kbd>                                       |\n| image list       | remove image           | <kbd>d</kbd>                                       |\n| image list       | create container       | <kbd>c</kbd>                                       |\n| image list       | inspect image          | <kbd>Enter</kbd>                                   |\n| image list       | save image             | <kbd>s</kbd>                                       |\n| image list       | import image           | <kbd>i</kbd>                                       |\n| image list       | load image             | <kbd>Ctrl</kbd> + <kbd>l</kbd>                     |\n| image list       | refresh image list     | <kbd>Ctrl</kbd> + <kbd>r</kbd>                     |\n| image list       | filter image           | <kbd>/</kbd>                                       |\n| container list   | inspect container      | <kbd>Enter</kbd>                                   |\n| container list   | remove container       | <kbd>d</kbd>                                       |\n| container list   | start container        | <kbd>u</kbd>                                       |\n| container list   | stop container         | <kbd>s</kbd>                                       |\n| container list   | kill container         | <kbd>Ctrl</kbd> + <kbd>k</kbd>                     |\n| container list   | export container       | <kbd>e</kbd>                                       |\n| container list   | commit container       | <kbd>c</kbd>                                       |\n| container list   | rename container       | <kbd>r</kbd>                                       |\n| container list   | refresh container list | <kbd>Ctrl</kbd> + <kbd>r</kbd>                     |\n| container list   | filter image           | <kbd>/</kbd>                                       |\n| container list   | exec container cmd     | <kbd>Ctrl</kbd> + <kbd>e</kbd>                     |\n| container logs   | show container logs    | <kbd>Ctrl</kbd> + <kbd>l</kbd>                     |\n| volume list      | create volume          | <kbd>c</kbd>                                       |\n| volume list      | remove volume          | <kbd>d</kbd>                                       |\n| volume list      | inspect volume         | <kbd>Enter</kbd>                                   |\n| volume list      | refresh volume list    | <kbd>Ctrl</kbd> + <kbd>r</kbd>                     |\n| volume list      | filter volume          | <kbd>/</kbd>                                       |\n| network list     | inspect network        | <kbd>Enter</kbd>                                   |\n| network list     | remove network         | <kbd>d</kbd>                                       |\n| network list     | filter network         | <kbd>/</kbd>                                       |\n| pull image       | pull image             | <kbd>Enter</kbd>                                   |\n| pull image       | close panel            | <kbd>Esc</kbd>                                     |\n| create container | next input box         | <kbd>Tab</kbd>                                     |\n| create container | previous input box     | <kbd>Shift</kbd> +  <kbd>Tab</kbd>                 |\n| detail           | cursor dwon            | <kbd>j</kbd>                                       |\n| detail           | cursor up              | <kbd>k</kbd>                                       |\n| detail           | next page              | <kbd>Ctrl</kbd> / <kbd>f</kbd>                     |\n| detail           | previous page          | <kbd>Ctrl</kbd> / <kbd>b</kbd>                     |\n| search images    | search image           | <kbd>Enter</kbd>                                   |\n| search images    | close panel            | <kbd>Esc</kbd>                                     |\n| search result    | next image             | <kbd>j</kbd>                                       |\n| search result    | previous image         | <kbd>k</kbd>                                       |\n| search result    | pull image             | <kbd>Enter</kbd>                                   |\n| search result    | close panel            | <kbd>q</kbd>                                       |\n| create volume    | close panel            | <kbd>Esc</kbd>                                     |\n| create volume    | next input box         | <kbd>Tab</kbd>                                     |\n| create volume    | previous input box     | <kbd>Shift</kbd> +  <kbd>Tab</kbd>                 |\n\n## How to use\nFor details of the input panel please refer to [wiki](https://github.com/skanehira/docui/blob/master/wiki.md)\n\n## Alternatives\n- [lazydocker](https://github.com/jesseduffield/lazydocker)\nA simple terminal UI for both docker and docker-compose, written in Go with the gocui library.\n- [docker.vim](https://github.com/skanehira/docker.vim)\nManage docker containers and images in Vim\n- See [Awesome Docker list](https://github.com/veggiemonk/awesome-docker/blob/master/README.md#terminal) for similar tools to work with Docker."
}
