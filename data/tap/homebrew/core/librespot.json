{
  "name": "librespot",
  "full_name": "librespot",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Open Source Spotify client library",
  "license": "MIT",
  "homepage": "https://github.com/librespot-org/librespot",
  "versions": {
    "stable": "0.4.2",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/librespot-org/librespot/archive/refs/tags/v0.4.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "cc8cb81bdbaa5abf366170dec5e6b8c0ecf570a7cb68f04483e9f7eed338ca61"
    },
    "head": {
      "url": "https://github.com/librespot-org/librespot.git",
      "branch": "dev"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/librespot/blobs/sha256:569548eaf0db6750a015fad03d89b14e62f5e1d2abd60f6c0f9b5435d7fc2d0e",
          "sha256": "569548eaf0db6750a015fad03d89b14e62f5e1d2abd60f6c0f9b5435d7fc2d0e"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/librespot/blobs/sha256:dfe8d20853c7a525d7949e0f4715df8e02a0a313c5f93c8de37d0bb7b8ce863c",
          "sha256": "dfe8d20853c7a525d7949e0f4715df8e02a0a313c5f93c8de37d0bb7b8ce863c"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/librespot/blobs/sha256:a417c3c1a0d53820b5c5a5a3f652d7a20521c2a4891fb1763815e4c7a0dfca10",
          "sha256": "a417c3c1a0d53820b5c5a5a3f652d7a20521c2a4891fb1763815e4c7a0dfca10"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/librespot/blobs/sha256:b1cb3bb5049f14ca3e95ea59c88e969f2d4ae8057dde82c73526333e84124b2e",
          "sha256": "b1cb3bb5049f14ca3e95ea59c88e969f2d4ae8057dde82c73526333e84124b2e"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/librespot/blobs/sha256:eb26f63f537836cc723fd7642f4c7eea6d0458e6deb77beb21525020304ec5da",
          "sha256": "eb26f63f537836cc723fd7642f4c7eea6d0458e6deb77beb21525020304ec5da"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/librespot/blobs/sha256:849ad406f701285061e2c7915e7b0b291646930debae31b169445c5bb2739bc3",
          "sha256": "849ad406f701285061e2c7915e7b0b291646930debae31b169445c5bb2739bc3"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/librespot/blobs/sha256:90121b3f08f02b90f34d16459deaedffebfc9db59521d4987c31c3d3027c71e8",
          "sha256": "90121b3f08f02b90f34d16459deaedffebfc9db59521d4987c31c3d3027c71e8"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/librespot/blobs/sha256:bf3fdf062b16b87f8232c28e02deea3376546f22422b077d65683c1cba8591af",
          "sha256": "bf3fdf062b16b87f8232c28e02deea3376546f22422b077d65683c1cba8591af"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust",
    "pkg-config"
  ],
  "dependencies": [
    "alsa-lib",
    "avahi"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/librespot.rb",
  "ruby_source_checksum": {
    "sha256": "56d4b642475a124994141b8b8092aa348fa7e6d550764c4633fe6b605fdf3345"
  },
  "date_added": "2021-08-31T07:22:11+00:00",
  "readme": "[![Build Status](https://github.com/librespot-org/librespot/workflows/test/badge.svg)](https://github.com/librespot-org/librespot/actions)\n[![Gitter chat](https://badges.gitter.im/librespot-org/librespot.png)](https://gitter.im/librespot-org/spotify-connect-resources)\n[![Crates.io](https://img.shields.io/crates/v/librespot.svg)](https://crates.io/crates/librespot)\n\nCurrent maintainers are [listed on GitHub](https://github.com/orgs/librespot-org/people).\n\n# librespot\n*librespot* is an open source client library for Spotify. It enables applications to use Spotify's service to control and play music via various backends, and to act as a Spotify Connect receiver. It is an alternative to the official and [now deprecated](https://pyspotify.mopidy.com/en/latest/#libspotify-s-deprecation) closed-source `libspotify`. Additionally, it will provide extra features which are not available in the official library.\n\n_Note: librespot only works with Spotify Premium. This will remain the case. We will not support any features to make librespot compatible with free accounts, such as limited skips and adverts._\n\n## Quick start\nWe're available on [crates.io](https://crates.io/crates/librespot) as the _librespot_ package. Simply run `cargo install librespot` to install librespot on your system. Check the wiki for more info and possible [usage options](https://github.com/librespot-org/librespot/wiki/Options).\n\nAfter installation, you can run librespot from the CLI using a command such as `librespot -n \"Librespot Speaker\" -b 160` to create a speaker called _Librespot Speaker_ serving 160 kbps audio.\n\n## This fork\nAs the origin by [plietar](https://github.com/plietar/) is no longer actively maintained, this organisation and repository have been set up so that the project may be maintained and upgraded in the future.\n\n# Documentation\nDocumentation is currently a work in progress, contributions are welcome!\n\nThere is some brief documentation on how the protocol works in the [docs](https://github.com/librespot-org/librespot/tree/master/docs) folder.\n\n[COMPILING.md](https://github.com/librespot-org/librespot/blob/master/COMPILING.md) contains detailed instructions on setting up a development environment, and compiling librespot. More general usage and compilation information is available on the [wiki](https://github.com/librespot-org/librespot/wiki).\n[CONTRIBUTING.md](https://github.com/librespot-org/librespot/blob/master/CONTRIBUTING.md) also contains our contributing guidelines.\n\nIf you wish to learn more about how librespot works overall, the best way is to simply read the code, and ask any questions you have in our [Gitter Room](https://gitter.im/librespot-org/spotify-connect-resources).\n\n# Issues & Discussions\n**We have recently started using Github discussions for general questions and feature requests, as they are a more natural medium for such cases, and allow for upvoting to prioritize feature development. Check them out [here](https://github.com/librespot-org/librespot/discussions). Bugs and issues with the underlying library should still be reported as issues.**\n\nIf you run into a bug when using librespot, please search the existing issues before opening a new one. Chances are, we've encountered it before, and have provided a resolution. If not, please open a new one, and where possible, include the backtrace librespot generates on crashing, along with anything we can use to reproduce the issue, e.g. the Spotify URI of the song that caused the crash.\n\n# Building\nA quick walkthrough of the build process is outlined below, while a detailed compilation guide can be found [here](https://github.com/librespot-org/librespot/blob/master/COMPILING.md).\n\n## Additional Dependencies\nWe recently switched to using [Rodio](https://github.com/tomaka/rodio) for audio playback by default, hence for macOS and Windows, you should just be able to clone and build librespot (with the command below).\nFor Linux, you will need to run the additional commands below, depending on your distro.\n\nOn Debian/Ubuntu, the following command will install these dependencies:\n```shell\nsudo apt-get install build-essential libasound2-dev\n```\n\nOn Fedora systems, the following command will install these dependencies:\n```shell\nsudo dnf install alsa-lib-devel make gcc\n```\n\nlibrespot currently offers the following selection of [audio backends](https://github.com/librespot-org/librespot/wiki/Audio-Backends):\n```\nRodio (default)\nALSA\nGStreamer\nPortAudio\nPulseAudio\nJACK\nJACK over Rodio\nSDL\nPipe\nSubprocess\n```\nPlease check the corresponding [Compiling](https://github.com/librespot-org/librespot/wiki/Compiling#general-dependencies) entry on the wiki for backend specific dependencies.\n\nOnce you've installed the dependencies and cloned this repository you can build *librespot* with the default backend using Cargo.\n```shell\ncargo build --release\n```\n\n# Packages\n\nlibrespot is also available via official package system on various operating systems such as Linux, FreeBSD, NetBSD. [Repology](https://repology.org/project/librespot/versions) offers a good overview.\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/librespot.svg)](https://repology.org/project/librespot/versions)\n\n## Usage\nA sample program implementing a headless Spotify Connect receiver is provided.\nOnce you've built *librespot*, run it using :\n```shell\ntarget/release/librespot --name DEVICENAME\n```\n\nThe above is a minimal example. Here is a more fully fledged one:\n```shell\ntarget/release/librespot -n \"Librespot\" -b 320 -c ./cache --enable-volume-normalisation --initial-volume 75 --device-type avr\n```\nThe above command will create a receiver named ```Librespot```, with bitrate set to 320 kbps, initial volume at 75%, with volume normalisation enabled, and the device displayed in the app as an Audio/Video Receiver. A folder named ```cache``` will be created/used in the current directory, and be used to cache audio data and credentials.\n\nA full list of runtime options is available [here](https://github.com/librespot-org/librespot/wiki/Options).\n\n_Please Note: When using the cache feature, an authentication blob is stored for your account in the cache directory. For security purposes, we recommend that you set directory permissions on the cache directory to `700`._\n\n## Contact\nCome and hang out on gitter if you need help or want to offer some:\nhttps://gitter.im/librespot-org/spotify-connect-resources\n\n## Disclaimer\nUsing this code to connect to Spotify's API is probably forbidden by them.\nUse at your own risk.\n\n## License\nEverything in this repository is licensed under the MIT license.\n\n## Related Projects\nThis is a non exhaustive list of projects that either use or have modified librespot. If you'd like to include yours, submit a PR.\n\n- [librespot-golang](https://github.com/librespot-org/librespot-golang) - A golang port of librespot.\n- [plugin.audio.spotify](https://github.com/marcelveldt/plugin.audio.spotify) - A Kodi plugin for Spotify.\n- [raspotify](https://github.com/dtcooper/raspotify) - A Spotify Connect client that mostly Just Works™\n- [Spotifyd](https://github.com/Spotifyd/spotifyd) - A stripped down librespot UNIX daemon.\n- [rpi-audio-receiver](https://github.com/nicokaiser/rpi-audio-receiver) - easy Raspbian install scripts for Spotifyd, Bluetooth, Shairport and other audio receivers\n- [Spotcontrol](https://github.com/badfortrains/spotcontrol) - A golang implementation of a Spotify Connect controller. No playback\nfunctionality.\n- [librespot-java](https://github.com/devgianlu/librespot-java) - A Java port of librespot.\n- [ncspot](https://github.com/hrkfdn/ncspot) - Cross-platform ncurses Spotify client.\n- [ansible-role-librespot](https://github.com/xMordax/ansible-role-librespot/tree/master) - Ansible role that will build, install and configure Librespot.\n- [Spot](https://github.com/xou816/spot) - Gtk/Rust native Spotify client for the GNOME desktop. \n- [Snapcast](https://github.com/badaix/snapcast) - synchronised multi-room audio player that uses librespot as its source for Spotify content"
}
