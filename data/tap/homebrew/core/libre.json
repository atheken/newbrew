{
  "name": "libre",
  "full_name": "libre",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Toolkit library for asynchronous network I/O with protocol stacks",
  "license": "BSD-3-Clause",
  "homepage": "https://github.com/baresip/re",
  "versions": {
    "stable": "3.3.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/baresip/re/archive/refs/tags/v3.3.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "f5b190b7b4d2721ae6b2873a72534f518a7bb5a2c9571e1e0ff81b42ebd37fd7"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libre/blobs/sha256:fd208a725e742abc9c17e7147cb8436a2ea887c26a1248fa7792955d731f195c",
          "sha256": "fd208a725e742abc9c17e7147cb8436a2ea887c26a1248fa7792955d731f195c"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libre/blobs/sha256:e9f72b4b1b452a55811d0cf805daf81252179d6564a82b36ed8ea2efc8cdc993",
          "sha256": "e9f72b4b1b452a55811d0cf805daf81252179d6564a82b36ed8ea2efc8cdc993"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libre/blobs/sha256:400be0139ba99273c8fc2cd1d0ee931f90c60ec1dec6c8ecde84865f96f78a9f",
          "sha256": "400be0139ba99273c8fc2cd1d0ee931f90c60ec1dec6c8ecde84865f96f78a9f"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libre/blobs/sha256:e572867793025401973398784c7abdcb8f5dd1c15b5fe0e34f79f7dff9aee516",
          "sha256": "e572867793025401973398784c7abdcb8f5dd1c15b5fe0e34f79f7dff9aee516"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libre/blobs/sha256:522abf1465301afa5554ba4b1808f9a6d3b59982726c868379ac69ca44e3bc93",
          "sha256": "522abf1465301afa5554ba4b1808f9a6d3b59982726c868379ac69ca44e3bc93"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libre/blobs/sha256:ef96a296a7deac2609b78e85c15f022bf62473d151a1794fd62fa5abd34a4e7d",
          "sha256": "ef96a296a7deac2609b78e85c15f022bf62473d151a1794fd62fa5abd34a4e7d"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libre/blobs/sha256:46100d8be9bb8bfbb526da6aa0163bdadc59d3c9480aee50653d128fbf0b8897",
          "sha256": "46100d8be9bb8bfbb526da6aa0163bdadc59d3c9480aee50653d128fbf0b8897"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "openssl@3"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "zlib"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/libre.rb",
  "ruby_source_checksum": {
    "sha256": "726371c8d52f0f017e0b3103a57c69422ab16bda4b86edef86c6b3ab35a00b54"
  },
  "date_added": "2014-04-20T10:20:05-07:00",
  "readme": "libre README\n============\n\n\nlibre is a Generic library for real-time communications with async IO support.\n\n- Copyright (C) 2010 - 2020 Creytiv.com\n- Copyright (C) 2020 - 2023 Baresip Foundation (https://github.com/baresip)\n\n![Build](https://github.com/baresip/re/workflows/Build/badge.svg)\n![ccheck](https://github.com/baresip/re/workflows/ccheck/badge.svg)\n![OpenSSL no-deprecated and LibreSSL](https://github.com/baresip/re/workflows/OpenSSL%20no-deprecated%20and%20LibreSSL/badge.svg)\n\n\n## Features\n\n* SIP Stack ([RFC 3261](https://tools.ietf.org/html/rfc3261))\n* SDP\n* RTP and RTCP\n* SRTP and SRTCP (Secure RTP)\n* DNS-Client\n* STUN/TURN/ICE stack\n* BFCP\n* HTTP-stack with client/server\n* Websockets\n* Jitter-buffer\n* Async I/O (select, epoll, kqueue)\n* UDP/TCP/TLS/DTLS transport\n* JSON parser\n* Real Time Messaging Protocol (RTMP)\n\n\n## Building\n\nlibre is using CMake. CMake and OpenSSL development headers must be\ninstalled before building.\n\n\n### Build with debug enabled\n\n```\n$ cmake -B build\n$ cmake --build build -j\n$ sudo cmake --install build\n$ sudo ldconfig\n```\n\n### Build/run tests\n\n```\ncmake -B build && cmake --build build -t retest -j\nbuild/test/retest -rv\n```\n\nOn some distributions, /usr/local/lib may not be included in ld.so.conf. \nYou can check with `grep \"/usr/local/lib\" /etc/ld.so.conf.d/*.conf` \nand add if necessary:\n\n```\n$ echo \"/usr/local/lib\" | sudo tee /etc/ld.so.conf.d/libc.conf\n$ sudo ldconfig\n```\n\n\n### Build with release\n\n```\n$ cmake -B build -DCMAKE_BUILD_TYPE=Release \n$ cmake --build build -j\n$ sudo cmake --install build\n$ sudo ldconfig\n```\n\n### Build with clang compiler\n\n```\n$ cmake -B build -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++\n$ cmake --build build -j\n$ sudo cmake --install build\n$ sudo ldconfig\n```\n\n\n### Examples\n\nCoding examples are available from the\n[redemo](http://creytiv.com/pub/redemo-0.5.0.tar.gz) project\n\n\n## License\n\nThe libre project is using the BSD license.\n\n\n## Contributing\n\nPatches can sent via Github\n[Pull-Requests](https://github.com/baresip/re/pulls)\n\n\n## Design goals\n\n* Portable POSIX source code (ISO C99 and C11 standard)\n* Robust, fast, low memory footprint\n* RFC compliance\n* IPv4 and IPv6 support\n\n\n## Modules\n\n| Name     | Status   | Description                                    |\n|----------|----------|------------------------------------------------|\n| aes      | stable   | AES (Advanced Encryption Standard)             |\n| async    | testing  | Async module                                   |\n| base64   | stable   | Base-64 encoding/decoding functions            |\n| bfcp     | stable   | The Binary Floor Control Protocol (BFCP)       |\n| conf     | stable   | Configuration file parser                      |\n| crc32    | stable   | 32-bit CRC defined in ITU V.42                 |\n| dbg      | stable   | Debug printing                                 |\n| dns      | stable   | DNS resolving (NAPTR, SRV, A)                  |\n| fmt      | stable   | Formatted printing and regular expression      |\n| hash     | stable   | Hashmap table                                  |\n| hmac     | stable   | HMAC: Keyed-Hashing for Message Authentication |\n| http     | stable   | HTTP parser (RFC 2616)                         |\n| httpauth | stable   | HTTP-based Authentication (RFC 2617)           |\n| ice      | stable   | Interactive Connectivity Establishment (ICE)   |\n| jbuf     | stable   | Jitter buffer                                  |\n| json     | stable   | JavaScript Object Notation (JSON)              |\n| list     | stable   | Sortable doubly-linked list handling           |\n| main     | stable   | Main poll loop                                 |\n| mbuf     | stable   | Linear memory buffers                          |\n| md5      | stable   | The MD5 Message-Digest Algorithm (RFC 1321)    |\n| mem      | stable   | Memory referencing                             |\n| mod      | stable   | Run-time module loading                        |\n| mqueue   | stable   | Thread-safe message queue                      |\n| msg      | stable   | Generic message component library              |\n| net      | stable   | Networking routines                            |\n| odict    | stable   | Ordered Dictionary                             |\n| rtmp     | stable   | Real Time Messaging Protocol                   |\n| rtp      | stable   | Real-time Transport Protocol                   |\n| sa       | stable   | Socket Address functions                       |\n| sdp      | stable   | Session Description Protocol                   |\n| sha      | stable   | Secure Hash Standard, NIST, FIPS PUB 180-1     |\n| sip      | stable   | Core SIP library                               |\n| sipevent | stable   | SIP Event framework                            |\n| sipreg   | stable   | SIP register client                            |\n| sipsess  | stable   | SIP Sessions                                   |\n| srtp     | stable   | Secure Real-time Transport Protocol (SRTP)     |\n| stun     | stable   | Session Traversal Utilities for NAT (STUN)     |\n| sys      | stable   | System information                             |\n| tcp      | stable   | TCP transport                                  |\n| telev    | stable   | Telephony Events (RFC 4733)                    |\n| thread   | testing  | C11 threads (with pthread and win32 emulation) |\n| tls      | stable   | Transport Layer Security                       |\n| tmr      | stable   | Timer handling                                 |\n| turn     | stable   | Obtaining Relay Addresses from STUN (TURN)     |\n| trace    | testing  | Trace Helpers JSON traces (chrome://tracing)   |\n| udp      | stable   | UDP transport                                  |\n| unixsock | testing  | Unix domain sockets                            |\n| uri      | stable   | Generic URI library                            |\n| websock  | stable   | WebSocket Client and Server                    |\n\nlegend:\n* *stable* - code complete; stable code and stable API\n* *testing* - code complete, but API might change\n* *unstable* - code complete but not completely tested\n* *development* - code is under development\n\n\n## Features\n\n* [RFC 1321](https://tools.ietf.org/html/rfc1321) - The MD5 Message-Digest Algorithm\n* [RFC 1886](https://tools.ietf.org/html/rfc1886) - DNS Extensions to support IP version 6\n* [RFC 2032](https://tools.ietf.org/html/rfc2032) - RTP Payload Format for H.261 Video Streams\n* [RFC 2616](https://tools.ietf.org/html/rfc2616) - Hypertext Transfer Protocol -- HTTP/1.1\n* [RFC 2617](https://tools.ietf.org/html/rfc2617) - HTTP Authentication: Basic and Digest Access Authentication\n* [RFC 2782](https://tools.ietf.org/html/rfc2782) - A DNS RR for Specifying the Location of Services (DNS SRV)\n* [RFC 2915](https://tools.ietf.org/html/rfc2915) - The Naming Authority Pointer (NAPTR) DNS Resource Record\n* [RFC 3261](https://tools.ietf.org/html/rfc3261) - SIP: Session Initiation Protocol\n* [RFC 3262](https://tools.ietf.org/html/rfc3262) - SIP Reliability of Provisional Responses\n* [RFC 3263](https://tools.ietf.org/html/rfc3263) - Locating SIP Servers\n* [RFC 3264](https://tools.ietf.org/html/rfc3264) - An Offer/Answer Model with SDP\n* [RFC 3265](https://tools.ietf.org/html/rfc3265) - SIP-Specific Event Notification\n* [RFC 3311](https://tools.ietf.org/html/rfc3311) - The SIP UPDATE Method\n* [RFC 3327](https://tools.ietf.org/html/rfc3327) - SIP Extension Header Field for Registering Non-Adjacent Contacts\n* [RFC 3428](https://tools.ietf.org/html/rfc3428) - SIP Extension for Instant Messaging\n* [RFC 3489](https://tools.ietf.org/html/rfc3489) - STUN - Simple Traversal of UDP Through NATs\n* [RFC 3515](https://tools.ietf.org/html/rfc3515) - The SIP Refer Method\n* [RFC 3550](https://tools.ietf.org/html/rfc3550) - RTP: A Transport Protocol for Real-Time Applications\n* [RFC 3551](https://tools.ietf.org/html/rfc3551) - RTP Profile for Audio and Video Conferences with Minimal Control\n* [RFC 3555](https://tools.ietf.org/html/rfc3555) - MIME Type Registration of RTP Payload Formats\n* [RFC 3556](https://tools.ietf.org/html/rfc3556) - SDP Bandwidth Modifiers for RTCP Bandwidth\n* [RFC 3581](https://tools.ietf.org/html/rfc3581) - An Extension to SIP for Symmetric Response Routing\n* [RFC 3605](https://tools.ietf.org/html/rfc3605) - RTCP attribute in SDP\n* [RFC 3711](https://tools.ietf.org/html/rfc3711) - The Secure Real-time Transport Protocol (SRTP)\n* [RFC 3969](https://tools.ietf.org/html/rfc3969) - The IANA URI Parameter Registry for SIP\n* [RFC 3994](https://tools.ietf.org/html/rfc3994) - Indication of Message Composition for Instant Messaging\n* [RFC 4566](https://tools.ietf.org/html/rfc4566) - SDP: Session Description Protocol\n* [RFC 4582](https://tools.ietf.org/html/rfc4582) - The Binary Floor Control Protocol (BFCP)\n* [RFC 4582bis](https://tools.ietf.org/html/draft-ietf-bfcpbis-rfc4582bis-08) - The Binary Floor Control Protocol (BFCP)\n* [RFC 4585](https://tools.ietf.org/html/rfc4585) - Extended RTP Profile for RTCP-Based Feedback\n* [RFC 4733](https://tools.ietf.org/html/rfc4733) - RTP Payload for DTMF Digits, Telephony Tones, and Teleph. Signals\n* [RFC 4961](https://tools.ietf.org/html/rfc4961) - Symmetric RTP / RTP Control Protocol (RTCP)\n* [RFC 5104](https://tools.ietf.org/html/rfc5104) - Codec Control Messages in AVPF\n* [RFC 5118](https://tools.ietf.org/html/rfc5118) - SIP Torture Test Messages for IPv6\n* [RFC 5245](https://tools.ietf.org/html/rfc5245) - Interactive Connectivity Establishment (ICE)\n* [RFC 5246](https://tools.ietf.org/html/rfc5246) - The TLS Protocol Version 1.2\n* [RFC 5389](https://tools.ietf.org/html/rfc5389) - Session Traversal Utilities for NAT (STUN)\n* [RFC 5626](https://tools.ietf.org/html/rfc5626) - Managing Client-Initiated Connections in SIP\n* [RFC 5761](https://tools.ietf.org/html/rfc5761) - Multiplexing RTP Data and Control Packets on a Single Port\n* [RFC 5766](https://tools.ietf.org/html/rfc5766) - Traversal Using Relays around NAT (TURN)\n* [RFC 5768](https://tools.ietf.org/html/rfc5768) - Indicating Support for ICE in SIP\n* [RFC 5769](https://tools.ietf.org/html/rfc5769) - Test vectors for STUN\n* [RFC 5780](https://tools.ietf.org/html/rfc5780) - NAT Behaviour Discovery Using STUN\n* [RFC 6026](https://tools.ietf.org/html/rfc6026) - Correct Transaction Handling for 2xx Resp. to SIP INVITE Requests\n* [RFC 6156](https://tools.ietf.org/html/rfc6156) - TURN Extension for IPv6\n* [RFC 6188](https://tools.ietf.org/html/rfc6188) - The Use of AES-192 and AES-256 in Secure RTP\n* [RFC 6455](https://tools.ietf.org/html/rfc6455) - The WebSocket Protocol\n* [RFC 7159](https://tools.ietf.org/html/rfc7159) - JavaScript Object Notation (JSON)\n* [RFC 7350](https://tools.ietf.org/html/rfc7350) - DTLS as Transport for STUN\n* [RFC 7714](https://tools.ietf.org/html/rfc7714) - AES-GCM Authenticated Encryption in SRTP\n\n\n## Supported platforms\n\n|  System | Support type | Supported versions | Notes |\n|---|---|---|---|\n| Linux | Tier 1 | glibc >= 2.27 (Ubuntu 18.04) | |\n| macOS | Tier 1 | macOS >= 10.10 | |\n| Windows | Tier 1 | >= Windows 8 | MinGW-w64, >= VS 2019 |\n| Android | Tier 2 | | |\n| iOS | Tier 2 | | |\n| FreeBSD | Tier 2 | >= 11 | |\n| OpenBSD | Tier 2 | >= 6.7 | |\n| Linux | Tier 2 | uClibc | |\n\n\n### Support types\n\n* **Tier 1**: Officially supported and tested with CI. Any contributed patch\n  MUST NOT break such systems.\n\n* **Tier 2**: Officially supported, but not necessarily tested with CI. These\n  systems are maintained to the best of collaborators ability, without being\n  a top priority.\n\n* **Tier 3**: Community maintained. These systems may inadvertently break and the\n  community and interested parties are expected to help with the maintenance.\n\n\n### Supported versions of C Standard library\n\n* Android bionic\n* BSD libc\n* GNU C Library (glibc)\n* Windows C Run-Time Libraries (CRT)\n* uClibc\n\n\n### Supported compilers:\n\n* gcc 4.9 or later\n* MSVC 2019\n* clang 3.x or later\n\n\n### Supported versions of OpenSSL\n\n* OpenSSL version 1.1.1\n* OpenSSL version 3.0.x\n* OpenSSL version 3.1.x\n* LibreSSL version 3.x\n\n\n## Coding guidelines\n\n* Use enum for constants where appropriate\n* Use const as much as possible (where appropriate)\n* Use C99 data types (intN_t, uintN_t, bool)\n* Hide data-types in .c files where possible (use struct foo)\n* Avoid malloc/free, use mem_alloc/mem_deref instead\n* CVS/svn/git tags are NOT allowed in the code!\n* Avoid bit-fields in structs which are not portable\n* Use dummy handlers for timing-critical callbacks\n* return err, return alloced objects as pointer-pointers\n* in allocating functions, first arg is always double pointer\n* Use POSIX error-codes; EINVAL for invalid args, EBADMSG for\n  parse errors and EPROTO for protocol errors\n\n\n## Transport protocols\n\n\n|         | TCP | UDP | TLS | DTLS|\n|:--------|:---:|:---:|:---:|:---:|\n| BFCP    | -   | yes | -   | -   |\n| DNS     | yes | yes | -   | -   |\n| HTTP    | yes | n/a | yes | n/a |\n| ICE     | -   | yes | -   | -   |\n| RTP     | -   | yes | -   | -   |\n| RTCP    | -   | yes | -   | -   |\n| RTMP    | yes | -   | yes | -   |\n| SIP     | yes | yes | yes | -   |\n| STUN    | yes | yes | yes | yes |\n| TURN    | yes | yes | yes | yes |\n| WEBSOCK | yes | n/a | yes | n/a |\n\n\n## Related projects\n\n* [librem](https://github.com/baresip/rem)\n* [retest](https://github.com/baresip/retest)\n* [baresip](https://github.com/baresip/baresip)\n\n\n## References\n\nhttps://github.com/creytiv/re"
}
