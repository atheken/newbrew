{
  "name": "buf",
  "full_name": "buf",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "New way of working with Protocol Buffers",
  "license": "Apache-2.0",
  "homepage": "https://github.com/bufbuild/buf",
  "versions": {
    "stable": "1.25.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/bufbuild/buf/archive/refs/tags/v1.25.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "5ccf081fad412c6f91fd22f69d7f814a315b8f93d7e99d76603a08c94b5632db"
    },
    "head": {
      "url": "https://github.com/bufbuild/buf.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/buf/blobs/sha256:407e209016f254b00fd6b2a70e22da517bf223adf7852d8817994a3d1f3b0d3a",
          "sha256": "407e209016f254b00fd6b2a70e22da517bf223adf7852d8817994a3d1f3b0d3a"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/buf/blobs/sha256:407e209016f254b00fd6b2a70e22da517bf223adf7852d8817994a3d1f3b0d3a",
          "sha256": "407e209016f254b00fd6b2a70e22da517bf223adf7852d8817994a3d1f3b0d3a"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/buf/blobs/sha256:70f9abd999e5ad2c318db33e9976991ae585501006b152aa72e9d0fd5ef7cf80",
          "sha256": "70f9abd999e5ad2c318db33e9976991ae585501006b152aa72e9d0fd5ef7cf80"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/buf/blobs/sha256:184dcb71265c7d014b6b55b99a87ecbf06d4e3ee05d5b7c53a693d193e5b54ce",
          "sha256": "184dcb71265c7d014b6b55b99a87ecbf06d4e3ee05d5b7c53a693d193e5b54ce"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/buf/blobs/sha256:184dcb71265c7d014b6b55b99a87ecbf06d4e3ee05d5b7c53a693d193e5b54ce",
          "sha256": "184dcb71265c7d014b6b55b99a87ecbf06d4e3ee05d5b7c53a693d193e5b54ce"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/buf/blobs/sha256:184dcb71265c7d014b6b55b99a87ecbf06d4e3ee05d5b7c53a693d193e5b54ce",
          "sha256": "184dcb71265c7d014b6b55b99a87ecbf06d4e3ee05d5b7c53a693d193e5b54ce"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/buf/blobs/sha256:1fca5d48e5e998f82adb068ea67a7e2b4bb32977d5aa602d75282c0aaf0c5c9b",
          "sha256": "1fca5d48e5e998f82adb068ea67a7e2b4bb32977d5aa602d75282c0aaf0c5c9b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/buf.rb",
  "ruby_source_checksum": {
    "sha256": "4740955479e0cd24ba77045e9328ebce0639b997af9a8a60a5cfd3d35b76290b"
  },
  "date_added": "2022-12-12T05:44:51+00:00",
  "readme": "![The Buf logo](./.github/buf-logo.svg)\n\n# Buf\n\n[![License](https://img.shields.io/github/license/bufbuild/buf?color=blue)][badges_license]\n[![Release](https://img.shields.io/github/v/release/bufbuild/buf?include_prereleases)][badges_release]\n[![CI](https://github.com/bufbuild/buf/workflows/ci/badge.svg)][badges_ci]\n[![Docker](https://img.shields.io/docker/pulls/bufbuild/buf)][badges_docker]\n[![Homebrew](https://img.shields.io/homebrew/v/buf)][badges_homebrew]\n[![Slack](https://img.shields.io/badge/slack-buf-%23e01563)][badges_slack]\n\nThe [`buf`][buf] CLI is a tool for working with [Protocol Buffers][protobuf].\n\n<a id=\"features\"></a>\n\n- The ability to manage Protobuf assets on the [Buf Schema Registry][bsr] (BSR).\n- A [linter][lint_usage] that enforces good API design choices and structure.\n- A [breaking change detector][breaking_usage] that enforces compatibility at the source code or wire level.\n- A [generator][generate_usage] that invokes your plugins based on configurable [templates][templates].\n- A [formatter][format_usage] that formats your Protobuf files in accordance with industry standards.\n- Integration with the [Buf Schema Registry][bsr], including full dependency management.\n\n## Installation\n\n### Homebrew\n\nYou can install `buf` using [Homebrew][brew] (macOS or Linux):\n\n```sh\nbrew install bufbuild/buf/buf\n```\n\nThis installs:\n\n- The `buf`, [`protoc-gen-buf-breaking`][breaking], and [`protoc-gen-buf-lint`][lint] binaries\n- Shell completion scripts for [Bash], [Fish], [Powershell], and [zsh]\n\n### Other methods\n\nFor other installation methods, see our [official documentation][install], which covers:\n\n- Installing `buf` via [npm]\n- Installing `buf` on [Windows]\n- Using `buf` as a [Docker image][docker]\n- Installing as a [binary], from a [tarball], and from [source] through [GitHub Releases][releases]\n- [Verifying] releases using a [minisign] public key\n\n\n## Usage\n\nBuf's help interface provides summaries for commands and flags:\n\n```sh\nbuf --help\n```\n\nFor more comprehensive usage information, consult Buf's [documentation][docs], especially these guides:\n\n* [`buf breaking`][breaking_usage]\n* [`buf build`][build_usage]\n* [`buf generate`][generate_usage]\n* [`buf lint`][lint_usage]\n* [`buf format`][format_usage]\n* [`buf registry`][bsr_usage] (for using the [BSR])\n\n## CLI breaking change policy\n\nWe will never make breaking changes within a given major version of the CLI. Once `buf` reaches v1.0, you can expect no breaking changes until v2.0. But as we have no plans to ever release a v2.0, we will likely never break the `buf` CLI.\n\n> This breaking change policy does _not_ apply to commands behind the `buf beta` gate, and you should expect breaking changes to commands like `buf beta registry`. The policy does go into effect, however, when those commands or flags are elevated out of beta.\n\n## Our goals for Protobuf\n\n[Buf]'s goal is to replace the current paradigm of API development, centered around REST/JSON, with a **schema-driven** paradigm. Defining APIs using an [IDL] provides numerous benefits over REST/JSON, and [Protobuf] is by far the most stable and widely adopted IDL in the industry. We've chosen to build on this widely trusted foundation rather than creating a new IDL from scratch.\n\nBut despite its technical merits, actually _using_ Protobuf has long been more challenging than it needs to be. The Buf CLI and the [BSR](#the-buf-schema-registry) are the cornerstones of our effort to change that for good and to make Protobuf reliable and easy to use for service owners and clients alikeâ€”in other words, to create a **modern Protobuf ecosystem**.\n\nWhile we intend to incrementally improve on the `buf` CLI and the [BSR](#the-buf-schema-registry), we're confident that the basic groundwork for such an ecosystem is _already_ in place.\n\n## The Buf Schema Registry\n\nThe [Buf Schema Registry][bsr] (BSR) is a SaaS platform for managing your Protobuf APIs. It provides a centralized registry and a single source of truth for all of your Protobuf assets, including not just your `.proto` files but also [remote plugins][bsr_plugins]. Although the BSR provides an intuitive browser UI, `buf` enables you to perform most BSR-related tasks from the command line, such as [pushing] Protobuf sources to the registry and managing [users] and [repositories]. \n\n> The BSR is not required to use `buf`. We've made the core [features] of the `buf` CLI available to _all_ Protobuf users.\n\n## More advanced CLI features\n\nWhile `buf`'s [core features][features] should cover most use cases, we've included some more advanced features to cover edge cases:\n\n* **Automatic file discovery**. Buf walks your file tree and builds your `.proto` files in accordance with your supplied [build configuration][build_config], which means that you no longer need to manually specify `--proto_paths`. You can still, however, specify `.proto` files manually through CLI flags in cases where file discovery needs to be disabled.\n* **Fine-grained rule configuration** for [linting][lint_rules] and [breaking changes][breaking_rules]. While we do have recommended defaults, you can always select the exact set of rules that your use case requires, with [40 lint rules][lint_rules] and [53 breaking change rules][breaking_rules] available.\n* **Configurable error formats** for CLI output. `buf` outputs information in `file:line:column:message` form by default for each lint error and breaking change it encounters, but you can also select JSON and, in the near future, JUnit output.\n* **Editor integration** driven by `buf`'s granular error output. We currently provide linting integrations for both [Vim and Visual Studio Code][ide] but we plan to support other editors, such as Emacs and [JetBrains IDEs][jetbrains] like IntelliJ and GoLand, in the future.\n* **Universal Input targeting**. Buf enables you to perform actions like linting and breaking change detection not just against local `.proto` files but also against a broad range of other [Inputs], such as tarballs and ZIP files, remote Git repositories, and pre-built [image][images] files.\n* **Speed**. Buf's internal Protobuf compiler compiles your Protobuf sources using all available cores without compromising deterministic output, which is considerably faster than `protoc`. This allows for near-instantaneous feedback, which is of special importance for features like [editor integration][ide].\n\n## Next steps\n\nOnce you've installed `buf`, we recommend completing the [Tour of Buf][tour], which provides a broad but hands-on overview of the core functionality of both the CLI and the [BSR]. The tour takes about 10 minutes to complete.\n\nAfter completing the tour, check out the remainder of the [docs] for your specific areas of interest.\n\n## Community\n\nFor help and discussion around Protobuf, best practices, and more, join us on [Slack][badges_slack].\n\nFor updates on the Buf CLI, [follow this repo on GitHub][repo].\n\nFor feature requests, bugs, or technical questions, email us at [dev@buf.build][email_dev]. For general inquiries or inclusion in our upcoming feature betas, email us at [info@buf.build][email_info].\n\n[badges_aur]: https://aur.archlinux.org/packages/buf\n[badges_ci]: https://github.com/bufbuild/buf/actions?workflow=ci\n[badges_docker]: https://hub.docker.com/r/bufbuild/buf\n[badges_homebrew]: https://github.com/bufbuild/homebrew-buf\n[badges_license]: https://github.com/bufbuild/buf/blob/main/LICENSE\n[badges_release]: https://github.com/bufbuild/buf/releases\n[badges_slack]: https://buf.build/links/slack\n[bash]: https://www.gnu.org/software/bash\n[binary]: https://docs.buf.build/installation#binary\n[breaking]: https://docs.buf.build/breaking\n[breaking_rules]: https://docs.buf.build/breaking/rules\n[breaking_usage]: https://docs.buf.build/breaking/usage\n[brew]: https://brew.sh\n[bsr]: https://docs.buf.build/bsr\n[bsr_plugins]: https://buf.build/plugins\n[bsr_usage]: https://docs.buf.build/bsr/usage\n[buf]: https://buf.build\n[build_config]: https://docs.buf.build/build/usage/#configuration\n[build_usage]: https://docs.buf.build/build/usage\n[compiler]: https://docs.buf.build/build/internal-compiler\n[contact]: https://docs.buf.build/contact\n[docker]: https://docs.buf.build/installation#use-the-docker-image\n[docs]: https://docs.buf.build\n[email_dev]: mailto:dev@buf.build\n[email_info]: mailto:info@buf.build\n[filedescriptorset]: https://github.com/protocolbuffers/protobuf/blob/044c766fd4777713fef2d1a9a095e4308d770c68/src/google/protobuf/descriptor.proto#L57\n[features]: #features\n[fish]: https://fishshell.com\n[format_usage]: https://docs.buf.build/format/usage\n[generate_usage]: https://docs.buf.build/generate/usage\n[ide]: https://docs.buf.build/editor-integration\n[idl]: https://en.wikipedia.org/wiki/Interface_description_language\n[images]: https://docs.buf.build/reference/images\n[inputs]: https://docs.buf.build/reference/inputs\n[install]: https://docs.buf.build/installation\n[jetbrains]: https://docs.buf.build/editor-integration#jetbrains-ides\n[lint]: https://docs.buf.build/lint\n[lint_rules]: https://docs.buf.build/lint/rules\n[lint_usage]: https://docs.buf.build/lint/usage\n[npm]: https://docs.buf.build/installation#npm\n[minisign]: https://github.com/jedisct1/minisign\n[powershell]: https://docs.microsoft.com/en-us/powershell\n[protobuf]: https://developers.google.com/protocol-buffers\n[pushing]: https://docs.buf.build/bsr/usage#push-a-module\n[releases]: https://docs.buf.build/installation#github-releases\n[repo]: https://github.com/bufbuild/buf/\n[repositories]: https://docs.buf.build/bsr/overview#module\n[roadmap]: https://docs.buf.build/roadmap\n[source]: https://docs.buf.build/installation#from-source\n[tarball]: https://docs.buf.build/installation#tarball\n[templates]: https://docs.buf.build/configuration/v1/buf-gen-yaml\n[tour]: https://docs.buf.build/tour/introduction\n[users]: https://docs.buf.build/bsr/user-management#organization-roles\n[verifying]: https://docs.buf.build/installation#verifying-a-release\n[windows]: https://docs.buf.build/installation#windows-support\n[zsh]: https://zsh.org"
}
