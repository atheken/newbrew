{
  "name": "numactl",
  "full_name": "numactl",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "NUMA support for Linux",
  "license": "GPL-2.0-only and LGPL-2.1-only and Public Domain and Cannot Represent",
  "homepage": "https://github.com/numactl/numactl",
  "versions": {
    "stable": "2.0.16",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/numactl/numactl/releases/download/v2.0.16/numactl-2.0.16.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "1b242f893af977a1d31af6ce9d6b8dafdd2d8ec3dc9207f7c2dc0d3446e7c7c8"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/numactl/blobs/sha256:809a693e16e891c8ee072c0e403769daedbaf3cbaa52291cc0bb0c008fc8065b",
          "sha256": "809a693e16e891c8ee072c0e403769daedbaf3cbaa52291cc0bb0c008fc8065b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "linux",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/numactl.rb",
  "ruby_source_checksum": {
    "sha256": "f14ef58e9803aec3405760e9297219b8d06b0ff8eb51fd75c59faf33fde36ead"
  },
  "date_added": "2021-03-15T16:06:13+01:00",
  "readme": "# numactl\n\n[![Build Status](https://travis-ci.org/numactl/numactl.svg?branch=master)](https://travis-ci.org/numactl/numactl)\n\nSimple NUMA policy support. It consists of a numactl program to run other\nprograms with a specific NUMA policy and a libnuma shared library (\"NUMA API\")\nto set NUMA policy in applications.\n\nThe libnuma binary interface is supposed to stay binary compatible.\n\nIncompatible changes will use new symbol version numbers.\n\nIn addition there are various test and utility programs, like `numastat` to\ndisplay NUMA allocation statistics and `memhog`.\n\nIn `test/` there is a small regression test suite.\n\nNote that `regress` assumes an unloaded machine with memory free on each node.\nOtherwise you will get spurious failures in the non-strict policies (preferred,\ninterleave.)\n\nSee the manpages [`numactl.8`](https://linux.die.net/man/8/numactl) and\n[`numa.3`](https://linux.die.net/man/3/numa) for details.\n\n# License, Copyrights, Acknowledgements\n\n`numactl` and the demo programs are under the GNU General Public License, v.2.\n\n`libnuma` is under the GNU Lesser General Public License, v2.1.\n\nThe manpages are under the same license as the Linux manpages (see the files.)\n\n`numademo` links with a library derived from the C version of STREAM by John D.\nMcCalpin and Joe R. Zagar for one sub benchmark. See `stream_lib.c` for the\nlicense. In particular when you publish `numademo` output you might need to pay\nattention there or filter out the STREAM results.\n\nIt also uses a public domain Mersenne Twister implementation from Michael\nBrundage.\n\nVersion 2.0.10-rc2: (C)2014 SGI\n\nAuthor:\nAndi Kleen, SUSE Labs\n\nVersion 2.0.0 by Cliff Wickman (`cpw@sgi.com`), Christoph Lameter\n(`clameter@sgi.com`) and Lee Schermerhorn (`lee.schermerhorn@hp.com`)."
}
