{
  "name": "nodebrew",
  "full_name": "nodebrew",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Node.js version manager",
  "license": "MIT",
  "homepage": "https://github.com/hokaccha/nodebrew",
  "versions": {
    "stable": "1.2.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/hokaccha/nodebrew/archive/v1.2.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "6d72e39c8acc5b22f4fc7a1734cd3bb8d00b61119ab7fea6cde376810ff2005e"
    },
    "head": {
      "url": "https://github.com/hokaccha/nodebrew.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nodebrew/blobs/sha256:eed2aeff4fd05a4c2969d670ce9a38bc01832ac90b65a1c773689532cb376660",
          "sha256": "eed2aeff4fd05a4c2969d670ce9a38bc01832ac90b65a1c773689532cb376660"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": "You need to manually run setup_dirs to create directories required by nodebrew:\n  $HOMEBREW_PREFIX/opt/nodebrew/bin/nodebrew setup_dirs\n\nAdd path:\n  export PATH=$HOME/.nodebrew/current/bin:$PATH\n\nTo use Homebrew's directories rather than ~/.nodebrew add to your profile:\n  export NODEBREW_ROOT=$HOMEBREW_PREFIX/var/nodebrew\n",
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/nodebrew.rb",
  "ruby_source_checksum": {
    "sha256": "70e8ab2845c9976333bcaac062b6cf5389b9ea9ad9daca2b514947f2c681b672"
  },
  "date_added": "2014-06-02T11:53:34+01:00",
  "readme": "# nodebrew\n\n[![Build Status](https://travis-ci.org/hokaccha/nodebrew.svg?branch=master)](https://travis-ci.org/hokaccha/nodebrew)\n\nNode.js version manager.\n\n## Install\n\nInstall with curl.\n\n```bash\n$ curl -L git.io/nodebrew | perl - setup\n```\n\nOr, download and setup.\n\n```bash\n$ wget git.io/nodebrew\n$ perl nodebrew setup\n```\n\nAdd `PATH` setting your shell config file (`.bashrc` or `.zshrc`).\n\n```\nexport PATH=$HOME/.nodebrew/current/bin:$PATH\n```\n\nReload config.\n\n```bash\n$ source ~/.bashrc\n```\n\nConfirm.\n\n```bash\n$ nodebrew help\n```\n\n`NODEBREW_ROOT` (which indicates nodebrew's home directory) is configurable.\nIf you want to install nodebrew manually, please configure such as follows.\n\n```\nexport NODEBREW_ROOT=/path/to/.nodebrew\n```\n\nThe default value is `$HOME/.nodebrew`.\n\n## Usage\n\n### `nodebrew install <version>`\n\nInstall Node.js.\n\n```bash\n$ nodebrew install v8.9.4\n\n# or\n$ nodebrew install latest # latest version\n$ nodebrew install stable # stable version\n$ nodebrew install v8.9   # v8.9 latest\n$ nodebrew install 8.9.4  # without `v`\n```\n\n### `nodebrew compile <version>`\n\nIf you want to compile from source, you can use `compile` command.\n\n```bash\n$ nodebrew compile v8.9.4\n```\n\nPass configure options to Node.js.\n\n```bash\n$ nodebrew compile v8.9.4 --v8-options=--harmony\n```\n\n### `nodebrew use <version>`\n\nSwitch a version to use.\n\n```bash\n$ nodebrew use v8.9.4\n$ node -v\nv8.9.4\n\n# or\n$ nodebrew use latest # latest version\n$ nodebrew use stable # stable version\n$ nodebrew use v8.9   # v8.9 latest\n$ nodebrew use 8.9.4  # without `v`\n```\n\n### `nodebrew ls` or `nodebrew list`\n\nList all installed versions.\n\n```bash\n$ nodebrew ls\nv8.9.9\nv8.9.4\n\ncurrent: v8.9.4\n```\n\n### `nodebrew ls-remote`\n\nList remote versions.\n\n```bash\n$ nodebrew ls-remote\nv0.0.1    v0.0.2    v0.0.3    v0.0.4    v0.0.5    v0.0.6\n...\n```\n\n### `nodebrew ls-all`\n\nList installed and remote versions.\n\n```bash\n$ nodebrew ls-all\nRemote:\nv0.0.1    v0.0.2    v0.0.3    v0.0.4    v0.0.5    v0.0.6\n...\n\nLocal:\nv8.9.0\nv8.9.4\n\ncurrent: v8.9.4\n```\n\n### `nodebrew alias`\n\nSet alias.\n\n```bash\n$ nodebrew alias default v8.9.4\ndefault -> v8.9.4\n\n$ nodebrew use default\nuse v8.9.4\n\n$ nodebrew unalias default\nremove default\n```\n\n### `nodebrew uninstall <version>`\n\nUninstall Node.js.\n\n```bash\n$ nodebrew uninstall v8.9.4\nv8.9.4 uninstalled\n```\n\n### `nodebrew selfupdate`\n\nUpdate nodebrew itself.\n\n```bash\n$ nodebrew selfupdate\n```\n\n### `nodebrew exec <version>`\n\nExecute other version temporary.\n\n```bash\n$ nodebrew exec v8.9.4 -- node app.js\n```\n\n## All commands\n\n```bash\n$ nodebrew help                         Show this message\n$ nodebrew install <version>            Download and install <version> (from binary)\n$ nodebrew compile <version>            Download and install <version> (from source)\n$ nodebrew install-binary <version>     Alias of `install` (For backward compatibility)\n$ nodebrew uninstall <version>          Uninstall <version>\n$ nodebrew use <version>                Use <version>\n$ nodebrew list                         List installed versions\n$ nodebrew ls                           Alias for `list`\n$ nodebrew ls-remote                    List remote versions\n$ nodebrew ls-all                       List remote and installed versions\n$ nodebrew alias <key> <value>          Set alias\n$ nodebrew unalias <key>                Remove alias\n$ nodebrew clean <version> | all        Remove source file\n$ nodebrew selfupdate                   Update nodebrew\n$ nodebrew migrate-package <version>    Install global NPM packages contained in <version> to current version\n$ nodebrew exec <version> -- <command>  Execute <command> using specified <version>\n$ nodebrew prune [--dry-run]            Uninstall old versions, keeping the latest version for each major version\n```\n\n## Uninstall nodebrew\n\n```\n$ rm -rf $HOME/.nodebrew\n```\n\nThat's all.\n\n## Development\n\nInstall dependencies for testing.\n\n```bash\n$ carton install\n```\n\nRun test.\n\n```bash\n$ carton exec -- prove -lvr\n```\n\n## License\n\nMIT Â© [Kazuhito Hokamura](https://github.com/hokaccha)"
}
