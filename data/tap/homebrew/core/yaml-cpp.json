{
  "name": "yaml-cpp",
  "full_name": "yaml-cpp",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "C++ YAML parser and emitter for YAML 1.2 spec",
  "license": "MIT",
  "homepage": "https://github.com/jbeder/yaml-cpp",
  "versions": {
    "stable": "0.7.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/jbeder/yaml-cpp/archive/yaml-cpp-0.7.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "43e6a9fcb146ad871515f0d0873947e5d497a1c9c60c58cb102a97b47208b7c3"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/yaml-cpp/blobs/sha256:c0c34d815d25a11a6d2abcdd1d48491880a6c52ccb834517583d417be32da89d",
          "sha256": "c0c34d815d25a11a6d2abcdd1d48491880a6c52ccb834517583d417be32da89d"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/yaml-cpp/blobs/sha256:870e42a85ee38ad3e908d2316f084ea62d01ee79aaa99975226457acdc0267df",
          "sha256": "870e42a85ee38ad3e908d2316f084ea62d01ee79aaa99975226457acdc0267df"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/yaml-cpp/blobs/sha256:73eb2c62c966671c744577b1ee6661edd0c1f993756ecdd68845aed7d67cc89a",
          "sha256": "73eb2c62c966671c744577b1ee6661edd0c1f993756ecdd68845aed7d67cc89a"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/yaml-cpp/blobs/sha256:7d8e17b3f46aa111e1f911bdb16735d7199208299bb5c54d40f69434abf72b24",
          "sha256": "7d8e17b3f46aa111e1f911bdb16735d7199208299bb5c54d40f69434abf72b24"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/yaml-cpp/blobs/sha256:352369aa5a46cbbc4f28296f51707ac0adfe30884a11d8b3e75b6a877d5f92e4",
          "sha256": "352369aa5a46cbbc4f28296f51707ac0adfe30884a11d8b3e75b6a877d5f92e4"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/yaml-cpp/blobs/sha256:d78ff4565c1d214901754ec12f0e410d60c907a9a312ea246197bbf18fca4e8c",
          "sha256": "d78ff4565c1d214901754ec12f0e410d60c907a9a312ea246197bbf18fca4e8c"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/yaml-cpp/blobs/sha256:7b8fb20fdf64723b7aa72127d070484ec9e3e3225c4ab5f3c6247743b987e9f6",
          "sha256": "7b8fb20fdf64723b7aa72127d070484ec9e3e3225c4ab5f3c6247743b987e9f6"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/yaml-cpp/blobs/sha256:16923a628827f80bea57cad5c5a2ca222b2b00d0105367cb265f6c3df7f4b5c2",
          "sha256": "16923a628827f80bea57cad5c5a2ca222b2b00d0105367cb265f6c3df7f4b5c2"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/yaml-cpp.rb",
  "ruby_source_checksum": {
    "sha256": "cc7afe1385c46cc46e95b19c6a25f695459a1a86795bd77e4c7501bcf0dd2d78"
  },
  "date_added": "2011-01-02T20:41:09+00:00",
  "readme": "# yaml-cpp ![Build Status](https://github.com/jbeder/yaml-cpp/actions/workflows/build.yml/badge.svg) [![Documentation](https://codedocs.xyz/jbeder/yaml-cpp.svg)](https://codedocs.xyz/jbeder/yaml-cpp/)\n\n`yaml-cpp` is a [YAML](http://www.yaml.org/) parser and emitter in C++ matching the [YAML 1.2 spec](http://www.yaml.org/spec/1.2/spec.html).\n\n## Usage\n\nSee [Tutorial](https://github.com/jbeder/yaml-cpp/wiki/Tutorial) and [How to Emit YAML](https://github.com/jbeder/yaml-cpp/wiki/How-To-Emit-YAML) for reference. For the old API (until 0.5.0), see [How To Parse A Document](https://github.com/jbeder/yaml-cpp/wiki/How-To-Parse-A-Document-(Old-API)).\n\n## Any Problems?\n\nIf you find a bug, post an [issue](https://github.com/jbeder/yaml-cpp/issues)! If you have questions about how to use yaml-cpp, please post it on http://stackoverflow.com and tag it [`yaml-cpp`](http://stackoverflow.com/questions/tagged/yaml-cpp).\n\n## How to Build\n\n`yaml-cpp` uses [CMake](http://www.cmake.org) to support cross-platform building. Install [CMake](http://www.cmake.org) _(Resources -> Download)_ before proceeding. The basic steps to build are:\n\n**Note:** If you don't use the provided installer for your platform, make sure that you add `CMake`'s bin folder to your path.\n\n#### 1. Navigate into the source directory, create build folder and run `CMake`:\n\n```sh\nmkdir build\ncd build\ncmake [-G generator] [-DYAML_BUILD_SHARED_LIBS=on|OFF] ..\n```\n\n  * The `generator` option is the build system you'd like to use. Run `cmake` without arguments to see a full list of available generators.\n    * On Windows, you might use \"Visual Studio 12 2013\" (VS 2013 32-bits), or \"Visual Studio 14 2015 Win64\" (VS 2015 64-bits).\n    * On OS X, you might use \"Xcode\".\n    * On a UNIX-like system, omit the option (for a Makefile).\n\n  * `yaml-cpp` builds a static library by default, you may want to build a shared library by specifying `-DYAML_BUILD_SHARED_LIBS=ON`.\n\n  * For more options on customizing the build, see the [CMakeLists.txt](https://github.com/jbeder/yaml-cpp/blob/master/CMakeLists.txt) file.\n\n#### 2. Build it!\n  * The command you'll need to run depends on the generator you chose earlier.\n\n**Note:** To clean up, just remove the `build` directory.\n\n## Recent Releases\n\n[yaml-cpp 0.6.0](https://github.com/jbeder/yaml-cpp/releases/tag/yaml-cpp-0.6.0) released! This release requires C++11, and no longer depends on Boost.\n\n[yaml-cpp 0.3.0](https://github.com/jbeder/yaml-cpp/releases/tag/release-0.3.0) is still available if you want the old API.\n\n**The old API will continue to be supported, and will still receive bugfixes!** The 0.3.x and 0.4.x versions will be old API releases, and 0.5.x and above will all be new API releases.\n\n# API Documentation \n\nThe autogenerated API reference is hosted on [CodeDocs](https://codedocs.xyz/jbeder/yaml-cpp/index.html)\n\n# Third Party Integrations\n\nThe following projects are not officially supported:\n\n- [Qt wrapper](https://gist.github.com/brcha/d392b2fe5f1e427cc8a6)\n- [UnrealEngine Wrapper](https://github.com/jwindgassen/UnrealYAML)"
}
