{
  "name": "jp",
  "full_name": "jp",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Dead simple terminal plots from JSON data",
  "license": "MIT",
  "homepage": "https://github.com/sgreben/jp",
  "versions": {
    "stable": "1.1.12",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/sgreben/jp/archive/1.1.12.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "8c9cddf8b9d9bfae72be448218ca0e18d24e755d36c915842b12398fefdc7a64"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jp/blobs/sha256:ea0dcfefb673157d2c4492bfa9e2bc012f475e7dfa23e28b6c18ce5805474a59",
          "sha256": "ea0dcfefb673157d2c4492bfa9e2bc012f475e7dfa23e28b6c18ce5805474a59"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jp/blobs/sha256:37b85d8d9876ffae1cdf4a3897ca558f2586a826a229d9b85d5799b33e338a89",
          "sha256": "37b85d8d9876ffae1cdf4a3897ca558f2586a826a229d9b85d5799b33e338a89"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jp/blobs/sha256:2aa9562dff431b094f70d345de3957b0732ccb1695647575fe34d027d2130938",
          "sha256": "2aa9562dff431b094f70d345de3957b0732ccb1695647575fe34d027d2130938"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jp/blobs/sha256:4ab9a9c62daeea0f88e6fbfaa6fccfb630ff4845f9d6fbf587ba4f2d36a015ba",
          "sha256": "4ab9a9c62daeea0f88e6fbfaa6fccfb630ff4845f9d6fbf587ba4f2d36a015ba"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jp/blobs/sha256:bc42ad4f32e4380b871408f010259e4e25f10db71d61d7a739a0e4c12325cef0",
          "sha256": "bc42ad4f32e4380b871408f010259e4e25f10db71d61d7a739a0e4c12325cef0"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jp/blobs/sha256:821c7e9f81aced60be498ca8820c76c0bc5ae825f1de4d1b1b67a7376e1cff6a",
          "sha256": "821c7e9f81aced60be498ca8820c76c0bc5ae825f1de4d1b1b67a7376e1cff6a"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jp/blobs/sha256:ee325c2512d2a069983175999db20d55c8718fd0f0ea000692e6517ac67b32b9",
          "sha256": "ee325c2512d2a069983175999db20d55c8718fd0f0ea000692e6517ac67b32b9"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jp/blobs/sha256:53127a663b20c7c0ac893d991330ca862a6eaa8f235586019e1b8ac33159bcf3",
          "sha256": "53127a663b20c7c0ac893d991330ca862a6eaa8f235586019e1b8ac33159bcf3"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jp/blobs/sha256:51045489ba9e8790a83a2a366709bd941d3a9e7c190f6c184bcf308b888496b3",
          "sha256": "51045489ba9e8790a83a2a366709bd941d3a9e7c190f6c184bcf308b888496b3"
        },
        "sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jp/blobs/sha256:b75e4ab3a48e2212babba26a4258645ae55eefa50a9ccac463991b05ce4c08d6",
          "sha256": "b75e4ab3a48e2212babba26a4258645ae55eefa50a9ccac463991b05ce4c08d6"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jp/blobs/sha256:3b35ee0680b137a2202b4ce685bbfa80ccd9dca2ec2e7ab550b2f3384b2b8f68",
          "sha256": "3b35ee0680b137a2202b4ce685bbfa80ccd9dca2ec2e7ab550b2f3384b2b8f68"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/jp.rb",
  "ruby_source_checksum": {
    "sha256": "193a2d0d1bfc102d4a6bcd684fd1118f905ec41f87cc2c0edfa1362b8bba3f2b"
  },
  "date_added": "2019-02-07T12:52:08+01:00",
  "readme": "# jp\n\nDead simple terminal plots from JSON (or CSV) data. Bar charts, line charts, scatter plots, histograms and heatmaps are supported.\n\n[![Build Status](https://travis-ci.org/sgreben/jp.svg?branch=master)](https://travis-ci.org/sgreben/jp)\n\n![Screenshot](docs/sin.png)\n\n<!-- TOC -->\n\n- [Get it](#get-it)\n- [Use it](#use-it)\n- [Examples](#examples)\n    - [Bar chart](#bar-chart)\n        - [Separate X and Y values](#separate-x-and-y-values)\n        - [XY pairs](#xy-pairs)\n        - [Y values only (X=index)](#y-values-only-xindex)\n        - [Array data](#array-data)\n    - [Line chart](#line-chart)\n        - [Array data, separate X and Y values](#array-data-separate-x-and-y-values)\n        - [Array data, XY pairs](#array-data-xy-pairs)\n        - [Y values only (X=index)](#y-values-only-xindex-1)\n    - [Scatter plot](#scatter-plot)\n    - [Histogram](#histogram)\n        - [Auto bin number](#auto-bin-number)\n        - [Fixed bin number](#fixed-bin-number)\n    - [2D Histogram (heatmap)](#2d-histogram-heatmap)\n    - [JSONLines input](#jsonlines-input)\n    - [CSV input](#csv-input)\n- [Screenshots](#screenshots)\n- [Licensing](#licensing)\n\n<!-- /TOC -->\n\n## Get it\n\n```bash\ngo get -u github.com/sgreben/jp/cmd/jp\n```\n\nOr [download the binary](https://github.com/sgreben/jp/releases/latest) from the releases page.\n\n```bash\n# Linux\ncurl -LO https://github.com/sgreben/jp/releases/download/1.1.12/jp_1.1.12_linux_x86_64.zip\nunzip jp_1.1.12_linux_x86_64.zip\n\n# OS X\ncurl -LO https://github.com/sgreben/jp/releases/download/1.1.12/jp_1.1.12_osx_x86_64.zip\nunzip jp_1.1.12_osx_x86_64.zip\n\n# Windows\ncurl -LO https://github.com/sgreben/jp/releases/download/1.1.12/jp_1.1.12_windows_x86_64.zip\nunzip jp_1.1.12_windows_x86_64.zip\n```\n\n## Use it\n\n`jp` reads JSON (or CSV) on stdin and prints plots to stdout.\n\n```text\nUsage of jp:\n  -type value\n    \tPlot type. One of [line bar scatter hist hist2d] (default line)\n  -x string\n    \tx values (JSONPath expression)\n  -y string\n    \ty values (JSONPath expression)\n  -xy string\n    \tx,y value pairs (JSONPath expression). Overrides -x and -y if given.\n  -bins uint\n        Number of histogram bins (default 0 (auto))\n  -input value\n        Input type. One of [json csv] (default json)\n  -height int\n    \tPlot height (default 0 (auto))\n  -width int\n    \tPlot width (default 0 (auto))\n  -canvas value\n    \tCanvas type. One of [full full-escape full-bw full-wb quarter braille auto] (default auto)\n```\n\n## Examples\n\n### Bar chart\n\n#### Separate X and Y values\n\n```bash\n$ < examples/tcp-time.json jp -x ..Label -y ..Count -type bar\n\n         69\n    █████████████\n    █████████████\n    █████████████\n    █████████████\n    █████████████\n    █████████████      21\n    █████████████ █████████████       7             2             1\n    █████████████ █████████████ ▄▄▄▄▄▄▄▄▄▄▄▄▄ ▁▁▁▁▁▁▁▁▁▁▁▁▁ ▁▁▁▁▁▁▁▁▁▁▁▁▁\n\n     46.85267ms    48.38578ms    49.91889ms     51.452ms     52.98511ms\n```\n\n\n#### XY pairs\n\n```bash\n$ < examples/tcp-time.json jp -xy \"..[Label,Count]\" -type bar\n\n         69\n    █████████████\n    █████████████\n    █████████████\n    █████████████\n    █████████████\n    █████████████      21\n    █████████████ █████████████       7             2             1\n    █████████████ █████████████ ▄▄▄▄▄▄▄▄▄▄▄▄▄ ▁▁▁▁▁▁▁▁▁▁▁▁▁ ▁▁▁▁▁▁▁▁▁▁▁▁▁\n\n     46.85267ms    48.38578ms    49.91889ms     51.452ms     52.98511ms\n```\n\n#### Y values only (X=index)\n\n```bash\n$ < examples/tcp-time.json jp -y ..Count -type bar\n\n         69\n    █████████████\n    █████████████\n    █████████████\n    █████████████\n    █████████████\n    █████████████      21\n    █████████████ █████████████       7             2             1\n    █████████████ █████████████ ▄▄▄▄▄▄▄▄▄▄▄▄▄ ▁▁▁▁▁▁▁▁▁▁▁▁▁ ▁▁▁▁▁▁▁▁▁▁▁▁▁\n\n          0             1             2             3             4\n```\n\n#### Array data\n\n```bash\n$ echo '[[-3, 5], [-2, 0], [-1, 0.1], [0, 1], [1, 2], [2, 3]]' | jp -xy '[*][0, 1]' -type bar\n\n         5\n    ███████████\n    ███████████\n    ███████████                                                      3\n    ███████████                                                 ▄▄▄▄▄▄▄▄▄▄▄\n    ███████████                                          2      ███████████\n    ███████████                              1      ███████████ ███████████\n    ███████████                 0.1     ▄▄▄▄▄▄▄▄▄▄▄ ███████████ ███████████\n    ███████████      0      ▁▁▁▁▁▁▁▁▁▁▁ ███████████ ███████████ ███████████\n\n        -3          -2          -1           0           1           2\n```\n\n### Line chart\n\n#### Array data, separate X and Y values\n\n```bash\n$ jq -n '[range(200)/20 | [., sin]]' | jp -x '[*][0]' -y '[*][1]'\n  1.059955│         ▄▄▄▖                                       ▗▄▄▄▖\n          │       ▄▀▘  ▝▜▖                                   ▗▞▘   ▝▚\n          │      ▟       ▝▄                                 ▗▀       ▜\n          │     ▟         ▝▄                               ▗▀         ▜\n          │    ▐           ▝▖                             ▗▞           ▚▖\n          │   ▗▘            ▝▖                            ▞             ▚\n          │  ▗▘              ▚                           ▞               ▌\n          │  ▌                ▌                         ▗▘               ▝▖\n          │ ▞                 ▝▖                        ▌                 ▚\n          │▗▘                  ▚                       ▞                   ▌\n          │▌                    ▌                     ▗▘                   ▝▖\n          │                     ▝▖                   ▗▘                     ▐\n          │                      ▐                   ▞                       ▚\n          │                       ▚                 ▐                        ▝▖\n          │                       ▝▖               ▗▘                         ▐\n          │                        ▐               ▞                           ▚\n          │                         ▀▖            ▐\n          │                          ▚           ▄▘\n          │                           ▙         ▗▘\n          │                            ▚       ▄▘\n          │                             ▚▄   ▗▞▘\n          │                              ▝▀▀▀▘\n -1.059955└─────────────────────────────────────────────────────────────────────\n          0                                                                 9.95\n```\n\n#### Array data, XY pairs\n\n```bash\n$ jq -n '[range(200)/20 | [., sin]]' | jp -xy '[*][0, 1]'\n  1.059955│         ▄▄▄▖                                       ▗▄▄▄▖\n          │       ▄▀▘  ▝▜▖                                   ▗▞▘   ▝▚\n          │      ▟       ▝▄                                 ▗▀       ▜\n          │     ▟         ▝▄                               ▗▀         ▜\n          │    ▐           ▝▖                             ▗▞           ▚▖\n          │   ▗▘            ▝▖                            ▞             ▚\n          │  ▗▘              ▚                           ▞               ▌\n          │  ▌                ▌                         ▗▘               ▝▖\n          │ ▞                 ▝▖                        ▌                 ▚\n          │▗▘                  ▚                       ▞                   ▌\n          │▌                    ▌                     ▗▘                   ▝▖\n          │                     ▝▖                   ▗▘                     ▐\n          │                      ▐                   ▞                       ▚\n          │                       ▚                 ▐                        ▝▖\n          │                       ▝▖               ▗▘                         ▐\n          │                        ▐               ▞                           ▚\n          │                         ▀▖            ▐\n          │                          ▚           ▄▘\n          │                           ▙         ▗▘\n          │                            ▚       ▄▘\n          │                             ▚▄   ▗▞▘\n          │                              ▝▀▀▀▘\n -1.059955└─────────────────────────────────────────────────────────────────────\n          0                                                                 9.95\n```\n\n#### Y values only (X=index)\n\n```bash\n$ < examples/tcp-time.json jp -y ..Duration\n 5.726165e+07│\n             │\n             │\n             │\n             │ ▗\n             │ ▟\n             │ █\n             │▐▝▖\n             │▐ ▌                                   ▌\n             │▐ ▌                                   ▌\n             │▌ ▌                                  ▐▚\n             │▌ ▌                ▗       ▗         ▐▐    ▌\n             │▘ ▌              ▖ ▐      ▞▀▖        ▐▐    ▌\n             │  ▚   ▐▚  ▗▀▖   ▗▚ ▌▌    ▗▘ ▌ ▖▗▀▌   ▌▐    █\n             │  ▐  ▛▌ ▚▖▞ ▚▐▖ ▞▐ ▌▌ ▗  ▐  ▐▟▐▞ ▚ ▗ ▌▝▖  ▐▐                      ▐\n             │  ▐ ▐    ▝  ▝▌▝▀ ▝▟ ▚▗▜  ▞     ▘ ▐▖█▗▘ ▌  ▐▐    ▗  ▄▖     ▄▖      ▌▌\n             │  ▝▚▐        ▘    ▘ ▐▘▝▖▄▌        ▝▝▟  ▀▀▚▟ ▌ ▖▞▘▌▐ ▚ ▗▄ ▐ ▚▄▖ ▄ ▄▘▌▞▄▄▀▚   ▄ ▄▗▞▖▞▄▄▚\n             │   ▝▌                  ▛            ▌     ▝ ▙▞▝  ▝▘ ▝▚▘ ▀▘   ▝▀ ▀  ▐▘    ▚▞▀ ▀ ▘ ▚▘\n             │\n             │\n             │\n             │\n 4.446018e+07└──────────────────────────────────────────────────────────────────────────────────────\n             0                                                                                    99\n```\n\n### Scatter plot\n\n```bash\n$ < examples/mvrnorm.json jp -xy '..[x,y]' -type scatter\n\n 3.535344│                                 ⠄             ⠄\n         │                               ⠈⠂   ⠂       ⡀ ⠂\n         │                          ⠐⡀⡀⡂   ⠁  ⢄  ⠁ ⠠\n         │                            ⡀    ⠆     ⠈  ⠄⡀        ⠂\n         │           ⡀       ⠠  ⡀ ⡀ ⠄  ⡀⠐⠄⠁⠐ ⠠⢆⠠⠂⠂⠄⣀⢈  ⡀⠈ ⡀\n         │                     ⡀⠂⠂⠄ ⡀⠂⢔⠠ ⢤⢀⠌⣡⠁⠦⠄⠐⡐⠂⣀⠅⠁⠈ ⠂ ⠈⠁⠁      ⡀     ⠄\n         │  ⡀         ⢀  ⠄     ⠈⠠ ⠡⠑⠈⠈⢢⡁⡄⢈⠂⢡⠈⡄⡀⠈⠰⢉⡠⠘⢄⢃⠉⢀⣄⠢⠠⠄ ⠠ ⡀⠁ ⡀ ⠂\n         │                   ⠈ ⡂⠈⡁⠈⠄⢂⡹⡐⡡⡆⡥⣙⡶⡼⠱⣅⣅⣼⢗⡱⢐⣈⠑⢁⠂ ⢐⢁⠭⠘⡀  ⠈\n         │                ⠁ ⢀⠄⢈⠈⡰⢀⡥⠋⣧⣓⣚⡛⢲⣽⣝⣭⢙⣟⢲⡽⣋⡠⣿⣜⣵⠙⡦⠗ ⣡⠁⠁⠁⠄⠠ ⠄⡂\n         │                  ⠄⠌⠌⠡⠉⡐⢯⣵⡏⢵⡞⠂⢰⣽⣷⢛⣯⡣⣷⢭⣞⣏⠤⣾⢡⡻⠢⢊⢠⡠⠸⢄⣃⡀⢁⠐ ⠐⡀ ⠂    ⠄\n         │              ⠨ ⡈⠂ ⢀⢑⠄⣜⡾⣴⢨⠶⣪⣧⢿⣷⣷⡱⣿⣞⣲⣮⣮⣯⢾⡷⡬⡷⣺⠤⢏⡼⣨⢌⡬⠠⢂⢠⠒⠱⠆⡈\n         │          ⠈  ⠃ ⠄⡐⠂⠐⢀⢈⣂⡈⣳⣷⣜⢺⣿⣹⣷⣼⣯⡿⣃⣽⣿⢾⣟⣾⢵⣻⠯⡼⡃⣼⣗⢲⠪⠇⣉⠺ ⢱⠠⠙⡀⢐⠌\n         │          ⠄   ⠈⠊⠐⠑⠨⠚⢁⡊⢾⡶⢩⢿⣏⣽⢞⣼⣇⣵⣿⣿⣽⣿⢽⣭⠺⣿⣽⣳⢚⣾⣻⣾⣜⠩⡒⣃⠈⢢⠕⢂⢰⡀  ⡔⢀⢀    ⡀\n         │            ⢀⠂⠁⠂⠇ ⠂⠊⢀⠐⡘⡍⡇⣚⢸⢟⣯⢿⣳⡪⣫⣵⣿⣯⣿⢿⣷⣻⣖⣗⣻⣚⢥⡷⣕⣏⠶⠊⠄⣠⠰⠂⡄⠂ ⠄⠁\n         │             ⠠⢂ ⠘⠐⣀ ⣀⢡⢐⠔⢫⠯⢕⠫⠿⣹⢶⣾⡻⣭⣽⢗⠿⣹⣛⣺⣿⠯⢲⡼⣵⢉⣭⢐⣟⡍⠄⠈⠥⠄   ⠁   ⠄\n         │             ⠈⠂  ⠊⡀⡈⠢⡌⡠⠖⢤⠥⡑⣯⣾⣴⣯⡿⣯⣝⣯⣿⠧⣽⣒⢾⣼⣻⣛⣗⡹⡽⢪⠯⠒⡨⠈ ⠈⡐⢄ ⠂⠘⠠        ⠂\n         │              ⠰  ⡀⠃⠁⠠ ⠉⡈⡨⡱⢍⠌⠷⣯⠫⠬⡙⣴⣯⡣⡟⡮⠩⣫⠿⢞⢵⡰⠞⡂⠴ ⠕⢀⡂⠁ ⢀ ⠤   ⠈\n         │               ⢩⠂ ⠁⡄ ⢀⠲⢂⠑⢁⡘⠄⠵⣣⢑⢻⠨⡩⣌⠕⢮⣮⣋⢹⡁⣊⡃⠈⡕⡘⡠⠨⠄⡘⠨ ⠊⠁   ⠂\n         │          ⠐     ⢀ ⠈⠐⠔⠈  ⠁⢀⣀⡃⣊⢁⡘⠁⠛⠨ ⠒⡑⡀⠵⢙⠄⠡⠢⠃⠄⠋⠅ ⠥⠁⠠⢀ ⠄\n         │                  ⢀⢁ ⠆   ⠉⠁⠐ ⠄⠁⢑⡀⢀⠠⠑⢡⢊⠂⠑⠌⡅⠊⠄⠉⢈⡐  ⡀ ⠠   ⠂\n         │                      ⢀   ⠑ ⠂  ⡁ ⠌⢠⠈⠂⠄⠉⡃⠈⠄   ⠂⠠⠁ ⠄  ⢀ ⠠\n         │                             ⠐ ⠐ ⢁⠂⠂⠢⠠⠄⠔⠐       ⠁\n         │                         ⠢  ⠁    ⠂⠐  ⠐       ⠐   ⠈\n         │                           ⢀  ⠄⠈       ⠈\n         │                                        ⠐\n         │\n         │\n         │                                      ⠈\n-4.271874└─────────────────────────────────────────────────────────────────────\n          -4.08815                                                       3.79083\n```\n\n### Histogram\n\n#### Auto bin number\n\n```\n$ < examples/mvrnorm.json jp -x ..x -type hist\n                                    684                                     1  [-3.27033,-2.69856)\n                                   █████▌                                   2  [-2.69856,-2.12679)\n                                   █████▌ 624                               3  [-2.12679,-1.55502)\n                                   ███████████                              4  [-1.55502,-0.983254)\n                               557 ███████████                              5  [-0.983254,-0.411485)\n                             ▐████████████████                              6  [-0.411485,0.160285)\n                             ▐████████████████                              7  [0.160285,0.732054)\n                             ▐████████████████                              8  [0.732054,1.30382)\n                             ▐████████████████                              9  [1.30382,1.87559)\n                             ▐████████████████ 404                          10 [1.87559,2.44736)\n                             ▐█████████████████████▌                        11 [2.44736,3.01913)\n                         314 ▐█████████████████████▌                        12 [3.01913,3.5909]\n                        ▄▄▄▄▄▟█████████████████████▌\n                        ███████████████████████████▌\n                        ███████████████████████████▌\n                        ███████████████████████████▌\n                        ███████████████████████████▌ 176\n                        █████████████████████████████████\n                    98  █████████████████████████████████\n                  ▐██████████████████████████████████████ 79\n    1     4   41  ▐███████████████████████████████████████████  14    4\n  ▁▁▁▁▁▁▁▁▁▁▁█████████████████████████████████████████████████▁▁▁▁▁▁▁▁▁▁▁\n\n    0     1    2     3    4     5    6     7    8     9   10    11   12\n```\n\n#### Fixed bin number\n\n```\n$ < examples/mvrnorm.json jp -x ..x -type hist -bins 5\n                                         1652\n                                    █████████████████\n                                    █████████████████\n                                    █████████████████\n                                    █████████████████\n                                    █████████████████\n                                    █████████████████\n                                    █████████████████\n                                    █████████████████\n                                    █████████████████\n                                    █████████████████\n                                    █████████████████\n                                    █████████████████       728\n                                    ██████████████████████████████████\n                          541       ██████████████████████████████████\n                   ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄██████████████████████████████████\n                   ███████████████████████████████████████████████████\n                   ███████████████████████████████████████████████████\n                   ███████████████████████████████████████████████████\n                   ███████████████████████████████████████████████████\n         22        ███████████████████████████████████████████████████       57\n  ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███████████████████████████████████████████████████▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄\n\n  [-3.8421,-2.3555)[-2.3555,-0.8689)[-0.8689,0.6177)  [0.6177,2.1043)  [2.1043,3.5909]\n```\n\n### 2D Histogram (heatmap)\n\n```\n$ < examples/mvrnorm.json jp -xy '..[x,y]' -type hist2d\n\n  3.3608│                   ····    ········    ····\n        │                   ····    ········    ····\n        │                   ····    ········    ····\n        │                   ················    ····\n        │                   ················    ····\n        │           ································\n        │           ································\n        │       ················░░░░░░░░░░░░················\n        │       ················░░░░░░░░░░░░················\n        │       ············▒▒▒▒▓▓▓▓▒▒▒▒▒▒▒▒░░░░············\n        │       ············▒▒▒▒▓▓▓▓▒▒▒▒▒▒▒▒░░░░············\n        │···············▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒············\n        │···············▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒············\n        │       ········░░░░▓▓▓▓▓▓▓▓████▓▓▓▓▒▒▒▒············\n        │       ········░░░░▓▓▓▓▓▓▓▓████▓▓▓▓▒▒▒▒············\n        │       ········░░░░▓▓▓▓▓▓▓▓████▓▓▓▓▒▒▒▒············\n        │   ············▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒············\n        │   ············▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒············\n        │       ············▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒················\n        │       ············▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒················\n        │           ····································\n        │           ····································\n        │               ····························\n        │               ····························\n        │               ····        ····        ····\n        │               ····        ····        ····\n        │                                   ····\n        │                                   ····\n -4.0045└───────────────────────────────────────────────────\n        -3.8421                                       3.5909\n```\n\n### JSONLines input\n\nIf your data consists of whitespace-separated JSON values (known as [JSONLines](http://jsonlines.org/) for newline separators), you can use the `-s` (\"slurp\") mode of `jq` to aggregate your data points into a single array before passing it to `jp`:\n\n```sh\n$ echo \"[0,1]\" \"[1,2]\" \"[2,3]\" | jq -s . | jp\n\n 3.16│\n     │                                                   ▄▄▀\n     │                                               ▄▄▀▀\n     │                                           ▄▄▀▀\n     │                                      ▗▄▄▀▀\n     │                                  ▗▄▞▀▘\n     │                              ▗▄▞▀▘\n     │                          ▗▄▞▀▘\n     │                      ▗▄▞▀▘\n     │                  ▗▄▞▀▘\n     │              ▗▄▞▀▘\n     │           ▄▄▀▘\n     │       ▄▄▀▀\n     │   ▄▄▀▀\n     │▄▀▀\n 0.94└──────────────────────────────────────────────────────\n     0                                                     2\n```\n\n### CSV input\n\n```\n$ < examples/sin.csv jp -input csv -xy '[*][0,1]'\n\n  1.059955│       ▗▄▛▀▀▚▄▖                                    ▄▄▀▀▀▄▄\n          │     ▗▞▘      ▝▚▖                                ▄▀      ▝▀▄\n          │    ▟▘          ▝▄                             ▗▀          ▝▀▖\n          │  ▗▛              ▚▖                          ▞▘             ▝▙\n          │ ▄▘                ▀▖                        ▞                 ▚\n          │▞▘                  ▝▌                     ▗▛                   ▚▖\n          │                     ▝▚                   ▐▘                     ▝▄\n          │                       ▜▖                ▟▘                       ▝▄\n          │                        ▐▄             ▗▞                          ▝▚\n          │                          ▚▖          ▄▀\n          │                           ▀▙▖      ▄▛\n          │                             ▀▀▄▄▄▞▀▘\n -1.059955└─────────────────────────────────────────────────────────────────────\n          0                                                                 9.95\n```\n\n## Screenshots\n\n![Scatter plot](docs/scatter_plot.png)\n\n![Bar chart](docs/bar_chart.png)\n\n![Bar chart](docs/bar_chart_full_escape.png)\n\n![Line chart](docs/line_chart.png)\n\n![Heatmap](docs/hist2d_full_escape.png)\n\n## Licensing\n\n- Any original code is licensed under the [MIT License](./LICENSE).\n- Included portions of [github.com/buger/goterm](https://github.com/buger/goterm) are licensed under the MIT License.\n- Included portions of [github.com/kubernetes/client-go](https://github.com/kubernetes/client-go/tree/master/util/jsonpath) are licensed under the Apache License 2.0."
}
