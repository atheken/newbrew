{
  "name": "pure",
  "full_name": "pure",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Pretty, minimal and fast ZSH prompt",
  "license": "MIT",
  "homepage": "https://github.com/sindresorhus/pure",
  "versions": {
    "stable": "1.22.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/sindresorhus/pure/archive/v1.22.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "b6a19630d16409550742ec4d4468112b202fcde13a82ee4f2746c8d30e2903f6"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pure/blobs/sha256:2843ab2c5991c4e8c3c1583d7567ae6412e9948d098011f51573976ea747069c",
          "sha256": "2843ab2c5991c4e8c3c1583d7567ae6412e9948d098011f51573976ea747069c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "zsh-async"
  ],
  "test_dependencies": [
    "zsh"
  ],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/pure.rb",
  "ruby_source_checksum": {
    "sha256": "e21463bfa1d4beeb8805ee2bfe40ede0909062465859868e834b4c4a1c61a722"
  },
  "date_added": "2010-05-16T20:31:00+02:00",
  "readme": "# Pure\n\n> Pretty, minimal and fast ZSH prompt\n\n<img src=\"screenshot.png\" width=\"864\">\n\n<br>\n\n---\n\n<div align=\"center\">\n\t<p>\n\t\t<p>\n\t\t\t<sup>\n\t\t\t\t<a href=\"https://github.com/sponsors/sindresorhus\">Sindre Sorhus' open source work is supported by the community</a>\n\t\t\t</sup>\n\t\t</p>\n\t\t<sup>Special thanks to:</sup>\n\t\t<br>\n\t\t<br>\n\t\t<br>\n\t\t<a href=\"https://standardresume.co/tech\">\n\t\t\t<img src=\"https://sindresorhus.com/assets/thanks/standard-resume-logo.svg\" width=\"200\"/>\n\t\t</a>\n\t\t<br>\n\t\t<br>\n\t\t<br>\n\t\t<a href=\"https://www.gitpod.io/?utm_campaign=sindresorhus&utm_medium=referral&utm_content=awesome&utm_source=github\">\n\t\t\t<div>\n\t\t\t\t<img src=\"https://sindresorhus.com/assets/thanks/gitpod-logo-white-bg.svg\" width=\"240\" alt=\"Gitpod\">\n\t\t\t</div>\n\t\t\t<b>Dev environments built for the cloud</b>\n\t\t\t<div>\n\t\t\t\t<sub>\n\t\t\t\tNatively integrated with GitLab, GitHub, and Bitbucket, Gitpod automatically and continuously prebuilds dev\n\t\t\t\t<br>\n\t\t\t\tenvironments for all your branches. As a result team members can instantly start coding with fresh dev environments\n\t\t\t\t<br>\n\t\t\t\tfor each new task - no matter if you are building a new feature, want to fix a bug, or work on a code review.\n\t\t\t\t</sub>\n\t\t\t</div>\n\t\t</a>\n\t\t<br>\n\t</p>\n</div>\n\n---\n\n<br>\n\n## Overview\n\nMost prompts are cluttered, ugly and slow. We wanted something visually pleasing that stayed out of our way.\n\n### Why?\n\n- Comes with the perfect prompt character.\n  Author went through the whole Unicode range to find it.\n- Shows `git` branch and whether it's dirty (with a `*`).\n- Indicates when you have unpushed/unpulled `git` commits with up/down arrows. *(Check is done asynchronously!)*\n- Prompt character turns red if the last command didn't exit with `0`.\n- Command execution time will be displayed if it exceeds the set threshold.\n- Username and host only displayed when in an SSH session or a container.\n- Shows the current path in the title and the [current folder & command](screenshot-title-cmd.png) when a process is running.\n- Support VI-mode indication by reverse prompt symbol (Zsh 5.3+).\n- Makes an excellent starting point for your own custom prompt.\n\n## Install\n\nCan be installed with `npm` or manually. Requires Git 2.15.2+ and ZSH 5.2+. Older versions of ZSH are known to work, but they are **not** recommended.\n\n### npm\n\n```sh\nnpm install --global pure-prompt\n```\n\nThat's it. Skip to [Getting started](#getting-started).\n\n### [Homebrew](https://brew.sh)\n\n```sh\nbrew install pure\n```\n\nIf you're not using ZSH from Homebrew (`brew install zsh` and `$(brew --prefix)/bin/zsh`), you must also add the site-functions to your `fpath` in `$HOME/.zshrc`:\n\n```sh\nfpath+=(\"$(brew --prefix)/share/zsh/site-functions\")\n```\n\n### Manually\n\n1. Clone this repo somewhere. Here we'll use `$HOME/.zsh/pure`.\n\n```sh\nmkdir -p \"$HOME/.zsh\"\ngit clone https://github.com/sindresorhus/pure.git \"$HOME/.zsh/pure\"\n```\n\n2. Add the path of the cloned repo to `$fpath` in `$HOME/.zshrc`.\n```sh\n# .zshrc\nfpath+=($HOME/.zsh/pure)\n```\n\n## Getting started\n\nInitialize the prompt system (if not so already) and choose `pure`:\n\n```sh\n# .zshrc\nautoload -U promptinit; promptinit\nprompt pure\n```\n\n## Options\n\n| Option                           | Description                                                                                    | Default value  |\n| :------------------------------- | :--------------------------------------------------------------------------------------------- | :------------- |\n| **`PURE_CMD_MAX_EXEC_TIME`**     | The max execution time of a process before its run time is shown when it exits.                | `5` seconds    |\n| **`PURE_GIT_PULL`**              | Prevents Pure from checking whether the current Git remote has been updated.                   | `1`            |\n| **`PURE_GIT_UNTRACKED_DIRTY`**   | Do not include untracked files in dirtiness check. Mostly useful on large repos (like WebKit). | `1`            |\n| **`PURE_GIT_DELAY_DIRTY_CHECK`** | Time in seconds to delay git dirty checking when `git status` takes > 5 seconds.               | `1800` seconds |\n| **`PURE_PROMPT_SYMBOL`**         | Defines the prompt symbol.                                                                     | `❯`            |\n| **`PURE_PROMPT_VICMD_SYMBOL`**   | Defines the prompt symbol used when the `vicmd` keymap is active (VI-mode).                    | `❮`            |\n| **`PURE_GIT_DOWN_ARROW`**        | Defines the git down arrow symbol.                                                             | `⇣`            |\n| **`PURE_GIT_UP_ARROW`**          | Defines the git up arrow symbol.                                                               | `⇡`            |\n| **`PURE_GIT_STASH_SYMBOL`**      | Defines the git stash symbol.                                                                  | `≡`            |\n\n## Zstyle options\n\nShowing git stash status as part of the prompt is not activated by default. To activate this you'll need to opt in via `zstyle`:\n\n`zstyle :prompt:pure:git:stash show yes`\n\nYou can set Pure to only `git fetch` the upstream branch of the current local branch. In some cases, this can result in faster updates for Git arrows, but for most users, it's better to leave this setting disabled. You can enable it with:\n\n`zstyle :prompt:pure:git:fetch only_upstream yes`\n\n`nix-shell` integration adds the shell name to the prompt when used from within a nix shell. It is enabled by default, you can disable it with:\n\n`zstyle :prompt:pure:environment:nix-shell show no`\n\n## Colors\n\nAs explained in ZSH's [manual](http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html#Character-Highlighting), color values can be:\n- A decimal integer corresponding to the color index of your terminal. If your `$TERM` is `xterm-256color`, see this [chart](https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg).\n- The name of one of the following nine colors: `black`, `red`, `green`, `yellow`, `blue`, `magenta`, `cyan`, `white`, and `default` (the terminal’s default foreground)\n- `#` followed by an RGB triplet in hexadecimal format, for example `#424242`. Only if your terminal supports 24-bit colors (true color) or when the [`zsh/nearcolor` module](http://zsh.sourceforge.net/Doc/Release/Zsh-Modules.html#The-zsh_002fnearcolor-Module) is loaded.\n\nColors can be changed by using [`zstyle`](http://zsh.sourceforge.net/Doc/Release/Zsh-Modules.html#The-zsh_002fzutil-Module) with a pattern of the form `:prompt:pure:$color_name` and style `color`. The color names, their default, and what part they affect are:\n- `execution_time` (yellow) - The execution time of the last command when exceeding `PURE_CMD_MAX_EXEC_TIME`.\n- `git:arrow` (cyan) - For `PURE_GIT_UP_ARROW` and `PURE_GIT_DOWN_ARROW`.\n- `git:stash` (cyan) - For `PURE_GIT_STASH_SYMBOL`.\n- `git:branch` (242) - The name of the current branch when in a Git repository.\n- `git:branch:cached` (red) - The name of the current branch when the data isn't fresh.\n- `git:action` (242) - The current action in progress (cherry-pick, rebase, etc.) when in a Git repository.\n- `git:dirty` (218) - The asterisk showing the branch is dirty.\n- `host` (242) - The hostname when on a remote machine.\n- `path` (blue) - The current path, for example, `PWD`.\n- `prompt:error` (red) - The `PURE_PROMPT_SYMBOL` when the previous command has *failed*.\n- `prompt:success` (magenta) - The `PURE_PROMPT_SYMBOL` when the previous command has *succeeded*.\n- `prompt:continuation` (242) - The color for showing the state of the parser in the continuation prompt (PS2). It's the pink part in [this screenshot](https://user-images.githubusercontent.com/147409/70068574-ebc74800-15f8-11ea-84c0-8b94a4b57ff4.png), it appears in the same spot as `virtualenv`. You could for example matching both colors so that Pure has a uniform look.\n- `suspended_jobs` (red) - The `✦` symbol indicates that jobs are running in the background.\n- `user` (242) - The username when on remote machine.\n- `user:root` (default) - The username when the user is root.\n- `virtualenv` (242) - The name of the Python `virtualenv` when in use.\n\nThe following diagram shows where each color is applied on the prompt:\n\n```\n┌────────────────────────────────────────────────────── user\n│      ┌─────────────────────────────────────────────── host\n│      │           ┌─────────────────────────────────── path\n│      │           │          ┌──────────────────────── git:branch\n│      │           │          │     ┌────────────────── git:dirty\n│      │           │          │     │ ┌──────────────── git:action\n│      │           │          │     │ │        ┌─────── git:arrow\n│      │           │          │     │ │        │ ┌───── git:stash\n│      │           │          │     │ │        │ │ ┌─── execution_time\n│      │           │          │     │ │        │ │ │\nzaphod@heartofgold ~/dev/pure master* rebase-i ⇡ ≡ 42s\nvenv ❯\n│    │\n│    └───────────────────────────────────────────────── prompt\n└────────────────────────────────────────────────────── virtualenv (or prompt:continuation)\n```\n\n### RGB colors\n\nThere are two ways to use RGB colors with the hexadecimal format. The correct way is to use a [terminal that support 24-bit colors](https://gist.github.com/XVilka/8346728) and enable this feature as explained in the terminal's documentation.\n\nIf you can't use such terminal, the module [`zsh/nearcolor`](http://zsh.sourceforge.net/Doc/Release/Zsh-Modules.html#The-zsh_002fnearcolor-Module) can be useful. It will map any hexadecimal color to the nearest color in the 88 or 256 color palettes of your terminal, but without using the first 16 colors, since their values can be modified by the user. Keep in mind that when using this module you won't be able to display true RGB colors. It only allows you to specify colors in a more convenient way. The following is an example on how to use this module:\n\n```sh\n# .zshrc\nzmodload zsh/nearcolor\nzstyle :prompt:pure:path color '#FF0000'\n```\n\n## Example\n\n```sh\n# .zshrc\n\nautoload -U promptinit; promptinit\n\n# optionally define some options\nPURE_CMD_MAX_EXEC_TIME=10\n\n# change the path color\nzstyle :prompt:pure:path color white\n\n# change the color for both `prompt:success` and `prompt:error`\nzstyle ':prompt:pure:prompt:*' color cyan\n\n# turn on git stash status\nzstyle :prompt:pure:git:stash show yes\n\nprompt pure\n```\n\n## Tips\n\nIn the screenshot you see Pure running in [Hyper](https://hyper.is) with the [hyper-snazzy](https://github.com/sindresorhus/hyper-snazzy) theme and Menlo font.\n\nThe [Tomorrow Night Eighties](https://github.com/chriskempson/tomorrow-theme) theme with the [Droid Sans Mono](https://www.fontsquirrel.com/fonts/droid-sans-mono) font (15pt) is also a [nice combination](https://github.com/sindresorhus/pure/blob/95ee3e7618c6e2162a1e3cdac2a88a20ac3beb27/screenshot.png).<br>\n*Just make sure you have anti-aliasing enabled in your terminal.*\n\nTo have commands colorized as seen in the screenshot, install [zsh-syntax-highlighting](https://github.com/zsh-users/zsh-syntax-highlighting).\n\n## Integration\n\n### [oh-my-zsh](https://github.com/robbyrussell/oh-my-zsh)\n\n1. Set `ZSH_THEME=\"\"` in your `.zshrc` to disable oh-my-zsh themes.\n2. Follow the Pure [Install](#install) instructions.\n3. Do not enable the following (incompatible) plugins: `vi-mode`, `virtualenv`.\n\n**NOTE:** `oh-my-zsh` overrides the prompt so Pure must be activated *after* `source $ZSH/oh-my-zsh.sh`.\n\n### [prezto](https://github.com/sorin-ionescu/prezto)\n\nPure is bundled with Prezto. No need to install it.\n\nAdd `prompt pure` to your `~/.zpreztorc`.\n\n### [zim](https://github.com/Eriner/zim)\n\nAdd `zmodule sindresorhus/pure --source async.zsh --source pure.zsh` to your `.zimrc` and run `zimfw install`.\n\n### [zplug](https://github.com/zplug/zplug)\n\nUpdate your `.zshrc` file with the following two lines:\n\n```sh\nzplug mafredri/zsh-async, from:github\nzplug sindresorhus/pure, use:pure.zsh, from:github, as:theme\n```\n\n### [zinit](https://github.com/zdharma/zinit)\n\nUpdate your `.zshrc` file with the following two lines (order matters):\n\n```sh\nzinit ice compile'(pure|async).zsh' pick'async.zsh' src'pure.zsh'\nzinit light sindresorhus/pure\n```\n\n### [zi](https://wiki.zshell.dev)\n\nUpdate your `.zshrc` file with the following line:\n\n```sh\nzi light-mode for @sindresorhus/pure\n```\n\nSee the [ZI wiki](https://wiki.zshell.dev/community/gallery/collection/themes#thp-sindresorhuspure) for more.\n\n## FAQ\n\nThere are currently no FAQs.\n\nSee [FAQ Archive](https://github.com/sindresorhus/pure/wiki/FAQ-Archive) for previous FAQs.\n\n## Ports\n\n- **ZSH**\n\t- [therealklanni/purity](https://github.com/therealklanni/purity) - More compact current working directory, important details on the main prompt line, and extra Git indicators.\n \t- [intelfx/pure](https://github.com/intelfx/pure) - Solarized-friendly colors, highly verbose, and fully async Git integration.\n\t- [forivall/pure](https://github.com/forivall/pure) - A minimal fork which highlights the Git repo's root directory in the path.\n\t- [dfurnes/purer](https://github.com/dfurnes/purer) - Compact single-line prompt with built-in Vim-mode indicator.\n\t- [chabou/pure-now](https://github.com/chabou/pure-now) - Fork with [Now](https://zeit.co/now) support.\n\t- [pure10k](https://gist.github.com/romkatv/7cbab80dcbc639003066bb68b9ae0bbf) - Configuration file for [Powerlevel10k](https://github.com/romkatv/powerlevel10k/) that makes it look like Pure.\n- **Bash**\n\t- [sapegin/dotfiles](https://github.com/sapegin/dotfiles) - [Prompt](https://github.com/sapegin/dotfiles/blob/dd063f9c30de7d2234e8accdb5272a5cc0a3388b/includes/bash_prompt.bash) and [color theme](https://github.com/sapegin/dotfiles/tree/master/color) for Terminal.app.\n- **Fish**\n\t- [pure-fish/pure](https://github.com/pure-fish/pure) - Fully tested Fish port aiming for feature parity.\n- **Rust**\n\t- [xcambar/purs](https://github.com/xcambar/purs) - Pure-inspired prompt in Rust.\n- **Go**\n\t- [talal/mimir](https://github.com/talal/mimir) - Pure-inspired prompt in Go with Kubernetes and OpenStack cloud support. Not intended to have feature parity.\n- **PowerShell**\n\t- [nickcox/pure-pwsh](https://github.com/nickcox/pure-pwsh/) - PowerShell/PS Core implementation of the Pure prompt.\n\n## Team\n\n[![Sindre Sorhus](https://github.com/sindresorhus.png?size=100)](https://sindresorhus.com) | [![Mathias Fredriksson](https://github.com/mafredri.png?size=100)](https://github.com/mafredri)\n---|---\n[Sindre Sorhus](https://github.com/sindresorhus) | [Mathias Fredriksson](https://github.com/mafredri)"
}
