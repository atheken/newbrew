{
  "name": "castxml",
  "full_name": "castxml",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "C-family Abstract Syntax Tree XML Output",
  "license": "Apache-2.0",
  "homepage": "https://github.com/CastXML/CastXML",
  "versions": {
    "stable": "0.6.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/CastXML/CastXML/archive/v0.6.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "7a2e5ae99c66b5b44e682f261248cd874fdd7554f4a24fc31d09ac5b6dcde7e5"
    },
    "head": {
      "url": "https://github.com/CastXML/castxml.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/castxml/blobs/sha256:cbde8d480daa6f0a465e6b8c4eac0f7483bd70e2d82780e60a8cc1809cb9043a",
          "sha256": "cbde8d480daa6f0a465e6b8c4eac0f7483bd70e2d82780e60a8cc1809cb9043a"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/castxml/blobs/sha256:8ab4dbf83a416c2a7695ff2ded7ae47c5f69c8cb07558943e37d6f8461c59f73",
          "sha256": "8ab4dbf83a416c2a7695ff2ded7ae47c5f69c8cb07558943e37d6f8461c59f73"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/castxml/blobs/sha256:50dbd4f801190597c0064f74a175fb30773458fc677e27922f0f927f49db0242",
          "sha256": "50dbd4f801190597c0064f74a175fb30773458fc677e27922f0f927f49db0242"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/castxml/blobs/sha256:df294343a004fbf98ec397b86c08a1b2a35146e8149c554898ed99eaefb45ec8",
          "sha256": "df294343a004fbf98ec397b86c08a1b2a35146e8149c554898ed99eaefb45ec8"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/castxml/blobs/sha256:83cb5e3f65e4284ccb946552e6b39ab9c8ff7e4ca37326fbf8737932664611a3",
          "sha256": "83cb5e3f65e4284ccb946552e6b39ab9c8ff7e4ca37326fbf8737932664611a3"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/castxml/blobs/sha256:caf1d2d1f7be99a825368d6129b66e8f468d70468851cb0d1330700ce8ba211c",
          "sha256": "caf1d2d1f7be99a825368d6129b66e8f468d70468851cb0d1330700ce8ba211c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/castxml/blobs/sha256:4186634e02f1efc9f98477ab7d9868c05f277ff584df3b155bab5d7befdfa186",
          "sha256": "4186634e02f1efc9f98477ab7d9868c05f277ff584df3b155bab5d7befdfa186"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "llvm"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/castxml.rb",
  "ruby_source_checksum": {
    "sha256": "80209690dc3be30ba528827af85a74acaa7f5fe1b1bde852ce3fb2749e3fe036"
  },
  "date_added": "2016-02-25T14:03:21-08:00",
  "readme": "CastXML\n*******\n\nIntroduction\n============\n\nCastXML is a C-family abstract syntax tree XML output tool.\n\nThis project is maintained by `Kitware`_ in support of `ITK`_,\nthe Insight Segmentation and Registration Toolkit.\n\n.. _`Kitware`: https://www.kitware.com/\n.. _`ITK`: https://itk.org/\n\nManual\n======\n\nSee the `castxml(1)`_ manual page for instructions to run the tool.\n\n.. _`castxml(1)`: doc/manual/castxml.1.rst\n\nLicense\n=======\n\nCastXML is licensed under the `Apache License, Version 2.0`_.\nSee the `<LICENSE>`__ and `<NOTICE>`__ files for details.\n\n.. _`Apache License, Version 2.0`: https://www.apache.org/licenses/LICENSE-2.0\n\nSuperbuild\n==========\n\nIf you are looking for pre-built binaries, or a compact way to build this\nproject, please see `CastXMLSuperbuild`_.\n\n.. _`CastXMLSuperbuild`: https://github.com/CastXML/CastXMLSuperbuild\n\nBuild\n=====\n\nTo build CastXML from source, first obtain the prerequisites:\n\n* A C++ compiler supporting the ``c++11`` standard language level.\n\n* `CMake`_ cross-platform build system generator.\n\n* `LLVM/Clang`_ compiler SDK install tree built using the C++ compiler.\n  This version of CastXML has been tested with LLVM/Clang\n\n  - Git ``main`` as of 2023-03-20 (``8bb5ca5832``)\n  - Release ``16.0``\n  - Release ``15.0``\n  - Release ``14.0``\n  - Release ``13.0``\n  - Release ``12.0``\n  - Release ``11.0``\n  - Release ``10.0``\n  - Release ``9.0``\n  - Release ``8.0``\n  - Release ``7.0``\n  - Release ``6.0``\n  - Release ``5.0``\n  - Release ``4.0``\n  - Release ``3.9``\n  - Release ``3.8``\n  - Release ``3.7``\n  - Release ``3.6``\n\n* Optionally, the `Sphinx`_ documentation generator to build documentation.\n\nRun CMake on the CastXML source tree to generate a build tree using\na C++ compiler compatible with that used to build the LLVM/Clang SDK.\nCMake options include:\n\n``Clang_DIR``\n  Location of the LLVM/Clang SDK.  Set to ``<prefix>/lib/cmake/clang``,\n  where ``<prefix>`` is the top of the LLVM/Clang SDK install tree.\n  Alternatively, ``LLVM_DIR`` may be set to ``<prefix>/lib/cmake/llvm``.\n\n``SPHINX_EXECUTABLE``\n  Location of the ``sphinx-build`` executable.\n  Required only if building documentation.\n\n``SPHINX_HTML``\n  Build documentation in ``html`` format.\n\n``SPHINX_MAN``\n  Build documentation in ``man`` format.\n\nRun the corresponding native build tool (e.g. ``make``) in the CastXML\nbuild tree, and optionally build the ``install`` target.  The ``castxml``\ncommand-line tool may be used either from the build tree or the install tree.\nThe install tree is relocatable.\n\n.. _`CMake`: https://cmake.org/\n.. _`LLVM/Clang`: https://clang.llvm.org/\n.. _`Sphinx`: https://www.sphinx-doc.org/"
}
