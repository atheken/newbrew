{
  "name": "elixir-build",
  "full_name": "elixir-build",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Elixir version of ruby-build",
  "license": "MIT",
  "homepage": "https://github.com/mururu/elixir-build",
  "versions": {
    "stable": "20141001",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/mururu/elixir-build/archive/v20141001.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "825637780a580b7ebe8c5265a43d37ceff9f3876e771aa2f824079e504ad7347"
    },
    "head": {
      "url": "https://github.com/mururu/elixir-build.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/elixir-build/blobs/sha256:0f434ba340b50a81c737a8de0b167293c1ce596972fa15a9f57abc81c6f69499",
          "sha256": "0f434ba340b50a81c737a8de0b167293c1ce596972fa15a9f57abc81c6f69499"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [
    "narwhal"
  ],
  "conflicts_with_reasons": [
    "both install `json` binaries"
  ],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": true,
  "disable_date": "2023-06-19",
  "disable_reason": "repo_archived",
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/elixir-build.rb",
  "ruby_source_checksum": {
    "sha256": "406b95c4d092fb96f3952a37a34325f90b42e9d12649b87199a5faa734b9d2bc"
  },
  "date_added": "2014-06-29T09:43:45-07:00",
  "readme": "**This repository is archived**\n\n---\n\n# elixir-build\n\nelixir-build is an [exenv](https://github.com/mururu/exenv) plugin\nthat provides an `exenv install` command to compile and install\ndifferent versions of Elixir on UNIX-like systems.\n\nYou can also use elixir-build without exenv in environments where you\nneed precise control over Elixir version installation.\n\nelixir-build is the Elixir version of ruby-build. Thanks to @sstephenson!\n\n### Prerequisite\n\nErlang, version R16B or later.\n\n## Installation\n\n### Installing as an exenv plugin (recommended)\n\nInstalling elixir-build as an exenv plugin will give you access to the\n`exenv install` command.\n\n    git clone git://github.com/mururu/elixir-build.git ~/.exenv/plugins/elixir-build\n\nThis will install the latest development version of elixir-build into\nthe `~/.exenv/plugins/elixir-build` directory. From that directory, you\ncan check out a specific release tag. To update elixir-build, run `git\npull` to download the latest changes.\n\n### Installing as a standalone program (advanced)\n\nInstalling elixir-build as a standalone program will give you access to\nthe `elixir-build` command for precise control over Elixir version\ninstallation. If you have exenv installed, you will also be able to\nuse the `exenv install` command.\n\n    git clone git://github.com/mururu/elixir-build.git\n    cd elixir-build\n    ./install.sh\n\nThis will install elixir-build into `/usr/local`. If you do not have\nwrite permission to `/usr/local`, you will need to run `sudo\n./install.sh` instead. You can install to a different prefix by\nsetting the `PREFIX` environment variable.\n\nTo update elixir-build after it has been installed, run `git pull` in\nyour cloned copy of the repository, then re-run the install script.\n\n## Usage\n\n### Using `exenv install` with exenv\n\nTo install a Elixir version for use with exenv, run `exenv install` with\nthe exact name of the version you want to install. For example,\n\n    exenv install 0.7.0\n\nElixir versions will be installed into a directory of the same name\nunder `~/.exenv/versions`.\n\nTo see a list of all available Elixir versions, run `exenv install --list`.\nYou may also tab-complete available Elixir\nversions if your exenv installation is properly configured.\n\n### Using `elixir-build` standalone\n\nIf you have installed elixir-build as a standalone program, you can use\nthe `elixir-build` command to compile and install Elixir versions into\nspecific locations.\n\nRun the `elixir-build` command with the exact name of the version you\nwant to install and the full path where you want to install it. For\nexample,\n\n    elixir-build 0.6.0 ~/local/0.6.0\n\nTo see a list of all available Elixir versions, run `elixir-build\n--definitions`.\n\nPass the `-v` or `--verbose` flag to `elixir-build` as the first\nargument to see what's happening under the hood.\n\n### Keeping the build directory after installation\n\nBoth `elixir-build` and `exenv install` accept the `-k` or `--keep`\nflag, which tells elixir-build to keep the downloaded source after\ninstallation.\n\nSource code will be kept in a parallel directory tree\n`~/.exenv/sources` when using `--keep` with the `exenv install`\ncommand.\n\n### Installing Elixir of specified revision (Advanced)\n\nYou can install Elixir of specified revision by specifying the sha1.\nFor example,\n\n```\nexenv install --add v0.9.3-9-g7d22146\nexenv install v0.9.3-9-g7d22146\n```\n\n## Version History\n\n#### 20130921\n\n * Add --add option (@khia)\n\n#### 20130609\n\n * Add install_git_sha1\n\n#### 20121120\n\n * fork [ruby-build](https://github.com/sstephenson/ruby-build)\n\n### License\n\n(The MIT License)\n\nCopyright (c) 2011 Sam Stephenson, Yuki Ito\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
}
