{
  "name": "proxytunnel",
  "full_name": "proxytunnel",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Create TCP tunnels through HTTPS proxies",
  "license": "GPL-2.0-or-later with openvpn-openssl-exception",
  "homepage": "https://github.com/proxytunnel/proxytunnel",
  "versions": {
    "stable": "1.10.20210604",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/proxytunnel/proxytunnel/archive/v1.10.20210604.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "47b7ef7acd36881744db233837e7e6be3ad38e45dc49d2488934882fa2c591c3"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/proxytunnel/blobs/sha256:aea82fc349cca9b1344170dc58e3152a8f4f24872a8a4cbac600a880cf4f3abb",
          "sha256": "aea82fc349cca9b1344170dc58e3152a8f4f24872a8a4cbac600a880cf4f3abb"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/proxytunnel/blobs/sha256:d8a8d893b78c19ce75e2cd68a50b2a90d4f73516e31e73ba601e4ab61159583d",
          "sha256": "d8a8d893b78c19ce75e2cd68a50b2a90d4f73516e31e73ba601e4ab61159583d"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/proxytunnel/blobs/sha256:fd5dee02539fd006e3a8e4cdca443131c2a82ee8d4887b753341216f089cb6f5",
          "sha256": "fd5dee02539fd006e3a8e4cdca443131c2a82ee8d4887b753341216f089cb6f5"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/proxytunnel/blobs/sha256:0b4b6fc0be9083c224ab5eacb7c5721ff752a7c293e2e84a7e0b256119eb0493",
          "sha256": "0b4b6fc0be9083c224ab5eacb7c5721ff752a7c293e2e84a7e0b256119eb0493"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/proxytunnel/blobs/sha256:de0910229cedf933e6f1090bdf1fc2f6913fe8526416c383ff0a255b6e820549",
          "sha256": "de0910229cedf933e6f1090bdf1fc2f6913fe8526416c383ff0a255b6e820549"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/proxytunnel/blobs/sha256:8a87e452920de367641fa92294fed758b62a71e174cbaaa9320edfc7d5b096b3",
          "sha256": "8a87e452920de367641fa92294fed758b62a71e174cbaaa9320edfc7d5b096b3"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/proxytunnel/blobs/sha256:8e9ef140d976394e926c488f5c33b0fd342e9669dda178c974f917d00440f1cb",
          "sha256": "8e9ef140d976394e926c488f5c33b0fd342e9669dda178c974f917d00440f1cb"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/proxytunnel/blobs/sha256:8208da2d960f5a7a61e9db2ee8b52f14c2770dccc927bb42032c29b198d64804",
          "sha256": "8208da2d960f5a7a61e9db2ee8b52f14c2770dccc927bb42032c29b198d64804"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "asciidoc",
    "xmlto"
  ],
  "dependencies": [
    "openssl@3"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/proxytunnel.rb",
  "ruby_source_checksum": {
    "sha256": "53ba1f64dfe3198156753284377eb63065b7cd5bce1d0fb1fa319ec78e141000"
  },
  "date_added": "2011-02-17T08:14:23-08:00",
  "readme": "\n[![Build Status](https://travis-ci.org/proxytunnel/proxytunnel.svg?branch=master)](https://travis-ci.org/proxytunnel/proxytunnel)\n[![Maintainers Wanted](https://img.shields.io/badge/maintainers-wanted-red.svg)](https://github.com/pickhardt/maintainers-wanted)\n\n\n# Proxytunnel\n\nAuthor:\t\tJos Visser <josv@osp.nl>, Mark Janssen <maniac@maniac.nl>\n\nHi all,\n\nThis is proxytunnel, a program that connects stdin and stdout\nto an origin server somewhere in the Internet through an industry\nstandard HTTPS proxy. I originally wrote this program to be used\nas an extension to SSH, to be able to SSH to my box at home. In \nthis file, I will describe the use with SSH. If you want to use it\nwith some other application, feel free, and let me know!\n\n# Build docs is [here](INSTALL.md) \n\n# Usage (man page is [here](docs/proxytunnel.1.adoc)):\n\nProxytunnel is very easy to use, when running proxytunnel with the help\noption it specifies it's command-line options.\n\n```\n$ ./proxytunnel --help\nproxytunnel 1.9.9 Copyright 2001-2018 Proxytunnel Project\nUsage: proxytunnel [OPTIONS]...\nBuild generic tunnels through HTTPS proxies using HTTP authentication\n\nStandard options:\n -i, --inetd                Run from inetd (default: off)\n -a, --standalone=INT       Run as standalone daemon on specified port\n -p, --proxy=STRING         Local proxy host:port combination\n -r, --remproxy=STRING      Remote proxy host:port combination (using 2 proxies)\n -d, --dest=STRING          Destination host:port combination\n -e, --encrypt              SSL encrypt data between local proxy and destination\n -E, --encrypt-proxy        SSL encrypt data between client and local proxy\n -X, --encrypt-remproxy     SSL encrypt data between local and remote proxy\n -W, --wa-bug-29744         workaround ASF Bugzilla 29744, if SSL is active stop\n                            using it after CONNECT (might not work on all setups;\n                            see /usr/share/doc/proxytunnel/README.Debian.gz)\n -B, --buggy-encrypt-proxy  Equivalent to -E -W, provided for backwards\n                            compatibility\n -L                         (legacy) enforce TLSv1 connection\n -T, --no-ssl3              Do not connect using SSLv3\n\nAdditional options for specific features:\n -z, --no-check-certificate Don't verify server SSL certificate\n -C, --cacert=STRING        Path to trusted CA certificate or directory\n -F, --passfile=STRING      File with credentials for proxy authentication\n -P, --proxyauth=STRING     Proxy auth credentials user:pass combination\n -R, --remproxyauth=STRING  Remote proxy auth credentials user:pass combination\n -N, --ntlm                 Use NTLM based authentication\n -t, --domain=STRING        NTLM domain (default: autodetect)\n -H, --header=STRING        Add additional HTTP headers to send to proxy\n -o STRING                  send custom Host Header\n -x, --proctitle=STRING     Use a different process title\n\nMiscellaneous options:\n -v, --verbose              Turn on verbosity\n -q, --quiet                Suppress messages\n -h, --help                 Print help and exit\n -V, --version              Print version and exit\n```\n\nTo use this program with OpenSSH to connect to a host somewhere, create\na $HOME/.ssh/config file with the following content:\n\n```\nHost foobar\n\tProtocolKeepAlives 30\n\tProxyCommand /path/to/proxytunnel -E -p proxy:8080 -P username -d mybox.athome.nl:443\n```\n\nWith:\n\n```\n- foobar\t\tThe symbolic name of the host you want to connect to\n- -E\t\t\tOption to use encryption to communicate to the proxy (use https)\n- proxy\t\t\tThe host name of the proxy you want to connect through\n- 8080\t\t\tThe port number where the proxy software listens to\n- username\t\tYour proxy userid (password will be prompted)\n- mybox.athome.nl\tThe hostname of the box you want to connect to (ultimately)\n- 443\t\t\tThe port number of the SSH daemon on mybox.athome.nl\n```\n\nOptional arguments:\n```\n- -z\t\t\tDon't verify server SSL certificate (for example in case of self-signed certificate)\n```\n\nIf your proxy doesn't require the username and password for using it,\nyou can skip these options. If you don't provide the password on the\ncommand-line (which is recommended) you will be prompted for it by\nproxytunnel. If you are on a trusted system you can also put the\npassword in an environment variable, and tell proxytunnel where to\nfind it with '-S'.\n\nIf you want to run proxytunnel from inetd add the '--inetd' option.\n\nMost HTTPS proxies do not allow access to ports other than 443 (HTTPS)\nand 563 (SNEWS), so some hacking is necessary to start the SSH daemon on\nthe required port. (On the server side add an extra Port statement in\nthe sshd_config file, or use a redirect rule in your firewall.)\n\nWhen your proxy uses NTLM authentication (like Microsoft IIS proxy)\nyou need to specify -N to enable NTLM, and then specify your username\nand password (and optionally domain, if autodetection fails).\nThe NT domain can be specified on the commandline if the\nauto-detection doesn't work for you (which is usually doesn't)\n\nIf you want to have the first proxy connect to another http proxy (like\none you can control, specify -r proxy2:port. The first proxy will then\nconnect to this remote proxy, which will be asked to connect to the \nrequested destination. Note that authentication doesn't (yet) work on\nthis remote proxy. For more information regarding this feature, check\nout http://dag.wieers.com/howto/ssh-http-tunneling/\n\nIf your proxy is more advanced, and does protocol inspection it will\ndetect that your connection is not a real HTTPS/SSL connection. You\ncan enable SSL encryption (using -e), which will work around this\nproblem, however, you need to setup stunnel4 on the other side, or\nconnect to a process that understands SSL itself.\n\nWhen all this is in place, execute an \"ssh foobar\" and you're in business!\n\n# Environment Variables\n\nProxytunnel can make use of the following environment variables:\n\n```\nPROXYUSER\t\tUsername for the proxy-authentication\nPROXYPASS\t\tPassword for the proxy-authentication\nREMPROXYUSER\t\tUsername for remote proxy-authentication\nREMPROXYPASS\t\tPassword for remote proxy-authentication\nHTTP_PROXY\t\tPrimary proxy host and port information\n\t\t\tFormat: HTTP_PROXY=http://<host>:<port>/\n```\n\n# Authentication File\n\nProxytunnel can read authentication data from a file (-F/--passfile)\n\nThe format for this file is:\n```\n<field> = <value>\n<field> = <value>\netc\n```\n\nOne entry per line, 1 space before and after the equal sign.\n\nThe accepted fields are:\n * proxy_user\n * proxy_passwd\n * remproxy_user\n * remproxy_passwd\n\nShare and Enjoy!\n\nJos Visser <josv@osp.nl>\nMark Janssen <maniac@maniac.nl>"
}
