{
  "name": "iamy",
  "full_name": "iamy",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "AWS IAM import and export tool",
  "license": "MIT",
  "homepage": "https://github.com/99designs/iamy",
  "versions": {
    "stable": "2.4.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/99designs/iamy/archive/v2.4.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "13bd9e66afbeb30d386aa132a4af5d2e9a231d2aadf54fe8e5dc325583379359"
    },
    "head": {
      "url": "https://github.com/99designs/iamy.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iamy/blobs/sha256:0610f24a24be30691a67a4c3b187cf0a959876c50ad250d7bf5802eb0190e51d",
          "sha256": "0610f24a24be30691a67a4c3b187cf0a959876c50ad250d7bf5802eb0190e51d"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iamy/blobs/sha256:b0283107c1a133b0f8e7295de2fc2970a4824a2638011c63eb37cc55c654f8f1",
          "sha256": "b0283107c1a133b0f8e7295de2fc2970a4824a2638011c63eb37cc55c654f8f1"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iamy/blobs/sha256:9b81ec5512ba8332739f653b1c93a4b2118a1e9929329e0e6c4d2dd80c47d5a6",
          "sha256": "9b81ec5512ba8332739f653b1c93a4b2118a1e9929329e0e6c4d2dd80c47d5a6"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iamy/blobs/sha256:cb7d122b05b54d4bb580b923d100b0b0bd2e175f8bc69d92ffc6c2f4f46f2c65",
          "sha256": "cb7d122b05b54d4bb580b923d100b0b0bd2e175f8bc69d92ffc6c2f4f46f2c65"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iamy/blobs/sha256:df95bd8de163fb4fcecd92ba25fa559b75332c6fcb6a5aebb205ffbb3a4148dd",
          "sha256": "df95bd8de163fb4fcecd92ba25fa559b75332c6fcb6a5aebb205ffbb3a4148dd"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iamy/blobs/sha256:59dde9a556103175d876fd1fba134133ddd1b162daa491cdbf35bb58bfb4fc85",
          "sha256": "59dde9a556103175d876fd1fba134133ddd1b162daa491cdbf35bb58bfb4fc85"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iamy/blobs/sha256:54c8b998bcfe19443e99f609e34864a39e9d3b49cd5f935c78b9654727a81137",
          "sha256": "54c8b998bcfe19443e99f609e34864a39e9d3b49cd5f935c78b9654727a81137"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iamy/blobs/sha256:1024d9cc234fb7e94ff17781c2f600ed6d286c5e7b6ab96b20e259e61a56a0ae",
          "sha256": "1024d9cc234fb7e94ff17781c2f600ed6d286c5e7b6ab96b20e259e61a56a0ae"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iamy/blobs/sha256:dc26edb3bea1993f7650cce2cfd848318ba19cf3a155ae7838823b4f4c3c8041",
          "sha256": "dc26edb3bea1993f7650cce2cfd848318ba19cf3a155ae7838823b4f4c3c8041"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [
    "awscli"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/iamy.rb",
  "ruby_source_checksum": {
    "sha256": "804b9a16f6887e436e525a494daa106be0f33cc8831d10dec06970e3de260196"
  },
  "date_added": "2017-06-17T04:21:18-07:00",
  "readme": "# IAMy\n\nIAMy is a tool for dumping and loading your AWS IAM configuration into YAML files.\n\nThis allows you to use an [Infrastructure as Code](https://en.wikipedia.org/wiki/Infrastructure_as_Code) model to manage your IAM configuration. For example, you might use a github repo with a pull request model for changes to IAM config.\n\n\n## How it works\n\nIAMy has two subcommands.\n\n`pull` will sync IAM users, groups and policies from AWS to YAML files\n\n`push` will sync IAM users, groups and policies from YAML files to AWS\n\nFor the `push` command, IAMy will output an execution plan as a series of [`aws` cli](https://aws.amazon.com/cli/) commands which can be optionally executed. This turns out to be a very direct and understandable way to display the changes to be made, and means you can pick and choose exactly what commands get actioned.\n\n\n## Getting started\n\nYou can install IAMy on macOS with `brew install iamy`, or with the go toolchain `go get -u github.com/99designs/iamy`.\n\nBecause IAMy uses the [aws cli tool](https://aws.amazon.com/cli/), you'll want to install it first.\n\nFor configuration, IAMy uses the same [AWS environment variables](http://docs.aws.amazon.com/cli/latest/userguide/cli-environment.html) as the aws cli. You might find [aws-vault](https://github.com/99designs/aws-vault) an excellent complementary tool for managing AWS credentials.\n\n\n## Example Usage\n\n```bash\n$ iamy pull\n\n$ find .\n./myaccount-123456789/iam/user/joe.yml\n\n$ mkdir -p myaccount-123456789/iam/user/foo\n\n$ touch myaccount-123456789/iam/user/foo/bar.baz\n\n$ cat << EOD > myaccount-123456789/iam/user/billy.blogs\nPolicies:\n- arn:aws:iam::aws:policy/ReadOnly\nEOD\n\n$ iamy push\nCommands to push changes to AWS:\n        aws iam create-user --path /foo --user-name bar.baz\n        aws iam create-user --user-name billy.blogs\n        aws iam attach-user-policy --user-name billy.blogs --policy-arn arn:aws:iam::aws:policy/ReadOnly\n\nExec all aws commands? (y/N) y\n\n> aws iam create-user --path /foo --user-name bar.baz\n> aws iam create-user --user-name billy.blogs\n> aws iam attach-user-policy --user-name billy.blogs --policy-arn arn:aws:iam::aws:policy/ReadOnly\n```\n\n## Accurate cloudformation matching\n\nBy default, iamy will use a simple heuristic (does it end with an ID, eg -ABCDEF1234) to determine if a given resource is managed by cloudformation. \n\nThis behaviour is good enough for some cases, but if you want slower but more accurate matching pass `--accurate-cfn`\nto enumerate all cloudformation stacks and resources to determine exactly which resources are managed. \n\n## Inspiration and similar tools\n- https://github.com/percolate/iamer\n- https://github.com/hashicorp/terraform"
}
