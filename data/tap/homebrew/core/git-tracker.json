{
  "name": "git-tracker",
  "full_name": "git-tracker",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Integrate Pivotal Tracker into your Git workflow",
  "license": "MIT",
  "homepage": "https://github.com/stevenharman/git_tracker",
  "versions": {
    "stable": "2.0.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/stevenharman/git_tracker/archive/v2.0.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "ec0a8d6dd056b8ae061d9ada08f1cc2db087e13aaecf4e0d150c1808e0250504"
    },
    "head": {
      "url": "https://github.com/stevenharman/git_tracker.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/git-tracker/blobs/sha256:c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39",
          "sha256": "c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/git-tracker/blobs/sha256:c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39",
          "sha256": "c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/git-tracker/blobs/sha256:c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39",
          "sha256": "c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/git-tracker/blobs/sha256:c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39",
          "sha256": "c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/git-tracker/blobs/sha256:c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39",
          "sha256": "c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/git-tracker/blobs/sha256:c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39",
          "sha256": "c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/git-tracker/blobs/sha256:c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39",
          "sha256": "c25f12523b2b8de0affa72363cd84c3cc3c8947bfea4765fa47382a1b5185b39"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/git-tracker/blobs/sha256:eaaca7ee99419aa06d95fdbb70c28f435b4f2e596c28124bf80b105c89ffbe9b",
          "sha256": "eaaca7ee99419aa06d95fdbb70c28f435b4f2e596c28124bf80b105c89ffbe9b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "ruby"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/git-tracker.rb",
  "ruby_source_checksum": {
    "sha256": "176ae113e2312bf538b136b6cf5a721c37274e8c0ac2b1134d60415a33739af3"
  },
  "date_added": "2013-02-05T20:19:22-08:00",
  "readme": "# GitTracker\n\n[![Gem Version](https://badge.fury.io/rb/git_tracker.svg)](https://badge.fury.io/rb/git_tracker)\n[![Build Status](https://travis-ci.org/stevenharman/git_tracker.svg?branch=master)](https://travis-ci.org/stevenharman/git_tracker)\n[![Maintainability](https://api.codeclimate.com/v1/badges/de85f5c6634d8e69c69a/maintainability)](https://codeclimate.com/github/stevenharman/git_tracker/maintainability)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/de85f5c6634d8e69c69a/test_coverage)](https://codeclimate.com/github/stevenharman/git_tracker/test_coverage)\n\n*GitTracker*, or *git-tracker*, is a Git hook that will scan your current\nbranch name looking for something it recognizes as a [Pivotal Tracker][pt]\nstory number. If it finds one, it will automagically add it, in the [special\nformat][pt-format], to your commit message.\n\n## Installation\n\n### 1) Install the `git-tracker` binary\n\nYou need to get the `git-tracker` binary onto your system.\n\n- via [Homebrew][homebrew] :beers: (preferred)\n\n  ```bash\n  $ brew install git-tracker\n  ```\n\n- via [RubyGems][rubygems] :pensive: (if you must)\n\n  ```bash\n  $ gem install git_tracker\n  ```\n\n### 2) Initialize the hook\n\nThen you need to initialize the *git hook* into each local Git repository where\nyou want to use it.\n\n```bash\n# from inside a local Git repository\n# for example: /path/to/repo/\n$ git tracker init\n```\n\nThis will put the `prepare-commit-msg` hook in the `/path/to/repo/.git/hooks`\ndirectory and make it executable.\n\n**NOTE:** The hook needs to be initialized just once for each repository in\nwhich you will use it.\n\n## Usage\n\nWith the hook initialized in a repository, create branches being sure to include\nthe Pivotal Tracker story number in the branch name.\n\n```bash\n$ git checkout -b a_useful_and_helpful_name_8675309\n```\n\nWhen you commit, Git will fire the hook which will find the story number in the\nbranch name and prepare your commit message so that it includes the story number\nin the [special Pivotal Tracker syntax][pt-format].\n\n```bash\n# on branch named `best_feature_ever-8675309`\n$ git commit\n```\n\nWill result in a commit message something like: *(notice the two empty lines at\nthe top)*\n\n```diff\n\n\n[#8675309]\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n# On branch best_feature_ever-8675309\n# Changes to be committed:\n#   (use \"git reset HEAD <file>...\" to unstage)\n#\n# new file:   feature.rb\n#\n\n```\n\nYou should then add a [useful and responsible commit message][tpope]. :heart:\n\n### Passing commit messages via command line\n\nIf you pass a commit message on the command line the hook will still add the\nstory number, preceded by an empty line, to the end of your message.\n\n```bash\n# on branch named `best_feature_ever-8675309`\n$ git commit -m'Look at this rad code, yo!'\n```\n\nResults in this commit message:\n\n```\nLook at this rad code, yo!\n\n[#8675309]\n```\n\nHowever, if you include the story number in the Pivotal Tracker format within\nyour commit message, the hook will do nothing.\n\n```bash\n# on branch named `best_feature_ever-8675309`\n$ git commit -m'[#8675309] Look at this rad code, yo!'\n```\n\nResults in this commit message:\n\n\n```\n[#8675309] Look at this rad code, yo!\n```\n\n### Keywords\nYou can use the custom keywords that Pivotal Tracker provides with the API.\n\nThe keywords are `fixed`, `completed`, `finished`, and `delivered` in square\nbrackets. You may also use different cases and forms of these verbs, such as\n`Fix` or `FIXES`.\n\nIf you use those keywords in your commit message, the keyword will be prepended\nto the story ID in the commit message.\n\nFor example:\n\n```bash\n# on branch named `bug/redis_connection_not_initializing_8675309`\n$ git commit -am \"Change the redis connection string [Fixes]\"\n```\n\nResults in this commit message:\n\n```bash\nChange the redis connection string [Fixes]\n\n[Fixes #8675309]\n```\n\n### Valid branch names\n\n*GitTracker* allows you to include the story number any where in the branch\nname, optionally prefixing it with a hash (`#`). Examples:\n\n  - `best_feature_ever_#8675309`\n  - `best-feature-ever-8675309`\n  - `8675309_best_feature_ever`\n  - `#8675309-best-feature-ever`\n  - `your_name/8675309_best_feature_ever`\n  - `your_name/#8675309_best_feature_ever`\n\n## Contributing :octocat:\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my_new_feature`)\n3. Commit your changes (`git commit -am 'Added some feature'`)\n4. Push to the branch (`git push origin my_new_feature`)\n5. Create new Pull Request\n\n\n[pt]: https://www.pivotaltracker.com/\n[pt-format]: https://www.pivotaltracker.com/help/api?version=v3#scm_post_commit_message_syntax\n[tpope]: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\n[homebrew]: http://mxcl.github.com/homebrew\n[rubygems]: http://rubygems.org/gems/git_tracker"
}
