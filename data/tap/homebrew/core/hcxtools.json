{
  "name": "hcxtools",
  "full_name": "hcxtools",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Utils for conversion of cap/pcap/pcapng WiFi dump files",
  "license": "MIT",
  "homepage": "https://github.com/ZerBea/hcxtools",
  "versions": {
    "stable": "6.3.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/ZerBea/hcxtools/archive/6.3.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "3570f88448a5c65273fdaf4e9d764f2b9d87c300dafa645a3e54394130db71a1"
    },
    "head": {
      "url": "https://github.com/ZerBea/hcxtools.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/hcxtools/blobs/sha256:bc2799060b91b448c1b3240593920e0aeb83e5e466d260ad9661fdd8bbe5a31e",
          "sha256": "bc2799060b91b448c1b3240593920e0aeb83e5e466d260ad9661fdd8bbe5a31e"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/hcxtools/blobs/sha256:6a1f47f177a3c7c722be5cb42401bfac6b5d3b7c11641c2b37f2a1a6d8e9e559",
          "sha256": "6a1f47f177a3c7c722be5cb42401bfac6b5d3b7c11641c2b37f2a1a6d8e9e559"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/hcxtools/blobs/sha256:da64ee096b4f490237955607bacb1a72cc3df188400759a2c817c28ea462cbbe",
          "sha256": "da64ee096b4f490237955607bacb1a72cc3df188400759a2c817c28ea462cbbe"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/hcxtools/blobs/sha256:6ea7825bd2d2425ae36eb8bd5e884391f84a63f172fe30c9610707673f75b964",
          "sha256": "6ea7825bd2d2425ae36eb8bd5e884391f84a63f172fe30c9610707673f75b964"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/hcxtools/blobs/sha256:28af85ebf8fa2b147d203b42a336ae8c64c1009fd8e70c3194c23a8b921184ef",
          "sha256": "28af85ebf8fa2b147d203b42a336ae8c64c1009fd8e70c3194c23a8b921184ef"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/hcxtools/blobs/sha256:4be6dc30604bba139024e5ac1cba60c258316e2ae2552ab4f3df57d99a7447f4",
          "sha256": "4be6dc30604bba139024e5ac1cba60c258316e2ae2552ab4f3df57d99a7447f4"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/hcxtools/blobs/sha256:e4cc839a3d3958c6fbdacbc075e75cfbe3416766ec991605fef7ca2c32c2832b",
          "sha256": "e4cc839a3d3958c6fbdacbc075e75cfbe3416766ec991605fef7ca2c32c2832b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "pkg-config"
  ],
  "dependencies": [
    "openssl@3"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "curl"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/hcxtools.rb",
  "ruby_source_checksum": {
    "sha256": "65ce3373299f5ccbba40ab0b03b701e1ae0253d408f567d55f266b5f2f89478a"
  },
  "date_added": "2020-04-26T21:58:20+00:00",
  "readme": "hcxtools\n==============\n\nSmall set of tools convert packets from captures (h = hash, c = capture, convert and\ncalculate candidates, x = different hashtypes) for the use with latest hashcat\nor John the Ripper. \nThe tools are 100% compatible to hashcat and John the Ripper and recommended by hashcat.\nThis branch is pretty closely synced to hashcat git and John the Ripper git.\n\nSupport of hashcat hash-modes: 4800, 5500, 2200x, 16100, 250x (deprecated), 1680x (deprecated)\n  \nSupport of John the Ripper hash-modes: WPAPSK-PMK, PBKDF2-HMAC-SHA1, chap, netntlm, tacacs-plus\n\nSupport of gzip (.gz) single file compression.\n\nMain purpose is to detect weak points within own WiFi networks by analyzing the hashes.\nTherefore convert the dump file to WPA-PBKDF2-PMKID+EAPOL hash file and check if wlan-key or plainmasterkey was transmitted unencrypted.\nOr upload the \"uncleaned\" dump file (pcapng, pcap, cap) here https://wpa-sec.stanev.org/?submit\nto find out if your ap or the client is vulnerable by using common wordlists or a weak password generation algorithm.\n\n\nBrief description\n--------------\n\nMultiple stand-alone binaries - designed to run on Arch Linux, but other Linux distributions should work, too.\n\nAll of these utilities are designed to execute only one specific function.\n\nhcxdumptool moved to: https://github.com/ZerBea/hcxdumptool\n\nRead this post: hcxtools - solution for capturing wlan traffic and conversion to hashcat formats (https://hashcat.net/forum/thread-6661.html)\n\nRead this post: New attack on WPA/WPA2 using PMKID (https://hashcat.net/forum/thread-7717.html)\n\nRead this post: Hash mode 22000 explained (https://hashcat.net/forum/thread-10253.html)\n\nRead this wiki: https://hashcat.net/wiki/doku.php?id=cracking_wpawpa2\n\nUnsupported: Windows OS, macOS, Android, emulators or wrappers!\n\n\nDetailed description\n--------------\n\n| Tool           | Description                                                                                                            |\n| -------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| hcxpcapngtool  | Provide new hashcat format 22000                                                                                       |\n| hcxhashtool    | Provide various filter operations on new PMKID/EAPOL hash line                                                         |\n| hcxpsktool     | Calculates candidates for hashcat and john based on based on hcxpcapngtool output or commandline input                 |\n| hcxpmktool     | Calculate and verify a PSK and/or a PMK                                                                                |\n| hcxeiutool     | Prepare -E -I -U output of hcxpcapngtool for use by hashcat + rule or JtR + rule                                       |\n| hcxwltool      | Calculates candidates for hashcat and john based on mixed wordlists                                                    |\n| hcxhash2cap    | Converts hash file (PMKID&EAPOL, PMKID, EAPOL-hccapx, EAPOL-hccap, WPAPSK-john) to cap                                 |\n| wlancap2wpasec | Upload multiple (gzip compressed) pcapng, pcap and cap files to https://wpa-sec.stanev.org                             |\n| whoismac       | Show vendor information and/or download oui reference list                                                             |\n\n\nWorkflow\n--------------\n\nhcxdumptool -> hcxpcapngtool -> hcxhashtool (additional hcxpsktool/hcxeiutool) -> hashcat or JtR\n\nhcxdumptool: attack and capture everything (depending on options)\n\nhcxpcapngtool: convert everything\n\nhcxhashtool: filter hashes\n\nhcxpsktool: get weak PSK candidates\n\nhcxeiutool: calculate wordlists from ESSID\n \nhashcat or JtR: get PSK from hash\n\n\nGet source\n--------------\n```\ngit clone https://github.com/ZerBea/hcxtools.git\ncd hcxtools\n```\n\nCompile & install\n--------------\n```\nmake\n```\n\ninstall to `/usr/bin`:\n```\nmake install (as super user)\n```\n\nor install to `/usr/local/bin`:\n```\nmake install PREFIX=/usr/local (as super user)\n```\n\nOr install via package manager of your distribution\n--------------\n\n### Arch Linux\n[Arch Linux](https://www.archlinux.org/) \n`pacman -S hcxtools`\n\n### Arch Linux ARM\n[Arch Linux ARM ](https://archlinuxarm.org/) \n`pacman -S hcxtools`\n\n### BlackArch\n[Black Arch](https://blackarch.org/) is an Arch Linux-based penetration testing distribution for penetration testers and security researchers  \n`pacman -S hcxtools`\n\n### Fedora/CentOS\n`dnf install hcxtools`\n\n### Kali Linux\n`apt install hcxtools`\n\n### OpenWRT\n`opkg install hcxtools`\n\n### macOS\n[Homebrew](https://brew.sh/) is 3-rd party package manager for macOS  \n`brew install hcxtools`\n\n\nRequirements\n--------------\n\n* knowledge of radio technology\n* knowledge of electromagnetic-wave engineering\n* detailed knowledge of 802.11 protocol\n* detailed knowledge of key derivation functions\n* detailed knowledge of Linux\n* operating system: Linux (strict)\n* distribution: recommended Arch Linux, but other distros should work, too (no support for other distributions).\n* gcc >= 13 recommended (deprecated versions are not supported: https://gcc.gnu.org/)\n* libopenssl (>= 3.0) and openssl-dev installed\n* librt and librt-dev installed (should be installed by default)\n* zlib and zlib-dev installed (for gzip compressed cap/pcap/pcapng files)\n* libcurl (>= 7.56) and curl-dev installed (used by whoismac and wlancap2wpasec)\n* pkg-config installed\n\nDebian (e.g. Kali, Ubuntu) release requirements >= bookworm (testing/Debian 12)  \nTo install use the following:  \n`apt-get install pkg-config libcurl4-openssl-dev libssl-dev zlib1g-dev make gcc`\n\nIf you decide to compile latest git head, make sure that your distribution is updated on latest version.\n\nUseful scripts\n--------------\n\n| Script       | Description                                              |\n| ------------ | -------------------------------------------------------- |\n| piwritecard  | Example script to restore SD-Card                        |\n| piwreadcard  | Example script to backup SD-Card                         |\n| hcxgrep.py   | Extract records from m22000 hashline/hccapx/pmkid file based on regexp   |\n\n\nNotice\n--------------\n\nMost output files will be appended to existing files (with the exception of pcapng, pcap, cap files).\n\nIt is recommended to use hash mode 22000 (22001) instead of deprecated hash modes 2500 (2501) and 16800 (16801)\n\nhcxtools are designed to be analysis tools. This means that everything is converted by default and unwanted information must be filtered out! \n\nWarning: do not merge (pcapng) dump files, because this destroys hash values, assigned by custom blocks.\n\n\nBitmask message pair field (hcxpcapngtool)\n--------------\n\nbit 0-2\n\n000 = M1+M2, EAPOL from M2 (challenge)\n\n001 = M1+M4, EAPOL from M4 if not zeroed (authorized)\n\n010 = M2+M3, EAPOL from M2 (authorized)\n\n011 = M2+M3, EAPOL from M3 (authorized) - unused\n\n100 = M3+M4, EAPOL from M3 (authorized) - unused\n\n101 = M3+M4, EAPOL from M4 if not zeroed (authorized)\n\n3: reserved\n\n4: ap-less attack (set to 1) - no nonce-error-corrections necessary\n\n5: LE router detected (set to 1) - nonce-error-corrections only for LE necessary\n\n6: BE router detected (set to 1) - nonce-error-corrections only for BE necessary\n\n7: not replaycount checked (set to 1) - replaycount not checked, nonce-error-corrections definitely necessary\n\n\nImportant notice:\n--------------\ntools do not do NONCE ERROR CORRECTIONS\nin case of a packet loss, you get a wrong PTK"
}
