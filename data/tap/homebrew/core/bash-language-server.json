{
  "name": "bash-language-server",
  "full_name": "bash-language-server",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Language Server for Bash",
  "license": "MIT",
  "homepage": "https://github.com/bash-lsp/bash-language-server",
  "versions": {
    "stable": "5.0.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://registry.npmjs.org/bash-language-server/-/bash-language-server-5.0.0.tgz",
      "tag": null,
      "revision": null,
      "checksum": "662af94971656b1ff3004271efc7ea65fc893665793f19e4ff143542fac50c88"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/bash-language-server/blobs/sha256:a86e54e185aa63bbe5ddb0c4f16e4083a927abc15fa3f6ab0d6061fabadaf784",
          "sha256": "a86e54e185aa63bbe5ddb0c4f16e4083a927abc15fa3f6ab0d6061fabadaf784"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "node"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/bash-language-server.rb",
  "ruby_source_checksum": {
    "sha256": "93ab1bac8f64c9449a8e5a022d07ab5079a0b6f00772ce446fd1a865baec075e"
  },
  "date_added": "2021-12-30T09:29:58+00:00",
  "readme": "# Bash Language Server\n\nBash language server that brings an IDE-like experience for bash scripts to most editors. This is based on the [Tree Sitter parser][tree-sitter-bash] and supports [explainshell][explainshell] and [shellcheck][shellcheck].\n\nWe strongly recommend that you install [shellcheck][shellcheck] to enable linting: https://github.com/koalaman/shellcheck#installing\n\nDocumentation around configuration variables can be found in the [config.ts](https://github.com/bash-lsp/bash-language-server/blob/main/server/src/config.ts) file.\n\n## Features\n\n- Jump to declaration\n- Find references\n- Code Outline & Show Symbols\n- Highlight occurrences\n- Code completion\n- Simple diagnostics reporting\n- Documentation for symbols on hover\n- Workspace symbols\n\nTo be implemented:\n\n- Rename symbol\n- Better jump to declaration and find references based on scope\n\n## Installation\n\nUsually you want to install a client for your editor (see the section below).\n\nBut if you want to install the server binary:\n\n```bash\nnpm i -g bash-language-server\n```\n\nOn Fedora based distros:\n\n```bash\ndnf install -y nodejs-bash-language-server\n```\n\nTo verify that everything is working:\n\n```bash\nbash-language-server --help\n```\n\nIf you encounter installation errors, ensure you have node version 16 or newer (`node --version`).\n\n### Clients\n\nThe following editors and IDEs have available clients:\n\n- Atom ([ide-bash][ide-bash])\n- Eclipse ([ShellWax](https://marketplace.eclipse.org/content/shellwax))\n- Emacs ([see below](#emacs))\n- [Helix](https://helix-editor.com/) (built-in support)\n- JupyterLab ([jupyterlab-lsp][jupyterlab-lsp])\n- Neovim ([see below](#neovim))\n- Sublime Text ([LSP-bash][sublime-text-lsp])\n- Vim ([see below](#vim))\n- Visual Studio Code ([Bash IDE][vscode-marketplace])\n- [Oni](https://github.com/onivim/oni) ([see below](#oni))\n\n#### Vim\n\nFor Vim 8 or later install the plugin [prabirshrestha/vim-lsp][vim-lsp] and add the following configuration to `.vimrc`:\n\n```vim\nif executable('bash-language-server')\n  au User lsp_setup call lsp#register_server({\n        \\ 'name': 'bash-language-server',\n        \\ 'cmd': {server_info->[&shell, &shellcmdflag, 'bash-language-server start']},\n        \\ 'allowlist': ['sh', 'bash'],\n        \\ })\nendif\n```\n\nFor Vim 8 or Neovim using [YouCompleteMe](https://github.com/ycm-core/YouCompleteMe), add the following to `.vimrc`:\n\n```vim\nlet g:ycm_language_server =\n            \\ [\n            \\   {\n            \\       'name': 'bash',\n            \\       'cmdline': [ 'bash-language-server', 'start' ],\n            \\       'filetypes': [ 'sh' ],\n            \\   }\n            \\ ]\n```\n\nFor Vim 8 or Neovim using [neoclide/coc.nvim][coc.nvim], according to [it's Wiki article](https://github.com/neoclide/coc.nvim/wiki/Language-servers#bash), add the following to your `coc-settings.json`:\n\n```jsonc\n  \"languageserver\": {\n    \"bash\": {\n      \"command\": \"bash-language-server\",\n      \"args\": [\"start\"],\n      \"filetypes\": [\"sh\"],\n      \"ignoredRootPaths\": [\"~\"]\n    }\n  }\n```\n\nFor Vim 8 or NeoVim using [dense-analysis/ale][vim-ale] add the following\nconfiguration to your `.vimrc`:\n\n```vim\nlet g:ale_linters = {\n    \\ 'sh': ['language_server'],\n    \\ }\n```\n\n#### Neovim\n\nFor Neovim v0.8:\n\n```lua\nvim.api.nvim_create_autocmd('FileType', {\n  pattern = 'sh',\n  callback = function()\n    vim.lsp.start({\n      name = 'bash-language-server',\n      cmd = { 'bash-language-server', 'start' },\n    })\n  end,\n})\n```\n\nFor NeoVim using [autozimu/LanguageClient-neovim][languageclient-neovim], add the following configuration to\n`init.vim`:\n\n```vim\nlet g:LanguageClient_serverCommands = {\n    \\ 'sh': ['bash-language-server', 'start']\n    \\ }\n```\n\nFor Vim8/NeoVim v0.5 using [jayli/vim-easycomplete](https://github.com/jayli/vim-easycomplete). Execute `:InstallLspServer sh` and config nothing. Maybe it's the easiest way to use bash-language-server in vim/nvim.\n\n#### Oni\n\nOn the config file (`File -> Preferences -> Edit Oni config`) add the following configuration:\n\n```javascript\n\"language.bash.languageServer.command\": \"bash-language-server\",\n\"language.bash.languageServer.arguments\": [\"start\"],\n```\n\n#### Emacs\n\n[Lsp-mode](https://github.com/emacs-lsp/lsp-mode) has a built-in client, can be installed by `use-package`.\nAdd the configuration to your `.emacs.d/init.el`\n\n```emacs-lisp\n(use-package lsp-mode\n  :commands lsp\n  :hook\n  (sh-mode . lsp))\n```\n\n## Logging\n\nThe minimum logging level for the server can be adjusted using the `BASH_IDE_LOG_LEVEL` environment variable\nand through the general [workspace configuration](https://github.com/bash-lsp/bash-language-server/blob/main/server/src/config.ts).\n\n## Development Guide\n\nPlease see [docs/development-guide][dev-guide] for more information.\n\n[tree-sitter]: https://github.com/tree-sitter/tree-sitter\n[tree-sitter-bash]: https://github.com/tree-sitter/tree-sitter-bash\n[vscode-marketplace]: https://marketplace.visualstudio.com/items?itemName=mads-hartmann.bash-ide-vscode\n[dev-guide]: https://github.com/bash-lsp/bash-language-server/blob/master/docs/development-guide.md\n[ide-bash]: https://atom.io/packages/ide-bash\n[sublime-text-lsp]: https://packagecontrol.io/packages/LSP-bash\n[explainshell]: https://explainshell.com/\n[shellcheck]: https://www.shellcheck.net/\n[languageclient-neovim]: https://github.com/autozimu/LanguageClient-neovim\n[nvim-lspconfig]: https://github.com/neovim/nvim-lspconfig\n[vim-lsp]: https://github.com/prabirshrestha/vim-lsp\n[vim-ale]: https://github.com/dense-analysis/ale\n[coc.nvim]: https://github.com/neoclide/coc.nvim\n[jupyterlab-lsp]: https://github.com/krassowski/jupyterlab-lsp"
}
