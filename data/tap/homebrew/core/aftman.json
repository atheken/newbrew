{
  "name": "aftman",
  "full_name": "aftman",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Toolchain manager for Roblox, the prodigal sequel to Foreman",
  "license": "MIT",
  "homepage": "https://github.com/LPGhatguy/aftman",
  "versions": {
    "stable": "0.2.7",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/LPGhatguy/aftman/archive/refs/tags/v0.2.7.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "2c4f191bfce631abff185a658b947105055da687c409e09ea80786be4c32b75e"
    },
    "head": {
      "url": "https://github.com/LPGhatguy/aftman.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aftman/blobs/sha256:50e5f064dab32bcb3fdd8cfa1609bcb00a5b16ca3282a135fc58fd6b8288e3fd",
          "sha256": "50e5f064dab32bcb3fdd8cfa1609bcb00a5b16ca3282a135fc58fd6b8288e3fd"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aftman/blobs/sha256:7ecfb8ea7921a343d05bf4ef74f58b885824894092a0a734df9330af10c7eccf",
          "sha256": "7ecfb8ea7921a343d05bf4ef74f58b885824894092a0a734df9330af10c7eccf"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aftman/blobs/sha256:8d7183b254b99b1af6ac3b32f6c44a80c6479b90224b7a9aeabc2aa6afa80ecb",
          "sha256": "8d7183b254b99b1af6ac3b32f6c44a80c6479b90224b7a9aeabc2aa6afa80ecb"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aftman/blobs/sha256:94ae85cca15a832dad6fdd5358b3bb55d754b0ace6cf7c104d3feda446310e02",
          "sha256": "94ae85cca15a832dad6fdd5358b3bb55d754b0ace6cf7c104d3feda446310e02"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aftman/blobs/sha256:0da5a65b18e6bdc91021265d891acd31cd3802c0dc1aa6cb7d04325d899129b9",
          "sha256": "0da5a65b18e6bdc91021265d891acd31cd3802c0dc1aa6cb7d04325d899129b9"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aftman/blobs/sha256:dffe9686eadac8783eb508b6b476e4c89baaacae80df526279696ac8c68ede89",
          "sha256": "dffe9686eadac8783eb508b6b476e4c89baaacae80df526279696ac8c68ede89"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/aftman/blobs/sha256:01237e308408ad92abe2eaf21631b94d1650cea7531b58a0c513ad5bd8e48e26",
          "sha256": "01237e308408ad92abe2eaf21631b94d1650cea7531b58a0c513ad5bd8e48e26"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust",
    "pkg-config"
  ],
  "dependencies": [
    "openssl@3"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/aftman.rb",
  "ruby_source_checksum": {
    "sha256": "97cc0db5702ca92b2180a9df4281ac0733d1ee39536a202032185afbe85b7c41"
  },
  "date_added": "2023-04-26T11:47:54-07:00",
  "readme": "# Aftman\nAftman is a toolchain manager. It enables installing project-specific command line tools and switching between them seamlessly.\n\n```bash\n$ rojo --version\nRojo 6.2.0\n\n$ cat ~/.aftman/aftman.toml\n[tools]\nrojo = \"rojo-rbx/rojo@6.2.0\"\n\n$ cd uses-rojo-7\n$ rojo --version\nRojo 7.1.0\n\n$ cat aftman.toml\n[tools]\nrojo = \"rojo-rbx/rojo@7.1.0\" \n```\n\n## Supported Platforms\nAftman supports:\n\n- Windows (x86, x86-64)\n- macOS (x86-64, AArch64)\n- Linux (x86, x86-64)\n\n## Installation\nYou can install Aftman by downloading a pre-built binary for your platform from Aftman's [GitHub Releases Page](https://github.com/LPGhatguy/aftman/releases).\n\nOnce you have the release unzipped, run:\n\n```bash\n./aftman self-install\n```\n\nThis will install Aftman to its own bin directory and update your system's `PATH` environment variable for you.\n\n## Getting Started\nTo create a new `aftman.toml` file in your current directory, run\n\n```bash\naftman init\n```\n\nTo add a new tool, you can follow the instructions in the file, or run\n\n```bash\naftman add rojo-rbx/rojo\n\n# install a specific version\naftman add rojo-rbx/rojo@6.2.0\n\n# install with a different binary name\naftman add BurntSushi/ripgrep rg\n```\n\nIf your PATH is configured correctly (see [Installation](#installation)), you will now be able to run that tool from your project.\n\nTo install a tool system-wide so that it can be used anywhere, edit `~/.aftman/aftman.toml` or run\n\n```bash\naftman add --global rojo-rbx/rojo\n```\n\nTo install all tools listed by your `aftman.toml` files, run\n\n```bash\naftman install\n```\n\n### Authenticating with GitHub (Aftman 0.2.7+)\nIf you're running into GitHub rate limits or want to manage private tools hosted on GitHub, you can give Aftman a [Personal Access Token][pat].\n\nGenerate a Personal Access Token, then edit `~/.aftman/auth.toml` to add it:\n\n```toml\ngithub = \"pat goes here\"\n```\n\nAftman will use this token to authenticate all requests to GitHub.\n\n[pat]: https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token\n\n## Subcommands\nFor detailed help information, run `aftman --help`.\n\n### `aftman init`\nUsage:\n\n```bash\naftman init [path]\n```\n\nCreates a new `aftman.toml` file in the given directory. Defaults to the current directory.\n\n### `aftman add`\nUsage:\n\n```bash\naftman add [--global] <tool-spec> [tool-alias]\n```\n\nInstalls a new tool with the given tool spec and optional alias to use for installing the tool.\n\nExamples:\n\n```bash\n# Install the latest version of Rojo in the nearest aftman.toml file\naftman add rojo-rbx/rojo\n\n# Install the latest version of Rojo globally\naftman add --global rojo-rbx/rojo\n\n# Install a specific version of Rojo locally\naftman add rojo-rbx/rojo@6.2.0\n\n# Install Rojo with a different binary name\naftman add rojo-rbx/rojo@6.2.0 rojo6\n```\n\n### `aftman install`\nUsage:\n\n```bash\naftman install [--no-trust-check] [--skip-untrusted]\n```\n\nInstall all tools listed in `aftman.toml` files based on your current directory.\n\nIf `--no-trust-check` is given, all tools will be installed, regardless of whether they are known. This should generally only be used in CI environments. To trust a specific tool before running `aftman install`, use `aftman trust <tool>` instead.\n\nIf `--skip-untrusted` is given, only already trusted tools will be installed, others will be skipped and not emit any errors.\n\n### `aftman self-install`\nUsage:\n\n```bash\naftman self-install\n```\n\nInstalls Aftman, upgrades any references to Aftman, and adds `aftman` to your system `PATH` if supported.\n\nWhenever you upgrade Aftman, run this command. Aftman makes copies of itself to mimic the tools it installs, and this command will ensure those copies get updated as well.\n\n### `aftman trust`\nUsage:\n\n```bash\naftman trust <tool-name>\n```\n\nAdds a tool to the list of trusted tools.\n\nAftman prompts the user before installing new tools. Running `aftman trust` beforehand skips this prompt. This is useful when running automation that depends on a tool from a known location.\n\n### `aftman list`\n*Added in Aftman 0.2.6.*\n\nUsage:\n\n```bash\naftman list\n```\n\nLists all tools currently managed by Aftman.\n\n### `aftman update`\n**This subcommand is not yet implemented.**\n\n## Differences from Foreman\nAftman is spiritually very similar to [Foreman], a project I created at Roblox.\n\nI'm hoping to fix some of the core design mistakes I made in Foreman and also take a little more care with the codebase. Roughly:\n\n* **Exact version dependencies.** Using a range here has tripped up lots of users, so Aftman uses exact versions in all configuration files.\n* **Commands to install, uninstall, and upgrade tools.** Editing a global, tucked-away toml file by hand is rough.\n* **Change model to no longer trust-by-default.** Aftman prompts before downloading new tools. ([Roblox/foreman#16]).\n* **Better strategy for storing executables.** ([Roblox/foreman#11])\n* **Better heuristics for picking the right artifacts for your platform.** Aftman uses your Compiler, OS, architecture, and will eventually support custom patterns. ([Roblox/foreman#18])\n* **Proper error handling.** Unlike Foreman, which uses `Result::unwrap` liberally, Aftman has good error hygiene with helpful context attached.\n* **Less Roblox-angled.** Aftman does not market itself as being for Roblox development. It is a generally useful tool that can install all sorts of CLI tools.\n\n[Foreman]: https://github.com/Roblox/foreman\n[Roblox/foreman#11]: https://github.com/Roblox/foreman/issues/11\n[Roblox/foreman#16]: https://github.com/Roblox/foreman/issues/16\n[Roblox/foreman#18]: https://github.com/Roblox/foreman/issues/18\n\n## License\nAftman is available under the terms of the MIT license. See <https://opensource.org/licenses/MIT> or [LICENSE](LICENSE) for details."
}
