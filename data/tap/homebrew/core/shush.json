{
  "name": "shush",
  "full_name": "shush",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Encrypt and decrypt secrets using the AWS Key Management Service",
  "license": "MIT",
  "homepage": "https://github.com/realestate-com-au/shush",
  "versions": {
    "stable": "1.5.3",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/realestate-com-au/shush/archive/refs/tags/v1.5.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "07eed7f6fa34b0cadf64e5dfde752f12fa038293765eef35d43790c479e72fc6"
    },
    "head": {
      "url": "https://github.com/realestate-com-au/shush.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shush/blobs/sha256:04d35e69dcee48532071a02c70af5858b6d9297d4361d1a541501902ca0c51ca",
          "sha256": "04d35e69dcee48532071a02c70af5858b6d9297d4361d1a541501902ca0c51ca"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shush/blobs/sha256:04d35e69dcee48532071a02c70af5858b6d9297d4361d1a541501902ca0c51ca",
          "sha256": "04d35e69dcee48532071a02c70af5858b6d9297d4361d1a541501902ca0c51ca"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shush/blobs/sha256:04d35e69dcee48532071a02c70af5858b6d9297d4361d1a541501902ca0c51ca",
          "sha256": "04d35e69dcee48532071a02c70af5858b6d9297d4361d1a541501902ca0c51ca"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shush/blobs/sha256:2645da3c73c6c1feb774393d5660475f835f0d32c81077942b91e42d3cabb154",
          "sha256": "2645da3c73c6c1feb774393d5660475f835f0d32c81077942b91e42d3cabb154"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shush/blobs/sha256:2645da3c73c6c1feb774393d5660475f835f0d32c81077942b91e42d3cabb154",
          "sha256": "2645da3c73c6c1feb774393d5660475f835f0d32c81077942b91e42d3cabb154"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shush/blobs/sha256:2645da3c73c6c1feb774393d5660475f835f0d32c81077942b91e42d3cabb154",
          "sha256": "2645da3c73c6c1feb774393d5660475f835f0d32c81077942b91e42d3cabb154"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/shush/blobs/sha256:105e00c20659fb62b2e0ca42914d109ab87beb7aca584a841c707fc6e86f25d6",
          "sha256": "105e00c20659fb62b2e0ca42914d109ab87beb7aca584a841c707fc6e86f25d6"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/shush.rb",
  "ruby_source_checksum": {
    "sha256": "3b0ff06cc6bf74793a7f2b0d94f459895e181977c137c0807bba12960dc086fd"
  },
  "date_added": "2023-06-17T18:08:44-04:00",
  "readme": "# Shush!\n\n\"shush\" is a small tool that can be used to encrypt and decrypt secrets, using the AWS \"Key Management Service\" (KMS).\n\n## Usage\n\n### Encrypting things\n\nEncrypt secrets like this:\n\n    shush encrypt KEY-ID-OR-ALIAS < secret.txt > secret.encrypted\n\nThe output of `encrypt` is Base64-encoded ciphertext.\n\nKEY-ID-OR-ALIAS can be the id or ARN of a KMS master key, or alias prefixed by \"alias/\", or simply just the alias.\n\nPlaintext input can also be provided on the command-line, e.g.\n\n    shush encrypt KEY-ID 'this is a secret' > secret.encrypted\n\nWith the `-t` or `--trim` flag, `encrypt` will automatically remove leading and trailing whitespace from the plaintext. This can be especially useful when piping input from commands which always leave a trailing newline.\n\n    shush encrypt -t KEY_ID ' I don't really need this whitespace ' > secret.encrypted\n\n### Decrypting things\n\nEncrypted secrets are easy to decrypt, like this:\n\n    shush decrypt < secret.encrypted > secret.txt\n\nThere's no need to specify a KEY-ID here, as it's encoded in the ciphertext.\n\n## Finding the key that was used\n\nIf you want to see the ARN of the key used to encrypt the secret, add the `--print-key` flag\n\n    shush decrypt --print-key < secret.encrypted\n\n### Credentials and region\n\nAppropriate AWS credentials must be provided by one of the [mechanisms supported by aws-sdk-go](https://github.com/aws/aws-sdk-go/wiki/Getting-Started-Credentials), e.g. environment variables, or EC2 instance profile.\n\nWhen used within EC2, `shush` selects the appropriate region automatically.\nOutside EC2, you'll need to specify it, via `--region` or by setting `$AWS_DEFAULT_REGION`.\n\n### Encryption context\n\n\"shush\" supports KMS [encryption contexts](http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html), which may be used to scope use of a key.  The same encryption context must be provided when encrypting and decrypting.\n\n    shush --context app=myapp encrypt KEY-ID secret.txt > secret.encrypted\n    shush --context app=myapp decrypt < secret.encrypted > secret.txt\n\n### Limitations\n\n\"shush\" can only encrypt small amounts of data; up to 4 KB.\n\n## Use as a command shim\n\n\"shush exec\" is a command shim that makes it easy to use secrets transported\nvia the (Unix) process environment.  It decrypts any environment variables\nprefixed by \"`KMS_ENCRYPTED_`\", and executes a specified command.\n\nFor example:\n\n```\n$ export KMS_ENCRYPTED_DB_PASSWORD=$(shush encrypt alias/app-secrets 'seasame')\n$ shush exec -- env | grep PASSWORD\nKMS_ENCRYPTED_DB_PASSWORD=CiAbQLOo2VC4QTV/Ng986wsDSJ0srAe6oZnLyzRT6pDFWRKOAQEBAgB4G0CzqNlQuEE1fzYPfOsLA0idLKwHuqGZy8s0U+qQxVkAAABlMGMGCSqGSIb3DQEHBqBWMFQCAQAwTwYJKoZIhvcNAQcBMB4GCWCGSAFlAwQBLjARBAzfFR0tsHRq18JUhMcCARCAImvuMNYuHUut3BT7sZs9a31qWcmOBUBXYEsD+kx2GxUxBPE=\nDB_PASSWORD=seasame\n```\n\nIn this example, \"shush exec\":\n\n- found `$KMS_ENCRYPTED_DB_PASSWORD` in the environment\n- decrypted the contents\n- put the result in `$DB_PASSWORD`\n- executed `env`\n\n\"shush exec\" works well as an entrypoint for Docker images, e.g.\n\n    # Include \"shush\" to decode KMS_ENCRYPTED_STUFF\n    ARG TARGETARCH\n    RUN curl -fsSL -o /usr/local/bin/shush \\\n        https://github.com/realestate-com-au/shush/releases/download/v1.5.4/shush_linux_${TARGETARCH} \\\n     && chmod +x /usr/local/bin/shush\n    ENTRYPOINT [\"/usr/local/bin/shush\", \"exec\", \"--\"]\n\n## Installation\n\nBinaries for official releases may be downloaded from the [releases page on GitHub](https://github.com/realestate-com-au/shush/releases).\n\nIf you want to compile it from source, try:\n\n    $ go get github.com/realestate-com-au/shush\n\nFor Unix/Linux users, you can install `shush` using the following command. You may want to change the version number in the command below from `v1.5.4` to whichever version you want:\n\n```\nsudo curl -fsSL -o /usr/local/bin/shush \\\n    \"https://github.com/realestate-com-au/shush/releases/download/v1.5.4/shush_$(uname -s | tr '[:upper:]' '[:lower:]')_$(uname -m | sed 's/x86_/amd/' | sed 's/aarch/arm/')\" \\\n && sudo chmod +x /usr/local/bin/shush\n```\n\n## Examples\n\n### Encrypt a password\n\nEncrypt user input:\n\n    echo -n \"Enter password: \"\n    ENCRYPTED_PASSWORD=$(shush encrypt alias/app-secrets)\n\nand later:\n\n    some-command --password $(shush decrypt \"$ENCRYPTED_PASSWORD\")\n\n### Bulk encryption of secrets\n\nEncrypt some environment variables, as though they were arguments to `env(1)`:\n\n    shush encrypt alias/app-secrets 'FOO=1 BAR=2' > secrets\n\nand later:\n\n    env $(shush decrypt < secrets) some-command\n\n## See also\n\nIf you dislike 8Gb binary files, and happen to have a Ruby interpreter handy,\n\"ssssh\" is a drop-in replacement for \"shush\":\n\n* https://github.com/mdub/ssssh\n\nOr, you can just use `bash`, `base64`, and the AWS CLI:\n\n    base64 -d < secrets.encrypted > /tmp/secrets.bin\n    aws kms decrypt --ciphertext-blob fileb:///tmp/secrets.bin --output text --query Plaintext | base64 -d > secrets.txt\n\n## Releasing a new version\n\nPlease see [docs/releasing.md](docs/releasing.md)\n\n## License\n\nCopyright (c) 2019 REA Group Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n## Contributing\n\nSource-code for shush is [on Github](https://github.com/realestate-com-au/shush)."
}
