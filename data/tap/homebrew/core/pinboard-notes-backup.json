{
  "name": "pinboard-notes-backup",
  "full_name": "pinboard-notes-backup",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Efficiently back up the notes you've saved to Pinboard",
  "license": "GPL-3.0-or-later",
  "homepage": "https://github.com/bdesham/pinboard-notes-backup",
  "versions": {
    "stable": "1.0.5.6",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/bdesham/pinboard-notes-backup/archive/v1.0.5.6.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0b544d5e3dfd0ebf029b50fcb405045f601dac1f103fbd95f2b24b5aefd4ef40"
    },
    "head": {
      "url": "https://github.com/bdesham/pinboard-notes-backup.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pinboard-notes-backup/blobs/sha256:2a25aa11fe52d764d56bbedbece7d68c8650b5dc21a2bba87c34b6cea1b032e0",
          "sha256": "2a25aa11fe52d764d56bbedbece7d68c8650b5dc21a2bba87c34b6cea1b032e0"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pinboard-notes-backup/blobs/sha256:44a95be5ba2c82644c18c048756fe4223dd61f2ba7fd010e0c895cbe78b0585a",
          "sha256": "44a95be5ba2c82644c18c048756fe4223dd61f2ba7fd010e0c895cbe78b0585a"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pinboard-notes-backup/blobs/sha256:a668842564ed2394a77076e8c3e8b4efe8b9b5032e2a3316f8ff3a741acc480c",
          "sha256": "a668842564ed2394a77076e8c3e8b4efe8b9b5032e2a3316f8ff3a741acc480c"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pinboard-notes-backup/blobs/sha256:e3b01674e194bf24426b5414f0468ad94b2286862a02338a7f9c26767cf9f2fa",
          "sha256": "e3b01674e194bf24426b5414f0468ad94b2286862a02338a7f9c26767cf9f2fa"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pinboard-notes-backup/blobs/sha256:bb0049130131cd64c501093904ff99a6df2d2bc26e4c4c05aafbe840e28c9b27",
          "sha256": "bb0049130131cd64c501093904ff99a6df2d2bc26e4c4c05aafbe840e28c9b27"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pinboard-notes-backup/blobs/sha256:01a6a006a5df7ec5ad09606c18a80ae9df4b4551035c35c7777ef6220e691445",
          "sha256": "01a6a006a5df7ec5ad09606c18a80ae9df4b4551035c35c7777ef6220e691445"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pinboard-notes-backup/blobs/sha256:7d27dbcd35071c388a067a7b15bf279f334b0c188d121afbf50cab84c261e5ca",
          "sha256": "7d27dbcd35071c388a067a7b15bf279f334b0c188d121afbf50cab84c261e5ca"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cabal-install",
    "ghc"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "zlib"
  ],
  "uses_from_macos_bounds": [
    {}
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/pinboard-notes-backup.rb",
  "ruby_source_checksum": {
    "sha256": "2835c83a00ce77148b166c460bb19b9a2afeb74f987b7eef8f80d885927ff904"
  },
  "date_added": "2017-12-14T15:59:00+01:00",
  "readme": "# pinboard-notes-backup [![Build](https://github.com/bdesham/pinboard-notes-backup/actions/workflows/main.yaml/badge.svg)](https://github.com/bdesham/pinboard-notes-backup/actions/workflows/main.yaml)\n\nBack up the notes you’ve saved to [Pinboard].\n\n[Pinboard]: https://pinboard.in\n\n## Installation\n\n### Homebrew\n\nIf you’re using [Homebrew], you can just run\n\n    brew install pinboard-notes-backup\n\n[Homebrew]: https://brew.sh\n\n### Nix\n\nIf you’re using the [Nix] package manager, run\n\n    nix-env -i -A nixpkgs.pinboard-notes-backup\n\nIf you use NixOS, run\n\n    nix-env -i -A nixos.pinboard-notes-backup\n\n[Nix]: https://nixos.org/nix/\n\n### Manual installation\n\nPrebuilt binaries are available for OS X and Linux—find them on [the page for the most recent release][release]. To install the program from one of these,\n\n1. Download the archive for your OS and unpack it.\n\n2. Copy the `pnbackup` binary to some directory in your `PATH`, like `/usr/local/bin`.\n\n3. *Optional:* Install the man page by running\n\n       install -D --mode=444 pnbackup.1 /usr/local/share/man/man1\n\n4. *Optional:* Generate and install a Bash completion script by running\n\n       mkdir -p /usr/local/etc/bash_completion.d\n       pnbackup --bash-completion-script $(which pnbackup) > \\\n           /usr/local/etc/bash_completion.d/pnbackup.bash\n\n5. *Optional:* Generate and install a Zsh completion script by running\n\n       mkdir -p /usr/local/share/zsh/site-functions\n       pnbackup --zsh-completion-script $(which pnbackup) > \\\n           /usr/local/share/zsh/site-functions/_pnbackup\n\n[release]: https://github.com/bdesham/pinboard-notes-backup/releases/latest\n\n### Building from source\n\nThis is a Haskell program that you can build using [Stack]. With Stack installed, just type\n\n    stack setup\n\nto download and install GHC (the Haskell compiler) and then\n\n    stack install\n\nto build the `pnbackup` binary and install it. (The default installation directory is `~/.local/bin`; pass an argument like `--local-bin-path=/usr/local/bin` to change this.)\n\n[Stack]: http://docs.haskellstack.org/en/stable/README/\n\nYou can also build the project with cabal-install, but I’m less familiar with that approach.\n\nThis project [uses GitHub Actions][actions] for automated building. The build is checked on the latest versions of macOS and Ubuntu Linux, with various combinations of Stack, cabal-install, and GHC 8.6.x, 8.8.x, 8.10.x, and 9.0.x. The project does *not* currently build under GHC 9.2.x because of [a temporary incompatibility] between [req] and that GHC version.\n\n[actions]: https://github.com/bdesham/pinboard-notes-backup/actions\n[a temporary incompatibility]: https://github.com/mrkkrp/req/pull/125\n[req]: https://github.com/mrkkrp/req\n\n## Usage\n\nFirst you’ll need to grab your Pinboard API token from Pinboard’s [password settings] page. It’s a string like “maciej:abc123456”.\n\nTo save your notes to a file called “Notes.sqlite”, run\n\n    pnbackup -t maciej:abc123456 Notes.sqlite\n\nreplacing the example API token with your own. This will put all of your notes into a SQLite database called “Notes.sqlite”.\n\nEach time you run the program, it will fetch the list of your notes from the Pinboard server. It will then download any notes that are new or that have been updated on the server, and it will delete any notes that have been deleted from the server. The program does one-way synchronization only: it will update your local database to match what’s on the server but it will never make any changes on the server.\n\nThe [Pinboard API] requires a three-second wait time between each request, and the text of each note must be downloaded in a separate request, so the initial download of your notes may take a while. Subsequent syncs will generally be much shorter, depending on how often you add or modify notes and how often you run pnbackup. If you want to see exactly what `pnbackup` is doing as it works, pass it the `-v` or `--verbose` flags.\n\n[password settings]: https://pinboard.in/settings/password\n[Pinboard API]: https://pinboard.in/api/\n\n## Data format\n\nYour notes are stored in a table called “notes” with the following schema:\n\n``` sql\nCREATE TABLE notes (\n    id TEXT NOT NULL UNIQUE,\n    title TEXT NOT NULL,\n    text TEXT NOT NULL,\n    hash TEXT NOT NULL,\n    created DATETIME NOT NULL,\n    updated DATETIME NOT NULL\n);\n```\n\nThese columns correspond exactly to the fields listed on the [Pinboard API] page.\n\nWhy SQLite and not some plain-text format? In [the words of Paul Ford][Ford],\n\n> SQLite is incredibly well-documented. It’s also instantly usable as a database from the command line with no pre-processing at all, even for very large files, and there are immediately usable SQLite APIs for every programming language. Plus it’s incredibly easy to turn SQLite data into plain text, it has freely available extensions for geo, full-text, and hierarchical data, and it’s tiny and public-domain.\n\n[Ford]: https://trackchanges.postlight.com/usable-data-5d626d8a6b57\n\nIf you've used this application to back up your notes to a file called Notes.sqlite, you could use this quick and dirty Python script to print them in JSON format:\n\n``` python\n#!/usr/bin/env python3\n\nfrom json import dumps\nimport sqlite3\n\nconn = sqlite3.connect(\"Notes.sqlite\")\nconn.row_factory = sqlite3.Row\ncurs = conn.cursor()\ncurs.execute(\"SELECT * FROM notes\")\nprint(dumps([dict(r) for r in curs.fetchall()]))\n```\n\n## Author\n\nThis program was created by [Benjamin Esham](https://esham.io).\n\nThis project is [hosted on GitHub](https://github.com/bdesham/pinboard-notes-backup). Please feel free to submit pull requests.\n\n## Version history\n\nSee [CHANGELOG.md](CHANGELOG.md).\n\n## License\n\nCopyright © 2016–2017, 2019, 2021–2022 Benjamin D. Esham.\n\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but **without any warranty;** without even the implied warranty of **merchantability** or **fitness for a particular purpose.** See the GNU General Public License for more details.\n\nThe GNU General Public License can be found in the file LICENSE.txt."
}
