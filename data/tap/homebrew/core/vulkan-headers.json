{
  "name": "vulkan-headers",
  "full_name": "vulkan-headers",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Vulkan Header files and API registry",
  "license": "Apache-2.0",
  "homepage": "https://github.com/KhronosGroup/Vulkan-Headers",
  "versions": {
    "stable": "1.3.261",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/KhronosGroup/Vulkan-Headers/archive/v1.3.261.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "0c67b2b76a7d6534c0f98085dbbcd4a1ac945b15b269bc81ee7dbe6cf28d53bb"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/vulkan-headers/blobs/sha256:673006a0c21c721b0ba7557a41661fa55b8e89d21ab412aabf39a69c11c2aaaa",
          "sha256": "673006a0c21c721b0ba7557a41661fa55b8e89d21ab412aabf39a69c11c2aaaa"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/vulkan-headers.rb",
  "ruby_source_checksum": {
    "sha256": "4c204a467f8dce7484eee1458a184dd0ad4f7c2641c2b0b9836161949ef84439"
  },
  "date_added": "2019-02-11T11:03:06+01:00",
  "readme": "<!--\nCopyright 2018-2023 The Khronos Group Inc.\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n# Vulkan-Headers\n\nVulkan header files and API registry\n\nThis repository contains Vulkan header files, include files for C and C++,\nand related scripts and tests.\n\nMost of the files in this repository are sourced from, or generated from,\nother repositories as described in [CONTRIBUTING.md](CONTRIBUTING.md).\nVulkan-Headers exists as a staging area for these files, most of which are\nthen consumed by downstream repositories used to build SDK components such\nas the Vulkan Validation Layers and Conformance Test Suite.\n\nDevelopers normally obtain headers from the official\n[Vulkan-SDK](https://www.lunarg.com/vulkan-sdk/).\nThey can also use headers from, or packaged from, this repository.\n\nIn most cases, developers should only need the headers, not the scripts and\nother material in this repository.\nIn particular if you are packaging the headers for inclusion in Linux\ndistributions or similar uses, we advise that you do not include the\nscripts, and direct potential users of the scripts to their canonical\nsources in the [Vulkan Specification\nrepository](https://github.com/KhronosGroup/Vulkan-Docs).\n\n## Contributing\n\nSee the [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Building\n\nSee [BUILD.md](BUILD.md)\n\n## SDK Support\n\nVulkan-Headers are shipped as part of the official [Vulkan-SDK](https://www.lunarg.com/vulkan-sdk/)\n\n## C/C++ Package Manager Support\n\n`Vulkan-Headers` are also supported by both [conan](https://conan.io/) & [vcpkg](https://learn.microsoft.com/en-us/vcpkg/).\n\n## Version Tagging Scheme\n\nUpdates to the `Vulkan-Headers` repository which correspond to a new Vulkan\nspecification release are tagged using the following format:\n`v<`_`version`_`>` (e.g., `v1.3.255`).\n\n**Note**: Marked version releases have undergone thorough testing but do not\nimply the same quality level as SDK tags. SDK tags follow the\n`sdk-<`_`version`_`>.<`_`patch`_`>` format (e.g., `sdk-1.3.250.0`)."
}
