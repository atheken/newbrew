{
  "name": "patchelf",
  "full_name": "patchelf",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Modify dynamic ELF executables",
  "license": "GPL-3.0-or-later",
  "homepage": "https://github.com/NixOS/patchelf",
  "versions": {
    "stable": "0.18.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/NixOS/patchelf/releases/download/0.18.0/patchelf-0.18.0.tar.bz2",
      "tag": null,
      "revision": null,
      "checksum": "1952b2a782ba576279c211ee942e341748fdb44997f704dd53def46cd055470b"
    },
    "head": {
      "url": "https://github.com/NixOS/patchelf.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/patchelf/blobs/sha256:37888c994e481e2b6a3a212c689195e2ca6dbeb681779845bbeda5a52262c1b5",
          "sha256": "37888c994e481e2b6a3a212c689195e2ca6dbeb681779845bbeda5a52262c1b5"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/patchelf/blobs/sha256:bd75a287bcecfb33a2ca07c92225435571804a8e73f30ecc4769a6a7443dc2d0",
          "sha256": "bd75a287bcecfb33a2ca07c92225435571804a8e73f30ecc4769a6a7443dc2d0"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/patchelf/blobs/sha256:ef4527c4a98121dd6fabcef87f00b3a8dbbd6b9cbd24d49d972a057f49ee4080",
          "sha256": "ef4527c4a98121dd6fabcef87f00b3a8dbbd6b9cbd24d49d972a057f49ee4080"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/patchelf/blobs/sha256:6b230c2ad0a046653bb8f2b5652d069f4f9e7c6f17bdb4d4e9b6dc35a94a3693",
          "sha256": "6b230c2ad0a046653bb8f2b5652d069f4f9e7c6f17bdb4d4e9b6dc35a94a3693"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/patchelf/blobs/sha256:37bd9ca1e04a76f8b160fdaf1f1f76c2f396a264f5d3af88670d3338c577638b",
          "sha256": "37bd9ca1e04a76f8b160fdaf1f1f76c2f396a264f5d3af88670d3338c577638b"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/patchelf/blobs/sha256:0c12fe3723bc1b72e6635713ff2f6c12cf7f13e8e9533fb58360a2c163187d4f",
          "sha256": "0c12fe3723bc1b72e6635713ff2f6c12cf7f13e8e9533fb58360a2c163187d4f"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/patchelf/blobs/sha256:fe8a76cdde4a5666cccbcdfc328bfb77f5d05b63a52ce103b487166be696ac6b",
          "sha256": "fe8a76cdde4a5666cccbcdfc328bfb77f5d05b63a52ce103b487166be696ac6b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/patchelf.rb",
  "ruby_source_checksum": {
    "sha256": "1b54a7fd45df0753e05c8886c1ed108ac913b310ff7682897f0d3b35f897599e"
  },
  "head_dependencies": {
    "build_dependencies": [
      "autoconf",
      "automake"
    ],
    "dependencies": [],
    "test_dependencies": [],
    "recommended_dependencies": [],
    "optional_dependencies": [],
    "uses_from_macos": [],
    "uses_from_macos_bounds": []
  },
  "date_added": "2018-04-12T13:57:46+02:00",
  "readme": "PatchELF is a simple utility for modifying existing ELF executables and\nlibraries.  In particular, it can do the following:\n\n* Change the dynamic loader (\"ELF interpreter\") of executables:\n\n  ```console\n  $ patchelf --set-interpreter /lib/my-ld-linux.so.2 my-program\n  ```\n\n* Change the `RPATH` of executables and libraries:\n\n  ```console\n  $ patchelf --set-rpath /opt/my-libs/lib:/other-libs my-program\n  ```\n\n* Shrink the `RPATH` of executables and libraries:\n\n  ```console\n  $ patchelf --shrink-rpath my-program\n  ```\n\n  This removes from the `RPATH` all directories that do not contain a\n  library referenced by `DT_NEEDED` fields of the executable or library.\n  For instance, if an executable references one library `libfoo.so`, has\n  an RPATH `/lib:/usr/lib:/foo/lib`, and `libfoo.so` can only be found\n  in `/foo/lib`, then the new `RPATH` will be `/foo/lib`.\n\n  In addition, the `--allowed-rpath-prefixes` option can be used for\n  further rpath tuning. For instance, if an executable has an `RPATH`\n  `/tmp/build-foo/.libs:/foo/lib`, it is probably desirable to keep\n  the `/foo/lib` reference instead of the `/tmp` entry. To accomplish\n  that, use:\n\n  ```console\n  $ patchelf --shrink-rpath --allowed-rpath-prefixes /usr/lib:/foo/lib my-program\n  ```\n\n* Remove declared dependencies on dynamic libraries (`DT_NEEDED`\n  entries):\n\n  ```console\n  $ patchelf --remove-needed libfoo.so.1 my-program\n  ```\n\n  This option can be given multiple times.\n\n* Add a declared dependency on a dynamic library (`DT_NEEDED`):\n\n  ```console\n  $ patchelf --add-needed libfoo.so.1 my-program\n  ```\n\n  This option can be give multiple times.\n\n* Replace a declared dependency on a dynamic library with another one\n  (`DT_NEEDED`):\n\n  ```console\n  $ patchelf --replace-needed liboriginal.so.1 libreplacement.so.1 my-program\n  ```\n\n  This option can be give multiple times.\n\n* Change `SONAME` of a dynamic library:\n\n  ```console\n  $ patchelf --set-soname libnewname.so.3.4.5 path/to/libmylibrary.so.1.2.3\n  ```\n\n\n## Compiling and Testing\n\n### Via Autotools\n```console\n./bootstrap.sh\n./configure\nmake\nmake check\nsudo make install\n```\n### Via Nix\n\nYou can build with Nix in several ways.\n\n1. Building via `nix build` will produce the result in `./result/bin/patchelf`. If you would like to build _patchelf_ with _musl_ try `nix build .#patchelf-musl`\n\n2. You can launch a development environment with `nix develop` and follow the autotools steps above. If you would like to develop with _musl_ try `nix develop .#musl`\n\n## Author\n\nCopyright 2004-2019 Eelco Dolstra <edolstra@gmail.com>.\n\n## License\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or (at\nyour option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>."
}
