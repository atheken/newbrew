{
  "name": "nomino",
  "full_name": "nomino",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Batch rename utility",
  "license": "Apache-2.0 or MIT",
  "homepage": "https://github.com/yaa110/nomino",
  "versions": {
    "stable": "1.3.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/yaa110/nomino/archive/1.3.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "45e8ed1e3131d4e0bacad2e1f2b4c2780b6db5a2ffaa4b8635cb2aee80bc2920"
    },
    "head": {
      "url": "https://github.com/yaa110/nomino.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nomino/blobs/sha256:c14e4132238b567dcefa076e8008748d1f8b49e76f787fa2b677c5dfafdb69c1",
          "sha256": "c14e4132238b567dcefa076e8008748d1f8b49e76f787fa2b677c5dfafdb69c1"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nomino/blobs/sha256:2b31bb9f7e07f5c1bb8a3b961c2542a322991beff406362dabacd2c96265896c",
          "sha256": "2b31bb9f7e07f5c1bb8a3b961c2542a322991beff406362dabacd2c96265896c"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nomino/blobs/sha256:2a69b599da29f9f1a39435c03e9f874b856ed059205d9880369b68abee25ca6e",
          "sha256": "2a69b599da29f9f1a39435c03e9f874b856ed059205d9880369b68abee25ca6e"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nomino/blobs/sha256:7edb742b84fe15e9408f5a5e9e3f04c6496f7485beb2259a62992aa83f4b89a7",
          "sha256": "7edb742b84fe15e9408f5a5e9e3f04c6496f7485beb2259a62992aa83f4b89a7"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nomino/blobs/sha256:77f6b1e152c6e1210b281e6f22c43f1805753fb5c4aef68c734b0a3035300c1f",
          "sha256": "77f6b1e152c6e1210b281e6f22c43f1805753fb5c4aef68c734b0a3035300c1f"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nomino/blobs/sha256:ee9c663b8f11c7498ead2f44697dfa82db829bf44be26cfe9ea2bce3c3f1b841",
          "sha256": "ee9c663b8f11c7498ead2f44697dfa82db829bf44be26cfe9ea2bce3c3f1b841"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/nomino/blobs/sha256:90aeb989295f313f9ef0c5881230816939307c1aa9e400cabb632f9660496c2d",
          "sha256": "90aeb989295f313f9ef0c5881230816939307c1aa9e400cabb632f9660496c2d"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/nomino.rb",
  "ruby_source_checksum": {
    "sha256": "0e1f5f959664bfa38164d067e714ae1f7a66064ce56e439343b11af282f12ad0"
  },
  "date_added": "2021-05-19T05:43:24+00:00",
  "readme": "# nomino\n\n[![Test](https://github.com/yaa110/nomino/workflows/Test/badge.svg)](https://github.com/yaa110/nomino/actions) [![Download](https://img.shields.io/badge/download-releases-blue.svg)](https://github.com/yaa110/nomino/releases/latest) [![Wiki](https://img.shields.io/badge/wiki-docs-orange.svg)](https://github.com/yaa110/nomino/wiki)\n\nBatch rename utility for developers\n\n![Alt text](/screenshots/usage.png?raw=true \"Regex Screenshot\")\n\n## How to install\n\n### Pre-Compiled\n\nYou can download a pre-compiled executable for Linux, MacOS and Windows operating systems, then you should copy that executable to a location from your `$PATH` env:\n\n- [Linux 64bit](https://github.com/yaa110/nomino/releases/latest/download/nomino-linux-64bit)\n- [MacOS 64bit](https://github.com/yaa110/nomino/releases/latest/download/nomino-macos-64bit)\n- [Windows 64bit](https://github.com/yaa110/nomino/releases/latest/download/nomino-windows-64bit.exe)\n\nYou might need to run `chmod +x nomino-linux-64bit` or `chmod +x nomino-macos-64bit`.\n\n### Arch Linux\n\nYou can use [nomino](https://aur.archlinux.org/packages/nomino)<sup>AUR</sup> package to install nomino in Arch Linux.\n\n### Build Manually\n\nIf you prefer to build nomino manually, or a pre-compiled executable is not provided for your target, then you can build nomino from scratch:\n\n- Install Rust: `curl -sSf https://sh.rustup.rs | sh`\n- Run `cargo install nomino`\n\n## Usage\n\n```bash\nUSAGE:\n    nomino [FLAGS] [OPTIONS] [[SOURCE] OUTPUT]...\n\nFLAGS:\n    -e, --extension    Preserves the extension of input files in 'sort' and 'regex' options\n    -h, --help         Prints help information\n    -k, --mkdir        Recursively creates all parent directories of '<OUTPUT>' if they are missing\n    -w, --overwrite    Overwrites output files, otherwise, a '_' is prepended to filename\n    -p, --print        Prints the map table to stdout\n    -t, --test         Runs in test mode without renaming actual files (dry-run)\n    -V, --version      Prints version information\n\nOPTIONS:\n        --depth <DEPTH>        Optional value to overwrite inferred subdirectory depth value in 'regex' mode\n        --max-depth <DEPTH>    Optional value to set the maximum of subdirectory depth value in 'regex' mode\n    -d, --dir <PATH>           Sets the working directory\n    -g, --generate <PATH>      Stores a JSON map file in '<PATH>' after renaming files\n    -m, --map <PATH>           Sets the path of map file to be used for renaming files\n    -r, --regex <PATTERN>      Regex pattern (RE2 syntax) to match by filenames\n    -s, --sort <ORDER>         Sets the order of natural sorting (by name) to rename files using enumerator [possible values: ASC, DESC]\n\nARGS:\n    <[SOURCE] OUTPUT>...    OUTPUT is the pattern to be used for renaming files, and SOURCE is the optional regex pattern to match by filenames. SOURCE has the same function as -r option\n```\n\n## Map file format\n\n```json\n{\n    \"<input1>\": \"<output1>\",\n    \"<input2>\": \"<output2>\",\n    \"<...>\": \"<...>\"\n}\n```\n\n## Output\n\nThe output is necessary when using `--sort` or `--regex` options.\n\n### Regex\n\nThe accepted syntax of regex pattern is [RE2](https://github.com/google/re2/wiki/Syntax).\n\n### Placeholders\n\n1. Placeholders have the format of `{I:P}` where `I` is the index of captured group and `P` is the padding of digits with `0`. For example, `{2:3}` means the third captured group with a padding of 3, i.e. `1` is formatted as `001`.\n1. Indices start from `0`, and `{0}` means the filename.\n1. The index `I` could be dropped, i.e. `{}` or `{:3}`. In this case an auto incremental index is used which starts from `1`. For example, `{} {}` equals `{1} {2}`.\n1. `{` and `}` characters could be escaped using `\\` character, i.e. `\\\\{` and `\\\\}` in cli.\n1. Padding is only used for positive numbers, e.g. the formatted result of `{:3}` for `1` is `001`, for `-1` is `-1` and for `a` is `a`.\n1. If `--sort` option is used, the first index `{0}` is the filename and the second index `{1}` or first occurrence of `{}` is the enumerator index.\n\n## Wiki\n\n- **[Examples](https://github.com/yaa110/nomino/wiki/Examples)** learn nomino by examples\n- **[Benchmark](https://github.com/yaa110/nomino/wiki/Benchmark)** benchmark test of similar utilities to nomino"
}
