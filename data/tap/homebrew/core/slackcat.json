{
  "name": "slackcat",
  "full_name": "slackcat",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Command-line utility for posting snippets to Slack",
  "license": "MIT",
  "homepage": "https://github.com/bcicen/slackcat",
  "versions": {
    "stable": "1.7.3",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/bcicen/slackcat/archive/refs/tags/1.7.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "2e3ed7ad5ab3075a8e80a6a0b08a8c52bb8e6e39f6ab03597f456278bfa7768b"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/slackcat/blobs/sha256:3056663a7ab0abf18ce63db1cf7dc853be37fcd8aa88e0935bc2c6eef2094437",
          "sha256": "3056663a7ab0abf18ce63db1cf7dc853be37fcd8aa88e0935bc2c6eef2094437"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/slackcat/blobs/sha256:f485580b0cf05cf5d7dc4efd6e6dc9aa29545d119ebc843b06d53c84b87f2f29",
          "sha256": "f485580b0cf05cf5d7dc4efd6e6dc9aa29545d119ebc843b06d53c84b87f2f29"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/slackcat/blobs/sha256:f765a9df06043f889342eb317e72648bc4904bea55d5339b69399b3a8b4ec3ff",
          "sha256": "f765a9df06043f889342eb317e72648bc4904bea55d5339b69399b3a8b4ec3ff"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/slackcat/blobs/sha256:6f909ddf90a97c5a2503f056677d2c8c802c6386ebd63cef1b8d4b3385ba6c93",
          "sha256": "6f909ddf90a97c5a2503f056677d2c8c802c6386ebd63cef1b8d4b3385ba6c93"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/slackcat/blobs/sha256:e9441a1cadead32172fd7eb5ea6b4416ab09b7dffe04584394bad221ba0c0533",
          "sha256": "e9441a1cadead32172fd7eb5ea6b4416ab09b7dffe04584394bad221ba0c0533"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/slackcat/blobs/sha256:176aa3f2c1f088a0dce065034c8a6d381830679db2425c4b4d690823e0b1e022",
          "sha256": "176aa3f2c1f088a0dce065034c8a6d381830679db2425c4b4d690823e0b1e022"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/slackcat/blobs/sha256:344233ded56abb6b28a5b4cde44cc58713a63e7a2b49a84b8c47c0ebc9d2d3f6",
          "sha256": "344233ded56abb6b28a5b4cde44cc58713a63e7a2b49a84b8c47c0ebc9d2d3f6"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/slackcat/blobs/sha256:0aa9e136f18f6937cf156f00b850c37361a2f4616ea52783e471ded9de82ee7f",
          "sha256": "0aa9e136f18f6937cf156f00b850c37361a2f4616ea52783e471ded9de82ee7f"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/slackcat/blobs/sha256:96518aa5c2d2ddc1c62a1ee163748bc0909be294eebc290156a6ca1908d6216a",
          "sha256": "96518aa5c2d2ddc1c62a1ee163748bc0909be294eebc290156a6ca1908d6216a"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/slackcat.rb",
  "ruby_source_checksum": {
    "sha256": "abc40a45f5c9b153cad9b8400722b553d03a50c801d51ce2b21b83e9555fec6b"
  },
  "date_added": "2016-01-11T17:35:14+01:00",
  "readme": "# slackcat\nSlackcat is a simple commandline utility to post snippets to Slack.\n\n\n  <img width=\"500px\" src=\"https://raw.githubusercontent.com/bcicen/slackcat/master/demo.gif\" alt=\"slackcat\"/>\n\n\n## Installing\nDownload the [latest release](https://github.com/bcicen/slackcat/releases) for your platform:\n\n```bash\ncurl -Lo slackcat https://github.com/bcicen/slackcat/releases/download/1.7.2/slackcat-1.7.2-$(uname -s)-amd64\nsudo mv slackcat /usr/local/bin/\nsudo chmod +x /usr/local/bin/slackcat\n```\n\n`slackcat` is also available via homebrew:\n```brew\nbrew install slackcat\n```\n\n## Building\nTo optionally build `slackcat` from source, ensure you have [dep](https://github.com/golang/dep) installed and run:\n```\ngo get github.com/bcicen/slackcat && \\\ncd $GOPATH/src/github.com/bcicen/slackcat && \\\nmake build\n```\n\nYou must use GNU make for the build to work correctly. If your platform does not install GNU make as `make` (i.e. OpenBSD) then you will need to install gmake and run:\n```\ngo get github.com/bcicen/slackcat && \\\ncd $GOPATH/src/github.com/bcicen/slackcat && \\\ngmake build\n```\n\n## Configuration\n\nGenerate an initial config, or add a new team token with:\n```bash\nslackcat --configure\n```\nYou'll be prompted for a team nickname and a new browser window will be opened for you to confirm the request via Slack. Provide the returned token to slackcat when prompted, and you're ready to go!\n\nFor configuring multiple teams and default channels, see [Configuration Guide](https://github.com/bcicen/slackcat/blob/master/docs/configuration-guide.md).\n\n## Usage\nPipe command output as a text snippet:\n```bash\n$ echo -e \"hi\\nthere\" | slackcat --channel general --filename hello\n*slackcat* file hello uploaded to general\n```\n\nPost an existing file:\n```bash\n$ slackcat --channel general /home/user/bot.png\n*slackcat* file bot.png uploaded to general\n```\n\nStream input continuously:\n```bash\n$ tail -F -n0 /path/to/log | slackcat --channel general --stream\n*slackcat* posted 5 message lines to general\n*slackcat* posted 2 message lines to general\n...\n```\n\n## Options\n\nOption | Description\n--- | ---\n--tee, -t | Print stdin to screen before posting\n--stream, -s | Stream messages to Slack continuously instead of uploading a single snippet\n--noop | Skip posting file to Slack. Useful for testing\n--configure | Configure Slackcat via oauth\n--iconemoji, -i | Specify emoji icon for message (e.g. \":+1:\")\n--channel, -c | Slack channel, group, or user to post to\n--filename, -n | Filename for upload. Defaults to given filename or current timestamp if reading from stdin\n--filetype | Specify filetype for syntax highlighting. Defaults to autodetect\n--comment | Initial comment for snippet\n--username | Stream messages as given bot user. Defaults to auth user\n--thread | Stream messages to thread after initial comment message"
}
