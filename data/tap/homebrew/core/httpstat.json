{
  "name": "httpstat",
  "full_name": "httpstat",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Curl statistics made simple",
  "license": "MIT",
  "homepage": "https://github.com/reorx/httpstat",
  "versions": {
    "stable": "1.3.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/reorx/httpstat/archive/1.3.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "56c45aebdb28160dd16c73cf23af8208c19b30ec0166790685dfec115df9c92f"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/httpstat/blobs/sha256:6e4abcd3c43514f792ffcdc766d65e22f37b8b1c66d5bb89828c73d33b06f7c1",
          "sha256": "6e4abcd3c43514f792ffcdc766d65e22f37b8b1c66d5bb89828c73d33b06f7c1"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [
    "curl",
    "python"
  ],
  "uses_from_macos_bounds": [
    {},
    {
      "since": "catalina"
    }
  ],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/httpstat.rb",
  "ruby_source_checksum": {
    "sha256": "fc1137a9960cb09e067dc06705d77e963b58399cbd39c9c25bcc48eb83b89767"
  },
  "date_added": "2016-09-11T07:08:12-04:00",
  "readme": "# httpstat\n\n![screenshot](screenshot.png)\n\nhttpstat visualizes `curl(1)` statistics in a way of beauty and clarity.\n\nIt is a **single file🌟** Python script that has **no dependency👏** and is compatible with **Python 3🍻**.\n\n\n## Installation\n\nThere are three ways to get `httpstat`:\n\n- Download the script directly: `wget https://raw.githubusercontent.com/reorx/httpstat/master/httpstat.py`\n\n- Through pip: `pip install httpstat`\n\n- Through homebrew (macOS only): `brew install httpstat`\n\n> For Windows users, @davecheney's [Go version](https://github.com/davecheney/httpstat) is suggested. → [download link](https://github.com/davecheney/httpstat/releases)\n\n## Usage\n\nSimply:\n\n```bash\npython httpstat.py httpbin.org/get\n```\n\nIf installed through pip or brew, you can use `httpstat` as a command:\n\n```bash\nhttpstat httpbin.org/get\n```\n\n### cURL Options\n\nBecause `httpstat` is a wrapper of cURL, you can pass any cURL supported option after the url (except for `-w`, `-D`, `-o`, `-s`, `-S` which are already used by `httpstat`):\n\n```bash\nhttpstat httpbin.org/post -X POST --data-urlencode \"a=b\" -v\n```\n\n### Environment Variables\n\n`httpstat` has a bunch of environment variables to control its behavior.\nHere are some usage demos, you can also run `httpstat --help` to see full explanation.\n\n- <strong><code>HTTPSTAT_SHOW_BODY</code></strong>\n\n  Set to `true` to show response body in the output, note that body length\n  is limited to 1023 bytes, will be truncated if exceeds. Default is `false`.\n\n- <strong><code>HTTPSTAT_SHOW_IP</code></strong>\n\n  By default httpstat shows remote and local IP/port address.\n  Set to `false` to disable this feature. Default is `true`.\n\n- <strong><code>HTTPSTAT_SHOW_SPEED</code></strong>\n\n  Set to `true` to show download and upload speed.  Default is `false`.\n\n  ```bash\n  HTTPSTAT_SHOW_SPEED=true httpstat http://cachefly.cachefly.net/10mb.test\n  \n  ...\n  speed_download: 3193.3 KiB/s, speed_upload: 0.0 KiB/s\n  ```\n\n- <strong><code>HTTPSTAT_SAVE_BODY</code></strong>\n\n  By default httpstat stores body in a tmp file,\n  set to `false` to disable this feature. Default is `true`\n\n- <strong><code>HTTPSTAT_CURL_BIN</code></strong>\n\n  Indicate the cURL bin path to use. Default is `curl` from current shell $PATH.\n\n  This exampe uses brew installed cURL to make HTTP2 request:\n\n  ```bash\n  HTTPSTAT_CURL_BIN=/usr/local/Cellar/curl/7.50.3/bin/curl httpstat https://http2.akamai.com/ --http2\n  \n  HTTP/2 200\n  ...\n  ```\n\n  > cURL must be compiled with nghttp2 to enable http2 feature\n  > ([#12](https://github.com/reorx/httpstat/issues/12)).\n\n- <strong><code>HTTPSTAT_METRICS_ONLY</code></strong>\n\n  If set to `true`, httpstat will only output metrics in json format,\n  this is useful if you want to parse the data instead of reading it.\n\n- <strong><code>HTTPSTAT_DEBUG</code></strong>\n\n  Set to `true` to see debugging logs. Default is `false`\n\n\nFor convenience, you can export these environments in your `.zshrc` or `.bashrc`,\nexample:\n\n```bash\nexport HTTPSTAT_SHOW_IP=false\nexport HTTPSTAT_SHOW_SPEED=true\nexport HTTPSTAT_SAVE_BODY=false\n```\n\n## Related Projects\n\nHere are some implementations in various languages:\n\n\n- Go: [davecheney/httpstat](https://github.com/davecheney/httpstat)\n\n  This is the Go alternative of httpstat, it's written in pure Go and relies no external programs. Choose it if you like solid binary executions (actually I do).\n\n- Go (library): [tcnksm/go-httpstat](https://github.com/tcnksm/go-httpstat)\n\n  Other than being a cli tool, this project is used as library to help debugging latency of HTTP requests in Go code, very thoughtful and useful, see more in this [article](https://medium.com/@deeeet/trancing-http-request-latency-in-golang-65b2463f548c#.mm1u8kfnu)\n\n- Bash: [b4b4r07/httpstat](https://github.com/b4b4r07/httpstat)\n\n  This is what exactly I want to do at the very beginning, but gave up due to not confident in my bash skill, good job!\n\n- Node: [yosuke-furukawa/httpstat](https://github.com/yosuke-furukawa/httpstat)\n\n  [b4b4r07](https://twitter.com/b4b4r07) mentioned this in his [article](https://tellme.tokyo/post/2016/09/25/213810), could be used as a HTTP client also.\n\n- PHP: [talhasch/php-httpstat](https://github.com/talhasch/php-httpstat)\n\n  The PHP implementation by @talhasch\n\nSome code blocks in `httpstat` are copied from other projects of mine, have a look:\n\n- [reorx/python-terminal-color](https://github.com/reorx/python-terminal-color) Drop-in single file library for printing terminal color.\n\n- [reorx/getenv](https://github.com/reorx/getenv) Environment variable definition with type."
}
