{
  "name": "simple-amqp-client",
  "full_name": "simple-amqp-client",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "C++ interface to rabbitmq-c",
  "license": "MIT",
  "homepage": "https://github.com/alanxz/SimpleAmqpClient",
  "versions": {
    "stable": "2.5.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/alanxz/SimpleAmqpClient/archive/v2.5.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "057c56b29390ec7659de1527f9ccbadb602e3e73048de79594521b3141ab586d"
    },
    "head": {
      "url": "https://github.com/alanxz/SimpleAmqpClient.git",
      "branch": "master"
    }
  },
  "revision": 5,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/simple-amqp-client/blobs/sha256:08254107e1722e12718b480db1dbf6de07197827921a78becfe322d0f9eebe68",
          "sha256": "08254107e1722e12718b480db1dbf6de07197827921a78becfe322d0f9eebe68"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/simple-amqp-client/blobs/sha256:8b276e2dcd1d156db170e63af4b947ce370e87c511808810ae1a8dbd3c7c74b4",
          "sha256": "8b276e2dcd1d156db170e63af4b947ce370e87c511808810ae1a8dbd3c7c74b4"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/simple-amqp-client/blobs/sha256:6eb50b2ded72ece524376758aad62fcfa41001e07f7c118800494d23302b968e",
          "sha256": "6eb50b2ded72ece524376758aad62fcfa41001e07f7c118800494d23302b968e"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/simple-amqp-client/blobs/sha256:96b8108c180fa64cac43b882cec0bb675b4e029170beeb60b034cc137f7cfe3f",
          "sha256": "96b8108c180fa64cac43b882cec0bb675b4e029170beeb60b034cc137f7cfe3f"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/simple-amqp-client/blobs/sha256:0266a55c8bc15714604fd6ed646a6e3e4254cf3204db8044b12c2a8b93f50be4",
          "sha256": "0266a55c8bc15714604fd6ed646a6e3e4254cf3204db8044b12c2a8b93f50be4"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/simple-amqp-client/blobs/sha256:e453369d97ecbe31463b1bb86f4b9ab9c0bb1082f0c9f44eb1e15f5700fbc642",
          "sha256": "e453369d97ecbe31463b1bb86f4b9ab9c0bb1082f0c9f44eb1e15f5700fbc642"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/simple-amqp-client/blobs/sha256:2dddcb4edfe7fb23b493c2ccb330b7a68c802d8996ee34170c6f529341f919aa",
          "sha256": "2dddcb4edfe7fb23b493c2ccb330b7a68c802d8996ee34170c6f529341f919aa"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake",
    "doxygen"
  ],
  "dependencies": [
    "boost",
    "rabbitmq-c"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/simple-amqp-client.rb",
  "ruby_source_checksum": {
    "sha256": "d20c80bdb26ef0b94b064b6e41de905ecb444e879b92134ecc27bd685904ca9d"
  },
  "date_added": "2014-11-20T16:13:19+00:00",
  "readme": "SimpleAmqpClient\n==================\n\n[SimpleAmqpClient](https://github.com/alanxz/SimpleAmqpClient) is an easy-to-use C++\nwrapper around the [rabbitmq-c](https://github.com/alanxz/rabbitmq-c) C library.\nIt derives inspiration from the [puka](http://majek.github.com/puka/puka.html) AMQP library \nin that it abstracts away the underlying AMQP wire concept of channels and uses them\nas an error/consumer scope. This should make writing simple single-threaded AMQP-enabled apps easy.\n\nInstalling\n----------------\n\nKnown to work in the following environments:\n- Windows 10 (MSVC 2019, Win64)\n- Windows 7 (MSVC 10, Win64, Win32). Likely to work in others, but has not been tested\n- Linux (RHEL 6.0, GCC-4.4.5, 32 and 64 bit). Likely to work on other configurations, but has not been tested\n- Mac OS X (10.7, 10.6, gcc-4.2, 32 and 64-bit). Likely to work on older version, but has not been tested\n\n### Pre-requisites\n+  [boost-1.47.0](http://www.boost.org/) or newer (uses chrono, system internally in addition to other header based libraries such as sharedptr and noncopyable)\n+  [rabbitmq-c](http://github.com/alanxz/rabbitmq-c) you'll need version 0.8.0 or better.\n+  [cmake 3.5+](http://www.cmake.org/) what is needed for the build system\n+  [Doxygen](http://www.stack.nl/~dimitri/doxygen/) OPTIONAL only necessary to generate API documentation\n\n### Build procedure\nThis is a typical cmake project, it should work like most typical cmake projects:\n\nIn a sibling directory to where you extracted the source code:\n\n    mkdir simpleamqpclient-build\n    cd simpleamqpclient-build\n    cmake ..\n\nThen use your the appropriate build utility to build the library (make, msbuild)\n\nInteresting targets\n+  test - will build and run the tests\n+  install - will install the library and headers to whatever `CMAKE_INSTALL_PREFIX` is defined to\n+  doc - will generate API documentation if you have doxygen setup\n\nNotes:\n+ The test google-test based test suite can be enabled by passing `-DENABLE_TESTING=ON` to\n  cmake\n\n### Build procedure for Windows\n\nBoost libraries are needed, so you can install them using nuget:\n```\nnuget install boost_chrono-vc142 -Version 1.77.0\nnuget install boost_system-vc142 -Version 1.77.0\nnuget install boost -Version 1.77.0\n```\nTo build and install succesfully, [rabbitmq-c](https://github.com/alanxz/rabbitmq-c) should be built **as shared library**.\n\nLet *boost_chrono* and *boost_system* be in same directory ```C:\\boost```, [rabbitmq-c](https://github.com/alanxz/rabbitmq-c) be on ```C:\\rabbitmq-c```,\nSSL be OFF, and VS2019 is used, than CMake CLI is:\n```\ncd cmake -G \"Visual Studio 16\" -A x64 -DBoost_INCLUDE_DIR=\"C:/boost.XX.XX.X.X/lib/native/include\" -DBOOST_ROOT=\"C:/boost.X.XX.X.X\" -DBOOST_LIBRARYDIR=\"C:/boost\" -DRabbitmqc_INCLUDE_DIR=\"C:/rabbitmq-c/include\" -DRabbitmqc_LIBRARY=\"C:/rabbitmq-c/lib/rabbitmq.4.lib\" -DBoost_USE_STATIC_LIBS=ON -DBUILD_STATIC_LIBS=ON -DENABLE_SSL_SUPPORT=OFF ..\n```\n\nUsing the library\n-----------------\n\n    #include <SimpleAmqpClient/SimpleAmqpClient.h>\n\nWill include all the headers necessary to use the library.\nThe corresponding library is SimpleAmqpClient\n\nThe main interface to the library is the AmqpClient::Channel class.  It represents\na connection to an AMQP broker, the connection is established on construction of an\ninstance of this class.\n\n    AmqpClient::Channel::ptr_t connection = AmqpClient::Channel::Create(\"localhost\");\n\nAll classes have a typedef ptr_t which is equivalent to boost::shared_ptr<> of the \ncontaining class.  All classes also have a Create() method does the job creating a new\nptr_t using boost::make_shared<>(). It is recommended that you use these methods\nto construct objects in the library.\n\nCommands dealing with declaring/binding/unbinding/deleting exchanges and queues are\nall done with the above AmqpClient::Channel object. If one of these commands\nfails to complete a AmqpClient::ChannelException will be thrown, which can be caught\nand the AmqpClient::Channel object is still useable.  If a more severe error occurs\na AmqpClient::ConnectionException or AmqpClient::AmqpResponseLibraryException maybe\nthrown, in which case the Channel object is no longer in a usable state and further\nuse will only generate more exceptions.\n\nConsuming messages is done by setting up a consumer using the BasicConsume method.\nThis method returns a consumer tag that should be used with the BasicConsumeMessage\nBasicQos, BasicRecover, and BasicCancel.\n\n    std::string consumer_tag = channel->BasicConsume(\"my_queue\", \"\");\n    Envelope::ptr_t envelope = channel->BasicConsumeMessage(consumer_tag);\n    // Alternatively:\n    Envelope::ptr_t envelope;\n    channel->BasicConsumeMessage(consumer_tag, envelope, 10); // 10 ms timeout\n    // To ack:\n    channel->BasicAck(envelope);\n    // To cancel:\n    channel->BasicCancel(consumer_tag);"
}
