{
  "name": "spoof-mac",
  "full_name": "spoof-mac",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Spoof your MAC address in macOS",
  "license": "MIT",
  "homepage": "https://github.com/feross/SpoofMAC",
  "versions": {
    "stable": "2.1.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/9c/59/cc52a4c5d97b01fac7ff048353f8dc96f217eadc79022f78455e85144028/SpoofMAC-2.1.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "48426efe033a148534e1d4dc224c4f1b1d22299c286df963c0b56ade4c7dc297"
    },
    "head": {
      "url": "https://github.com/feross/SpoofMAC.git",
      "branch": "master"
    }
  },
  "revision": 4,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/spoof-mac/blobs/sha256:35b87b120597b9e19bc14586ef66fde370b95ab1f175c1cb355b8dd5d5a1a900",
          "sha256": "35b87b120597b9e19bc14586ef66fde370b95ab1f175c1cb355b8dd5d5a1a900"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/spoof-mac/blobs/sha256:35b87b120597b9e19bc14586ef66fde370b95ab1f175c1cb355b8dd5d5a1a900",
          "sha256": "35b87b120597b9e19bc14586ef66fde370b95ab1f175c1cb355b8dd5d5a1a900"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/spoof-mac/blobs/sha256:35b87b120597b9e19bc14586ef66fde370b95ab1f175c1cb355b8dd5d5a1a900",
          "sha256": "35b87b120597b9e19bc14586ef66fde370b95ab1f175c1cb355b8dd5d5a1a900"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/spoof-mac/blobs/sha256:f6d24e9dda3720a583e5dc6d65ce64f8b0497a6c8eccf292c38e642b405868b5",
          "sha256": "f6d24e9dda3720a583e5dc6d65ce64f8b0497a6c8eccf292c38e642b405868b5"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/spoof-mac/blobs/sha256:f6d24e9dda3720a583e5dc6d65ce64f8b0497a6c8eccf292c38e642b405868b5",
          "sha256": "f6d24e9dda3720a583e5dc6d65ce64f8b0497a6c8eccf292c38e642b405868b5"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/spoof-mac/blobs/sha256:f6d24e9dda3720a583e5dc6d65ce64f8b0497a6c8eccf292c38e642b405868b5",
          "sha256": "f6d24e9dda3720a583e5dc6d65ce64f8b0497a6c8eccf292c38e642b405868b5"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/spoof-mac/blobs/sha256:f6d24e9dda3720a583e5dc6d65ce64f8b0497a6c8eccf292c38e642b405868b5",
          "sha256": "f6d24e9dda3720a583e5dc6d65ce64f8b0497a6c8eccf292c38e642b405868b5"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/spoof-mac/blobs/sha256:bd9e7adf1d19f3476bb1ac66ee70ef913837b2f719bf076a4cf4ae98ee14c8a7",
          "sha256": "bd9e7adf1d19f3476bb1ac66ee70ef913837b2f719bf076a4cf4ae98ee14c8a7"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11",
    "net-tools"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": "Although spoof-mac can run without root, you must be root to change the MAC.\n\nThe launchdaemon is set to randomize en0.\nYou can find the interfaces available by running:\n    \"spoof-mac list\"\n\nIf you wish to change interface randomized at startup change the plist line:\n    <string>en0</string>\nto e.g.:\n    <string>en1</string>\n",
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": {
    "run": [
      "/home/linuxbrew/.linuxbrew/opt/spoof-mac/bin/spoof-mac",
      "randomize",
      "en0"
    ],
    "run_type": "immediate",
    "require_root": true,
    "log_path": "/dev/null",
    "error_log_path": "/dev/null"
  },
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/spoof-mac.rb",
  "ruby_source_checksum": {
    "sha256": "af0cf12bc8fbddeb4c04093ab8202330b85634a3c2964c77f70d2fcb1017f881"
  },
  "date_added": "2014-12-23T09:38:07+00:00",
  "readme": "# SpoofMAC - Spoof your MAC address\n\n### *NOTE: Consider using [spoof](https://github.com/feross/spoof), a node.js port of this package.*\n\n### For OS X, Windows, and Linux (most flavors)\n\nI made this because changing your MAC address in Mac OS X is harder than it\nshould be. The biggest annoyance is that the Wi-Fi card (Airport) needs to be\n*manually* disassociated from any connected networks in order for the change\nto be applied correctly. Doing this manually every time is tedious and lame.\n\nInstead of doing that, just run this Python script and change your MAC address\nin one command. *Now for Windows and Linux, too!*\n\n**Note for Windows 10:** While it may appear that this script does not work anymore, it does. The reason for this is that the change only appears in the Network Adapter properties in the Control Panel. Commands such as getmac or ipconfig will still show the original MAC address even though it has been changed. (**Note:** this actually appears to depend on the NIC (Network Interface Card). I tested it with my desktop and ipconfig showed the change, however it does not show the change on my laptop)\n\nTo see this for yourself, follow the below steps:\n\n1. Open Control Panel\n2. Click 'Network and Internet'\n3. Click 'Network and Sharing Center'\n4. On the panel to the left, click 'Change adapter settings'\n5. A new window will appear showing all of the network adapters. Right-click the one that is currently active/enabled, and click 'Properties'\n6. Near the top, click the button that says 'Configure'\n7. Another window will open. At the top, click the 'Advanced' tab.\n8. In the list to the left, select either 'Network Address' or 'Locally Administered Address'. This will depend on your system. You should see your MAC address in the text box to the right. This MAC address should change when you run this script on Windows 10. If the text box is empty and 'Not Present' is selected, run the script once to generate a new MAC address and follow the above steps. The 'Value' checkbox should now be selected and there should be a new MAC address in the text box.\n\n## Installation\n\nYou can install from [PyPI](https://pypi.python.org/pypi/SpoofMAC/) using `pip` or `easy_install`:\n\n```\npip install SpoofMAC\neasy_install SpoofMAC\n```\n\nor clone/download the repository and install with `setup.py`. Ex:\n\n```\ngit clone git://github.com/feross/SpoofMAC.git\ncd SpoofMAC\npython setup.py install\n```\n\nIf you're not using the system Python (because you use Homebrew, for example), make sure you add '/usr/local/share/python/' (or equivalent) to your path.\n\nOr, consider using **[spoof](https://github.com/feross/spoof)**, a node.js port of this package.\n\n## Usage\n\nSpoofMAC installs a command-line script called `spoof-mac.py`. You can always\nsee up-to-date usage instructions by typing `spoof-mac.py --help`.\n\n### Examples\n\nSome short usage examples.\n\n#### List available devices:\n\n```bash\nspoof-mac.py list\n- \"Ethernet\" on device \"en0\" with MAC address 70:56:51:BE:B3:00\n- \"Wi-Fi\" on device \"en1\" with MAC address 70:56:51:BE:B3:01 currently set to 70:56:51:BE:B3:02\n- \"Bluetooth PAN\" on device \"en1\"\n```\n\n#### List available devices, but only those on wifi:\n\n```bash\nspoof-mac.py list --wifi\n- \"Wi-Fi\" on device \"en0\" with MAC address 70:56:51:BE:B3:6F\n```\n\n#### Randomize MAC address *(requires root)*\n\nYou can use the hardware port name, such as:\n\n```bash\nspoof-mac.py randomize wi-fi\n```\n\nor the device name, such as:\n\n```bash\nspoof-mac.py randomize en0\n```\n\n#### Set device MAC address to something specific *(requires root)*\n\n```bash\nspoof-mac.py set 00:00:00:00:00:00 en0\n```\n\n#### Reset device to its original MAC address *(requires root)*\n\nWhile not always possible (because the original physical MAC isn't\navailable), you can try setting the MAC address of a device back\nto its burned-in address using `reset`:\n\n```bash\nspoof-mac.py reset wi-fi\n```\n\n(older versions of OS X may call it \"airport\" instead of \"wi-fi\")\n\nAnother option to reset your MAC address is to simply restart your computer.\nOS X doesn't store changes to your MAC address between restarts. If you want\nto make change your MAC address and have it persist between restarts, read\nthe next section.\n\n\n## Optional: Run automatically at startup\n\nOS X doesn't let you permanently change your MAC address. Every time you restart your computer, your address gets reset back to whatever it was before. Fortunately, SpoofMAC can easily be set to run at startup time so your computer will always have the MAC address you want.\n\n### Startup Installation Instructions\n\nFirst, make sure SpoofMAC is [installed](#installation). Then, run the following commands in Terminal:\n\n```bash\n# Download the startup file for launchd\ncurl https://raw.githubusercontent.com/feross/SpoofMAC/master/misc/local.macspoof.plist > local.macspoof.plist\n\n# Customize location of `spoof-mac.py` to match your system\ncat local.macspoof.plist | sed \"s|/usr/local/bin/spoof-mac.py|`which spoof-mac.py`|\" | tee local.macspoof.plist\n\n# Copy file to the OS X launchd folder\nsudo cp local.macspoof.plist /Library/LaunchDaemons\n\n# Set file permissions\ncd /Library/LaunchDaemons\nsudo chown root:wheel local.macspoof.plist\nsudo chmod 0644 local.macspoof.plist\n```\n\nBy default, the above will randomize your MAC address on computer startup. You can change the command that gets run at startup by editing the `local.macspoof.plist` file.\n\n```bash\nsudo vim /Library/LaunchDaemons/local.macspoof.plist\n```\n\n## Changelog\n\n- 2.1.1 - Use `ip` command when available, in more situations\n- 2.1.0 - Use `ip` command when available; `ifconfig` is deprecated on Arch Linux\n- 2.0.6 - Increase MAC address randomness\n- 2.0.5 - Allow 2nd character in MAC address to be a letter \n- 2.0.4 - Warn when trying to use a multicast address\n- 2.0.3 - More Python 2.7 compatibility fixes\n- 2.0.2 - Python 2.7 compatibility fixes\n- **2.0.0 - Python 3 support**\n- 1.2.2 - Fix for Ubuntu 14.04\n- 1.2.1 - Fix line endings (dos2unix)\n- **1.2.0 - Add Windows and Linux support (thanks CJ!)**\n- 1.1.1 - Fix \"ValueError: too many values to unpack\" error\n- 1.1.0 - Fix regression: List command now shows current MAC address\n- **1.0.0 - Complete rewrite to conform to PEP8 (thanks Tyler!)**\n- **0.0.0 - Original version (by Feross)**\n\n## Contributors\n\n- Feross Aboukhadijeh [http://feross.org]\n- Tyler Kennedy [http://www.tkte.ch]\n- CJ Barker [cjbarker@gmail.com]\n\n*Improvements welcome! (please add yourself to the list)*\n\n## Ports\n\n- [spoof](https://github.com/feross/spoof) - node.js\n\n## MIT License\n\nCopyright (c) 2011-2017\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
}
