{
  "name": "viu",
  "full_name": "viu",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Simple terminal image viewer written in Rust",
  "license": "MIT",
  "homepage": "https://github.com/atanunq/viu",
  "versions": {
    "stable": "1.4.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/atanunq/viu/archive/refs/tags/v1.4.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "9b359c2c7e78d418266654e4c94988b0495ddea62391fcf51512038dd3109146"
    },
    "head": {
      "url": "https://github.com/atanunq/viu.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/viu/blobs/sha256:d5518815ffa424b2f4341703d8e12b62a7b0c7b86591e24e48f22e5dbebf9499",
          "sha256": "d5518815ffa424b2f4341703d8e12b62a7b0c7b86591e24e48f22e5dbebf9499"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/viu/blobs/sha256:31abf104e6a99f2168f865b6461657aa6a7a30c014239eb72f76bffc525bec95",
          "sha256": "31abf104e6a99f2168f865b6461657aa6a7a30c014239eb72f76bffc525bec95"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/viu/blobs/sha256:fefcfa184185f643d81e7a206e782349a0813e947222f2ea092eff3f92dfa5b1",
          "sha256": "fefcfa184185f643d81e7a206e782349a0813e947222f2ea092eff3f92dfa5b1"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/viu/blobs/sha256:9729333077ff480c91b5cba9108ba95dfff75fc0860c76691b4434932c066b10",
          "sha256": "9729333077ff480c91b5cba9108ba95dfff75fc0860c76691b4434932c066b10"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/viu/blobs/sha256:9f01ea745004309835c0ee4ebee71ff8186246ea0c74b2c5286a3f021d425238",
          "sha256": "9f01ea745004309835c0ee4ebee71ff8186246ea0c74b2c5286a3f021d425238"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/viu/blobs/sha256:1d88e2dcf78308bdb60b2072cb03a31d6fad4d84d760360b597feea0a0a1b2a5",
          "sha256": "1d88e2dcf78308bdb60b2072cb03a31d6fad4d84d760360b597feea0a0a1b2a5"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/viu/blobs/sha256:d2082f85f1290d91864b6ff81b8ea76c93ae6482cf5375efede73afe69bb96fc",
          "sha256": "d2082f85f1290d91864b6ff81b8ea76c93ae6482cf5375efede73afe69bb96fc"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/viu/blobs/sha256:a9affa5440243080d044e7dce00b6d2efa411cfcbbbce88aeb4c2b5268b5107a",
          "sha256": "a9affa5440243080d044e7dce00b6d2efa411cfcbbbce88aeb4c2b5268b5107a"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/viu.rb",
  "ruby_source_checksum": {
    "sha256": "600b732370923ca68dc1e988feacbfcc970ddf7c9375e55740664b907d281504"
  },
  "date_added": "2021-09-14T22:09:11+00:00",
  "readme": "- [Description](#description)\n- [Features](#features)\n- [Installation](#installation)\n  - [From source (recommended)](#from-source-recommended)\n  - [Binary](#binary)\n  - [Packages](#packages)\n    - [MacOS](#macos)\n    - [Arch Linux](#arch-linux)\n    - [NetBSD](#netbsd)\n- [Usage](#usage)\n  - [Examples](#examples)\n  - [iTerm note](#iterm-note)\n  - [Aspect Ratio](#aspect-ratio)\n  - [Command line options](#command-line-options)\n\n## Description\nA small command-line application to view images from the terminal written in Rust. It is basically the\nfront-end of [`viuer`](https://github.com/atanunq/viuer). It uses either [iTerm](https://iterm2.com/documentation-images.html)\nor [Kitty](https://sw.kovidgoyal.net/kitty/graphics-protocol.html) graphics protocol, if supported.\nIf not, lower half blocks (â–„ or \\u2584) are displayed instead.\n\nBased on the value of `$TERM`, `viuer` decides which protocol to use. For half\nblocks, `$COLORTERM` is inspected. If it contains either `truecolor` or `24bit`,\ntruecolor (16 million colors) will be used. If not, it will fallback to using only ansi256. A nice\nexplanation can be found in this [gist](https://gist.github.com/XVilka/8346728).\n\n\n## Features\n- Native iTerm and Kitty support\n- Animated GIF support\n- Accept media through stdin\n- Custom dimensions\n- Transparency\n- Experimental Sixel support (behind the `sixel` feature flag)\n\n## Installation\n\n### From source (recommended)\n\nInstallation from source requires a local [Rust environment](https://www.rust-lang.org/tools/install).\n\n```bash\ngit clone https://github.com/atanunq/viu.git\n\n# Build & Install\ncd viu/\ncargo install --path .\n\n# Use\nviu img/giphy.gif\n```\nOr without cloning:\n```bash\ncargo install viu\n```\n\n### Binary\nA precompiled binary can be downloaded from the [release\npage](https://www.github.com/atanunq/viu/releases/latest).\nGPG fingerprint is B195BADA40BEF20E4907A5AC628280A0217A7B0F.\n\n### Packages\n\n#### MacOS\nAvailable in [`brew`](https://formulae.brew.sh/formula/viu).\n```bash\nbrew install viu\n```\n\n#### Arch Linux\nAvailable in [`community/viu`](https://archlinux.org/packages/community/x86_64/viu/).\n```bash\npacman -S viu\n```\n\n#### NetBSD\nAvailable in [`graphics/viu`](http://cdn.netbsd.org/pub/pkgsrc/current/pkgsrc/graphics/viu/README.html).\n\n## Usage\n\n### Examples\nOn a [Kitty](https://github.com/kovidgoyal/kitty) terminal:\n\n![Kitty](img/kittydemo.gif)\n\nOn a Mac with iTerm:\n\n![iTerm](img/iterm.png)\n\n\nUsing half blocks (Kitty protocol and `tmux` do not get along):\n\n![Demo](img/demo.gif)\n\n\n![Demo](img/gifdemo.gif)\n\n\n![Demo](img/curldemo.gif)\n\n\nCtrl-C was pressed to stop the GIFs.\n\n\nWhen `viu` receives only one file and it is GIF, it will be displayed over and over until Ctrl-C is\npressed. However, when couple of files are up for display the GIF will be displayed only once.\n\n### iTerm note\niTerm can handle GIFs by itself with better performance, but configuration through `--once`\nand `--frame-rate` will have no effect there.\n\n### Aspect Ratio\nIf no flags are supplied to `viu` it will try to get the size of the terminal where it was invoked.\nIf it succeeds it will fit the image and preserve the aspect ratio. The aspect ratio will be changed\nonly if both options **-w** and **-h** are used together.\n\n### Command line options\n```\nView images right from the terminal.\n\nUsage: viu [OPTIONS] [file]...\n\nArguments:\n  [file]...  The images to be displayed. Set to - for standard input.\n\nOptions:\n  -w, --width <width>\n          Resize the image to a provided width\n  -h, --height <height>\n          Resize the image to a provided height\n  -x <x>\n          X offset [default: 0]\n  -y <y>\n          Y offset [default: 0]\n  -a, --absolute-offset\n          Make the x and y offset be relative to the top left terminal corner. If not set, they are relative to the cursor's position.\n  -r, --recursive\n          Recurse down directories if passed one\n  -b, --blocks\n          Force block output\n  -n, --name\n          Output the name of the file before displaying\n  -t, --transparent\n          Display transparent images with transparent background\n  -f, --frame-rate <frames-per-second>\n          Play the gif at a given frame rate\n  -1, --once\n          Loop only once through the gif\n  -s, --static\n          Show only the first frame of the gif\n  -H, --help\n          Print help information\n  -V, --version\n          Print version information\n```"
}
