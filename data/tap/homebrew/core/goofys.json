{
  "name": "goofys",
  "full_name": "goofys",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Filey-System interface to Amazon S3",
  "license": "Apache-2.0",
  "homepage": "https://github.com/kahing/goofys",
  "versions": {
    "stable": "0.24.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/kahing/goofys.git",
      "tag": "v0.24.0",
      "revision": "45b8d78375af1b24604439d2e60c567654bcdf88",
      "checksum": null
    },
    "head": {
      "url": "https://github.com/kahing/goofys.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/goofys/blobs/sha256:53acc931a935c3e7c6230a59d492bf0cea7238167415083232d6ef37741b1cdc",
          "sha256": "53acc931a935c3e7c6230a59d492bf0cea7238167415083232d6ef37741b1cdc"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [
    "libfuse"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "linux",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": true,
  "deprecation_date": "2023-02-20",
  "deprecation_reason": "does_not_build",
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/goofys.rb",
  "ruby_source_checksum": {
    "sha256": "cc4f2dd881d1512103df8bfd8c5f4e450854bc91f07960462b419bb9b33f9f9d"
  },
  "date_added": "2017-04-19T14:34:00+01:00",
  "readme": "<img src=\"doc/goofys.png\" height=\"32\" width=\"32\" align=\"middle\" /> Goofys is a high-performance, POSIX-ish [Amazon S3](https://aws.amazon.com/s3/) file system written in Go\n\n[![Build Status](https://travis-ci.org/kahing/goofys.svg?branch=master)](https://travis-ci.org/kahing/goofys)\n[![Github All Releases](https://img.shields.io/github/downloads/kahing/goofys/total.svg)](https://github.com/kahing/goofys/releases/)\n[![Twitter Follow](https://img.shields.io/twitter/follow/s3goofys.svg?style=social&label=Follow)](https://twitter.com/s3goofys)\n[![Stack Overflow Questions](https://img.shields.io/stackexchange/stackoverflow/t/goofys?label=Stack%20Overflow%20questions)](https://stackoverflow.com/search?q=%5Bgoofys%5D+is%3Aquestion)\n\n# Overview\n\nGoofys allows you to mount an S3 bucket as a filey system.\n\nIt's a Filey System instead of a File System because goofys strives\nfor performance first and POSIX second. Particularly things that are\ndifficult to support on S3 or would translate into more than one\nround-trip would either fail (random writes) or faked (no per-file\npermission). Goofys does not have an on disk data cache (checkout\n[catfs](https://github.com/kahing/catfs)), and consistency model is\nclose-to-open.\n\n# Installation\n\n* On Linux, install via [pre-built binaries](https://github.com/kahing/goofys/releases/latest/download/goofys). \nYou may also need to install fuse too if you want to mount it on startup.\n\n* On macOS, install via [Homebrew](https://brew.sh/):\n\n```ShellSession\n$ brew cask install osxfuse\n$ brew install goofys\n```\n\n* Or build from source with Go 1.10 or later:\n\n```ShellSession\n$ export GOPATH=$HOME/work\n$ go get github.com/kahing/goofys\n$ go install github.com/kahing/goofys\n```\n\n# Usage\n\n```ShellSession\n$ cat ~/.aws/credentials\n[default]\naws_access_key_id = AKID1234567890\naws_secret_access_key = MY-SECRET-KEY\n$ $GOPATH/bin/goofys <bucket> <mountpoint>\n$ $GOPATH/bin/goofys <bucket:prefix> <mountpoint> # if you only want to mount objects under a prefix\n```\n\nUsers can also configure credentials via the\n[AWS CLI](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html)\nor the `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` environment variables.\n\nTo mount an S3 bucket on startup, make sure the credential is\nconfigured for `root`, and can add this to `/etc/fstab`:\n\n```\ngoofys#bucket   /mnt/mountpoint        fuse     _netdev,allow_other,--file-mode=0666,--dir-mode=0777    0       0\n```\n\nSee also: [Instruction for Azure Blob Storage, Azure Data Lake Gen1, and Azure Data Lake Gen2](https://github.com/kahing/goofys/blob/master/README-azure.md).\n\nGot more questions? Check out [questions other people asked](https://github.com/kahing/goofys/issues?utf8=%E2%9C%93&q=is%3Aissue%20label%3Aquestion%20)\n\n# Benchmark\n\nUsing `--stat-cache-ttl 1s --type-cache-ttl 1s` for goofys\n`-ostat_cache_expire=1` for s3fs to simulate cold runs. Detail for the\nbenchmark can be found in\n[bench.sh](https://github.com/kahing/goofys/blob/master/bench/bench.sh). [Raw data](https://github.com/kahing/goofys/blob/master/bench/)\nis available as well. The test was run on an EC2 m5.4xlarge in us-west-2a\nconnected to a bucket in us-west-2. Units are seconds.\n\n![Benchmark result](/bench/bench.png?raw=true \"Benchmark\")\n\nTo run the benchmark, configure EC2's instance role to be able to write to `$TESTBUCKET`, and then do:\n```ShellSession\n$ sudo docker run -e BUCKET=$TESTBUCKET -e CACHE=false --rm --privileged --net=host -v /tmp/cache:/tmp/cache kahing/goofys-bench\n# result will be written to $TESTBUCKET\n```\n\nSee also: [cached benchmark result](https://github.com/kahing/goofys/blob/master/bench/cache/README.md) and [result on Azure](https://github.com/kahing/goofys/blob/master/bench/azure/README.md).\n\n# License\n\nCopyright (C) 2015 - 2019 Ka-Hing Cheung\n\nLicensed under the Apache License, Version 2.0\n\n# Current Status\n\ngoofys has been tested under Linux and macOS.\n\nList of non-POSIX behaviors/limitations:\n  * only sequential writes supported\n  * does not store file mode/owner/group\n    * use `--(dir|file)-mode` or `--(uid|gid)` options\n  * does not support symlink or hardlink\n  * `ctime`, `atime` is always the same as `mtime`\n  * cannot `rename` directories with more than 1000 children\n  * `unlink` returns success even if file is not present\n  * `fsync` is ignored, files are only flushed on `close`\n\n## Compatibility with non-AWS S3\n\ngoofys has been tested with the following non-AWS S3 providers:\n\n* Amplidata / WD ActiveScale\n* Ceph (ex: Digital Ocean Spaces, DreamObjects, gridscale)\n* EdgeFS\n* EMC Atmos\n* Google Cloud Storage\n* Minio (limited)\n* OpenStack Swift\n* S3Proxy\n* Scaleway\n* Wasabi\n\nAdditionally, goofys also works with the following non-S3 object stores:\n\n* Azure Blob Storage\n* Azure Data Lake Gen1\n* Azure Data Lake Gen2\n\n# References\n\n  * Data is stored on [Amazon S3](https://aws.amazon.com/s3/)\n  * [Amazon SDK for Go](https://github.com/aws/aws-sdk-go)\n  * Other related fuse filesystems\n    * [catfs](https://github.com/kahing/catfs): caching layer that can be used with goofys\n    * [s3fs](https://github.com/s3fs-fuse/s3fs-fuse): another popular filesystem for S3\n    * [gcsfuse](https://github.com/googlecloudplatform/gcsfuse):\n      filesystem for\n      [Google Cloud Storage](https://cloud.google.com/storage/). Goofys\n      borrowed some skeleton code from this project.\n  * [S3Proxy](https://github.com/andrewgaul/s3proxy) is used for `go test`\n  * [fuse binding](https://github.com/jacobsa/fuse), also used by `gcsfuse`"
}
