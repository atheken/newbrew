{
  "name": "diskonaut",
  "full_name": "diskonaut",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Terminal visual disk space navigator",
  "license": "MIT",
  "homepage": "https://github.com/imsnif/diskonaut",
  "versions": {
    "stable": "0.11.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/imsnif/diskonaut/archive/0.11.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "355367dbc6119743d88bfffaa57ad4f308596165a57acc2694da1277c3025928"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskonaut/blobs/sha256:c286351912c9d217e5c1d5cce7ee3222d3b55558f114cc59f50c98f56ff0d2b9",
          "sha256": "c286351912c9d217e5c1d5cce7ee3222d3b55558f114cc59f50c98f56ff0d2b9"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskonaut/blobs/sha256:607b84f58d50e14ca2bdac82a0d53f7e701a6673ee6d63d20b5a3c85e7232ee3",
          "sha256": "607b84f58d50e14ca2bdac82a0d53f7e701a6673ee6d63d20b5a3c85e7232ee3"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskonaut/blobs/sha256:27276ff079b4e62db5a6bd19b0e76d302c535ba6e367e760350a5168b15e35d2",
          "sha256": "27276ff079b4e62db5a6bd19b0e76d302c535ba6e367e760350a5168b15e35d2"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskonaut/blobs/sha256:c92c31afbe56de87bc3be623a4df2f07c0da1f211b7aeaad205c1e251c36c94e",
          "sha256": "c92c31afbe56de87bc3be623a4df2f07c0da1f211b7aeaad205c1e251c36c94e"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskonaut/blobs/sha256:ca2ead79bbdce41e8b1a5b2ded6422c27a71e0c9ccc119d4b3eb6ca2697a5e8c",
          "sha256": "ca2ead79bbdce41e8b1a5b2ded6422c27a71e0c9ccc119d4b3eb6ca2697a5e8c"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskonaut/blobs/sha256:4db6857d320a4d03ab6a2df8de8604d6918ffce4aa6b4f36951bddd94656aaa3",
          "sha256": "4db6857d320a4d03ab6a2df8de8604d6918ffce4aa6b4f36951bddd94656aaa3"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskonaut/blobs/sha256:8e6ed47ccdb395b2f461a1e12376ee463bbdca05e572fe2aa33dba49df81f3fd",
          "sha256": "8e6ed47ccdb395b2f461a1e12376ee463bbdca05e572fe2aa33dba49df81f3fd"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskonaut/blobs/sha256:af43639e44daac484d6b43f33400310a21abf9632c85c198d41aad2edd34a0bc",
          "sha256": "af43639e44daac484d6b43f33400310a21abf9632c85c198d41aad2edd34a0bc"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/diskonaut.rb",
  "ruby_source_checksum": {
    "sha256": "1be03d6b2342d1179a8a794b654c4587885d2af2c1052ebe682c798063ee6101"
  },
  "date_added": "2020-09-02T08:02:08+00:00",
  "readme": "# diskonaut\n![demo](demo.gif)\n\n## How does it work?\n\nGiven a path on your hard-drive (which could also be the root path, eg. `/`). `diskonaut` scans it and indexes its metadata to memory so that you could explore its contents (even while still scanning!).\n\nOnce completed, you can navigate through subfolders, getting a visual treemap representation of what's taking up your disk space. You can even delete files or folders and `diskonaut` will track how much space you've freed up in this session.\n\n## Installation\n\n### Download a prebuilt binary\nIf you're using linux, you can check out the \"releases\" of this repository to download the latest prebuilt binary.\n\n### With cargo (linux / macOS / windows)\n```\ncargo install diskonaut\n```\n\n### Fedora/CentOS\n\n```\nsudo dnf install diskonaut\n```\nFor older Fedora releases and CentOS available in [COPR](https://copr.fedorainfracloud.org/coprs/atim/diskonaut/):\n```\nsudo dnf copr enable atim/diskonaut -y\nsudo dnf install diskonaut\n```\n\n### Arch Linux\n\nAvailable in the [AUR](https://aur.archlinux.org/packages/diskonaut):\n\n```\nyay diskonaut\n```\n\n### Gentoo\n\nAvailable through the following overlay as `sys-fs/diskonaut`:\n\nhttps://github.com/telans/EBUILDS\n\n### Nix / NixOS\nAvailable in [nixpkgs](https://github.com/NixOS/nixpkgs/blob/master/pkgs/tools/misc/diskonaut/default.nix):\n```\n$ nix-env --install diskonaut\n$ # (Or using the attribute name, which is also diskonaut.)\n```\n\n### FreeBSD\nAvailable in [freshports](https://www.freshports.org/sysutils/diskonaut/):\n```\npkg install diskonaut\n```\n\n### macOS\nAvailable in [Homebrew](https://formulae.brew.sh/formula/diskonaut)\n```\nbrew install diskonaut\n```\nAlso available in [nixpkgs](https://github.com/NixOS/nixpkgs/blob/master/pkgs/tools/misc/diskonaut/default.nix): see Nix section for more details.\n\n## Supported platforms\nRight now `diskonaut` supports linux, macos and windows.\n\n## Usage\nEither start `diskonaut` in the folder you want to scan, or provide it with the folder you'd like to scan as an argument:\n```\n$ diskonaut /home/aram\n```\n\n## Contributing\nContributions of any kind are very much welcome. If you think `diskonaut` is cool and you'd like to hack at it, feel free to look through the issues. Take a look especially at ones marked \"help wanted\" or \"good first issue\".\nAlso, if you found a bug or have an idea for a new feature, please feel free to open an issue to discuss it.\n\nFor more detailed information, please see the CONTRIBUTING.md file at the root of this repository.\n\nIf at any point you feel stuck, are unsure how to begin or what to work on, please do not hesitate to reach out to me personally: aram@poor.dev\n\n## License\nMIT"
}
