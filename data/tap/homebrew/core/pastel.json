{
  "name": "pastel",
  "full_name": "pastel",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Command-line tool to generate, analyze, convert and manipulate colors",
  "license": "Apache-2.0 or MIT",
  "homepage": "https://github.com/sharkdp/pastel",
  "versions": {
    "stable": "0.9.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/sharkdp/pastel/archive/v0.9.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "473c805de42f6849a4bb14ec103ca007441f355552bdb6ebc80b60dac1f3a95d"
    },
    "head": {
      "url": "https://github.com/sharkdp/pastel.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pastel/blobs/sha256:6c1b18789ed1303a84264ce7f255e29ad1e7dfaa823606bd268266544c02f843",
          "sha256": "6c1b18789ed1303a84264ce7f255e29ad1e7dfaa823606bd268266544c02f843"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pastel/blobs/sha256:6b4511db651e18bb5b23ca8343a0f7026ce70dc7417b9d64826b52b0ad6828eb",
          "sha256": "6b4511db651e18bb5b23ca8343a0f7026ce70dc7417b9d64826b52b0ad6828eb"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pastel/blobs/sha256:3b17baa2192e94615665aea818fe9b4ee202770e1ba66ea7b8a9e5889e278f38",
          "sha256": "3b17baa2192e94615665aea818fe9b4ee202770e1ba66ea7b8a9e5889e278f38"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pastel/blobs/sha256:c48281221eb773d7118183bf0fdbf23f078337b97eee1b11626d4353ac9afecd",
          "sha256": "c48281221eb773d7118183bf0fdbf23f078337b97eee1b11626d4353ac9afecd"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pastel/blobs/sha256:3be2c4518d6cb3cda28aced6aa248ff97502ebbf856bae991d9016c950cecd21",
          "sha256": "3be2c4518d6cb3cda28aced6aa248ff97502ebbf856bae991d9016c950cecd21"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pastel/blobs/sha256:a1966d65a627a20680c20cc54fee52280c695a0314cc53c655b6e9aefb5180d4",
          "sha256": "a1966d65a627a20680c20cc54fee52280c695a0314cc53c655b6e9aefb5180d4"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pastel/blobs/sha256:13bf6e89bd6206f3e8b76eaeee9c957ae42a10647aaacb56ca2e14d693349c39",
          "sha256": "13bf6e89bd6206f3e8b76eaeee9c957ae42a10647aaacb56ca2e14d693349c39"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pastel/blobs/sha256:7826523f2dd332162d3226f9d3b749e67c354be885726caf9d695d62f67e8a1b",
          "sha256": "7826523f2dd332162d3226f9d3b749e67c354be885726caf9d695d62f67e8a1b"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/pastel.rb",
  "ruby_source_checksum": {
    "sha256": "ba3a9898a753e7ea23c532544a268034d5e7edf57c8446371cae266e8284d06c"
  },
  "date_added": "2019-09-16T11:22:09+02:00",
  "readme": "# pastel\n\n[![Build Status](https://img.shields.io/github/actions/workflow/status/sharkdp/pastel/CICD.yml?style=flat-square)](https://github.com/sharkdp/pastel/actions)\n[![](https://img.shields.io/github/v/release/sharkdp/pastel?colorB=d7a400&style=flat-square)](https://github.com/sharkdp/pastel/releases)\n[![](https://img.shields.io/crates/l/pastel.svg?colorB=ff7155&style=flat-square)](https://crates.io/crates/pastel)\n[![](https://img.shields.io/crates/v/pastel.svg?colorB=ff69b4&style=flat-square)](https://crates.io/crates/pastel)\n\n\n`pastel` is a command-line tool to generate, analyze, convert and manipulate colors. It supports many different color formats and color spaces like RGB (sRGB), HSL, CIELAB, CIELCh as well as ANSI 8-bit and 24-bit representations.\n\n## In action\n\n![pastel in action](doc/pastel.gif)\n\n## Tutorial\n\n### Getting help\n\n`pastel` provides a number of commands like `saturate`, `mix` or `paint`. To see a complete list, you can simply run\n``` bash\npastel\n```\nTo get more information about a specific subcommand (say `mix`), you can call `pastel mix -h` or `pastel help mix`.\n\n### Composition\n\nMany `pastel` commands can be composed by piping the output of one command to another, for example:\n``` bash\npastel random | pastel mix red | pastel lighten 0.2 | pastel format hex\n```\n\n### Specifying colors\n\nColors can be specified in many different formats:\n```\nlightslategray\n'#778899'\n778899\n789\n'rgb(119, 136, 153)'\n'119,136,153'\n'hsl(210, 14.3%, 53.3%)'\n```\n\nColors can be passed as positional arguments, for example:\n```\npastel lighten 0.2 orchid orange lawngreen\n```\nThey can also be read from standard input. So this is equivalent:\n```\nprintf \"%s\\n\" orchid orange lawngreen | pastel lighten 0.2\n```\nYou can also explicitly specify which colors you want to read from the input. For example, this mixes `red` (which is read from STDIN) with `blue` (which is passed on the command line):\n```\npastel color red | pastel mix - blue\n```\n\n### Use cases and demo\n\n#### Converting colors from one format to another\n\n``` bash\npastel format hsl ff8000\n```\n\n#### Show and analyze colors on the terminal\n\n``` bash\npastel color \"rgb(255,50,127)\"\n\npastel color 556270 4ecdc4 c7f484 ff6b6b c44d58\n```\n\n#### Pick a color from somewhere on the screen\n\n``` bash\npastel pick\n```\n\n#### Generate a set of N visually distinct colors\n\n```\npastel distinct 8\n```\n\n#### Get a list of all X11 / CSS color names\n\n``` bash\npastel list\n```\n\n#### Name a given color\n\n``` bash\npastel format name 44cc11\n```\n\n#### Print colorized text from a shell script\n\n``` bash\nbg=\"hotpink\"\nfg=\"$(pastel textcolor \"$bg\")\"\n\npastel paint \"$fg\" --on \"$bg\" \"well readable text\"\n```\n\n``` bash\npastel paint -n black --on red --bold \"   ERROR!   \"\necho \" A serious error\"\n\npastel paint -n black --on yellow --bold \"  WARNING!  \"\necho \" A warning message\"\n\npastel paint -n black --on limegreen --bold \"    INFO    \"\necho -n \" Informational message with a \"\necho -n \"highlighted\" | pastel paint -n default --underline\necho \" word\"\n```\n\n## Installation\n\n### On Debian-based systems\n\nYou can download the latest Debian package from the [release page](https://github.com/sharkdp/pastel/releases) and install it via `dpkg`:\n``` bash\nwget \"https://github.com/sharkdp/pastel/releases/download/v0.8.1/pastel_0.8.1_amd64.deb\"\nsudo dpkg -i pastel_0.8.1_amd64.deb\n```\n\n### On Arch Linux\n\nYou can install `pastel` from the [Extra](https://archlinux.org/packages/extra/x86_64/pastel/) repositories:\n```\nsudo pacman -S pastel\n```\n\n### On Nix\n\nYou can install `pastel` from the [Nix package](https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/misc/pastel/default.nix):\n```\nnix-env --install pastel\n```\n\n### On MacOS\n\nYou can install `pastel` via [Homebrew](https://formulae.brew.sh/formula/pastel)\n```\nbrew install pastel\n```\n\n### On Windows\n\nYou can install `pastel` via [Scoop](https://github.com/ScoopInstaller/Main/blob/master/bucket/pastel.json)\n```\nscoop install pastel\n```\n\n### Via snap package\n\n[Get it from the Snap Store](https://snapcraft.io/pastel):\n```\nsudo snap install pastel\n```\n\n### On NetBSD\nUsing the package manager:\n```\npkgin install pastel\n```\n\nFrom source:\n```\ncd /usr/pkgsrc/graphics/pastel\nmake install\n```\n\n### On other distributions\n\nCheck out the [release page](https://github.com/sharkdp/pastel/releases) for binary builds.\n\n### Via cargo (source)\n\nIf you do not have cargo, install using [rust's installation documentation](https://doc.rust-lang.org/book/ch01-01-installation.html).\n\nIf you have Rust 1.43 or higher, you can install `pastel` from source via `cargo`:\n```\ncargo install pastel\n```\n\nAlternatively, you can install `pastel` directly from this repository by using\n```\ngit clone https://github.com/sharkdp/pastel\ncargo install --path ./pastel\n```\n\n## Resources\n\nInteresting Wikipedia pages:\n\n* [Color difference](https://en.wikipedia.org/wiki/Color_difference)\n* [CIE 1931 color space](https://en.wikipedia.org/wiki/CIE_1931_color_space)\n* [CIELAB color space](https://en.wikipedia.org/wiki/CIELAB_color_space)\n* [Line of purples](https://en.wikipedia.org/wiki/Line_of_purples)\n* [Impossible color](https://en.wikipedia.org/wiki/Impossible_color)\n* [sRGB](https://en.wikipedia.org/wiki/SRGB)\n* [Color theory](https://en.wikipedia.org/wiki/Color_theory)\n* [Eigengrau](https://en.wikipedia.org/wiki/Eigengrau)\n\nColor names:\n\n* [XKCD Color Survey Results](https://blog.xkcd.com/2010/05/03/color-survey-results/)\n* [Peachpuffs and Lemonchiffons - talk about named colors](https://www.youtube.com/watch?v=HmStJQzclHc)\n* [List of CSS color keywords](https://www.w3.org/TR/SVG11/types.html#ColorKeywords)\n\nMaximally distinct colors:\n\n* [How to automatically generate N \"distinct\" colors?](https://stackoverflow.com/q/470690/704831)\n* [Publication on two algorithms to generate (maximally) distinct colors](http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.65.2790)\n\nOther articles and videos:\n\n* [Color Matching](https://www.youtube.com/watch?v=82ItpxqPP4I)\n* [Introduction to color spaces](https://ciechanow.ski/color-spaces/)\n\n## License\n\nLicensed under either of\n\n * Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)\n * MIT license ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)\n\nat your option."
}
