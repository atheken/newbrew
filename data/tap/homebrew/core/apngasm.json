{
  "name": "apngasm",
  "full_name": "apngasm",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Next generation of apngasm, the APNG assembler",
  "license": "Zlib",
  "homepage": "https://github.com/apngasm/apngasm",
  "versions": {
    "stable": "3.1.10",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/apngasm/apngasm/archive/3.1.10.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "8171e2c1d37ab231a2061320cb1e5d15cee37642e3ce78e8ab0b8dfc45b80f6c"
    },
    "head": {
      "url": "https://github.com/apngasm/apngasm.git",
      "branch": "master"
    }
  },
  "revision": 7,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/apngasm/blobs/sha256:3f9da6cc06a428bf332a05d0e37f24b8ef58d3367d387f3d0e0b055a88865cc8",
          "sha256": "3f9da6cc06a428bf332a05d0e37f24b8ef58d3367d387f3d0e0b055a88865cc8"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/apngasm/blobs/sha256:5da7148c96b13c85f4ff8cdb1b3f3a309be19b0a07ebb5711eaa7d2037158d19",
          "sha256": "5da7148c96b13c85f4ff8cdb1b3f3a309be19b0a07ebb5711eaa7d2037158d19"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/apngasm/blobs/sha256:38878c113cd01abe132818b6e50b48382c221390c5aca0d118d35a4f49c58066",
          "sha256": "38878c113cd01abe132818b6e50b48382c221390c5aca0d118d35a4f49c58066"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/apngasm/blobs/sha256:7c0293ed4c217e252bb34875f4ae70d0bfdfa139a1b52ff2668140358d39c54f",
          "sha256": "7c0293ed4c217e252bb34875f4ae70d0bfdfa139a1b52ff2668140358d39c54f"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/apngasm/blobs/sha256:10b52f74ab62f801c62f1b78614eba2e4e21f080eee53c3aea2e9c9718d24a62",
          "sha256": "10b52f74ab62f801c62f1b78614eba2e4e21f080eee53c3aea2e9c9718d24a62"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/apngasm/blobs/sha256:e5becfcec0027d6cd8752e4d8382040877d34fa36099dbd558e554801029fced",
          "sha256": "e5becfcec0027d6cd8752e4d8382040877d34fa36099dbd558e554801029fced"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/apngasm/blobs/sha256:0315fdfade74e9d14cffb22a4f2fd7d8647cda3b2c4b32058de119db301f75ba",
          "sha256": "0315fdfade74e9d14cffb22a4f2fd7d8647cda3b2c4b32058de119db301f75ba"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "boost",
    "icu4c",
    "libpng",
    "lzlib"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": "10.15",
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/apngasm.rb",
  "ruby_source_checksum": {
    "sha256": "8a3acaeb555da927b9e0c1b15d61c97f65c624ed58e07564f1ab4955f251b632"
  },
  "date_added": "2014-06-02T16:24:31+01:00",
  "readme": "apngasm\n=======\nThe next generation of apngasm, the APNG Assembler.\n\nInstalling\n==========\nIf you just want pre-built libapngasm and apngasm:  \n*OSX*: For the latest apngasm use homebrew: `brew install apngasm`.  \n*Windows*: Click \"releases\" at the top of the github page and get the latest release.  \n*GNU Linux*: [Debian/Ubuntu/Mint/etc.] [PPA](https://code.launchpad.net/~zero-tsuki/+archive/ppa).  \n\nBuilding\n========\napngasm uses CMake to provide cross platform build chains.\n\nBuilding on Linux:  \n----------------------------------\n1. Install dependencies/build chain  \n    * Debian/Ubuntu:\n\t```\n    sudo apt-get install cmake libpng-dev libboost-program-options-dev libboost-regex-dev libboost-system-dev libboost-filesystem-dev build-essential\n    ```\n\t* Fedora:\n\t```\n\tsudo dnf install cmake libpng-devel boost-devel build-essential\n\t```\n2. Generate Makefiles with CMake  \n    ```\n    mkdir build;\n    cd build;\n    cmake ../\n    ```\n3. Make  \n    ```\n    make\n    ```\n4. Installing or [optional] Build packages  \nYou can either install directly or roll your own .deb package to keep it under system package \nmanagement.  \n    To install, just do:\n    ```\n    sudo make install\n    ```\n    To make packages:\n    ```\n    make package\n    ```\n\n    Then install them:\n    ```\n    sudo dpkg -i ./lib/package/libapngasm*.deb\n    sudo dpkg -i ./cli/package/apngasm*.deb\n    ```\n\nBuilding on OS-X (with homebrew):  \n---------------------------------\nAssuming you have homebrew the build process is fairly simple. Without homebrew you'll need to \nprovide cmake, boost, libpng and zlib yourself. To build with homebrew:\n1. Install build requirements:\n    ```\n    brew install cmake boost libpng lzlib icu4c\n    ```\n2. You'll need to override which icu libraries (icudata icui18n icuuc) are used for \n\tbuilding as the system defaults don't seem to be compatible with the other libraries\n\tdistributed by boost which are needed to build:\n\t```\n\texport LDFLAGS=\"-L/usr/local/opt/icu4c/lib\"\n\texport CPPFLAGS=\"-I/usr/local/opt/icu4c/include\"\n\t```\n\tâ€» Note: this is not set in CMake as it is homebrew specific and could break non-homebrew \n\tbuilds.\n3. Generate Makefiles with CMake:\n    ```\n    mkdir build\n    cd build\n    cmake ..\n    ```\n4. Make:\n    ```\n    make\n    ```\n\nBuilding on Windows (with Visual Studio):\n-----------------------------------------\nUnfortunately there are two issues with building on Windows:\n1. CMake for Windows does not seem to generate Visual Studio projects cleanly (interim targets \n    are all generated as separate solutions).\n2. Newer versions of Visual Studio don't seem to be able to handle linking against libpng16 \n    very well and require a variety of tweaks and hacks.\n\nIf anyone familiar newer versions of Visual Studio and CMake on Windows would be willing to \nmake any necessary adjustments or can provide instructions it would be much appreciated.\n\nBuilding on Windows (with MSYS2):  \n---------------------------------\nBuilding on Windows with MSYS2 is similar to building on Linux. The following packages are \nnecessary to build apngasm: \n`cmake gcc zlib-devel zlib mingw-w64-x86_64-libpng mingw-w64-x86_64-boost`\n\nStep by step:\n1. Install dependencies/build chain  \n    ```sh\n    pacman -Sy cmake gcc zlib-devel zlib mingw-w64-x86_64-libpng mingw-w64-x86_64-boost\n    ```\n2. Generate Unix style Makefiles with CMake  \n    ```sh\n    mkdir build;\n    cd build;\n    cmake -G\"Unix Makefiles\" ..\n    ```\n3. Make  \n    ```sh\n    make\n    ```\n4. Installing or Building Packaged Installers\n    To install without building, just do:\n    ```\n    make install\n    ```\n    To build installer packages, first install NSIS version 3 or above, then:\n    ```\n    CMAKE_GENERATOR=\"Unix Makefiles\" make package\n    ```\n\nInterfaces\n----------\napngasm now uses SWIG to generate interface wrappers. Currently Java and Ruby are supported - \nbut if you are building for ruby you may as well use the rapngasm gem.\n\nBuilding for Java:\n```\nmkdir build\ncd build\ncmake -DJAVA=true ..\nmake\nmake java\nmake jar\n```\n\nBuilding for Ruby (raw library, not using the rapngasm gem):\n```\nmkdir build\ncd build\ncmake -DRUBY=true ..\nmake\nmake ruby\n```\n\nIf you'd like wrappers generated for another language we request you try and add it yourself and \nmake a pull request. Each language has its own particular tweaks that may be neccesary so it's \nhard for us to implement on languages we aren't familiar with.\n\nSpecial Thanks\n--------------\n* Special thanks to all our backers - without you this wouldn't have been possible\n* Thanks to @vflyson for the pkgconfig headers\n\n\nLicense\n-------\nzlib/libpng\n\nCopyright\n---------\nThis version of apngasm is a joint production by Max Stepin and K.K. GenSouSha.\napngasm is wholly copyright Max Stepin, all rights reserved."
}
