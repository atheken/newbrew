{
  "name": "torchvision",
  "full_name": "torchvision",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Datasets, transforms, and models for computer vision",
  "license": "BSD-3-Clause",
  "homepage": "https://github.com/pytorch/vision",
  "versions": {
    "stable": "0.15.2",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/pytorch/vision/archive/refs/tags/v0.15.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "1efcb80e0a6e42c54f07ee16167839b4d302aeeecc12839cc47c74b06a2c20d4"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/torchvision/blobs/sha256:75440708f8608b93654b6b1eddf6e6bd3ec6d0470a3aa74068c5c96c92df4b3e",
          "sha256": "75440708f8608b93654b6b1eddf6e6bd3ec6d0470a3aa74068c5c96c92df4b3e"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/torchvision/blobs/sha256:10a6de636adbe6f57091bfbe6718fa0cc674b135f413f5e38a97a4c70bb419c9",
          "sha256": "10a6de636adbe6f57091bfbe6718fa0cc674b135f413f5e38a97a4c70bb419c9"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/torchvision/blobs/sha256:12e2137577e16fc6cf6d846833af321e6d37ba66eda44cbc4956bd4636716c2c",
          "sha256": "12e2137577e16fc6cf6d846833af321e6d37ba66eda44cbc4956bd4636716c2c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/torchvision/blobs/sha256:7dcbbd35107bd23179d27706c716c8d0d3bf256b353aef9add91f92ad50f98ae",
          "sha256": "7dcbbd35107bd23179d27706c716c8d0d3bf256b353aef9add91f92ad50f98ae"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake",
    "ninja",
    "python@3.11"
  ],
  "dependencies": [
    "jpeg-turbo",
    "libpng",
    "numpy",
    "pillow",
    "python-typing-extensions",
    "pytorch"
  ],
  "test_dependencies": [
    "python@3.11"
  ],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/torchvision.rb",
  "ruby_source_checksum": {
    "sha256": "a3259549aedb0ffebe8caa93b6f7fc4f05f69a1a2af5a171c807d00f777f03cc"
  },
  "date_added": "2020-08-06T14:46:04+00:00",
  "readme": "# torchvision\n\n[![total torchvision downloads](https://pepy.tech/badge/torchvision)](https://pepy.tech/project/torchvision)\n[![documentation](https://img.shields.io/badge/dynamic/json.svg?label=docs&url=https%3A%2F%2Fpypi.org%2Fpypi%2Ftorchvision%2Fjson&query=%24.info.version&colorB=brightgreen&prefix=v)](https://pytorch.org/vision/stable/index.html)\n\nThe torchvision package consists of popular datasets, model architectures, and common image transformations for computer\nvision.\n\n## Installation\n\nPlease refer to the [official\ninstructions](https://pytorch.org/get-started/locally/) to install the stable\nversions of `torch` and `torchvision` on your system.\n\nTo build source, refer to our [contributing\npage](https://github.com/pytorch/vision/blob/main/CONTRIBUTING.md#development-installation).\n\nThe following is the corresponding `torchvision` versions and supported Python\nversions.\n\n| `torch`            | `torchvision`      | Python              |\n| ------------------ | ------------------ | ------------------- |\n| `main` / `nightly` | `main` / `nightly` | `>=3.8`, `<=3.11`   |\n| `2.0`              | `0.15`             | `>=3.8`, `<=3.11`   |\n| `1.13`             | `0.14`             | `>=3.7.2`, `<=3.10` |\n| `1.12`             | `0.13`             | `>=3.7`, `<=3.10`   |\n\n<details>\n    <summary>older versions</summary>\n\n| `torch` | `torchvision`     | Python                    |\n|---------|-------------------|---------------------------|\n| `1.11`  | `0.12`            | `>=3.7`, `<=3.10`         |\n| `1.10`  | `0.11`            | `>=3.6`, `<=3.9`          |\n| `1.9`   | `0.10`            | `>=3.6`, `<=3.9`          |\n| `1.8`   | `0.9`             | `>=3.6`, `<=3.9`          |\n| `1.7`   | `0.8`             | `>=3.6`, `<=3.9`          |\n| `1.6`   | `0.7`             | `>=3.6`, `<=3.8`          |\n| `1.5`   | `0.6`             | `>=3.5`, `<=3.8`          |\n| `1.4`   | `0.5`             | `==2.7`, `>=3.5`, `<=3.8` |\n| `1.3`   | `0.4.2` / `0.4.3` | `==2.7`, `>=3.5`, `<=3.7` |\n| `1.2`   | `0.4.1`           | `==2.7`, `>=3.5`, `<=3.7` |\n| `1.1`   | `0.3`             | `==2.7`, `>=3.5`, `<=3.7` |\n| `<=1.0` | `0.2`             | `==2.7`, `>=3.5`, `<=3.7` |\n\n</details>\n\n## Image Backends\n\nTorchvision currently supports the following image backends:\n\n- torch tensors\n- PIL images:\n    - [Pillow](https://python-pillow.org/)\n    - [Pillow-SIMD](https://github.com/uploadcare/pillow-simd) - a **much faster** drop-in replacement for Pillow with SIMD.\n\nRead more in in our [docs](https://pytorch.org/vision/stable/transforms.html).\n\n## [UNSTABLE] Video Backend\n\nTorchvision currently supports the following video backends:\n\n- [pyav](https://github.com/PyAV-Org/PyAV) (default) - Pythonic binding for ffmpeg libraries.\n- video_reader - This needs ffmpeg to be installed and torchvision to be built from source. There shouldn't be any\n  conflicting version of ffmpeg installed. Currently, this is only supported on Linux.\n\n```\nconda install -c conda-forge ffmpeg\npython setup.py install\n```\n\n# Using the models on C++\n\nTorchVision provides an example project for how to use the models on C++ using JIT Script.\n\nInstallation From source:\n\n```\nmkdir build\ncd build\n# Add -DWITH_CUDA=on support for the CUDA if needed\ncmake ..\nmake\nmake install\n```\n\nOnce installed, the library can be accessed in cmake (after properly configuring `CMAKE_PREFIX_PATH`) via the\n`TorchVision::TorchVision` target:\n\n```\nfind_package(TorchVision REQUIRED)\ntarget_link_libraries(my-target PUBLIC TorchVision::TorchVision)\n```\n\nThe `TorchVision` package will also automatically look for the `Torch` package and add it as a dependency to\n`my-target`, so make sure that it is also available to cmake via the `CMAKE_PREFIX_PATH`.\n\nFor an example setup, take a look at `examples/cpp/hello_world`.\n\nPython linking is disabled by default when compiling TorchVision with CMake, this allows you to run models without any\nPython dependency. In some special cases where TorchVision's operators are used from Python code, you may need to link\nto Python. This can be done by passing `-DUSE_PYTHON=on` to CMake.\n\n### TorchVision Operators\n\nIn order to get the torchvision operators registered with torch (eg. for the JIT), all you need to do is to ensure that\nyou `#include <torchvision/vision.h>` in your project.\n\n## Documentation\n\nYou can find the API documentation on the pytorch website: <https://pytorch.org/vision/stable/index.html>\n\n## Contributing\n\nSee the [CONTRIBUTING](CONTRIBUTING.md) file for how to help out.\n\n## Disclaimer on Datasets\n\nThis is a utility library that downloads and prepares public datasets. We do not host or distribute these datasets,\nvouch for their quality or fairness, or claim that you have license to use the dataset. It is your responsibility to\ndetermine whether you have permission to use the dataset under the dataset's license.\n\nIf you're a dataset owner and wish to update any part of it (description, citation, etc.), or do not want your dataset\nto be included in this library, please get in touch through a GitHub issue. Thanks for your contribution to the ML\ncommunity!\n\n## Pre-trained Model License\n\nThe pre-trained models provided in this library may have their own licenses or terms and conditions derived from the\ndataset used for training. It is your responsibility to determine whether you have permission to use the models for your\nuse case.\n\nMore specifically, SWAG models are released under the CC-BY-NC 4.0 license. See\n[SWAG LICENSE](https://github.com/facebookresearch/SWAG/blob/main/LICENSE) for additional details.\n\n## Citing TorchVision\n\nIf you find TorchVision useful in your work, please consider citing the following BibTeX entry:\n\n```bibtex\n@software{torchvision2016,\n    title        = {TorchVision: PyTorch's Computer Vision library},\n    author       = {TorchVision maintainers and contributors},\n    year         = 2016,\n    journal      = {GitHub repository},\n    publisher    = {GitHub},\n    howpublished = {\\url{https://github.com/pytorch/vision}}\n}\n```"
}
