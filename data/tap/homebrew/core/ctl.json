{
  "name": "ctl",
  "full_name": "ctl",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Programming language for digital color management",
  "license": "AMPAS",
  "homepage": "https://github.com/ampas/CTL",
  "versions": {
    "stable": "1.5.2",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/ampas/CTL/archive/ctl-1.5.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "d7fac1439332c4d84abc3c285b365630acf20ea041033b154aa302befd25e0bd"
    },
    "head": {
      "url": "https://github.com/ampas/CTL.git",
      "branch": "master"
    }
  },
  "revision": 11,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ctl/blobs/sha256:cdc71889be6ec9f4f280f5fa5c8a72cb9c7ca9e6588229d35eeb4a1877c61859",
          "sha256": "cdc71889be6ec9f4f280f5fa5c8a72cb9c7ca9e6588229d35eeb4a1877c61859"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ctl/blobs/sha256:11119356b12393c4a8f7448982b83de1d0ad6405745a09db528958879d9fa57e",
          "sha256": "11119356b12393c4a8f7448982b83de1d0ad6405745a09db528958879d9fa57e"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ctl/blobs/sha256:4089483e5265167d537fffcfb68621d4927bf62f51e306a981c483d6b69525c0",
          "sha256": "4089483e5265167d537fffcfb68621d4927bf62f51e306a981c483d6b69525c0"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ctl/blobs/sha256:7fecce2608e7795527d15fbdef9571fe4947e46ce8db4d994d38536807823b97",
          "sha256": "7fecce2608e7795527d15fbdef9571fe4947e46ce8db4d994d38536807823b97"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ctl/blobs/sha256:e072aff5a5dfefd958c13d3bf08e9c943fc8f08f66e88a70a69ce60100e036cd",
          "sha256": "e072aff5a5dfefd958c13d3bf08e9c943fc8f08f66e88a70a69ce60100e036cd"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ctl/blobs/sha256:62e5b288aafbf8ef6fcff899c747ba53344875895a90dcccea556cf78a3abd2c",
          "sha256": "62e5b288aafbf8ef6fcff899c747ba53344875895a90dcccea556cf78a3abd2c"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ctl/blobs/sha256:681f0c064d860bfadfde8a8781e677776098bf214d1f41300444e9ee613cbcda",
          "sha256": "681f0c064d860bfadfde8a8781e677776098bf214d1f41300444e9ee613cbcda"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [
    "aces_container",
    "imath",
    "libtiff",
    "openexr"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/ctl.rb",
  "ruby_source_checksum": {
    "sha256": "6d903241b1316e9891fd7cf2c2a5374157fd26ab17546ddb707a751c3d067d30"
  },
  "date_added": "2013-03-09T23:56:59-06:00",
  "readme": "# The Color Transformation Language #\n \nThe Color Transformation Language, or CTL, is a programming language for digital\ncolor management.\n \nDigital color management requires translating digital images between different\nrepresentations or color spaces.  For example, the pixels in an image may encode\nthe colors that should be seen when the image is displayed on a video monitor. \nPrinting this image on paper, or recording it on motion picture film requires\ntransforming the pixels to an appropriate representation: Video, inks on paper\nand film all have different color gamuts and dynamic ranges.  Color mixing is\nadditive for video, but subtractive for inks and film.  Video and film typically\nuse three color channels, while four or more inks are used for printing on\npaper. A color management system must transform each pixel in the original image\nto corresponding amounts of ink or film density values.\n \nThe details of how each pixel is transformed can be fairly complex, and they are\noften subject to artistic decisions.  When images are exchanged between \ndifferent parties, it is desirable to exchange exact descriptions of appropriate\ncolor transforms along with the digital image files.  Two people in different\ngeographical locations may each have a copy of the same digital image file. \nWhen one of them prints the image on paper, he or she wants to be sure that the\nresult is the same as as for the other person.  In order to achieve identical\nresults, the two must agree on details of the printing process (for example,\ninks and paper), and they must agree on the transform that converts pixels in\nthe file into amounts of ink on paper.  Of course, this requires a description\nof the transform.\n \nThe Color Transformation Language, or CTL, is a small programming language that\nwas designed to serve as a building block for digital color management systems. \nCTL allows users to describe color transforms in a concise and unambiguous way\nby expressing them as programs.  In order to apply a given transform to an\nimage, the color management system instructs a CTL interpreter to load and run\nthe CTL program that describes the transform.  The original and the transformed\nimage constitute the CTL program's input and output.\n \nColor transforms can be shared by distributing CTL programs. Two parties with\nthe same CTL program can apply the same transform to an image.\n\n\n## Package Contents ##\nThe CTL source code contains the following:\n\n* `lib/` - CTL libraries and the CTL interpreter \n* `doc/` - CTL documentation\n* `OpenEXR_CTL/` - sample CTL applications utilizing IlmImfCtl\n* `ctlrender/` - an application that allows for application of CTL transforms to\n  an image using one or more CTL scripts, potentially converting the file format\n  in the process.\n* `config/` - CMake configuration files\n* `unittest/` - unit test files\n\n## Installation Prerequisites ##\n### Required ###\n\n__CMake__\n\nCMake can be downloaded directly from www.cmake.org or use one of the commands \nbelow.\n\n* Ubuntu\n\n        $ sudo apt-get install cmake\n\n* Redhat\n\n        $ yum install cmake\n\n* OS X\n    \n    * Install homebrew if not already installed\n\n            $ ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n            \n    * Install cmake\n            \n            $ brew install cmake\n\n__IlmBase__\n\nThe CTL interpreter depends on the IlmBase software package, which can be\ndownloaded from http://www.openexr.com or use one of the commands below.\n\n* Ubuntu\n\n        $ sudo apt-get install libilmbase-dev\n\n* Redhat\n\n        $ yum install ilmbase-devel\n\n* OS X\n\n    * Install homebrew if not already installed\n\n            $ ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n            \n    * Install ilmBase\n    \n            $ brew install ilmBase\n\n\n### Suggested ###\n\n__OpenEXR__\n\nIf you want to use CTL together with the OpenEXR image file format, you should\ndownload OpenEXR. The sample programs included with the CTL package (i.e.\nctlrender, dpxexr, exr_ctl_exr, etc.) require that OpenEXR be installed. OpenEXR \ncan be downloaded from http://www.openexr.com/downloads.html or using one of the \ncommands below.\n\n* Ubuntu\n\n        $ sudo apt-get install libopenexr-dev\n\n* Redhat\n\n        $ yum install OpenEXR-devel\n\n* OS X\n\n    * Install homebrew if not already installed\n\n            $ ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n            \n    * Install OpenEXR\n    \n            $ brew install openexr                        \n\n__TIFF__\n\nIf you want to use CTL together with the TIFF image file format, you should download libTiff. libTiff can be downloaded from http://www.remotesensing.org/libtiff/ or using one of the commands below.\n\n* Ubuntu\n\n        $ sudo apt-get install libtiff-dev\n\n* Redhat\n\n        $ yum install libtiff4\n\n* OS X\n\n    * Install homebrew if not already installed\n\n            $ ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n            \n    * Install TIFF\n    \n            $ brew install libtiff                        \n\n__ACES Container__\n\nctlrender is able to write files compliant with SMPTE S2065-4. This\nfunctionality requires the aces_container library, the latest version of which \ncan be downloaded from https://github.com/ampas/aces_container\n\n* OS X\n\n    * Install homebrew if not already installed\n\n            $ ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n            \n    * Install ACES Container\n    \n            $ brew install aces_container\n\n## Installation ##\n\n* OS X\n\n    * Install homebrew if not already installed\n\n            $ ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n            \n    * Install CTL\n    \n        Homebrew will install all dependancies (cmake, ilmbase, opener, aces_container, libtiff) automatically by default.  No need to install each manually.\n    \n            $ brew install ctl\n\n\n* Redhat, Ubuntu\n\n    from the root source directory:\n\n        $ mkdir build && cd build\n        $ cmake ..\n        $ make\n        $ sudo make install\n\n    to run the optional unit tests:\n\n        $ sudo make check\n\n* Docker\n\n    build docker\n\n        $ docker build --rm -f Dockerfile -t ctl:latest .\n        \n    run docker image (in isolated container)\n\n        $ docker run -it --rm ctl:latest\n\n    run docker image (mapping C:\\temp on Windows host to /tmp in container)\n\n        $ docker run -it --rm -v C:\\\\temp:/tmp/ ctl:latest\n\n    run docker image (mapping /mnt/c/temp on Linux host to /tmp in container)\n\n        $ docker run -it --rm -v /mnt/c/temp:/tmp/ ctl:latest\n\n    run ctlrender\n        \n        $ ctlrender -help \n\n## License ##\n \nColor Transformation Language is distributed under the following license:\n\nCopyright © 2013 Academy of Motion Picture Arts and Sciences (\"A.M.P.A.S.\").\nPortions contributed by others as indicated. All rights reserved.\n\nA worldwide, royalty-free, non-exclusive right to copy, modify, create\nderivatives, and use, in source and binary forms, is hereby granted, subject to\nacceptance of this license. Performance of any of the aforementioned acts\nindicates acceptance to be bound by the following terms and conditions:\n\n* Copies of source code, in whole or in part, must retain the above copyright\nnotice, this list of conditions and the Disclaimer of Warranty.\n\n* Use in binary form must retain the above copyright notice, this list of\nconditions and the Disclaimer of Warranty in the documentation and/or other\nmaterials provided with the distribution.\n\n* Nothing in this license shall be deemed to grant any rights to trademarks,\ncopyrights, patents, trade secrets or any other intellectual property of\nA.M.P.A.S. or any contributors, except as expressly stated herein.\n\n* Neither the name \"A.M.P.A.S.\" nor the name of any other contributors to this\nsoftware may be used to endorse or promote products derivative of or based on\nthis software without express prior written permission of A.M.P.A.S. or the\ncontributors, as appropriate.\n\nThis license shall be construed pursuant to the laws of the State of California, \nand any disputes related thereto shall be subject to the jurisdiction of the \ncourts therein.\n\nDisclaimer of Warranty: THIS SOFTWARE IS PROVIDED BY A.M.P.A.S. AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND\nNON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL A.M.P.A.S., OR ANY\nCONTRIBUTORS OR DISTRIBUTORS, BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, RESITUTIONARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nWITHOUT LIMITING THE GENERALITY OF THE FOREGOING, THE ACADEMY SPECIFICALLY\nDISCLAIMS ANY REPRESENTATIONS OR WARRANTIES WHATSOEVER RELATED TO PATENT OR\nOTHER INTELLECTUAL PROPERTY RIGHTS IN THE ACADEMY COLOR ENCODING SYSTEM, OR\nAPPLICATIONS THEREOF, HELD BY PARTIES OTHER THAN A.M.P.A.S.,WHETHER DISCLOSED OR\nUNDISCLOSED."
}
