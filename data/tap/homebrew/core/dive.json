{
  "name": "dive",
  "full_name": "dive",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Tool for exploring each layer in a docker image",
  "license": "MIT",
  "homepage": "https://github.com/wagoodman/dive",
  "versions": {
    "stable": "0.11.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/wagoodman/dive.git",
      "tag": "v0.11.0",
      "revision": "800398060434ce8dfda6b4d182b72e2a9724e9f6",
      "checksum": null
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dive/blobs/sha256:85cfb19756bf9778eeef156546ee099f9a44eaccb636df66f14a749129b9f2f5",
          "sha256": "85cfb19756bf9778eeef156546ee099f9a44eaccb636df66f14a749129b9f2f5"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dive/blobs/sha256:85cfb19756bf9778eeef156546ee099f9a44eaccb636df66f14a749129b9f2f5",
          "sha256": "85cfb19756bf9778eeef156546ee099f9a44eaccb636df66f14a749129b9f2f5"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dive/blobs/sha256:85cfb19756bf9778eeef156546ee099f9a44eaccb636df66f14a749129b9f2f5",
          "sha256": "85cfb19756bf9778eeef156546ee099f9a44eaccb636df66f14a749129b9f2f5"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dive/blobs/sha256:1358457c221bed48eaec5ed4030474fde991b91584aadc2348bc0d0a9f35d563",
          "sha256": "1358457c221bed48eaec5ed4030474fde991b91584aadc2348bc0d0a9f35d563"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dive/blobs/sha256:1358457c221bed48eaec5ed4030474fde991b91584aadc2348bc0d0a9f35d563",
          "sha256": "1358457c221bed48eaec5ed4030474fde991b91584aadc2348bc0d0a9f35d563"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dive/blobs/sha256:1358457c221bed48eaec5ed4030474fde991b91584aadc2348bc0d0a9f35d563",
          "sha256": "1358457c221bed48eaec5ed4030474fde991b91584aadc2348bc0d0a9f35d563"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/dive/blobs/sha256:2f4815d9cb249505fe010e10ae33913ed63a12fcb8de7c8dfcef9507e06e0627",
          "sha256": "2f4815d9cb249505fe010e10ae33913ed63a12fcb8de7c8dfcef9507e06e0627"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go",
    "gpgme",
    "pkg-config"
  ],
  "dependencies": [
    "device-mapper"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/dive.rb",
  "ruby_source_checksum": {
    "sha256": "9c657c4cff4dffa63d45bbc8d25cc4aced907804f1ea11225d49a27c91ba56a2"
  },
  "date_added": "2019-08-02T04:35:46+08:00",
  "readme": "# dive\n[![GitHub release](https://img.shields.io/github/release/wagoodman/dive.svg)](https://github.com/wagoodman/dive/releases/latest)\n[![Validations](https://github.com/wagoodman/dive/actions/workflows/validations.yaml/badge.svg)](https://github.com/wagoodman/dive/actions/workflows/validations.yaml)\n[![Go Report Card](https://goreportcard.com/badge/github.com/wagoodman/dive)](https://goreportcard.com/report/github.com/wagoodman/dive)\n[![License: MIT](https://img.shields.io/badge/License-MIT%202.0-blue.svg)](https://github.com/wagoodman/dive/blob/main/LICENSE)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg?style=flat)](https://www.paypal.me/wagoodman)\n\n**A tool for exploring a docker image, layer contents, and discovering ways to shrink the size of your Docker/OCI image.**\n\n\n![Image](.data/demo.gif)\n\nTo analyze a Docker image simply run dive with an image tag/id/digest:\n```bash\ndive <your-image-tag>\n```\n\nor you can dive with docker command directly\n```\nalias dive=\"docker run -ti --rm  -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive\"\ndive <your-image-tag>\n\n# for example\ndive nginx:latest\n```\n\nor if you want to build your image then jump straight into analyzing it:\n```bash\ndive build -t <some-tag> .\n```\n\nBuilding on Macbook (supporting only the Docker container engine)\n\n```bash\ndocker run --rm -it \\\n      -v /var/run/docker.sock:/var/run/docker.sock \\\n      -v  \"$(pwd)\":\"$(pwd)\" \\\n      -w \"$(pwd)\" \\\n      -v \"$HOME/.dive.yaml\":\"$HOME/.dive.yaml\" \\\n      wagoodman/dive:latest build -t <some-tag> .\n```\n\nAdditionally you can run this in your CI pipeline to ensure you're keeping wasted space to a minimum (this skips the UI):\n```\nCI=true dive <your-image>\n```\n\n![Image](.data/demo-ci.png)\n\n**This is beta quality!** *Feel free to submit an issue if you want a new feature or find a bug :)*\n\n## Basic Features\n\n**Show Docker image contents broken down by layer**\n\nAs you select a layer on the left, you are shown the contents of that layer combined with all previous layers on the right. Also, you can fully explore the file tree with the arrow keys.\n\n**Indicate what's changed in each layer**\n\nFiles that have changed, been modified, added, or removed are indicated in the file tree. This can be adjusted to show changes for a specific layer, or aggregated changes up to this layer.\n\n**Estimate \"image efficiency\"**\n\nThe lower left pane shows basic layer info and an experimental metric that will guess how much wasted space your image contains. This might be from duplicating files across layers, moving files across layers, or not fully removing files. Both a percentage \"score\" and total wasted file space is provided.\n\n**Quick build/analysis cycles**\n\nYou can build a Docker image and do an immediate analysis with one command:\n`dive build -t some-tag .`\n\nYou only need to replace your `docker build` command with the same `dive build`\ncommand.\n\n**CI Integration**\n\nAnalyze an image and get a pass/fail result based on the image efficiency and wasted space. Simply set `CI=true` in the environment when invoking any valid dive command.\n\n**Multiple Image Sources and Container Engines Supported**\n\nWith the `--source` option, you can select where to fetch the container image from:\n```bash\ndive <your-image> --source <source>\n```\nor\n```bash\ndive <source>://<your-image>\n```\n\nWith valid `source` options as such:\n- `docker`: Docker engine (the default option)\n- `docker-archive`: A Docker Tar Archive from disk\n- `podman`: Podman engine (linux only)\n\n## Installation\n\n**Ubuntu/Debian**\n```bash\nexport DIVE_VERSION=$(curl -sL \"https://api.github.com/repos/wagoodman/dive/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"v([^\"]+)\".*/\\1/')\ncurl -OL https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.deb\nsudo apt install ./dive_${DIVE_VERSION}_linux_amd64.deb\n```\n\n**RHEL/Centos**\n```bash\nexport DIVE_VERSION=$(curl -sL \"https://api.github.com/repos/wagoodman/dive/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"v([^\"]+)\".*/\\1/')\ncurl -OL https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.rpm\nrpm -i dive_${DIVE_VERSION}_linux_amd64.rpm\n```\n\n**Arch Linux**\n\nAvailable in the [extra repository](https://archlinux.org/packages/extra/x86_64/dive/) and can be installed via [pacman](https://wiki.archlinux.org/title/Pacman):\n\n```bash\npacman -S dive\n```\n\n**Mac**\n\nIf you use [Homebrew](https://brew.sh):\n\n```bash\nbrew install dive\n```\n\nIf you use [MacPorts](https://www.macports.org):\n\n```bash\nsudo port install dive\n```\n\nOr download the latest Darwin build from the [releases page](https://github.com/wagoodman/dive/releases/latest).\n\n**Windows**\n\nDownload the [latest release](https://github.com/wagoodman/dive/releases/latest).\n\n**Go tools**\nRequires Go version 1.10 or higher.\n\n```bash\ngo get github.com/wagoodman/dive\n```\n*Note*: installing in this way you will not see a proper version when running `dive -v`.\n\n**Nix/NixOS**\n\nOn NixOS:\n```bash\nnix-env -iA nixos.dive\n```\nOn non-NixOS (Linux, Mac)\n```bash\nnix-env -iA nixpkgs.dive\n```\n\n**Docker**\n```bash\ndocker pull wagoodman/dive\n```\n\nor\n\n```bash\ndocker pull quay.io/wagoodman/dive\n```\n\nWhen running you'll need to include the docker socket file:\n```bash\ndocker run --rm -it \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    wagoodman/dive:latest <dive arguments...>\n```\n\nDocker for Windows (showing PowerShell compatible line breaks; collapse to a single line for Command Prompt compatibility)\n```bash\ndocker run --rm -it `\n    -v /var/run/docker.sock:/var/run/docker.sock `\n    wagoodman/dive:latest <dive arguments...>\n```\n\n**Note:** depending on the version of docker you are running locally you may need to specify the docker API version as an environment variable:\n```bash\n   DOCKER_API_VERSION=1.37 dive ...\n```\nor if you are running with a docker image:\n```bash\ndocker run --rm -it \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    -e DOCKER_API_VERSION=1.37 \\\n    wagoodman/dive:latest <dive arguments...>\n```\n\n## CI Integration\n\nWhen running dive with the environment variable `CI=true` then the dive UI will be bypassed and will instead analyze your docker image, giving it a pass/fail indication via return code. Currently there are three metrics supported via a `.dive-ci` file that you can put at the root of your repo:\n```\nrules:\n  # If the efficiency is measured below X%, mark as failed.\n  # Expressed as a ratio between 0-1.\n  lowestEfficiency: 0.95\n\n  # If the amount of wasted space is at least X or larger than X, mark as failed.\n  # Expressed in B, KB, MB, and GB.\n  highestWastedBytes: 20MB\n\n  # If the amount of wasted space makes up for X% or more of the image, mark as failed.\n  # Note: the base image layer is NOT included in the total image size.\n  # Expressed as a ratio between 0-1; fails if the threshold is met or crossed.\n  highestUserWastedPercent: 0.20\n```\nYou can override the CI config path with the `--ci-config` option.\n\n## KeyBindings\n\nKey Binding                                | Description\n-------------------------------------------|---------------------------------------------------------\n<kbd>Ctrl + C</kbd> or <kbd>Q</kbd>        | Exit\n<kbd>Tab</kbd>                             | Switch between the layer and filetree views\n<kbd>Ctrl + F</kbd>                        | Filter files\n<kbd>PageUp</kbd>                          | Scroll up a page\n<kbd>PageDown</kbd>                        | Scroll down a page\n<kbd>Ctrl + A</kbd>                        | Layer view: see aggregated image modifications\n<kbd>Ctrl + L</kbd>                        | Layer view: see current layer modifications\n<kbd>Space</kbd>                           | Filetree view: collapse/uncollapse a directory\n<kbd>Ctrl + Space</kbd>                    | Filetree view: collapse/uncollapse all directories\n<kbd>Ctrl + A</kbd>                        | Filetree view: show/hide added files\n<kbd>Ctrl + R</kbd>                        | Filetree view: show/hide removed files\n<kbd>Ctrl + M</kbd>                        | Filetree view: show/hide modified files\n<kbd>Ctrl + U</kbd>                        | Filetree view: show/hide unmodified files\n<kbd>Ctrl + B</kbd>                        | Filetree view: show/hide file attributes\n<kbd>PageUp</kbd>                          | Filetree view: scroll up a page\n<kbd>PageDown</kbd>                        | Filetree view: scroll down a page\n\n## UI Configuration\n\nNo configuration is necessary, however, you can create a config file and override values:\n```yaml\n# supported options are \"docker\" and \"podman\"\ncontainer-engine: docker\n# continue with analysis even if there are errors parsing the image archive\nignore-errors: false\nlog:\n  enabled: true\n  path: ./dive.log\n  level: info\n\n# Note: you can specify multiple bindings by separating values with a comma.\n# Note: UI hinting is derived from the first binding\nkeybinding:\n  # Global bindings\n  quit: ctrl+c\n  toggle-view: tab\n  filter-files: ctrl+f, ctrl+slash\n\n  # Layer view specific bindings\n  compare-all: ctrl+a\n  compare-layer: ctrl+l\n\n  # File view specific bindings\n  toggle-collapse-dir: space\n  toggle-collapse-all-dir: ctrl+space\n  toggle-added-files: ctrl+a\n  toggle-removed-files: ctrl+r\n  toggle-modified-files: ctrl+m\n  toggle-unmodified-files: ctrl+u\n  toggle-filetree-attributes: ctrl+b\n  page-up: pgup\n  page-down: pgdn\n\ndiff:\n  # You can change the default files shown in the filetree (right pane). All diff types are shown by default.\n  hide:\n    - added\n    - removed\n    - modified\n    - unmodified\n\nfiletree:\n  # The default directory-collapse state\n  collapse-dir: false\n\n  # The percentage of screen width the filetree should take on the screen (must be >0 and <1)\n  pane-width: 0.5\n\n  # Show the file attributes next to the filetree\n  show-attributes: true\n\nlayer:\n  # Enable showing all changes from this layer and every previous layer\n  show-aggregated-changes: false\n\n```\n\ndive will search for configs in the following locations:\n- `$XDG_CONFIG_HOME/dive/*.yaml`\n- `$XDG_CONFIG_DIRS/dive/*.yaml`\n- `~/.config/dive/*.yaml`\n- `~/.dive.yaml`\n\n`.yml` can be used instead of `.yaml` if desired."
}
