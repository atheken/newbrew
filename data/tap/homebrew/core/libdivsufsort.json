{
  "name": "libdivsufsort",
  "full_name": "libdivsufsort",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Lightweight suffix-sorting library",
  "license": "MIT",
  "homepage": "https://github.com/y-256/libdivsufsort",
  "versions": {
    "stable": "2.0.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/y-256/libdivsufsort/archive/refs/tags/2.0.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "9164cb6044dcb6e430555721e3318d5a8f38871c2da9fd9256665746a69351e0"
    },
    "head": {
      "url": "https://github.com/y-256/libdivsufsort.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libdivsufsort/blobs/sha256:edc1f4556c1ca60d17bb8978df3f6e39ed61b3e0e00ba71a7361d8ca3325122d",
          "sha256": "edc1f4556c1ca60d17bb8978df3f6e39ed61b3e0e00ba71a7361d8ca3325122d"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libdivsufsort/blobs/sha256:b0e87c7f348bc9fabdcc4f5075459e6431159a820fc073925c5bc3cfd0fd93c3",
          "sha256": "b0e87c7f348bc9fabdcc4f5075459e6431159a820fc073925c5bc3cfd0fd93c3"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libdivsufsort/blobs/sha256:5cb97264be66ff96dcb36dc4c243e11e0ea33ee58e4c8fa1c826c98ef11fc776",
          "sha256": "5cb97264be66ff96dcb36dc4c243e11e0ea33ee58e4c8fa1c826c98ef11fc776"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libdivsufsort/blobs/sha256:533545e33e84e9bd49a354154c4371f4c299da6f66c674fc72ce2ae77479f091",
          "sha256": "533545e33e84e9bd49a354154c4371f4c299da6f66c674fc72ce2ae77479f091"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libdivsufsort/blobs/sha256:61dfa387e2bf7536cd1e0296d54664f08e5414074166c884ab8ff8bffe7d7705",
          "sha256": "61dfa387e2bf7536cd1e0296d54664f08e5414074166c884ab8ff8bffe7d7705"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/libdivsufsort/blobs/sha256:93a32e9897b4b9c35fa13d5d6e87ed28d1d6ba62ded97a7e31e98c62eaab1b1b",
          "sha256": "93a32e9897b4b9c35fa13d5d6e87ed28d1d6ba62ded97a7e31e98c62eaab1b1b"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/libdivsufsort/blobs/sha256:8dd08aad6b719e629af05911116cadfa9436beb1e0231280cfd2ad9d11ff8cc4",
          "sha256": "8dd08aad6b719e629af05911116cadfa9436beb1e0231280cfd2ad9d11ff8cc4"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/libdivsufsort.rb",
  "ruby_source_checksum": {
    "sha256": "c8c9f876b10cea31c7f3bdb2a11eab69b366771c89f8da646ac1b6757609e530"
  },
  "date_added": "2023-06-19T21:37:10-04:00",
  "readme": "# libdivsufsort\n\nlibdivsufsort is a software library that implements a lightweight suffix array construction algorithm.\n\n## News\n* 2015-03-21: The project has moved from [Google Code](http://code.google.com/p/libdivsufsort/) to [GitHub](https://github.com/y-256/libdivsufsort)\n\n## Introduction\nThis library provides a simple and an efficient C API to construct a suffix array and a Burrows-Wheeler transformed string from a given string over a constant-size alphabet.\nThe algorithm runs in O(n log n) worst-case time using only 5n+O(1) bytes of memory space, where n is the length of\nthe string.\n\n## Build requirements\n* An ANSI C Compiler (e.g. GNU GCC)\n* [CMake](http://www.cmake.org/ \"CMake\") version 2.4.2 or newer\n* CMake-supported build tool\n\n## Building on GNU/Linux\n1. Get the source code from GitHub. You can either\n    * use git to clone the repository\n    ```\n    git clone https://github.com/y-256/libdivsufsort.git\n    ```\n    * or download a [zip file](../../archive/master.zip) directly\n2. Create a `build` directory in the package source directory.\n```shell\n$ cd libdivsufsort\n$ mkdir build\n$ cd build\n```\n3. Configure the package for your system.\nIf you want to install to a different location,  change the -DCMAKE_INSTALL_PREFIX option.\n```shell\n$ cmake -DCMAKE_BUILD_TYPE=\"Release\" \\\n-DCMAKE_INSTALL_PREFIX=\"/usr/local\" ..\n```\n4. Compile the package.\n```shell\n$ make\n```\n5. (Optional) Install the library and header files.\n```shell\n$ sudo make install\n```\n\n## API\n```c\n/* Data types */\ntypedef int32_t saint_t;\ntypedef int32_t saidx_t;\ntypedef uint8_t sauchar_t;\n\n/*\n * Constructs the suffix array of a given string.\n * @param T[0..n-1] The input string.\n * @param SA[0..n-1] The output array or suffixes.\n * @param n The length of the given string.\n * @return 0 if no error occurred, -1 or -2 otherwise.\n */\nsaint_t\ndivsufsort(const sauchar_t *T, saidx_t *SA, saidx_t n);\n\n/*\n * Constructs the burrows-wheeler transformed string of a given string.\n * @param T[0..n-1] The input string.\n * @param U[0..n-1] The output string. (can be T)\n * @param A[0..n-1] The temporary array. (can be NULL)\n * @param n The length of the given string.\n * @return The primary index if no error occurred, -1 or -2 otherwise.\n */\nsaidx_t\ndivbwt(const sauchar_t *T, sauchar_t *U, saidx_t *A, saidx_t n);\n```\n\n## Example Usage\n```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#include <divsufsort.h>\n\nint main() {\n    // intput data\n    char *Text = \"abracadabra\";\n    int n = strlen(Text);\n    int i, j;\n\n    // allocate\n    int *SA = (int *)malloc(n * sizeof(int));\n\n    // sort\n    divsufsort((unsigned char *)Text, SA, n);\n\n    // output\n    for(i = 0; i < n; ++i) {\n        printf(\"SA[%2d] = %2d: \", i, SA[i]);\n        for(j = SA[i]; j < n; ++j) {\n            printf(\"%c\", Text[j]);\n        }\n        printf(\"$\\n\");\n    }\n\n    // deallocate\n    free(SA);\n\n    return 0;\n}\n```\nSee the [examples](examples) directory for a few other examples.\n\n## Benchmarks\nSee [Benchmarks](https://github.com/y-256/libdivsufsort/blob/wiki/SACA_Benchmarks.md) page for details.\n\n## License\nlibdivsufsort is released under the [MIT license](LICENSE \"MIT license\").\n> The MIT License (MIT)\n>\n> Copyright (c) 2003 Yuta Mori All rights reserved.\n>\n> Permission is hereby granted, free of charge, to any person obtaining a copy\n> of this software and associated documentation files (the \"Software\"), to deal\n> in the Software without restriction, including without limitation the rights\n> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n> copies of the Software, and to permit persons to whom the Software is\n> furnished to do so, subject to the following conditions:\n>\n> The above copyright notice and this permission notice shall be included in all\n> copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n> SOFTWARE.\n\n## Author\n* Yuta Mori"
}
