{
  "name": "pillar",
  "full_name": "pillar",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Manage migrations for Cassandra data stores",
  "license": "MIT",
  "homepage": "https://github.com/comeara/pillar",
  "versions": {
    "stable": "2.3.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/comeara/pillar/archive/v2.3.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "f1bb1f2913b10529263b5cf738dd171b14aff70e97a3c9f654c6fb49c91ef16f"
    }
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pillar/blobs/sha256:4abaecf745c4a7fc8b4e116ec80c22a81a41aa906a7bccae2fa8b409b12bc8f1",
          "sha256": "4abaecf745c4a7fc8b4e116ec80c22a81a41aa906a7bccae2fa8b409b12bc8f1"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pillar/blobs/sha256:75a3f4f0ac66b98d05a55687f126fadca0dc86c8a82c5b97b2cf22a1db98615e",
          "sha256": "75a3f4f0ac66b98d05a55687f126fadca0dc86c8a82c5b97b2cf22a1db98615e"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pillar/blobs/sha256:4edab61108a48ddf41f90c46872bbced08a6fb600ed84b8faa2a270be2d4eea4",
          "sha256": "4edab61108a48ddf41f90c46872bbced08a6fb600ed84b8faa2a270be2d4eea4"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pillar/blobs/sha256:8aac25711310b56913c1838c9d6b4ef72af78ade7b20ca0f5b8519805854e285",
          "sha256": "8aac25711310b56913c1838c9d6b4ef72af78ade7b20ca0f5b8519805854e285"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pillar/blobs/sha256:935f68b739a2d86174a045032b5606fffb8c1fa4f7ef74fd0aabc6608dfe068a",
          "sha256": "935f68b739a2d86174a045032b5606fffb8c1fa4f7ef74fd0aabc6608dfe068a"
        },
        "high_sierra": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pillar/blobs/sha256:74bd2dde375b70f3a6ad14c7c55bc511d372998d4901daebd627f0ca5200c6bd",
          "sha256": "74bd2dde375b70f3a6ad14c7c55bc511d372998d4901daebd627f0ca5200c6bd"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pillar/blobs/sha256:4b7faa8f2febab2a7b0b5e035f08ba4b7bad74574806d5dfc15fdeef735589ef",
          "sha256": "4b7faa8f2febab2a7b0b5e035f08ba4b7bad74574806d5dfc15fdeef735589ef"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "sbt"
  ],
  "dependencies": [
    "openjdk@8"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "arch",
      "cask": null,
      "download": null,
      "version": "x86_64",
      "contexts": [],
      "specs": [
        "stable"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/pillar.rb",
  "ruby_source_checksum": {
    "sha256": "6d99fa68451665188e75723b1c7c93be4aa0fa17814cce79e1b786173c815158"
  },
  "date_added": "2015-05-24T13:09:11+01:00",
  "readme": "# Pillar\n\nPillar manages migrations for your [Cassandra][cassandra] data stores.\n\n[cassandra]:http://cassandra.apache.org\n\nPillar grew from a desire to automatically manage Cassandra schema as code. Managing schema as code enables automated\nbuild and deployment, a foundational practice for an organization striving to achieve [Continuous Delivery][cd].\n\nPillar is to Cassandra what [Rails ActiveRecord][ar] migrations or [Play Evolutions][evolutions] are to relational\ndatabases with one key difference: Pillar is completely independent from any application development framework.\n\n[cd]:http://en.wikipedia.org/wiki/Continuous_delivery\n[ar]:https://github.com/rails/rails/tree/master/activerecord\n[evolutions]:http://www.playframework.com/documentation/2.0/Evolutions\n\n## Installation\n\n### Prerequisites\n\n1. Java SE 6 or more recent runtime environment\n1. Cassandra 2.x or 3.x\n\n### From Source\n\nThis method requires [Simple Build Tool (sbt)][sbt].\nBuilding an RPM also requires [Effing Package Management (fpm)][fpm].\n\n    % sbt assembly   # builds just the jar file in the target/ directory\n\n    % sbt rh-package # builds the jar and the RPM in the target/ directory\n    % sudo rpm -i target/pillar-1.0.0-DEV.noarch.rpm\n\nThe RPM installs Pillar to /opt/pillar.\n\n[sbt]:http://www.scala-sbt.org\n[fpm]:https://github.com/jordansissel/fpm\n\n### Packages\n\nPillar is available at Maven Central under the GroupId com.chrisomeara and ArtifactId pillar_2.10 or pillar_2.11. The current version is 2.3.0.\n\n#### sbt\n\n  libraryDependencies += \"com.chrisomeara\" % \"pillar_2.10\" % \"2.3.0\"\n\n#### Gradle\n\n  compile 'com.chrisomeara:pillar_2.10:2.3.0'\n\n## Usage\n\n### Terminology\n\nData Store\n: A logical grouping of environments. You will likely have one data store per application.\n\nEnvironment\n: A context or grouping of settings for a single data store. You will likely have at least development and production\nenvironments for each data store.\n\nMigration\n: A single change to a data store. Migrations have a description and a time stamp indicating the time at which it was\nauthored. Migrations are applied in ascending order and reversed in descending order.\n\n### Command Line\n\nHere's the short version:\n\n  1. Write migrations, place them in conf/pillar/migrations/myapp.\n  1. Add pillar settings to conf/application.conf.\n  1. % pillar -e development initialize myapp\n  1. % pillar -e development migrate myapp\n\n#### Migration Files\n\nMigration files contain metadata about the migration, a [CQL][cql] statement used to apply the migration and,\noptionally, a [CQL][cql] statement used to reverse the migration. Each file describes one migration. You probably\nwant to name your files according to time stamp and description, 1370028263000_creates_views_table.cql, for example.\nPillar reads and parses all files in the migrations directory, regardless of file name.\n\n[cql]:http://cassandra.apache.org/doc/cql3/CQL.html\n\nPillar supports reversible, irreversible and reversible with a no-op down statement migrations. Here are examples of\neach:\n\nReversible migrations have up and down properties.\n\n    -- description: creates views table\n    -- authoredAt: 1370028263000\n    -- up:\n\n    CREATE TABLE views (\n      id uuid PRIMARY KEY,\n      url text,\n      person_id int,\n      viewed_at timestamp\n    )\n\n    -- down:\n\n    DROP TABLE views\n\nIrreversible migrations have an up property but no down property.\n\n    -- description: creates events table\n    -- authoredAt: 1370023262000\n    -- up:\n\n    CREATE TABLE events (\n      batch_id text,\n      occurred_at uuid,\n      event_type text,\n      payload blob,\n      PRIMARY KEY (batch_id, occurred_at, event_type)\n    )\n\nReversible migrations with no-op down statements have an up property and an empty down property.\n\n    -- description: adds user_agent to views table\n    -- authoredAt: 1370028264000\n    -- up:\n\n    ALTER TABLE views\n    ADD user_agent text\n\n    -- down:\n\nEach migration may optionally specify multiple stages. Stages are executed in the order specified.\n\n    -- description: creates users and groups tables\n    -- authoredAt: 1469630066000\n    -- up:\n\n    -- stage: 1\n    CREATE TABLE groups (\n      id uuid,\n      name text,\n      PRIMARY KEY (id)\n    )\n\n    -- stage: 2\n    CREATE TABLE users (\n      id uuid,\n      group_id uuid,\n      username text,\n      password text,\n      PRIMARY KEY (id)\n    )\n\n\n    -- down:\n\n    -- stage: 1\n    DROP TABLE users\n\n    -- stage: 2\n    DROP TABLE groups\n\n\nThe Pillar command line interface expects to find migrations in conf/pillar/migrations unless overriden by the\n-d command-line option.\n\n#### Configuration\n\nPillar uses the [Typesafe Config][typesafeconfig] library for configuration. The Pillar command-line interface expects\nto find an application.conf file in ./conf or ./src/main/resources. Given a data store called faker, the\napplication.conf might look like the following:\n\n    pillar.faker {\n        development {\n            cassandra-seed-address: \"127.0.0.1\"\n            cassandra-keyspace-name: \"pillar_development\"\n        }\n        test {\n            cassandra-seed-address: \"127.0.0.1\"\n            cassandra-keyspace-name: \"pillar_test\"\n        }\n        acceptance_test {\n            cassandra-seed-address: ${?PILLAR_SEED_ADDRESS}\n            cassandra-port: ${?PILLAR_PORT}\n            cassandra-keyspace-name: \"pillar_acceptance_test\"\n            cassandra-keyspace-name: ${?PILLAR_KEYSPACE_NAME}\n            cassandra-ssl: ${?PILLAR_SSL}\n            cassandra-username: ${?PILLAR_USERNAME}\n            cassandra-password: ${?PILLAR_PASSWORD}\n        }\n    }\n\n[typesafeconfig]:https://github.com/typesafehub/config\n\nNotice the use of environment varaibles in the acceptance_test environment example. This is a feature of Typesafe Config\nthat can greatly increase the security and portability of your Pillar configuration.\n\n#### Transport Layer Security (TLS/SSL)\n\nPillar will optionally enable TLS/SSL for client-to-node communications. As Pillar runs on the Java virtual machine,\nnormal JVM TLS/SSL configuration options apply. If the JVM executing Pillar does not already trust the certificate\npresented by the Cassandra cluster, you may need to configure the trust store as documented by [Oracle][jsseref]\nand [DataStax][dsssl].\n\nPillar does not install a custom trust manager but rather relies on the default trust manager implementation.\nConfiguring the default trust store requires setting two system properties, like this:\n\n    JAVA_OPTS='-Djavax.net.ssl.trustStore=/opt/pillar/conf/truststore -Djavax.net.ssl.trustStorePassword=cassandra'\n\n$JAVA_OPTS are passed through to the JVM when using the pillar executable.\n\n[jsseref]:https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html\n[dsssl]:https://datastax.github.io/java-driver/2.0.12/features/ssl/\n\n#### The pillar Executable\n\nThe package installs to /opt/pillar by default. The /opt/pillar/bin/pillar executable usage looks like this:\n\n    Usage: pillar [OPTIONS] command data-store\n\n    OPTIONS\n\n    -d directory\n    --migrations-directory directory  The directory containing migrations\n\n    -e env\n    --environment env                 environment\n\n    -t time\n    --time-stamp time                 The migration time stamp\n\n    PARAMETERS\n\n    command     migrate or initialize\n\n    data-store  The target data store, as defined in application.conf\n\n#### Examples\n\nInitialize the faker datastore development environment\n\n    % pillar -e development initialize faker\n\nApply all migrations to the faker datastore development environment\n\n    % pillar -e development migrate faker\n\n### Library\n\nYou can also integrate Pillar directly into your application as a library.\nReference the acceptance spec suite for details.\n\n### Forks\n\nSeveral organizations and people have forked the Pillar code base. The most actively maintained alternative is\nthe [Galeria-Kaufhof fork][gkf].\n\n[gkf]:https://github.com/Galeria-Kaufhof/pillar\n\n### Release Notes\n\n#### 1.0.1\n\n* Add a \"destroy\" method to drop a keyspace (iamsteveholmes)\n\n#### 1.0.3\n\n* Clarify documentation (pvenable)\n* Update DataStax Cassandra driver to version 2.0.2 (magro)\n* Update Scala to version 2.10.4 (magro)\n* Add cross-compilation to Scala version 2.11.1 (magro)\n* Shutdown cluster in migrate & initialize (magro)\n* Transition support from StreamSend to Chris O'Meara (comeara)\n\n#### 2.0.0\n\n* Allow configuration of Cassandra port (fkoehler)\n* Rework Migrator interface to allow passing a Session object when integrating Pillar as a library (magro, comeara)\n\n#### 2.0.1\n\n* Update a argot dependency to version 1.0.3 (magro)\n\n#### 2.1.0\n\n* Update DataStax Cassandra driver to version 3.0.0 (MarcoPriebe)\n* Fix documentation issue where authored_at represented as seconds rather than milliseconds (jhungerford)\n* Introduce PILLAR_SEED_ADDRESS environment variable (comeara)\n\n#### 2.1.1\n\n* Fix deduplicate error during merge, ref. issue #32 (ilovezfs)\n\n#### 2.2.0\n\n* Add feature to read registry from files (sadowskik)\n* Add TLS/SSL support(bradhandy, comeara)\n* Add authentication support (bradhandy, comeara)\n\n#### 2.3.0\n\n* Add multiple stages per migration (sadowskik)"
}
