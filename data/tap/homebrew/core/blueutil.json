{
  "name": "blueutil",
  "full_name": "blueutil",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Get/set bluetooth power and discoverable state",
  "license": "MIT",
  "homepage": "https://github.com/toy/blueutil",
  "versions": {
    "stable": "2.9.1",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/toy/blueutil/archive/v2.9.1.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "50e50ebfa933f285d934d886a0209332df3088c3d25952c994f8bdb349f435ed"
    },
    "head": {
      "url": "https://github.com/toy/blueutil.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/blueutil/blobs/sha256:a506642507a316aef94d28f7a66e81bff31a8ea12f857976f82263f09d97a9ec",
          "sha256": "a506642507a316aef94d28f7a66e81bff31a8ea12f857976f82263f09d97a9ec"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/blueutil/blobs/sha256:1d6a6e311741e21dee7f92f27535eb735708c56c837b9ecec932f67df9bccd2f",
          "sha256": "1d6a6e311741e21dee7f92f27535eb735708c56c837b9ecec932f67df9bccd2f"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/blueutil/blobs/sha256:d449cbb55d6bbb8e97a78cf31c95216260388a15da472aa5f792358c036d19f0",
          "sha256": "d449cbb55d6bbb8e97a78cf31c95216260388a15da472aa5f792358c036d19f0"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/blueutil/blobs/sha256:67e67cff5697cef382650848559d340fa4eca64f1eda16bffde1409f9c6b4a5b",
          "sha256": "67e67cff5697cef382650848559d340fa4eca64f1eda16bffde1409f9c6b4a5b"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/blueutil/blobs/sha256:44c7ff3ac1835f6cb530480d234153b1d069d6f2bb1de09749676c726fc48ebb",
          "sha256": "44c7ff3ac1835f6cb530480d234153b1d069d6f2bb1de09749676c726fc48ebb"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/blueutil/blobs/sha256:08fff9a9560d90369a06d1aea395b41524621101ec7adf6cee8cfd2565f92c0e",
          "sha256": "08fff9a9560d90369a06d1aea395b41524621101ec7adf6cee8cfd2565f92c0e"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "xcode",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [
        "build"
      ],
      "specs": [
        "stable",
        "head"
      ]
    },
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "2706c66e8def3eeba4d9bf1adf66221c8ad70701",
  "ruby_source_path": "Formula/blueutil.rb",
  "ruby_source_checksum": {
    "sha256": "308e55c2286fdf46ff08443a8028378697a532ac7a5e2bf12f1b26f1261197dc"
  },
  "date_added": "2011-11-29T21:17:45-08:00",
  "readme": "# blueutil\n\nCLI for bluetooth on OSX: power, discoverable state, list, inquire devices, connect, info, …\n\n## Usage\n\n<!--USAGE[-->\n```\nUsage:\n  blueutil [options]\n\nWithout options outputs current state\n\n    -p, --power               output power state as 1 or 0\n    -p, --power STATE         set power state\n    -d, --discoverable        output discoverable state as 1 or 0\n    -d, --discoverable STATE  set discoverable state\n\n        --favourites, --favorites\n                              list favourite devices\n        --inquiry [T]         inquiry devices in range, 10 seconds duration by default excluding time for name updates\n        --paired              list paired devices\n        --recent [N]          list recently used devices, 10 by default, 0 to list all\n        --connected           list connected devices\n\n        --info ID             show information about device\n        --is-connected ID     connected state of device as 1 or 0\n        --connect ID          create a connection to device\n        --disconnect ID       close the connection to device\n        --pair ID [PIN]       pair with device, optional PIN of up to 16 characters will be used instead of interactive input if requested in specific pair mode\n        --unpair ID           EXPERIMENTAL unpair the device\n        --add-favourite ID, --add-favorite ID\n                              add to favourites\n        --remove-favourite ID, --remove-favorite ID\n                              remove from favourites\n\n        --format FORMAT       change output format of info and all listing commands\n\n        --wait-connect ID [TIMEOUT]\n                              EXPERIMENTAL wait for device to connect\n        --wait-disconnect ID [TIMEOUT]\n                              EXPERIMENTAL wait for device to disconnect\n        --wait-rssi ID OP VALUE [PERIOD [TIMEOUT]]\n                              EXPERIMENTAL wait for device RSSI value which is 0 for golden range, -129 if it cannot be read (e.g. device is disconnected)\n\n    -h, --help                this help\n    -v, --version             show version\n\nSTATE can be one of: 1, on, 0, off, toggle\nID can be either address in form xxxxxxxxxxxx, xx-xx-xx-xx-xx-xx or xx:xx:xx:xx:xx:xx, or name of device to search in used devices\nOP can be one of: >, >=, <, <=, =, !=; or equivalents: gt, ge, lt, le, eq, ne\nPERIOD is in seconds, defaults to 1\nTIMEOUT is in seconds, default value 0 doesn't add timeout\nFORMAT can be one of:\n  default - human readable text output not intended for consumption by scripts\n  new-default - human readable comma separated key-value pairs (EXPERIMENTAL, THE BEHAVIOUR MAY CHANGE)\n  json - compact JSON\n  json-pretty - pretty printed JSON\n\nDue to possible problems, blueutil will refuse to run as root user (see https://github.com/toy/blueutil/issues/41).\nUse environment variable BLUEUTIL_ALLOW_ROOT=1 to override (sudo BLUEUTIL_ALLOW_ROOT=1 blueutil …).\n\nExit codes:\n   0 Success\n   1 General failure\n  64 Wrong usage like missing or unexpected arguments, wrong parameters\n  69 Bluetooth or interface not available\n  70 Internal error\n  71 System error like shortage of memory\n  75 Timeout error\n```\n<!--]USAGE-->\n\n## Install/update/uninstall\n\n### Homebrew\n\nUsing package manager [Homebrew](https://brew.sh/):\n\n```sh\n# install\nbrew install blueutil\n\n# update\nbrew update\nbrew upgrade blueutil\n\n# uninstall\nbrew remove blueutil\n```\n\n### MacPorts\n\nUsing package manager [MacPorts](https://www.macports.org/):\n\n```sh\n# install\nport install blueutil\n\n# update\nport selfupdate\nport upgrade blueutil\n\n# uninstall\nport uninstall blueutil\n```\n\nYou will probably need to prefix all commands with `sudo`.\n\n### From source\n\n```sh\ngit clone https://github.com/toy/blueutil.git\ncd blueutil\n\n# build\nmake\n\n# install/update\ngit pull\nmake install\n\n# uninstall\nmake uninstall\n```\n\nYou may need to prefix install/update and uninstall make commands with `sudo`.\n\n## Notes\n\nUses private API from IOBluetooth framework (i.e. `IOBluetoothPreference*()`).\n\nOpening Bluetooth preference pane always turns on discoverability if bluetooth power is on or if it is switched on when preference pane is open, this change of state is not reported by the function used by `blueutil`.\n\n### Development\n\nTo build and update usage:\n\n```sh\nmake build update_usage\n```\n\nTo apply clang-format:\n\n```sh\nmake format\n```\n\nTo test:\n\n```sh\nmake test\n```\n\nTo release new version:\n\n```sh\n./release major|minor|patch\n```\n\nTo create release on github:\n\n```sh\n./verify_release\n```\n\nIf there are no validation errors, copy generated markdown to description of new release:\n\n```sh\nopen \"https://github.com/toy/blueutil/releases/new?tag=$(git describe --tags --abbrev=0)\"\n```\n\n## Copyright\n\nOriginally written by Frederik Seiffert ego@frederikseiffert.de http://www.frederikseiffert.de/blueutil/\n\nCopyright (c) 2011-2023 Ivan Kuchin. See [LICENSE.txt](LICENSE.txt) for details."
}
