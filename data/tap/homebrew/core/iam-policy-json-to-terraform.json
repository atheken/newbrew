{
  "name": "iam-policy-json-to-terraform",
  "full_name": "iam-policy-json-to-terraform",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Convert a JSON IAM Policy into terraform",
  "license": "Apache-2.0",
  "homepage": "https://github.com/flosell/iam-policy-json-to-terraform",
  "versions": {
    "stable": "1.8.2",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/flosell/iam-policy-json-to-terraform/archive/1.8.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "b771e27aa863e8ec899e36c858e6b78d788123f7784bfb3ece8e6350853a3f9b"
    },
    "head": {
      "url": "https://github.com/flosell/iam-policy-json-to-terraform.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iam-policy-json-to-terraform/blobs/sha256:de0dd9eac2c92e6d872cb70a31297a302f86a2481ee3b8e8e88abcf400fa3638",
          "sha256": "de0dd9eac2c92e6d872cb70a31297a302f86a2481ee3b8e8e88abcf400fa3638"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iam-policy-json-to-terraform/blobs/sha256:de0dd9eac2c92e6d872cb70a31297a302f86a2481ee3b8e8e88abcf400fa3638",
          "sha256": "de0dd9eac2c92e6d872cb70a31297a302f86a2481ee3b8e8e88abcf400fa3638"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iam-policy-json-to-terraform/blobs/sha256:de0dd9eac2c92e6d872cb70a31297a302f86a2481ee3b8e8e88abcf400fa3638",
          "sha256": "de0dd9eac2c92e6d872cb70a31297a302f86a2481ee3b8e8e88abcf400fa3638"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iam-policy-json-to-terraform/blobs/sha256:45a53b59f71f30bac7149c65cf265e9ad8fd2089d1d3e378c6579fc9b3e0ae17",
          "sha256": "45a53b59f71f30bac7149c65cf265e9ad8fd2089d1d3e378c6579fc9b3e0ae17"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iam-policy-json-to-terraform/blobs/sha256:45a53b59f71f30bac7149c65cf265e9ad8fd2089d1d3e378c6579fc9b3e0ae17",
          "sha256": "45a53b59f71f30bac7149c65cf265e9ad8fd2089d1d3e378c6579fc9b3e0ae17"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iam-policy-json-to-terraform/blobs/sha256:45a53b59f71f30bac7149c65cf265e9ad8fd2089d1d3e378c6579fc9b3e0ae17",
          "sha256": "45a53b59f71f30bac7149c65cf265e9ad8fd2089d1d3e378c6579fc9b3e0ae17"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/iam-policy-json-to-terraform/blobs/sha256:adb27d7d5560c6a455a72d921653a07e4f808d717fc88e1796375b5158cb994a",
          "sha256": "adb27d7d5560c6a455a72d921653a07e4f808d717fc88e1796375b5158cb994a"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/iam-policy-json-to-terraform.rb",
  "ruby_source_checksum": {
    "sha256": "d949a86cfa6d079346ff2057dcb12018dad9043d6d3e51cb3f56dc33ccc36da1"
  },
  "date_added": "2020-02-16T22:29:30+00:00",
  "readme": "# iam-policy-json-to-terraform\n[![Build Status](https://github.com/flosell/iam-policy-json-to-terraform/actions/workflows/main.yml/badge.svg)](https://github.com/flosell/iam-policy-json-to-terraform/actions/workflows/main.yml)\n\nSmall tool to convert an IAM Policy in JSON format into a Terraform [`aws_iam_policy_document`](https://www.terraform.io/docs/providers/aws/d/iam_policy_document.html)\n\n## Web Version\n\nCheck out a web version of the tool [here](https://flosell.github.io/iam-policy-json-to-terraform/).\n\nFor command line usage and automation, check out the instructions below. \n\n## Installation\n\n### OSX\n\n```bash\n$ brew install iam-policy-json-to-terraform\n```\n\n### [asdf](https://github.com/asdf-vm/asdf)\n```bash\n$ asdf plugin add iam-policy-json-to-terraform https://github.com/carlduevel/asdf-iam-policy-json-to-terraform.git\n```    \n\n### Other\n\nDownload the latest binary from the [releases page](https://github.com/flosell/iam-policy-json-to-terraform/releases) and put it into your `PATH` under the name `iam-policy-json-to-terraform`\n\n### Developer\n\nIf you're a go developer and have your `GOPATH` defined and have added your `$GOPATH/bin` directory to your path, you can simply run this command.\n```bash testcase=usage\n$ go get github.com/flosell/iam-policy-json-to-terraform\n```\n\n## Usage\n\nFrom raw JSON\n\n```bash testcase=usage\n$ echo '{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"ec2:Describe*\"],\"Resource\":\"*\"}]}' | iam-policy-json-to-terraform\ndata \"aws_iam_policy_document\" \"policy\" {\n  statement {\n    sid       = \"\"\n    effect    = \"Allow\"\n    resources = [\"*\"]\n    actions   = [\"ec2:Describe*\"]\n  }\n}\n```\n\nFrom a JSON policy file\n\n```bash\n$ iam-policy-json-to-terraform < some-policy.json\n```\n\nIf a video demo is more your thing, checkout [this nice 2min introduction](https://www.youtube.com/watch?v=AhtpJII6eaw) by the folks at env0. \n\n## Local development\n\n### Prerequisites\n\n* Clone the repository to a location of your choosing: \n  ```bash testcase=building\n  $ git clone git@github.com:flosell/iam-policy-json-to-terraform.git\n  ```\n\n* Install dependencies and tools: \n  ```bash testcase=building\n  $ cd iam-policy-json-to-terraform\n  $ make tools\n  ```\n  \n### Development\n\n#### Entry point \n\n`make` is your primary point of entry for any development activity. Call it without arguments to learn more: \n\n```bash testcase=building\n$ make\nbuild                          Test and build the whole application\nclean                          Remove build artifacts\nfmt                            Format code\nfmtcheck                       Run linter\nseccheck                       Run security checks\ntest                           Run all tests\ntest-readme                    Run the commands mentioned in the README for sanity-checking\ntools                          Install additional required tooling\ntools-main                     Install additional required tooling for the main version\ntools-web                      Install additional required tooling for the web version\nweb-build                      Build the web version\nweb-deploy                     Deploy the web version to GitHub pages\nweb-e2e                        Run end to end tests for web version (requires web-build)\nweb-e2e-live                   Run end to end tests for web version in live mode for development (requires web-build)\nweb-serve                      Serve the web version on a local development server\nweb-visual-regression-approve  Accept changes in Web UI visuals\nweb-visual-regression-test     Test for changes in Web UI visuals\n```\n\n#### Web Development\n\nTo develop the web-frontend, you'll need to first compile the JavaScript version of `iam-policy-json-to-terraform`.\n`make web-build` will do that, generating a `web.js` file. \nInclude it and it'll expose a `convert(policyName,jsonString)` function in the global namespace. \n\nCurrently, the complete web-frontend is plain HTML, JS and CSS, all within `web/index.html`. \nEdit or refine as needed.\n\nEnd-To-End Tests for the web frontend exist as [TestCafe](https://testcafe.io/) tests in `web_test.js` and can be run using `make web-e2e`."
}
