{
  "name": "jadx",
  "full_name": "jadx",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Dex to Java decompiler",
  "license": "Apache-2.0",
  "homepage": "https://github.com/skylot/jadx",
  "versions": {
    "stable": "1.4.7",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/skylot/jadx/releases/download/v1.4.7/jadx-1.4.7.zip",
      "tag": null,
      "revision": null,
      "checksum": "a13d2be02ed640de54df937ead680f31ea06f4b8efd01860b9f0cf18a7d40e34"
    },
    "head": {
      "url": "https://github.com/skylot/jadx.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/jadx/blobs/sha256:035de90325e1e3b294a15302ef229b1f26cd8c255d2fa4b8ce335b59afca6c48",
          "sha256": "035de90325e1e3b294a15302ef229b1f26cd8c255d2fa4b8ce335b59afca6c48"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "openjdk"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/jadx.rb",
  "ruby_source_checksum": {
    "sha256": "4b332e0d849b8140a46d82a0d02aca700282892eb5cde9b3525b535c4a3ef530"
  },
  "head_dependencies": {
    "build_dependencies": [
      "gradle"
    ],
    "dependencies": [
      "openjdk"
    ],
    "test_dependencies": [],
    "recommended_dependencies": [],
    "optional_dependencies": [],
    "uses_from_macos": [],
    "uses_from_macos_bounds": []
  },
  "date_added": "2016-05-31T16:17:59+01:00",
  "readme": "<img src=\"https://raw.githubusercontent.com/skylot/jadx/master/jadx-gui/src/main/resources/logos/jadx-logo.png\" width=\"64\" align=\"left\" />\n\n## JADX\n\n[![Build status](https://github.com/skylot/jadx/workflows/Build/badge.svg)](https://github.com/skylot/jadx/actions?query=workflow%3ABuild)\n![GitHub contributors](https://img.shields.io/github/contributors/skylot/jadx)\n![GitHub all releases](https://img.shields.io/github/downloads/skylot/jadx/total)\n![GitHub release (latest by SemVer)](https://img.shields.io/github/downloads/skylot/jadx/latest/total)\n![Latest release](https://img.shields.io/github/release/skylot/jadx.svg)\n[![Maven Central](https://img.shields.io/maven-central/v/io.github.skylot/jadx-core)](https://search.maven.org/search?q=g:io.github.skylot%20AND%20jadx)\n[![License](http://img.shields.io/:license-apache-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)\n\n**jadx** - Dex to Java decompiler\n\nCommand line and GUI tools for producing Java source code from Android Dex and Apk files\n\n:exclamation::exclamation::exclamation: Please note that in most cases **jadx** can't decompile all 100% of the code, so errors will occur. Check [Troubleshooting guide](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A#decompilation-issues) for workarounds\n\n**Main features:**\n- decompile Dalvik bytecode to java classes from APK, dex, aar, aab and zip files\n- decode `AndroidManifest.xml` and other resources from `resources.arsc`\n- deobfuscator included\n\n**jadx-gui features:**\n- view decompiled code with highlighted syntax\n- jump to declaration\n- find usage\n- full text search\n- smali debugger, check [wiki page](https://github.com/skylot/jadx/wiki/Smali-debugger) for setup and usage\n\nJadx-gui key bindings can be found [here](https://github.com/skylot/jadx/wiki/JADX-GUI-Key-bindings)\n\nSee these features in action here: [jadx-gui features overview](https://github.com/skylot/jadx/wiki/jadx-gui-features-overview)\n\n<img src=\"https://user-images.githubusercontent.com/118523/142730720-839f017e-38db-423e-b53f-39f5f0a0316f.png\" width=\"700\"/>\n\n### Download\n- release\n  from [github: ![Latest release](https://img.shields.io/github/release/skylot/jadx.svg)](https://github.com/skylot/jadx/releases/latest)\n- latest [unstable build ![GitHub commits since tagged version (branch)](https://img.shields.io/github/commits-since/skylot/jadx/latest/master)](https://nightly.link/skylot/jadx/workflows/build-artifacts/master)\n\nAfter download unpack zip file go to `bin` directory and run:\n- `jadx` - command line version\n- `jadx-gui` - UI version\n\nOn Windows run `.bat` files with double-click\\\n**Note:** ensure you have installed Java 11 or later 64-bit version.\nFor Windows, you can download it from [oracle.com](https://www.oracle.com/java/technologies/downloads/#jdk17-windows) (select x64 Installer).\n\n### Install\n1. Arch linux ![Arch Linux package](https://img.shields.io/archlinux/v/community/any/jadx?label=)\n    ```bash\n    sudo pacman -S jadx\n    ```\n2. macOS ![homebrew version](https://img.shields.io/homebrew/v/jadx?label=)\n    ```bash\n    brew install jadx\n    ```\n3. [Flathub ![Flathub](https://img.shields.io/flathub/v/com.github.skylot.jadx?label=)](https://flathub.org/apps/details/com.github.skylot.jadx)\n   ```bash\n   flatpak install flathub com.github.skylot.jadx\n   ```\n\n### Use jadx as a library\nYou can use jadx in your java projects, check details on [wiki page](https://github.com/skylot/jadx/wiki/Use-jadx-as-a-library)\n\n### Build from source\nJDK 11 or higher must be installed:\n```\ngit clone https://github.com/skylot/jadx.git\ncd jadx\n./gradlew dist\n```\n\n(on Windows, use `gradlew.bat` instead of `./gradlew`)\n\nScripts for run jadx will be placed in `build/jadx/bin`\nand also packed to `build/jadx-<version>.zip`\n\n### Usage\n```\njadx[-gui] [command] [options] <input files> (.apk, .dex, .jar, .class, .smali, .zip, .aar, .arsc, .aab)\ncommands (use '<command> --help' for command options):\n  plugins\t  - manage jadx plugins\n\noptions:\n  -d, --output-dir                    - output directory\noptions:\n  -d, --output-dir                    - output directory\n  -ds, --output-dir-src               - output directory for sources\n  -dr, --output-dir-res               - output directory for resources\n  -r, --no-res                        - do not decode resources\n  -s, --no-src                        - do not decompile source code\n  --single-class                      - decompile a single class, full name, raw or alias\n  --single-class-output               - file or dir for write if decompile a single class\n  --output-format                     - can be 'java' or 'json', default: java\n  -e, --export-gradle                 - save as android gradle project\n  -j, --threads-count                 - processing threads count, default: 4\n  -m, --decompilation-mode            - code output mode:\n                                         'auto' - trying best options (default)\n                                         'restructure' - restore code structure (normal java code)\n                                         'simple' - simplified instructions (linear, with goto's)\n                                         'fallback' - raw instructions without modifications\n  --show-bad-code                     - show inconsistent code (incorrectly decompiled)\n  --no-imports                        - disable use of imports, always write entire package name\n  --no-debug-info                     - disable debug info parsing and processing\n  --add-debug-lines                   - add comments with debug line numbers if available\n  --no-inline-anonymous               - disable anonymous classes inline\n  --no-inline-methods                 - disable methods inline\n  --no-move-inner-classes             - disable move inner classes into parent\n  --no-inline-kotlin-lambda           - disable inline for Kotlin lambdas\n  --no-finally                        - don't extract finally block\n  --no-replace-consts                 - don't replace constant value with matching constant field\n  --escape-unicode                    - escape non latin characters in strings (with \\u)\n  --respect-bytecode-access-modifiers - don't change original access modifiers\n  --mappings-path                     - deobfuscation mappings file or directory. Allowed formats: Tiny and Tiny v2 (both '.tiny'), Enigma (.mapping) or Enigma directory\n  --mappings-mode                     - set mode for handling the deobfuscation mapping file:\n                                         'read' - just read, user can always save manually (default)\n                                         'read-and-autosave-every-change' - read and autosave after every change\n                                         'read-and-autosave-before-closing' - read and autosave before exiting the app or closing the project\n                                         'ignore' - don't read or save (can be used to skip loading mapping files referenced in the project file)\n  --deobf                             - activate deobfuscation\n  --deobf-min                         - min length of name, renamed if shorter, default: 3\n  --deobf-max                         - max length of name, renamed if longer, default: 64\n  --deobf-cfg-file                    - deobfuscation mappings file used for JADX auto-generated names (in the JOBF file format), default: same dir and name as input file with '.jobf' extension\n  --deobf-cfg-file-mode               - set mode for handling the JADX auto-generated names' deobfuscation map file:\n                                         'read' - read if found, don't save (default)\n                                         'read-or-save' - read if found, save otherwise (don't overwrite)\n                                         'overwrite' - don't read, always save\n                                         'ignore' - don't read and don't save\n  --deobf-use-sourcename              - use source file name as class name alias\n  --deobf-res-name-source             - better name source for resources:\n                                         'auto' - automatically select best name (default)\n                                         'resources' - use resources names\n                                         'code' - use R class fields names\n  --use-kotlin-methods-for-var-names  - use kotlin intrinsic methods to rename variables, values: disable, apply, apply-and-hide, default: apply\n  --rename-flags                      - fix options (comma-separated list of):\n                                         'case' - fix case sensitivity issues (according to --fs-case-sensitive option),\n                                         'valid' - rename java identifiers to make them valid,\n                                         'printable' - remove non-printable chars from identifiers,\n                                        or single 'none' - to disable all renames\n                                        or single 'all' - to enable all (default)\n  --integer-format                    - how integers are displayed:\n                                         'auto' - automatically select (default)\n                                         'decimal' - use decimal\n                                         'hexadecimal' - use hexadecimal\n  --fs-case-sensitive                 - treat filesystem as case sensitive, false by default\n  --cfg                               - save methods control flow graph to dot file\n  --raw-cfg                           - save methods control flow graph (use raw instructions)\n  -f, --fallback                      - set '--decompilation-mode' to 'fallback' (deprecated)\n  --use-dx                            - use dx/d8 to convert java bytecode\n  --comments-level                    - set code comments level, values: error, warn, info, debug, user-only, none, default: info\n  --log-level                         - set log level, values: quiet, progress, error, warn, info, debug, default: progress\n  -v, --verbose                       - verbose output (set --log-level to DEBUG)\n  -q, --quiet                         - turn off output (set --log-level to QUIET)\n  --version                           - print jadx version\n  -h, --help                          - print this help\n\nPlugin options (-P<name>=<value>):\n 1) dex-input: Load .dex and .apk files\n    - dex-input.verify-checksum       - verify dex file checksum before load, values: [yes, no], default: yes\n 2) java-convert: Convert .class, .jar and .aar files to dex\n    - java-convert.mode               - convert mode, values: [dx, d8, both], default: both\n    - java-convert.d8-desugar         - use desugar in d8, values: [yes, no], default: no\n 3) kotlin-metadata: Use kotlin.Metadata annotation for code generation\n    - kotlin-metadata.class-alias     - rename class alias, values: [yes, no], default: yes\n    - kotlin-metadata.method-args     - rename function arguments, values: [yes, no], default: yes\n    - kotlin-metadata.fields          - rename fields, values: [yes, no], default: yes\n    - kotlin-metadata.companion       - rename companion object, values: [yes, no], default: yes\n    - kotlin-metadata.data-class      - add data class modifier, values: [yes, no], default: yes\n    - kotlin-metadata.to-string       - rename fields using toString, values: [yes, no], default: yes\n    - kotlin-metadata.getters         - rename simple getters to field names, values: [yes, no], default: yes\n 4) rename-mappings: various mappings support\n    - rename-mappings.format          - mapping format, values: [auto, TINY, TINY_2, ENIGMA, ENIGMA_DIR, MCP, SRG, TSRG, TSRG2, PROGUARD], default: auto\n    - rename-mappings.invert          - invert mapping, values: [yes, no], default: no\n\nExamples:\n  jadx -d out classes.dex\n  jadx --rename-flags \"none\" classes.dex\n  jadx --rename-flags \"valid, printable\" classes.dex\n  jadx --log-level ERROR app.apk\n  jadx -Pdex-input.verify-checksum=no app.apk\n```\nThese options also worked on jadx-gui running from command line and override options from preferences dialog\n\n### Troubleshooting\nPlease check wiki page [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A)\n\n### Contributing\nTo support this project you can:\n  - Post thoughts about new features/optimizations that important to you\n  - Submit decompilation issues, please read before proceed: [Open issue](CONTRIBUTING.md#Open-Issue)\n  - Open pull request, please follow these rules: [Pull Request Process](CONTRIBUTING.md#Pull-Request-Process)\n\n---------------------------------------\n*Licensed under the Apache 2.0 License*"
}
