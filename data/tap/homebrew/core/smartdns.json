{
  "name": "smartdns",
  "full_name": "smartdns",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Rule-based DNS server for fast IP resolution, DoT/DoH/DoQ supported",
  "license": "GPL-3.0-only",
  "homepage": "https://github.com/mokeyish/smartdns-rs",
  "versions": {
    "stable": "0.6.2",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/mokeyish/smartdns-rs/archive/refs/tags/0.6.2.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "deef7735a9557efe8aada799fa0bc2bfff6d24c2e6d704644ee5a00f879e8294"
    },
    "head": {
      "url": "https://github.com/mokeyish/smartdns-rs.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/smartdns/blobs/sha256:626ba4152804034bc21a18091a585790110195d1eb0c399ad174d9a21ed7aa1d",
          "sha256": "626ba4152804034bc21a18091a585790110195d1eb0c399ad174d9a21ed7aa1d"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/smartdns/blobs/sha256:144291efce470d8450fdfb17ce8bab77fe5cd45aff6becb12b557b3eaa1112fb",
          "sha256": "144291efce470d8450fdfb17ce8bab77fe5cd45aff6becb12b557b3eaa1112fb"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/smartdns/blobs/sha256:ea2ef8dd9d90fc592acee7fe41a4c29c55e9318f7100036f5b445be0f355b345",
          "sha256": "ea2ef8dd9d90fc592acee7fe41a4c29c55e9318f7100036f5b445be0f355b345"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/smartdns/blobs/sha256:4b8b826ba53dcb835874ee8c4f2b92f5dbe5b6cbdfaf6bc51d2ee2a9e746f369",
          "sha256": "4b8b826ba53dcb835874ee8c4f2b92f5dbe5b6cbdfaf6bc51d2ee2a9e746f369"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/smartdns/blobs/sha256:58e76efa63b2e22f11d6da9f7e4c0088bbbc39e48a8e5c00f3bae83513837473",
          "sha256": "58e76efa63b2e22f11d6da9f7e4c0088bbbc39e48a8e5c00f3bae83513837473"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/smartdns/blobs/sha256:6ef684d7f0f19fbedb4ba2edb957cb99f5004c872cd835050906c620bba64204",
          "sha256": "6ef684d7f0f19fbedb4ba2edb957cb99f5004c872cd835050906c620bba64204"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/smartdns/blobs/sha256:d2a332824c5c71c5d09278ffd89999f3711abc50bccde2dd05c6e9ec2d96d27c",
          "sha256": "d2a332824c5c71c5d09278ffd89999f3711abc50bccde2dd05c6e9ec2d96d27c"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [
    "bind"
  ],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": {
    "run": [
      "/home/linuxbrew/.linuxbrew/opt/smartdns/sbin/smartdns",
      "run",
      "-c",
      "/home/linuxbrew/.linuxbrew/etc/smartdns/smartdns.conf"
    ],
    "run_type": "immediate",
    "keep_alive": {
      "always": true
    },
    "require_root": true
  },
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/smartdns.rb",
  "ruby_source_checksum": {
    "sha256": "7f208a1bad10d7bdba4f46aaccfe3dd0175ea9ee164bd6e1f8f0742d20da09c4"
  },
  "date_added": "2023-03-17T06:49:14+00:00",
  "readme": "# SmartDNS-rs\n\n![Test](https://github.com/mokeyish/smartdns-rs/actions/workflows/test.yml/badge.svg?branch=main)\n[![GitHub release (latest by date including pre-releases)](https://img.shields.io/github/v/release/mokeyish/smartdns-rs?display_name=tag&include_prereleases)](https://github.com/mokeyish/smartdns-rs/releases)\n![OS](https://img.shields.io/badge/os-Windows%20%7C%20MacOS%20%7C%20Linux-blue)\n\n[Docs](https://pymumu.github.io/smartdns/en/) ‚Ä¢ [Discord](https://discord.gg/SDhQSA72)\n\nEnglish | [‰∏≠Êñá](https://github.com/mokeyish/smartdns-rs/blob/main/README_zh-CN.md)\n\nSmartDNS-rs üêã is a local DNS server imspired by [C smartdns](https://github.com/pymumu/smartdns) to accepts DNS query requests from local clients, obtains DNS query results from multiple upstream DNS servers, and returns the fastest access results to clients. Avoiding DNS pollution and improving network access speed, supports high-performance ad filtering.\n\n\n\n## Features\n\n- **Multiple upstream DNS servers**\n\n  Supports configuring multiple upstream DNS servers and query at the same  time.the query will not be affected, Even if there is a DNS server  exception.\n\n- **Return the fastest IP address**\n\n  Supports finding the fastest access IP address from the IP address list  of the domain name and returning it to the client to avoid DNS pollution and improve network access speed.\n\n- **Support for multiple query protocols**\n\n  Supports UDP, TCP, DoT(DNS over TLS), DoH(DNS over HTTPS) queries and  service, and non-53 port queries, effectively avoiding DNS pollution and protect privacy, and support query DNS over socks5, http proxy.\n\n- **Domain IP address specification**\n\n  Supports configuring IP address of specific domain to achieve the effect of advertising filtering, and avoid malicious websites.\n\n- **DNS domain forwarding**\n\n  Supports DNS forwarding, ipset and nftables. Support setting the domain result to ipset and nftset set when speed check fails.\n\n- **Windows / MacOS / Linux multi-platform support**\n\n  Supports installing as a service and running it at startup.\n\n- **Support IPV4, IPV6 dual stack**\n\n  Supports IPV4, IPV6 network, support query A, AAAA record, dual-stack IP selection, and filter IPV6 AAAA record.\n\n- **DNS64**\n\n  Supports DNS64 translation.\n\n- **High performance, low resource consumption**\n\n  Tokio-based multi-threaded asynchronous I/O model; caches query  results; supports most-used domain name expired prefetching, query **'0'**  milliseconds, without eliminating the impact of DoH and DoT encryption.\n\nNote: The C version of smartdns is very functional, but because it only supports **Linux**, while **MacOS and Windows** can only be supported through Docker or WSL. Therefore, I want to develop a rust version of SmartDNS that supports compiling to Windows, MacOS, Linux and Android Termux environment to run, and is compatible with its configuration.\n\n---\n\n**It is still under development, please do not use it in production environment, welcome to try and provide feedback.**\n\nPlease refer to [TODO](https://github.com/mokeyish/smartdns-rs/blob/main/TODO.md) for the function coverage\n\n\n\n## Installing\n\n- MacOS\n\n  If you have installed [brew](https://brew.sh/), you can directly use the following command to install.\n\n  ```shell\n  brew update\n  brew install smartdns\n  ```\n\n  Note: Listening on port 53 requires root permission, so `sudo` is required.\n\n  The command `sudo smartdns service start` for `brew` installed `smartdns` is the same as `sudo brew services start smartdns`.\n\n  If you don't have `brew` installed, just download the compiled program compression package and install it as below.\n\n- Windows / Linux\n\n  Go to [here](https://github.com/mokeyish/smartdns-rs/releases) to download the package and decompress it.\n\n  1. Get help\n\n     ```shell\n     ./smartdns help\n     ```\n\n  2. Run as foreground, easy to check the running status\n\n     ```shell\n     ./smartdns run -c ./smartdns.conf -d\n     ```\n\n     - `-d` or `--debug` is enabled to print debug logs.\n\n  3. Run as background service, run automatically at startup\n\n     Get help of service management commands.\n\n     ```shell\n     ./smartdns service help\n     ```\n\n     *Note: Installed as a system service, administrator / root permissions are required.*\n\n     *Service management is compatible with all systems, call [sc](https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc754599(v=ws.11)) on Windows; call `launchctl` or `brew` on MacOS; call `Systemd` or `OpenRc` on Linux.*\n\n## Configuration\n\nThe following is the simplest example configuration\n\n```conf\n# Listen on local port 53\nbind 127.0.0.1:53  \n\n# Configure bootstrap-dns, if not configured, call the system_conf, \n# it is recommended to configure, so that it will be encrypted.\nserver https://1.1.1.1/dns-query  -bootstrap-dns -exclude-default-group\nserver https://8.8.8.8/dns-query  -bootstrap-dns -exclude-default-group\n\n# Configure default upstream server\nserver https://cloudflare-dns/dns-query\nserver https://dns.quad9.net/dns-query\nserver https://dns.google/dns-query\n\n# Configure the Office(Home) upstream server\nserver 192.168.1.1 -exclude-default-group -group office\n\n# Domain names ending with ofc are forwarded to the office group for resolution\nnameserver /ofc/office\n\n# Set static IP for domain name\naddress /test.example.com/1.2.3.5\n\n# Block Domains (Ad Blocking)\naddress /ads.example.com/#\n```\n\nFor more advanced configurations, please refer to [here](https://github.com/pymumu/smartdns/blob/doc/en/docs/configuration.md) , and refer to [TODO](https://github.com/mokeyish/smartdns-rs/blob/main/TODO.md) for the function coverage.\n\n## Building\n\nAssuming you have installed [Rust](https://www.rust-lang.org/learn/get-started), then you can open the terminal and execute these commands:\n\n```shell\ngit clone https://github.com/mokeyish/smartdns-rs.git\ncd smartdns-rs\n\n# build\ncargo build --release\n\n# print help\ncargo build --release\n\n# run\nsudo ./target/release/smartdns run -c ./etc/smartdns/smartdns.conf\n```\n\n## Acknowledgments !!!\n\nThis software wouldn't have been possible without:\n\n- [Trust-DNS](https://github.com/bluejekyll/trust-dns)\n- [SmartDNS](https://github.com/pymumu/smartdns)\n\n## License\n\nThis software contains codes from [https://github.com/bluejekyll/trust-dns](https://github.com/bluejekyll/trust-dns), which is licensed under either of\n\n- Apache License, Version 2.0, (LICENSE-APACHE or [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0))\n- MIT license (LICENSE-MIT or [http://opensource.org/licenses/MIT](http://opensource.org/licenses/MIT))\n\nAnd other codes is licensed under\n\n- GPL-3.0 license (LICENSE-GPL-3.0 or [https://opensource.org/licenses/GPL-3.0](https://opensource.org/licenses/GPL-3.0))\n\n## Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the GPL-3.0 license, shall be licensed as above, without any additional terms or conditions."
}
