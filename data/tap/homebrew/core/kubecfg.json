{
  "name": "kubecfg",
  "full_name": "kubecfg",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Manage complex enterprise Kubernetes environments as code",
  "license": "Apache-2.0",
  "homepage": "https://github.com/kubecfg/kubecfg",
  "versions": {
    "stable": "0.32.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/kubecfg/kubecfg/archive/v0.32.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "efc86409388a1a69c0d701b448a563e3746c9b63f2a4f8c76f4eb5038a1b9791"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kubecfg/blobs/sha256:ab55f8e8f520095dc30cb47470ab4088feff60f07fcf398f82c6ae7e111eec1a",
          "sha256": "ab55f8e8f520095dc30cb47470ab4088feff60f07fcf398f82c6ae7e111eec1a"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kubecfg/blobs/sha256:029f0452aa89ef52384e097b05da63a36e97f472e94b3c3f071e1d877faf965b",
          "sha256": "029f0452aa89ef52384e097b05da63a36e97f472e94b3c3f071e1d877faf965b"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kubecfg/blobs/sha256:3d7dd780836f5bb6866047e3787e2f3b5881b233d114661fb49ee5ffa7e39778",
          "sha256": "3d7dd780836f5bb6866047e3787e2f3b5881b233d114661fb49ee5ffa7e39778"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kubecfg/blobs/sha256:341339ab70b11fe2aecb548ca60395a226ae02529fb3ca4c8c98b108aebb5617",
          "sha256": "341339ab70b11fe2aecb548ca60395a226ae02529fb3ca4c8c98b108aebb5617"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kubecfg/blobs/sha256:b655e86b7ac6c13a4e1511b266f91fb2445ebf49a404b27cc06473ad4c943857",
          "sha256": "b655e86b7ac6c13a4e1511b266f91fb2445ebf49a404b27cc06473ad4c943857"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kubecfg/blobs/sha256:c0547f8da5b9f1c39d0939e3e53dfb2560b48774ff1a1f4164a64b09f01059d9",
          "sha256": "c0547f8da5b9f1c39d0939e3e53dfb2560b48774ff1a1f4164a64b09f01059d9"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/kubecfg/blobs/sha256:77938053fb78a8b51631c420c348ad0aa0c47f572dcf58da5ce2ff08a70c06d9",
          "sha256": "77938053fb78a8b51631c420c348ad0aa0c47f572dcf58da5ce2ff08a70c06d9"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/kubecfg.rb",
  "ruby_source_checksum": {
    "sha256": "cac467d0730b8bf177e09304eb8099e4fa6e931ecc808eb65eb01dc7dc100f49"
  },
  "date_added": "2018-05-24T01:54:30-07:00",
  "readme": "# kubecfg\n\n[![Go Report Card](https://goreportcard.com/badge/github.com/kubecfg/kubecfg)](https://goreportcard.com/report/github.com/kubecfg/kubecfg)\n\nA tool for managing Kubernetes resources as code.\n\n`kubecfg` allows you to express the patterns across your\ninfrastructure and reuse these powerful \"templates\" across many\nservices, and then manage those templates as files in version control.\nThe more complex your infrastructure is, the more you will gain from\nusing kubecfg.\n\nYes, Google employees will recognise this as being very similar to a\nsimilarly-named internal tool ;)\n\n## Documentation\n\nhttps://kubecfg.github.io/kubecfg/\n\n## Install\n\nPre-compiled executables exist for some platforms on\nthe [Github releases](https://github.com/kubecfg/kubecfg/releases)\npage.\n\nOn macOS, it can also be installed via [Homebrew](https://brew.sh/):\n`brew install kubecfg`\n\nTo build from source:\n\n```console\n% PATH=$PATH:$GOPATH/bin\n% go get github.com/kubecfg/kubecfg\n```\n\n## Quickstart\n\n```console\n# Show generated YAML\n% kubecfg show -o yaml examples/guestbook.jsonnet\n\n# Create resources\n% kubecfg update examples/guestbook.jsonnet\n\n# Modify configuration (downgrade gb-frontend image)\n% sed -i.bak '\\,gcr.io/google-samples/gb-frontend,s/:v4/:v3/' examples/guestbook.jsonnet\n# See differences vs server\n% kubecfg diff examples/guestbook.jsonnet\n\n# Update to new config\n% kubecfg update examples/guestbook.jsonnet\n\n# Clean up after demo\n% kubecfg delete examples/guestbook.jsonnet\n```\n\n## Features\n\n- Supports JSON, YAML or jsonnet files (by file suffix).\n- Best-effort sorts objects before updating, so that dependencies are\n  pushed to the server before objects that refer to them.\n- Additional jsonnet builtin functions. See `lib/kubecfg.libsonnet`.\n- Optional \"garbage collection\" of objects removed from config (see\n  `--gc-tag`).\n\n## Infrastructure-as-code Philosophy\n\nThe idea is to describe *as much as possible* about your configuration\nas files in version control (eg: git).\n\nChanges to the configuration follow a regular review, approve, merge,\netc code change workflow (github pull-requests, phabricator diffs,\netc).  At any point, the config in version control captures the entire\ndesired-state, so the system can be easily recreated in a QA cluster\nor to recover from disaster.\n\n### Jsonnet\n\nKubecfg relies heavily on [jsonnet](http://jsonnet.org/) to describe\nKubernetes resources, and is really just a thin Kubernetes-specific\nwrapper around jsonnet evaluation.  You should read the jsonnet\n[tutorial](http://jsonnet.org/docs/tutorial.html), and skim the functions available in the jsonnet [`std`](http://jsonnet.org/docs/stdlib.html)\nlibrary.\n\n## Community\n\n- [#jsonnet on Kubernetes Slack](https://kubernetes.slack.com/messages/jsonnet)\n\nClick [here](http://slack.k8s.io) to sign up to the Kubernetes Slack org."
}
