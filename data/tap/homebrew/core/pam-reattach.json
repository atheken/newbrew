{
  "name": "pam-reattach",
  "full_name": "pam-reattach",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "PAM module for reattaching to the user's GUI (Aqua) session",
  "license": "MIT",
  "homepage": "https://github.com/fabianishere/pam_reattach",
  "versions": {
    "stable": "1.3",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/fabianishere/pam_reattach/archive/refs/tags/v1.3.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "b1b735fa7832350a23457f7d36feb6ec939e5e1de987b456b6c28f5738216570"
    },
    "head": {
      "url": "https://github.com/fabianishere/pam_reattach.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pam-reattach/blobs/sha256:470ceefd11808433f82347c1ba80e905d0c5a4b1076d47efac15692b0f86d34f",
          "sha256": "470ceefd11808433f82347c1ba80e905d0c5a4b1076d47efac15692b0f86d34f"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pam-reattach/blobs/sha256:d220980d0a233aeac53fc39fbd2eafcbf7cdcb9252b9c7bf24066e3dd6b0dda8",
          "sha256": "d220980d0a233aeac53fc39fbd2eafcbf7cdcb9252b9c7bf24066e3dd6b0dda8"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pam-reattach/blobs/sha256:ceb022b08c5d64cbc3250a227b2496dc4181854fa4d7b90faa98efe2e31b091b",
          "sha256": "ceb022b08c5d64cbc3250a227b2496dc4181854fa4d7b90faa98efe2e31b091b"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pam-reattach/blobs/sha256:d71f187aaad7e98ffb0c030802be6d4c73f245d399a52159701e80a424183622",
          "sha256": "d71f187aaad7e98ffb0c030802be6d4c73f245d399a52159701e80a424183622"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pam-reattach/blobs/sha256:671f461386143302144a82d67f6b1ba1073753f5c6253b8005cfe1eb1918e861",
          "sha256": "671f461386143302144a82d67f6b1ba1073753f5c6253b8005cfe1eb1918e861"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pam-reattach/blobs/sha256:0c40906d18c53054708a408e42f6a86d5579bd853bb69702507e659d0e7ea2ae",
          "sha256": "0c40906d18c53054708a408e42f6a86d5579bd853bb69702507e659d0e7ea2ae"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/pam-reattach/blobs/sha256:1ca81cd2502742faa6d88e1345c1c42f5ab401053a1aed3c38434945ec119941",
          "sha256": "1ca81cd2502742faa6d88e1345c1c42f5ab401053a1aed3c38434945ec119941"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [
    {
      "name": "macos",
      "cask": null,
      "download": null,
      "version": null,
      "contexts": [],
      "specs": [
        "stable",
        "head"
      ]
    }
  ],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/pam-reattach.rb",
  "ruby_source_checksum": {
    "sha256": "4b23943dede6fbc42fb16b211bd7006cbe055031d3757918aca73f4ef65e9ad5"
  },
  "date_added": "2021-12-15T14:41:22+00:00",
  "readme": "pam\\_reattach\n[![Build Status](https://travis-ci.org/fabianishere/pam_reattach.svg?branch=master)](https://travis-ci.org/fabianishere/pam_reattach)\n=============\nThis is a PAM module for reattaching to the authenticating user's per-session\nbootstrap namespace on macOS. \nThis allows users to make use of the `pam_tid` module (Touch ID) from within tmux.\n\n## Purpose\nAlthough in MacOS a user program may survive in the background across login sessions, several services (mostly related to the GUI, such as pasteboard and Touch ID) are \nstrictly tied to the login session of a user and as such unavailable for programs in the background session. \nUsers of programs such as [tmux](https://github.com/tmux/tmux) and [GNU Screen](https://www.gnu.org/software/screen/) that run in the background to survive across login sessions, \nwill thus find that several services such as Touch ID are unavailable or do not work properly.\n\nThis PAM module will attempt to move the current program (e.g. `sudo`) to the current active login session,\nafter which the remaining PAM modules will have access to the per-session services like Touch ID.\n\nIf you have installed the additional `reattach-to-session-namespace(8)` program, you may also execute arbitrary\nprograms from the background in the login session of the user.\n\nSee [TN2083](https://developer.apple.com/library/archive/technotes/tn2083/_index.html) for more details\nabout bootstrap namespaces in MacOS.\n\n## Usage\nThis module should be invoked before the module that you want to put in the\nauthenticating user's per-session bootstrap namespace. The module runs in the\nauthentication phase and should be marked as either `optional` or `required`\n(I suggest using `optional` to prevent getting locked out in case of bugs)\n\nModify the targeted service in `/etc/pam.d/` (such as `/etc/pam.d/sudo`) as explained:\n```\nauth     optional     pam_reattach.so\nauth     sufficient   pam_tid.so\n...\n```\n\nMake sure you have the module installed. Note that when the module is not installed in `/usr/lib/pam` or `/usr/local/lib/pam` (e.g., on M1 Macs where Homebrew is installed in `/opt/homebrew`), you must specify the full path to the module in the PAM service file as shown below:  \n```\nauth     optional     /opt/homebrew/lib/pam/pam_reattach.so\nauth     sufficient   pam_tid.so\n...\n```\n\nThe `pam_tid` module will try to avoid prompting for a touch when connected via SSH or another remote login method. However, there are situations (e.g. use of tmux and screen) where the current tty may be spawned by a remote session but not detected as such by `pam_tid`. To help mitigate this, the `ignore_ssh` option can be added to the configuration of `pam_reattach` as follows:\n```\nauth     optional     pam_reattach.so ignore_ssh\nauth     sufficient   pam_tid.so\n...\n```\nThis will detect the presence of any of `$SSH_CLIENT`, `$SSH_CONNECTION`, or `$SSH_TTY` in the environment, and cause this module to become a no-op.\n\nFor further information, see `reattach_aqua(3)`, `pam_reattach(8)` and `reattach-to-session-namespace(8)`.\n\n## Installation\nThe module is available via Homebrew. Use the following command to install it:\n\n```bash\n$ brew install pam-reattach\n```\n\nYou can also install this module with MacPorts using the following command:\n\n```bash\n$ sudo port install pam-reattach\n```\n\n## Building \nAlternatively, you may manually build the module. The module is built using [CMake 3](https://cmake.org). Enter the following commands into your\ncommand prompt in the project directory:\n\n```bash\n$ cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr/local\n$ cmake --build build\n```\n\nTo create a universal binary for use with both Apple Silicon and x86 (e.g. for Rosetta support), use:\n\n```bash\n$ cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr/local -DCMAKE_OSX_ARCHITECTURES=\"arm64;x86_64\" \n$ cmake --build build\n```\n\nIf CMake is not able to find `libpam` automatically (e.g., on Nix), you may need to specify the prefix path manually:\n```bash\n$ cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr/local -DCMAKE_PREFIX_PATH=\"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/\"\n$ cmake --build build\n```\n\n#### Manual Installation\nThen, to install the module, simply run the following command:\n```bash\n$ cmake --install build\n```\nMake sure you **keep** the generated `install_manifest.txt` file in the build folder after installation. \n\n#### Manual Removal \nRun the following command in your command prompt to remove the installation from your system:\n\n```bash\n$ xargs rm < build/install_manifest.txt\n```\n\nIn case you lost `install_manifest.txt`, this is the list of files that are installed:\n```\n/usr/local/lib/libreattach.a\n/usr/local/include/reattach.h\n/usr/local/share/man/man3/reattach_aqua.3\n/usr/local/lib/pam/pam_reattach.so\n/usr/local/share/man/man8/pam_reattach.8\n/usr/local/bin/reattach-to-session-namespace\n/usr/local/share/man/man8/reattach-to-session-namespace.8\n```\n \n#### Additional Tools\nAdditionally, you may build a `reattach-to-session-namespace` command line\nutility by specifying the `-DENABLE_CLI=ON` option when calling CMake. This command allows you to reattach to the user's session namespace from the\ncommand line. \n\nSee `reattach-to-session-namespace(8)` for more information. \n\n\n## Enabling Touch ID for sudo\nTo enable Touch ID authorization for `sudo`, please see [this](https://derflounder.wordpress.com/2017/11/17/enabling-touch-id-authorization-for-sudo-on-macos-high-sierra/)\narticle.\n\n## License\nThe code is released under the MIT license. See [LICENSE.txt](/LICENSE.txt)."
}
