{
  "name": "xbyak",
  "full_name": "xbyak",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "C++ JIT assembler for x86 (IA32), x64 (AMD64, x86-64)",
  "license": "BSD-3-Clause",
  "homepage": "https://github.com/herumi/xbyak",
  "versions": {
    "stable": "6.73",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/herumi/xbyak/archive/refs/tags/v6.73.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "41f3dc7727a48c751024c92fa4da24a4a1e0ed16b7930c79d05b76960b19562d"
    },
    "head": {
      "url": "https://github.com/herumi/xbyak.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "all": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/xbyak/blobs/sha256:49c122bdac09df7fdedf958def1c616590a414a92e0cae12aabb304a8186e409",
          "sha256": "49c122bdac09df7fdedf958def1c616590a414a92e0cae12aabb304a8186e409"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "cmake"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "aa66a84309b297ea296f7a4b9c424b5c0ec4875c",
  "ruby_source_path": "Formula/xbyak.rb",
  "ruby_source_checksum": {
    "sha256": "eec7e72e16d810d43de4209c1e968d5879129c555cae40988ceafe4c8b714b79"
  },
  "date_added": "2023-06-04T23:38:15+04:00",
  "readme": "\n# Xbyak 6.73 [![Badge Build]][Build Status]\n\n*A C++ JIT assembler for x86 (IA32), x64 (AMD64, x86-64)*\n\n## Menu\n\n- [Install]\n- [Usage]\n- [Changelog]\n\n## Abstract\n\nXbyak is a C++ header library that enables dynamically to assemble x86(IA32), x64(AMD64, x86-64) mnemonic.\n\nThe pronunciation of Xbyak is `kəi-bja-k`.\nIt is named from a Japanese word [開闢](https://translate.google.com/?hl=ja&sl=ja&tl=en&text=%E9%96%8B%E9%97%A2&op=translate), which means the beginning of the world.\n\n## Feature\n\n- header file only\n- Intel/MASM like syntax\n- fully support AVX-512\n\n**Note**:\nUse `and_()`, `or_()`, ... instead of `and()`, `or()`.\nIf you want to use them, then specify `-fno-operator-names` option to gcc/clang.\n\n### Derived Projects\n- [Xbyak_aarch64](https://github.com/fujitsu/xbyak_aarch64/) : for AArch64\n- [Xbyak_riscv](https://github.com/herumi/xbyak_riscv) : for RISC-V\n\n### News\n\n- add amx_fp16/avx_vnni_int8/avx_ne_convert/avx-ifma\n- add movdiri, movdir64b, clwb, cldemote\n- WAITPKG instructions (tpause, umonitor, umwait) are supported.\n- MmapAllocator supports memfd with user-defined strings. see sample/memfd.cpp\n- strictly check address offset disp32 in a signed 32-bit integer. e.g., `ptr[(void*)0xffffffff]` causes an error.\n  - define `XBYAK_OLD_DISP_CHECK` if you need an old check, but the option will be remoevd.\n- add `jmp(mem, T_FAR)`, `call(mem, T_FAR)` `retf()` for far absolute indirect jump.\n- vnni instructions such as vpdpbusd supports vex encoding.\n- (break backward compatibility) `push(byte, imm)` (resp. `push(word, imm)`) forces to cast `imm` to 8(resp. 16) bit.\n- (Windows) `#include <winsock2.h>` has been removed from xbyak.h, so add it explicitly if you need it.\n- support exception-less mode see. [Exception-less mode](#exception-less-mode)\n- `XBYAK_USE_MMAP_ALLOCATOR` will be defined on Linux/macOS unless `XBYAK_DONT_USE_MMAP_ALLOCATOR` is defined.\n\n### Supported OS\n\n- Windows (Xp, Vista, 7, 10, 11) (32 / 64 bit)\n- Linux (32 / 64 bit)\n- macOS (Intel CPU)\n\n### Supported Compilers\n\nAlmost C++03 or later compilers for x86/x64 such as Visual Studio, g++, clang++, Intel C++ compiler and g++ on mingw/cygwin.\n\n## License\n\n[BSD-3-Clause License](http://opensource.org/licenses/BSD-3-Clause)\n\n## Author\n\n#### 光成滋生 Mitsunari Shigeo\n [GitHub](https://github.com/herumi) | [Website (Japanese)](http://herumi.in.coocan.jp/) | [herumi@nifty.com](mailto:herumi@nifty.com)\n\n## Sponsors welcome\n[GitHub Sponsor](https://github.com/sponsors/herumi)\n\n<!----------------------------------------------------------------------------->\n\n[Badge Build]: https://github.com/herumi/xbyak/actions/workflows/main.yml/badge.svg\n[Build Status]: https://github.com/herumi/xbyak/actions/workflows/main.yml\n\n[License]: COPYRIGHT\n\n[Changelog]: doc/changelog.md\n[Install]: doc/install.md\n[Usage]: doc/usage.md"
}
