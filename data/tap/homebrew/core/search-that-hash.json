{
  "name": "search-that-hash",
  "full_name": "search-that-hash",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Searches Hash APIs to crack your hash quickly",
  "license": "GPL-3.0-or-later",
  "homepage": "https://github.com/HashPals/Search-That-Hash",
  "versions": {
    "stable": "0.2.8",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://files.pythonhosted.org/packages/5e/b9/a304a92ba77a9e18b3023b66634e71cded5285cef7e3b56d3c1874e9d84e/search-that-hash-0.2.8.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "384498abbb9a611aa173b20d06b135e013674670fecc01b34d456bfe536e0bca"
    },
    "head": {
      "url": "https://github.com/HashPals/Search-That-Hash.git",
      "branch": "main"
    }
  },
  "revision": 3,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/search-that-hash/blobs/sha256:8ea5896a06d70c1732cfdc431318671fcec6c65cbbb04cfa02d8f9336ce2232e",
          "sha256": "8ea5896a06d70c1732cfdc431318671fcec6c65cbbb04cfa02d8f9336ce2232e"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/search-that-hash/blobs/sha256:378f0e16454fdcc10cd924ac37a5463c42ad1b3a6c7b8857908df3cbeeca9b88",
          "sha256": "378f0e16454fdcc10cd924ac37a5463c42ad1b3a6c7b8857908df3cbeeca9b88"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/search-that-hash/blobs/sha256:04a4e3e96186302635e689bab44eb08dbf89367056e264a664cb32662eb0cde4",
          "sha256": "04a4e3e96186302635e689bab44eb08dbf89367056e264a664cb32662eb0cde4"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/search-that-hash/blobs/sha256:615113d1e0495c23864586428ce92c927796b9d799cfbbf587214af345cf0fa2",
          "sha256": "615113d1e0495c23864586428ce92c927796b9d799cfbbf587214af345cf0fa2"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/search-that-hash/blobs/sha256:ea42f4db7b191ef2c9f6e92c58bf934357bc51c8cb9a1d9174eb36908edf7130",
          "sha256": "ea42f4db7b191ef2c9f6e92c58bf934357bc51c8cb9a1d9174eb36908edf7130"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/search-that-hash/blobs/sha256:c903a7ce8cb387ae7333c71bfaf8e6a5632b073601c2beb0c4b21c8e2eeb01b3",
          "sha256": "c903a7ce8cb387ae7333c71bfaf8e6a5632b073601c2beb0c4b21c8e2eeb01b3"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/search-that-hash/blobs/sha256:03db95ba19b1ef9feb71d74cccc998da3b93789ff192b879ff62fa4243b6a410",
          "sha256": "03db95ba19b1ef9feb71d74cccc998da3b93789ff192b879ff62fa4243b6a410"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "name-that-hash",
    "pygments",
    "python-typing-extensions",
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/search-that-hash.rb",
  "ruby_source_checksum": {
    "sha256": "fb814f62ecccad54c7aefc350cfdc06e0c8289ae0fd0d4ae779a09986a28ba95"
  },
  "date_added": "2021-05-11T13:28:56+00:00",
  "readme": "\n<p align=\"center\">\n<img src=\"Pictures/logo.gif\">\n \n<p align=\"center\">‚û°Ô∏è <a href=\"http://discord.skerritt.blog\">Discord</a> ‚¨ÖÔ∏è</p>\n<p align=\"center\"><img src=\"https://codecov.io/gh/HashPals/Search-That-Hash/branch/main/graph/badge.svg?token=5CYVJ15U4T\"/> <img src=\"https://pepy.tech/badge/search-that-hash/month\"> <img alt=\"Discord\" src=\"https://img.shields.io/discord/754001738184392704\"></p>\n\n<p align=\"center\">The Fastest Hash Cracking System<br>\n<code>pip3 install search-that-hash && sth</code>\n</p>\n\n# ü§î Overview\n\n<img src=\"Pictures/thm_speedrun.gif\">\n\nTired of going to every website to crack your hash? Search-That-Hash automates this process in less than 2 seconds.\nSearch-That-Hash searches the most popular hash cracking sites and automatically inputs your hash(s) for cracking\n\n# üîç Features\n\n* **‚å®Ô∏è Auto-Type Identification** - No need to know the hash type, Search-That-Hash uses [Name-That-Hash](https://github.com/HashPals/Name-That-Hash) to get accurate results on the type of the hash.\n* **üìµ Offline Mode** - Not connected to the internet? No worries, Search-That-Hash will automatically run Hashcat for you.\n* **üí® Fast** - We're all busy people and that's why we've dedicated time to make Search-That-Hash as fast as possible.\n* **ü¶æ JSON API** - As well as JSON output for CLI we also offer an API.\n* **‚ôø Accessible** - We are 100% [ Accessible](https://skerritt.blog/a11y/).\n* **üé´ Extensible** - Adding sites to Search-That-Hash is as easy as printing \"hello world\" !\n* **üåà Beautiful** - The colours were hand-selected to be as gnarly and accessible as possible .\n* **‚òÆÔ∏è Ethical** - We search hashes ethically and legally.\n\n# üì¥ Offline Mode\n\n<img src=\"Pictures/hashcat.gif\">\n\nCouldn't find it in any API? üò¢ STH automatically pipes your input into Hashcat ü•≥\n\nMake sure to specify a wordlist if you want STH to use HashCat with `-w /path/to/wordlist`. If you are on Windows you must specify the path to your HashCat binary and folder in config.json üôÇ\n# üî® Installation\n\nInstall Search-That-Hash as fast as you can read this README. No, seriously -- it's that easy  üòé\n\n```pip3 install search-that-hash```\n\nor:\n\n```pip install search-that-hash```\n\nthen:\n\n``sth``\n\nTo run.\n\n**Note**: We can't guarantee all of the APIs provide perfect privacy due to being closed source. If you need to crack sensitive, personal information please use the offline mode or Hashcat directly.\n\n# üë™ Project Family\n\nLike Search-That-Hash? We have 2 other projects you'll **love**!\n\n<table>\n    <thead>\n        <tr>\n            <th colspan=\"2\">Project Family</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n          <td align=\"center\"><b><a href=\"https://github.com/HashPals/Name-That-Hash\">Name-That-Hash</a></b></td>\n          <td align=\"center\"><b><a href=\"https://github.com/ciphey/ciphey\">Ciphey</a></b></td>\n        </tr>\n      <tr>\n        <td><img src=\"https://nth.skerritt.blog/static/media/name.2642f1af.png\"></img></td>\n          <td>\n            <p align=\"center\">\n              <img src=\"Pictures/ciphey_logo.PNG\"></img>\n            </p>\n          </td>\n      </tr>\n      <tr>\n        <td>Instantly identify what type of hash it is. With support for over 300 hashes, descriptions and popularity ratings!</td>\n        <td>\n          Automatically decrypt ciphers, decode encodings, crack hashes, and more. Not sure what the text is? Use this!\n      </td>\n    </tbody>\n    </thead>\n</table>\n\n# üé• Demos\n\n<img src=\"Pictures/password_grep.gif\">\n<p align=\"center\">Greppable mode</p>\n\n# ‚ú® Google Colab\n\nWe now have support for running STH on google colab for faster hashcat cracking, no need to worry about running hashcat on your machine anymore! Many thanks to [Drago](https://twitter.com/vaishnavpardhi) for making this :-)\n\nhttps://github.com/vaishnavpardhi/colabsth/\n\n# üìñ Documentation\n\nWant to know how everything works? \n\nOr maybe want to use the API!\n\nThats why we have documentation!\n\n| üìö **Documentation** | üê¶ **My Twitter (@ me for questions)** | üé≥ **Discord** \n| --------------- | ----------------------------------- | ---------------- | \n| [Wiki](https://github.com/HashPals/Search-That-Hash/wiki) | [JaySec](https://twitter.com/Jayy_2004) | [Discord](http://discord.com/invite/zYTM3rZM4T) | \n\n# ‚úçÔ∏è Contributing\n\nWe would love any contributions to search-that-hash, thats why we've made it as simple and as easy as we can to contribute! Simply follow the docs on \"Contributing\" üòá\n\n# ‚ù§Ô∏è Final thanks\n\nThank you so much to  [Bee](https://twitter.com/bee_sec_san) who pretty much mentored me the whole way through this process and never failed to provide help and great [resources ](https://skerritt.blog/)for me to learn, carry on the great work! :)\n\nThank you also to [Fawaz](https://twitter.com/q8fawazo) for the amazing website!  üöß\n\n......And to [Jabba](https://github.com/JabbaTheBunny) & [Skeletal](https://github.com/SkeletalDemise) for helping out with some of the code üíª\n\nThank you to the TryHackMe community, they taught me so much in infosec and its a pleasure being part of it!\n\nLastly, this project was inspired by [Hashbuster](https://github.com/s0md3v/Hash-Buster) so thank you for the work!"
}
