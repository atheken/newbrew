{
  "name": "pkgconf",
  "full_name": "pkgconf",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Package compiler and linker metadata toolkit",
  "license": "ISC",
  "homepage": "https://github.com/pkgconf/pkgconf",
  "versions": {
    "stable": "1.9.5",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://distfiles.ariadne.space/pkgconf/pkgconf-1.9.5.tar.xz",
      "tag": null,
      "revision": null,
      "checksum": "1ac1656debb27497563036f7bffc281490f83f9b8457c0d60bcfb638fb6b6171"
    },
    "head": {
      "url": "https://github.com/pkgconf/pkgconf.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/pkgconf/blobs/sha256:dbb851846b6ff3b1df98a0467d53a06d5d920d23447dc9a82ac7ee736f4adfa8",
          "sha256": "dbb851846b6ff3b1df98a0467d53a06d5d920d23447dc9a82ac7ee736f4adfa8"
        },
        "arm64_monterey": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/pkgconf/blobs/sha256:e840286ebdaa867dc929785b03a1b34685786a1810c54f99cb3ee8ceb4ef2987",
          "sha256": "e840286ebdaa867dc929785b03a1b34685786a1810c54f99cb3ee8ceb4ef2987"
        },
        "arm64_big_sur": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/pkgconf/blobs/sha256:17f2d70fc2d75aba93d39ac6f18cc913138bc6e910a50d3433843373d2b2c207",
          "sha256": "17f2d70fc2d75aba93d39ac6f18cc913138bc6e910a50d3433843373d2b2c207"
        },
        "ventura": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/pkgconf/blobs/sha256:62ac9c12537479d9187d508964ffeda87d933d05f183f96b4959fbdccbc378b4",
          "sha256": "62ac9c12537479d9187d508964ffeda87d933d05f183f96b4959fbdccbc378b4"
        },
        "monterey": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/pkgconf/blobs/sha256:ffc635090712aa70f4054641eaad47d6e0a6d0e3aea4e036f7b168351cec1dc4",
          "sha256": "ffc635090712aa70f4054641eaad47d6e0a6d0e3aea4e036f7b168351cec1dc4"
        },
        "big_sur": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/pkgconf/blobs/sha256:9fd89c2aa1c176b0c14793e1d258dfbf5e564da105ef528ca803cf7b144ab171",
          "sha256": "9fd89c2aa1c176b0c14793e1d258dfbf5e564da105ef528ca803cf7b144ab171"
        },
        "x86_64_linux": {
          "cellar": "/home/linuxbrew/.linuxbrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/pkgconf/blobs/sha256:4484f0d7faca2e2e728e20ef0019f51867311a655f2f8673a33bda637cedf6b8",
          "sha256": "4484f0d7faca2e2e728e20ef0019f51867311a655f2f8673a33bda637cedf6b8"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/pkgconf.rb",
  "ruby_source_checksum": {
    "sha256": "42fc223dfb4f68272faf6a9a3818581c856ae2cb0dd6297cbf265e137a3460d0"
  },
  "head_dependencies": {
    "build_dependencies": [
      "autoconf",
      "automake",
      "libtool"
    ],
    "dependencies": [],
    "test_dependencies": [],
    "recommended_dependencies": [],
    "optional_dependencies": [],
    "uses_from_macos": [],
    "uses_from_macos_bounds": []
  },
  "date_added": "2021-09-15T14:03:47+00:00",
  "readme": "# pkgconf [![test](https://github.com/pkgconf/pkgconf/actions/workflows/test.yml/badge.svg)](https://github.com/pkgconf/pkgconf/actions/workflows/test.yml)\n\n`pkgconf` is a program which helps to configure compiler and linker flags for\ndevelopment libraries.  It is similar to pkg-config from freedesktop.org.\n\n`libpkgconf` is a library which provides access to most of `pkgconf`'s functionality, \nto allow other tooling such as compilers and IDEs to discover and use libraries \nconfigured by pkgconf.\n\n## using `pkgconf` with autotools\n\nImplementations of pkg-config, such as pkgconf, are typically used with the\nPKG_CHECK_MODULES autoconf macro.  As far as we know, pkgconf is\ncompatible with all known variations of this macro. pkgconf detects at\nruntime whether or not it was started as 'pkg-config', and if so, attempts\nto set program options such that its behaviour is similar.\n\nIn terms of the autoconf macro, it is possible to specify the PKG_CONFIG\nenvironment variable, so that you can test pkgconf without overwriting your\npkg-config binary.  Some other build systems may also respect the PKG_CONFIG\nenvironment variable.\n\nTo set the environment variable on the bourne shell and clones (i.e. bash), you\ncan run:\n\n    $ export PKG_CONFIG=/usr/bin/pkgconf\n\n## comparison of `pkgconf` and `pkg-config` dependency resolvers\n\npkgconf builds an acyclic directed dependency graph.  This allows for the user\nto more conservatively link their binaries -- which may be helpful in some\nenvironments, such as when prelink(1) is being used.  As a result of building\na directed dependency graph designed for the specific problem domain provided\nby the user, more accurate dependencies can be determined.\n\nCurrent release versions of pkg-config, on the other hand, build a database of all\nknown pkg-config files on the system before attempting to resolve dependencies, which\nis a considerably slower and less efficient design.  Efforts have been made recently\nto improve this behaviour.\n\nAs of the 1.1 series, pkgconf also fully implements support for `Provides` rules,\nwhile pkg-config does not.  pkg-config only provides the `--print-provides` functionality\nas a stub.  There are other intentional implementation differences in pkgconf's dependency\nresolver versus pkg-config's dependency resolver in terms of completeness and correctness,\nsuch as, for example, how `Conflicts` rules are processed.\n\n## linker flags optimization\n\nAs previously mentioned, pkgconf makes optimizations to the linker flags in both the\ncase of static and shared linking in order to avoid overlinking binaries and also\nsimplifies the `CFLAGS` and `LIBS` output of the pkgconf tool for improved readability.\n\nThis functionality depends on the pkg-config module properly declaring it's dependency\ntree instead of using `Libs` and `Cflags` fields to directly link against other modules\nwhich have pkg-config metadata files installed.\n\nDoing so is discouraged by the [freedesktop tutorial][fd-tut] anyway.\n\n   [fd-tut]: http://people.freedesktop.org/~dbn/pkg-config-guide.html\n\n## compatibility with pkg-config\n\nI really hate that I have to have this section, I like being a nice person, but we\nunfortunately have to say this because otherwise we get passive-aggressive people who\ntry to argue with us about what pkg-config compatibility means.\n\nWe do not provide bug-level compatibility with pkg-config.\n\nWhat that means is, if you feel that there is a legitimate regression versus pkg-config,\ndo let us know, but also make sure that the .pc files are valid and follow the rules of\nthe [pkg-config tutorial][fd-tut], as most likely fixing them to follow the specified\nrules will solve the problem.\n\nAdditionally, **we do not consider pkgconf doing what you tell it to do, in cases for \nwhich pkg-config fails to do so, to be a bug**.\n\nIf, for example, you use environment variables such as `PKG_CONFIG_SYSTEM_[INCLUDE|LIBRARY]_PATH`\nand then find yourself surprised that `pkgconf` is stripping `-I` and `-L` flags relating\nto those paths, it is not a `pkgconf` problem -- `pkgconf` is doing exactly what you told\nit to do.\n\nWe will reject bugs like this, and if someone insists on fixing such a non-bug, this \nconstitutes a violation of our [Code of Conduct](CODE_OF_CONDUCT.md), which may be \naddressed by banning from this repository.\n\n## debug output\n\nPlease use only the stable interfaces to query pkg-config.  Do not screen-scrape the\noutput from `--debug`: this is sent to `stderr` for a reason, it is not intended to be\nscraped.  The `--debug` output is **not** a stable interface, and should **never** be\ndepended on as a source of information.  If you need a stable interface to query pkg-config\nwhich is not covered, please get in touch.\n\n## compiling `pkgconf` and `libpkgconf` on UNIX\n\npkgconf is basically compiled the same way any other autotools-based project is\ncompiled:\n\n    $ ./configure\n    $ make\n    $ sudo make install\n\nIf you are installing pkgconf into a custom prefix, such as `/opt/pkgconf`, you will\nlikely want to define the default system includedir and libdir for your toolchain.\nTo do this, use the `--with-system-includedir` and `--with-system-libdir` configure\nflags like so:\n\n    $ ./configure \\\n         --prefix=/opt/pkgconf \\\n         --with-system-libdir=/lib:/usr/lib \\\n         --with-system-includedir=/usr/include\n    $ make\n    $ sudo make install\n\n## compiling `pkgconf` and `libpkgconf` with Meson (usually for Windows)\n\n\npkgconf is compiled using [Meson](https://mesonbuild.com) on Windows. In theory, you could also use\nMeson to build on UNIX, but this is not recommended at this time as it pkgconf is typically built\nmuch earlier than Meson.\n\n    $ meson setup build -Dtests=disabled\n    $ meson compile -C build\n    $ meson install -C build\n\nThere are a few defines such as SYSTEM_LIBDIR, PKGCONFIGDIR and SYSTEM_INCLUDEDIR.\nHowever, on Windows, the default PKGCONFIGDIR value is usually overridden at runtime based\non path relocation.\n\n## pkg-config symlink\n\nIf you want pkgconf to be used when you invoke `pkg-config`, you should install a\nsymlink for this.  We do not do this for you, as we believe it is better for vendors\nto make this determination themselves.\n\n    $ ln -sf pkgconf /usr/bin/pkg-config\n\n## release tarballs\n\nRelease tarballs are available at <https://distfiles.ariadne.space/pkgconf/>.\nPlease only use the tarballs from distfiles.ariadne.space.\n\n## contacts\n\nYou can report bugs at <https://github.com/pkgconf/pkgconf/issues>.\n\nThere is a mailing list at <https://lists.sr.ht/~kaniini/pkgconf>.\n\nYou can contact us via IRC at `#pkgconf` at `irc.oftc.net`."
}
