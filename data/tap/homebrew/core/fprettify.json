{
  "name": "fprettify",
  "full_name": "fprettify",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Auto-formatter for modern fortran source code",
  "license": "GPL-3.0-or-later",
  "homepage": "https://github.com/pseewald/fprettify/",
  "versions": {
    "stable": "0.3.7",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/pseewald/fprettify/archive/v0.3.7.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "052da19a9080a6641d3202e10572cf3d978e6bcc0e7db29c1eb8ba724e89adc7"
    },
    "head": {
      "url": "https://github.com/pseewald/fprettify.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fprettify/blobs/sha256:4eaf9f8515de83e38a2279f945676e4c634b7831f91095b1da7321fc58dcb39c",
          "sha256": "4eaf9f8515de83e38a2279f945676e4c634b7831f91095b1da7321fc58dcb39c"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fprettify/blobs/sha256:4eaf9f8515de83e38a2279f945676e4c634b7831f91095b1da7321fc58dcb39c",
          "sha256": "4eaf9f8515de83e38a2279f945676e4c634b7831f91095b1da7321fc58dcb39c"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fprettify/blobs/sha256:4eaf9f8515de83e38a2279f945676e4c634b7831f91095b1da7321fc58dcb39c",
          "sha256": "4eaf9f8515de83e38a2279f945676e4c634b7831f91095b1da7321fc58dcb39c"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fprettify/blobs/sha256:e7bf15a8edcf12f4aa936c7da9ce8e771f84a9e4177897351a87d25d1f281ba6",
          "sha256": "e7bf15a8edcf12f4aa936c7da9ce8e771f84a9e4177897351a87d25d1f281ba6"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fprettify/blobs/sha256:e7bf15a8edcf12f4aa936c7da9ce8e771f84a9e4177897351a87d25d1f281ba6",
          "sha256": "e7bf15a8edcf12f4aa936c7da9ce8e771f84a9e4177897351a87d25d1f281ba6"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fprettify/blobs/sha256:e7bf15a8edcf12f4aa936c7da9ce8e771f84a9e4177897351a87d25d1f281ba6",
          "sha256": "e7bf15a8edcf12f4aa936c7da9ce8e771f84a9e4177897351a87d25d1f281ba6"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fprettify/blobs/sha256:e7bf15a8edcf12f4aa936c7da9ce8e771f84a9e4177897351a87d25d1f281ba6",
          "sha256": "e7bf15a8edcf12f4aa936c7da9ce8e771f84a9e4177897351a87d25d1f281ba6"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/fprettify/blobs/sha256:51fb193432c7ed43d63e9b13a8e946058f91277e3d601abfa7f5de25f56a4b70",
          "sha256": "51fb193432c7ed43d63e9b13a8e946058f91277e3d601abfa7f5de25f56a4b70"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [],
  "dependencies": [
    "python@3.11"
  ],
  "test_dependencies": [
    "gcc"
  ],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/fprettify.rb",
  "ruby_source_checksum": {
    "sha256": "f1e5bddd988b923bafc2f03b309f437ed3400c50f7f2110f9427fbfff9b9d220"
  },
  "date_added": "2022-01-04T10:20:32+00:00",
  "readme": "# fprettify\n\n[![CI](https://github.com/pseewald/fprettify/actions/workflows/test.yml/badge.svg)](https://github.com/pseewald/fprettify/actions/workflows/test.yml)\n[![Coverage Status](https://coveralls.io/repos/github/pseewald/fprettify/badge.svg?branch=master)](https://coveralls.io/github/pseewald/fprettify?branch=master)\n![PyPI - License](https://img.shields.io/pypi/l/fprettify)\n![PyPI](https://img.shields.io/pypi/v/fprettify)\n[![Code Climate](https://codeclimate.com/github/pseewald/fprettify/badges/gpa.svg)](https://codeclimate.com/github/pseewald/fprettify)\n\nfprettify is an auto-formatter for modern Fortran code that imposes strict whitespace formatting, written in Python.\n\n**NOTE:** I'm looking for help to maintain this repository, see [#127](https://github.com/pseewald/fprettify/issues/127).\n\n## Features\n\n- Auto-indentation.\n- Line continuations are aligned with the previous opening delimiter `(`, `[` or `(/` or with an assignment operator `=` or `=>`. If none of the above is present, a default hanging indent is applied.\n- Consistent amount of whitespace around operators and delimiters.\n- Removal of extraneous whitespace and consecutive blank lines.\n- Change letter case (upper case / lower case conventions) of intrinsics\n- Tested for editor integration.\n- By default, fprettify causes whitespace changes only and thus preserves revision history.\n- fprettify can handle cpp and [fypp](https://github.com/aradi/fypp) preprocessor directives.\n\n## Limitations\n\n- Works only for modern Fortran (Fortran 90 upwards).\n- Feature missing? Please create an issue.\n\n## Requirements\n\n- Python 3 (Python 2.7 no longer supported)\n- [ConfigArgParse](https://pypi.org/project/ConfigArgParse): optional, enables use of config file\n\n## Examples\n\nCompare `examples/*before.f90` (original Fortran files) with `examples/*after.f90` (reformatted Fortran files) to see what fprettify does. A quick demonstration:\n\n```Fortran\nprogram demo\ninteger :: endif,if,elseif\ninteger,DIMENSION(2) :: function\nendif=3;if=2\nif(endif==2)then\nendif=5\nelseif=if+4*(endif+&\n2**10)\nelseif(endif==3)then\nfunction(if)=endif/elseif\nprint*,endif\nendif\nend program\n```\n\n⇩⇩⇩⇩⇩⇩⇩⇩⇩⇩ `fprettify` ⇩⇩⇩⇩⇩⇩⇩⇩⇩⇩\n\n```Fortran\nprogram demo\n   integer :: endif, if, elseif\n   integer, DIMENSION(2) :: function\n   endif = 3; if = 2\n   if (endif == 2) then\n      endif = 5\n      elseif = if + 4*(endif + &\n                       2**10)\n   elseif (endif == 3) then\n      function(if) = endif/elseif\n      print *, endif\n   endif\nend program\n```\n\n## Installation\n\nThe latest release can be installed using pip:\n\n```sh\npip install --upgrade fprettify\n```\n\nInstallation from source requires Python Setuptools:\n\n```sh\npip install .\n```\n\nFor local installation, use `--user` option.\n\nIf you use the [Conda](https://docs.conda.io/) package manager, fprettify is available from the [conda-forge](https://conda-forge.org/) channel:\n\n```sh\nconda install -c conda-forge fprettify\n```\n\n## Command line tool\n\nAutoformat file1, file2, ... inplace by\n\n```sh\nfprettify file1, file2, ...\n```\n\nThe default indent is 3. If you prefer something else, use `--indent n` argument.\n\nIn order to apply fprettify recursively to an entire Fortran project instead of a single file, use the `-r` option.\n\nFor more options, read\n\n```sh\nfprettify -h\n```\n\n## Editor integration\n\nFor editor integration, use\n\n```sh\nfprettify --silent\n```\n\nFor instance, with Vim, use fprettify with `gq` by putting the following commands in your `.vimrc`:\n\n```vim\nautocmd Filetype fortran setlocal formatprg=fprettify\\ --silent\n```\n\n## Deactivation and manual formatting (experimental feature)\n\nfprettify can be deactivated for selected lines: a single line followed by an inline comment starting with `!&` is not auto-formatted and consecutive lines that are enclosed between two comment lines `!&<` and `!&>` are not auto-formatted. This is useful for cases where manual alignment is preferred over auto-formatting. Furthermore, deactivation is necessary when non-standard Fortran syntax (such as advanced usage of preprocessor directives) prevents proper formatting. As an example, consider the following snippet of fprettify formatted code:\n\n```fortran\nA = [-1, 10, 0, &\n     0, 1000, 0, &\n     0, -1, 1]\n```\n\nIn order to manually align the columns, fprettify needs to be deactivated by\n\n```fortran\nA = [-1,   10, 0, & !&\n      0, 1000, 0, & !&\n      0,   -1, 1]   !&\n```\n\nor, equivalently by\n\n```fortran\n!&<\nA = [-1,   10, 0, &\n      0, 1000, 0, &\n      0,   -1, 1]\n!&>\n```\n\n## Contributing / Testing\n\nThe testing mechanism allows you to easily test fprettify with any Fortran project of your choice. Simply clone or copy your entire project into `fortran_tests/before` and run `python setup.py test`. The directory `fortran_tests/after` contains the test output (reformatted Fortran files). If testing fails, please submit an issue!"
}
