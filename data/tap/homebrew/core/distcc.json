{
  "name": "distcc",
  "full_name": "distcc",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Distributed compiler client and server",
  "license": "GPL-2.0-or-later",
  "homepage": "https://github.com/distcc/distcc/",
  "versions": {
    "stable": "3.4",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/distcc/distcc/releases/download/v3.4/distcc-3.4.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "2b99edda9dad9dbf283933a02eace6de7423fe5650daa4a728c950e5cd37bd7d"
    },
    "head": {
      "url": "https://github.com/distcc/distcc.git",
      "branch": "master"
    }
  },
  "revision": 2,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/distcc/blobs/sha256:8b2fbc5cf4cb8d9476da2625a957915944649cae75fb3108b0bc96a4a4566dc2",
          "sha256": "8b2fbc5cf4cb8d9476da2625a957915944649cae75fb3108b0bc96a4a4566dc2"
        },
        "arm64_monterey": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/distcc/blobs/sha256:c81d6a2c9a61ef14dce35ace5f8c6178818fc31df0737340e7a132f00f0f65a4",
          "sha256": "c81d6a2c9a61ef14dce35ace5f8c6178818fc31df0737340e7a132f00f0f65a4"
        },
        "arm64_big_sur": {
          "cellar": "/opt/homebrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/distcc/blobs/sha256:65af444c16f90e930c9bfb1bbc409dc3bb448de3074fd66d6c4e838286a97de0",
          "sha256": "65af444c16f90e930c9bfb1bbc409dc3bb448de3074fd66d6c4e838286a97de0"
        },
        "ventura": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/distcc/blobs/sha256:df8c4c8014e106395f5bd5c442b3e001d74ebc4b5f974501f62398e1bfe7c9d7",
          "sha256": "df8c4c8014e106395f5bd5c442b3e001d74ebc4b5f974501f62398e1bfe7c9d7"
        },
        "monterey": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/distcc/blobs/sha256:8f3321e99183c5839f84d1a6c49e64befa3d4c028a7e245b1943ac91c36d513e",
          "sha256": "8f3321e99183c5839f84d1a6c49e64befa3d4c028a7e245b1943ac91c36d513e"
        },
        "big_sur": {
          "cellar": "/usr/local/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/distcc/blobs/sha256:beb61452ff642e970da5d457f55d7bee4667c095a531dd2f34424afebf6dca00",
          "sha256": "beb61452ff642e970da5d457f55d7bee4667c095a531dd2f34424afebf6dca00"
        },
        "x86_64_linux": {
          "cellar": "/home/linuxbrew/.linuxbrew/Cellar",
          "url": "https://ghcr.io/v2/homebrew/core/distcc/blobs/sha256:de6c0c43468eff787ff1fce4f00c476df27327f798e1c483c6cd41e239fba684",
          "sha256": "de6c0c43468eff787ff1fce4f00c476df27327f798e1c483c6cd41e239fba684"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "autoconf",
    "automake"
  ],
  "dependencies": [
    "python@3.11"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": {
    "run": [
      "/home/linuxbrew/.linuxbrew/opt/distcc/bin/distccd",
      "--allow=192.168.0.1/24"
    ],
    "run_type": "immediate",
    "keep_alive": {
      "always": true
    },
    "working_dir": "/home/linuxbrew/.linuxbrew/opt/distcc"
  },
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/distcc.rb",
  "ruby_source_checksum": {
    "sha256": "d2286bf8b6c3c7f7aa88eff7e6c530df1feb7f5c08ab9dad502b42d942d66fa8"
  },
  "date_added": "2013-02-03T21:08:00-08:00",
  "readme": "# distcc -- a free distributed C/C++ compiler system\n[![Build Status](https://travis-ci.org/distcc/distcc.svg?branch=master)](https://travis-ci.org/distcc/distcc)\n\nby Martin Pool\n\nCurrent Documents: https://distcc.github.io/\nFormally http://distcc.org/\n\n\"pump\" functionality added by\nFergus Henderson, Nils Klarlund, Manos Renieris, and Craig Silverstein (Google Inc.)\n\ndistcc is a program to distribute compilation of C or C++ code across\nseveral machines on a network. distcc should always generate the same\nresults as a local compile, is simple to install and use, and is often\ntwo or more times faster than a local compile.\n\nUnlike other distributed build systems, distcc does not require all\nmachines to share a filesystem, have synchronized clocks, or to have\nthe same libraries or header files installed. Machines can be running\ndifferent operating systems, as long as they have compatible binary\nformats or cross-compilers.\n\nBy default, distcc sends the complete preprocessed source code across\nthe network for each job, so all it requires of the volunteer machines\nis that they be running the distccd daemon, and that they have an\nappropriate compiler installed.\n\nThe distcc \"pump\" functionality, added in distcc 3.0, improves on\ndistcc by distributing not only compilation but also preprocessing to\ndistcc servers. This requires that the server and client have the same\nsystem headers (the client takes responsibility for transmitting\napplication-specific headers).  Given that, distcc in pump mode yields\nthe same results that distcc would in non-pump mode, but faster, since\nthe preprocessor no longer runs locally. For more details on the pump\nfunctionality, see README.pump.\n\ndistcc is not itself a compiler, but rather a front-end to the GNU\nC/C++ compiler (gcc), or another compiler of your choice. All the\nregular gcc options and features work as normal.\n\ndistcc is designed to be used with GNU make's parallel-build feature\n(-j). Shipping files across the network takes time, but few cycles on\nthe client machine. Any files that can be built remotely are\nessentially \"for free\" in terms of client CPU.  This is even more true\nin \"pump\" mode, where the client does not even have to take time to\npreprocess the source files.  distcc has been successfully used in\nenvironments with hundreds of distcc servers, supporting dozens of\nsimultaneous compiles.\n\ndistcc is now reasonably stable and can successfully compile the Linux\nkernel, rsync, KDE, GNOME (via GARNOME), Samba and Ethereal.  distcc\nis nearly linearly scalable for small numbers of machines: for a\ntypical case, three machines are 2.6 times faster than one.\n\n## Licence\n\ndistcc is distributed under the GNU General Public Licence v2.\n\n## Resources\n * [Continuous Integration System](https://travis-ci.org/distcc/distcc)(Travis CI)\n \n * [Mailing list](https://lists.samba.org/mailman/listinfo/distcc)\n \n * [Stack Overflow questions](http://stackoverflow.com/questions/tagged/distcc)"
}
