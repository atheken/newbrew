{
  "name": "ocaml-num",
  "full_name": "ocaml-num",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "OCaml legacy Num library for arbitrary-precision arithmetic",
  "license": "LGPL-2.1",
  "homepage": "https://github.com/ocaml/num",
  "versions": {
    "stable": "1.4",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/ocaml/num/archive/v1.4.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "015088b68e717b04c07997920e33c53219711dfaf36d1196d02313f48ea00f24"
    }
  },
  "revision": 3,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ocaml-num/blobs/sha256:1376f678d4ee8141b6ce772985df8a1397f3e4831b02160a8057e3b195b26f90",
          "sha256": "1376f678d4ee8141b6ce772985df8a1397f3e4831b02160a8057e3b195b26f90"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ocaml-num/blobs/sha256:24a7c2eb700a74089c1fbdb5395473c4afa7f90e86372b556c7b48b4caab23fc",
          "sha256": "24a7c2eb700a74089c1fbdb5395473c4afa7f90e86372b556c7b48b4caab23fc"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ocaml-num/blobs/sha256:e14151e4a14faa9a43774d4682930994110f9d654d533091b48a35ed95bfe8eb",
          "sha256": "e14151e4a14faa9a43774d4682930994110f9d654d533091b48a35ed95bfe8eb"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ocaml-num/blobs/sha256:6fd4ac3c6c935c55379ff625b59501cda84097a366fd762d99d6cdc1d66d5f91",
          "sha256": "6fd4ac3c6c935c55379ff625b59501cda84097a366fd762d99d6cdc1d66d5f91"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ocaml-num/blobs/sha256:36835ca0d89b6ccf37c1dbb3596b2e1ba688148cac83d6ddda1d2bdf5ddb2a00",
          "sha256": "36835ca0d89b6ccf37c1dbb3596b2e1ba688148cac83d6ddda1d2bdf5ddb2a00"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ocaml-num/blobs/sha256:0d247f113c3d0135e09a2b0a12a9299217600477083b089c5731bcf2b2245c36",
          "sha256": "0d247f113c3d0135e09a2b0a12a9299217600477083b089c5731bcf2b2245c36"
        },
        "catalina": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/ocaml-num/blobs/sha256:5dbcc04ba33b58d14b77ae7382345b9abd913ce342c20c330c4cf15c936b24f2",
          "sha256": "5dbcc04ba33b58d14b77ae7382345b9abd913ce342c20c330c4cf15c936b24f2"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/ocaml-num/blobs/sha256:8a1b1383e37f8f367f8f5c6c44a86f9e76c17080d3aa0465bfcff9328da88d68",
          "sha256": "8a1b1383e37f8f367f8f5c6c44a86f9e76c17080d3aa0465bfcff9328da88d68"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "ocaml-findlib"
  ],
  "dependencies": [
    "ocaml"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/ocaml-num.rb",
  "ruby_source_checksum": {
    "sha256": "e7540fe9807b477627909076466edb1230de8f4403b9e4e92f8f392f197f18ee"
  },
  "date_added": "2017-11-04T10:20:03-07:00",
  "readme": "# The Num library for arithmetic on big integers and rationals\n\n## Overview\n\nThis library implements arbitrary-precision arithmetic on big integers and on rationals.  \n\nThis is a  legacy library.  It used to be part of the core OCaml distribution (in <code>otherlibs/num</code>) but is now distributed separately.  New applications that need arbitrary-precision arithmetic should use the Zarith library (https://github.com/ocaml/Zarith) instead of the Num library, and older applications that already use Num are encouraged to switch to Zarith.  Zarith delivers much better performance than Num and has a nicer API.\n\n## Usage\n\nTo use the bignum library from your programs, it is recommended to use ocamlfind:\n```\n    ocamlfind ocamlc -package num ...\n    ocamlfind ocamlopt -package num ...\n```\nAlternatively, you can do\n```\n    ocamlc <options> nums.cma <.cmo and .ml files>\n    ocamlopt <options> nums.cmxa <.cmx and .ml files>\n```\nFor toplevel use, just issue the commands\n```\n    #use \"topfind\";;\n    #package \"num\";;\n```\nor\n```\n    #load \"nums.cma\";;\n```\n\n## Documentation\n\nThe following modules are documented in their interfaces:\n\n* `Big_int`: operations on arbitrary-precision integers\n* `Num`: operations on arbitrary-precision numbers (integers and rationals)\n* `Arith_status`: flags that control rational arithmetic\n\nMore documentation on the functions provided in this library can be found in _The CAML Numbers Reference Manual_ by Valérie Ménissier-Morain, INRIA technical report 141, july 1992, http://hal.inria.fr/docs/00/07/00/27/PDF/RT-0141.pdf\n\n## Compilation and installation\n\nPrerequisites: OCaml version 4.04 or newer.\n```\n        make all\n        make test\n        make install\n        make clean\n```\n\n## History\n\nThis library is derived from Valérie Ménissier-Morain's implementation of rational arithmetic for Caml V3.1.  Xavier Leroy did the Caml Light port.  Victor Manuel Gulias Fernandez did the initial Caml Special Light / OCaml port.  Pierre Weis did most of the maintenance and bug fixing.\n\nInitially, the low-level big integer operations were provided by the BigNum package developed by Bernard Serpette, Jean Vuillemin and Jean-Claude Hervé (INRIA and Digital PRL).  License issues forced us to replace the BigNum package.  The current implementation of low-level big integer operations is due to Xavier Leroy."
}
