{
  "name": "cargo-zigbuild",
  "full_name": "cargo-zigbuild",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Compile Cargo project with zig as linker",
  "license": "MIT",
  "homepage": "https://github.com/rust-cross/cargo-zigbuild",
  "versions": {
    "stable": "0.16.12",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/rust-cross/cargo-zigbuild/archive/refs/tags/v0.16.12.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "1cb8253043d5c9acd0b12fa98fc30dc7970fa07240a9014dc8f9dc87742e19c8"
    },
    "head": {
      "url": "https://github.com/rust-cross/cargo-zigbuild.git",
      "branch": "main"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-zigbuild/blobs/sha256:5ffe372bf9e4aef74d6df6d0cb4d13fe2b7c1b11bacbcf6dbea68461621bdc45",
          "sha256": "5ffe372bf9e4aef74d6df6d0cb4d13fe2b7c1b11bacbcf6dbea68461621bdc45"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-zigbuild/blobs/sha256:80c3c0fa04a00843ac8018764b925468ee44bc04f0b4c95b419bc7fb7250b48c",
          "sha256": "80c3c0fa04a00843ac8018764b925468ee44bc04f0b4c95b419bc7fb7250b48c"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-zigbuild/blobs/sha256:d82133d878a4f47cfd6004bc898f73ec161f1273160efb9f80b46a0ce7b56f8c",
          "sha256": "d82133d878a4f47cfd6004bc898f73ec161f1273160efb9f80b46a0ce7b56f8c"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-zigbuild/blobs/sha256:5ca796a46576696791794fe6bd1b23b98f17838359b6635e5048104f7c3cc0c8",
          "sha256": "5ca796a46576696791794fe6bd1b23b98f17838359b6635e5048104f7c3cc0c8"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-zigbuild/blobs/sha256:acbd073492493dfb4ea3248f2e83fa2f01cb0563d4b98ac497f90d77dafde9bd",
          "sha256": "acbd073492493dfb4ea3248f2e83fa2f01cb0563d4b98ac497f90d77dafde9bd"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-zigbuild/blobs/sha256:826455cc9fb5ed9e7a83c6bcff0124762c370f5405da54e7504e4c82b1a7302f",
          "sha256": "826455cc9fb5ed9e7a83c6bcff0124762c370f5405da54e7504e4c82b1a7302f"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cargo-zigbuild/blobs/sha256:7d281d463fcd4d2172f25ffd931064b7ea7dc0a13ac5aca3bcd4bb7b66a042ec",
          "sha256": "7d281d463fcd4d2172f25ffd931064b7ea7dc0a13ac5aca3bcd4bb7b66a042ec"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [
    "zig"
  ],
  "test_dependencies": [
    "rustup-init"
  ],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/cargo-zigbuild.rb",
  "ruby_source_checksum": {
    "sha256": "82983bf312e8ab9d600ce894e03bdf377b9666aa859d99a6262f23547b6db713"
  },
  "date_added": "2022-09-13T03:57:32+00:00",
  "readme": "# cargo-zigbuild\n\n[![CI](https://github.com/rust-cross/cargo-zigbuild/workflows/CI/badge.svg)](https://github.com/rust-cross/cargo-zigbuild/actions?query=workflow%3ACI)\n[![Crates.io](https://img.shields.io/crates/v/cargo-zigbuild.svg)](https://crates.io/crates/cargo-zigbuild)\n[![docs.rs](https://docs.rs/cargo-zigbuild/badge.svg)](https://docs.rs/cargo-zigbuild/)\n[![PyPI](https://img.shields.io/pypi/v/cargo-zigbuild.svg)](https://pypi.org/project/cargo-zigbuild)\n[![Docker Image](https://img.shields.io/docker/pulls/messense/cargo-zigbuild.svg?maxAge=2592000)](https://hub.docker.com/r/messense/cargo-zigbuild/)\n\n> ðŸš€ Help me to become a full-time open-source developer by [sponsoring me on GitHub](https://github.com/sponsors/messense)\n\nCompile Cargo project with [zig](https://github.com/ziglang/zig) as [linker](https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html) for\n[easier cross compiling](https://actually.fyi/posts/zig-makes-rust-cross-compilation-just-work/).\n\n## Installation\n\n```bash\ncargo install cargo-zigbuild\n```\n\nYou can also install it using pip which will also install [`ziglang`](https://pypi.org/project/ziglang/) automatically:\n\n```bash\npip install cargo-zigbuild\n```\n\nWe also provide a [Docker image](https://hub.docker.com/r/messense/cargo-zigbuild) which has macOS SDK pre-installed in addition to cargo-zigbuild and Rust,\nfor example to build for x86_64 macOS:\n\n```bash\ndocker run --rm -it -v $(pwd):/io -w /io messense/cargo-zigbuild \\\n  cargo zigbuild --release --target x86_64-apple-darwin\n```\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/cargo-zigbuild.svg?columns=4)](https://repology.org/project/cargo-zigbuild/versions)\n\n## Usage\n\n1. Install [zig](https://ziglang.org/) following the [official documentation](https://ziglang.org/learn/getting-started/#installing-zig),\non macOS, Windows and Linux you can also install zig from PyPI via `pip3 install ziglang`\n2. Install Rust target via rustup, for example, `rustup target add aarch64-unknown-linux-gnu`\n3. Run `cargo zigbuild`, for example, `cargo zigbuild --target aarch64-unknown-linux-gnu`\n\n### Specify glibc version\n\n`cargo zigbuild` supports passing glibc version in `--target` option, for example,\nto compile for glibc 2.17 with the `aarch64-unknown-linux-gnu` target:\n\n```bash\ncargo zigbuild --target aarch64-unknown-linux-gnu.2.17\n```\n\n### macOS universal2 target\n\n`cargo zigbuild` supports a special `universal2-apple-darwin` target for building macOS universal2 binaries/libraries on Rust 1.64.0 and later.\n\n```bash\nrustup target add x86_64-apple-darwin\nrustup target add aarch64-apple-darwin\ncargo zigbuild --target universal2-apple-darwin\n```\n\n> **Note**\n>\n> Note that Cargo `--message-format` option doesn't work with universal2 target currently.\n\n## Caveats\n\n1. Currently only Linux, macOS and Windows gnu targets are supported,\n   other target platforms can be added if you can make it work,\n   pull requests are welcome.\n2. Only current Rust **stable** and **nightly** versions are regularly tested on CI, other versions may not work.\n\nKnown upstream zig [issues](https://github.com/ziglang/zig/labels/zig%20cc):\n\n1. [zig cc: parse `-target` and `-mcpu`/`-march`/`-mtune` flags according to clang](https://github.com/ziglang/zig/issues/4911):\n   Some Rust targets aren't recognized by `zig cc`, for example `armv7-unknown-linux-gnueabihf`, workaround by using `-mcpu=generic` and\n   explicitly passing target features in [#58](https://github.com/rust-cross/cargo-zigbuild/pull/58)\n2. [ability to link against darwin frameworks (such as CoreFoundation) when cross compiling](https://github.com/ziglang/zig/issues/1349):\n   Set the `SDKROOT` environment variable to a macOS SDK path to workaround it\n3. [zig misses some `compiler_rt` functions](https://github.com/ziglang/zig/issues/1290) that may lead to undefined symbol error for certain\n   targets. See also: [zig compiler-rt status](https://github.com/ziglang/zig/blob/master/lib/compiler_rt/README.md).\n4. [CPU features are not passed to clang](https://github.com/ziglang/zig/issues/10411)\n\n## License\n\nThis work is released under the MIT license. A copy of the license is provided\nin the [LICENSE](./LICENSE) file."
}
