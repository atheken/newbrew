{
  "name": "diskus",
  "full_name": "diskus",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Minimal, fast alternative to 'du -sh'",
  "license": "Apache-2.0 or MIT",
  "homepage": "https://github.com/sharkdp/diskus",
  "versions": {
    "stable": "0.7.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/sharkdp/diskus/archive/v0.7.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "64b1b2e397ef4de81ea20274f98ec418b0fe19b025860e33beaba5494d3b8bd1"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 1,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskus/blobs/sha256:7d90f186d664613cb2648b8d162bb8939ae4d0402686e4cb3b4af8c849c0ae0d",
          "sha256": "7d90f186d664613cb2648b8d162bb8939ae4d0402686e4cb3b4af8c849c0ae0d"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskus/blobs/sha256:74e62c4583cf8b98f123611e300f717a5105dcb6ba355ae6584acda35ecb2c89",
          "sha256": "74e62c4583cf8b98f123611e300f717a5105dcb6ba355ae6584acda35ecb2c89"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskus/blobs/sha256:b78500b9b1efc3ab29584d668d900682240ed2a7d709c99701ed688d26d9c13a",
          "sha256": "b78500b9b1efc3ab29584d668d900682240ed2a7d709c99701ed688d26d9c13a"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskus/blobs/sha256:442324b818b67e8a668166db5a59e2c7a8df7c95e02d5ce8ac2d4465d3561e61",
          "sha256": "442324b818b67e8a668166db5a59e2c7a8df7c95e02d5ce8ac2d4465d3561e61"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskus/blobs/sha256:fe8f17e650e60a533e372f4f36ac4937283f2bdedc8451232b73cf9bc86fa710",
          "sha256": "fe8f17e650e60a533e372f4f36ac4937283f2bdedc8451232b73cf9bc86fa710"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskus/blobs/sha256:b1a7d68183cbef10abb0fed70d25051eee61751ee740b7e8c33beab0b7338a0e",
          "sha256": "b1a7d68183cbef10abb0fed70d25051eee61751ee740b7e8c33beab0b7338a0e"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskus/blobs/sha256:e7c2db589c2dbe6340a297ae96dd4a92e4cd1654d4ab0f8a8bd77fd8fd87e583",
          "sha256": "e7c2db589c2dbe6340a297ae96dd4a92e4cd1654d4ab0f8a8bd77fd8fd87e583"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/diskus/blobs/sha256:b627c9ead2e29d59b924b402b92b0f8c2ca43b6c646bb6ad740e680084d160d1",
          "sha256": "b627c9ead2e29d59b924b402b92b0f8c2ca43b6c646bb6ad740e680084d160d1"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "rust"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/diskus.rb",
  "ruby_source_checksum": {
    "sha256": "568e57a93781bb0977b24eaec3da7787b54c564e39da3413b2b7b8cc50e1d403"
  },
  "date_added": "2019-02-09T10:38:24+01:00",
  "readme": "# diskus\n\n[![CICD](https://github.com/sharkdp/diskus/actions/workflows/CICD.yml/badge.svg)](https://github.com/sharkdp/diskus/actions/workflows/CICD.yml)\n\n*A minimal, fast alternative to `du -sh`.*\n\n`diskus` is a very simple program that computes the total size of the current directory. It is a\nparallelized version of `du -sh`. On my 8-core laptop, it is about ten times faster than `du` with\na cold disk cache and more than three times faster with a warm disk cache.\n\n``` bash\n> diskus\n9.59 GB (9,587,408,896 bytes)\n```\n\n## Benchmark\n\nThe following benchmarks have been performed with [hyperfine](https://github.com/sharkdp/hyperfine) on\na moderately large folder (15GB, 100k directories, 400k files). Smaller folders are not really of any\ninterest since all programs would finish in a reasonable time that would not interrupt your workflow.\n\nIn addition to `du` and `diskus`, we also add [tin-summer](https://github.com/vmchale/tin-summer) (`sn`) and\n[`dust`](https://github.com/bootandy/dust) in our comparison. Both are also written in Rust and provide\nmuch more features than `diskus` (check them out!). The optimal number of threads for `sn` (`-j` option) was\ndetermined via `hyperfine --parameter-scan`.\n\n### Cold disk cache\n\n```bash\nsudo -v\nhyperfine --prepare 'sync; echo 3 | sudo tee /proc/sys/vm/drop_caches' \\\n    'diskus' 'du -sh' 'sn p -d0 -j8' 'dust -d0'\n```\n(the `sudo`/`sync`/`drop_caches` commands are a way to\n[clear the filesystem caches between benchmarking runs](https://github.com/sharkdp/hyperfine#io-heavy-programs))\n\n| Command | Mean [s] | Min [s] | Max [s] | Relative |\n|:---|---:|---:|---:|---:|\n| `diskus` | 1.746 ± 0.017 | 1.728 | 1.770 | 1.00 |\n| `du -sh` | 17.776 ± 0.549 | 17.139 | 18.413 | 10.18 |\n| `sn p -d0 -j8` | 18.094 ± 0.566 | 17.482 | 18.579 | 10.36 |\n| `dust -d0` | 21.357 ± 0.328 | 20.974 | 21.759 | 12.23 |\n\n\n### Warm disk cache\n\nOn a warm disk cache, the differences are smaller:\n```bash\nhyperfine --warmup 5 'diskus' 'du -sh' 'sn p -d0 -j8' 'dust -d0'\n```\n\n| Command | Mean [ms] | Min [ms] | Max [ms] | Relative |\n|:---|---:|---:|---:|---:|\n| `diskus` | 500.3 ± 17.3 | 472.9 | 530.6 | 1.00 |\n| `du -sh` | 1098.3 ± 10.0 | 1087.8 | 1122.4 | 2.20 |\n| `sn p -d0 -j8` | 1122.2 ± 18.2 | 1107.3 | 1170.1 | 2.24 |\n| `dust -d0` | 3532.1 ± 26.4 | 3490.0 | 3563.1 | 7.06 |\n\n\n## Installation\n\n### On Debian-based systems\n\nYou can download the latest Debian package from the\n[release page](https://github.com/sharkdp/diskus/releases) and install it via `dpkg`:\n\n``` bash\nwget \"https://github.com/sharkdp/diskus/releases/download/v0.7.0/diskus_0.7.0_amd64.deb\"\nsudo dpkg -i diskus_0.7.0_amd64.deb\n```\n\n### On Arch-based systems\n\n``` bash\npacman -S diskus\n```\n\nOr download [diskus-bin](https://aur.archlinux.org/packages/diskus-bin/) from the AUR.\n\n### On Void-based systems\n\n``` bash\nxbps-install diskus\n```\n\n### On macOS\n\nYou can install `diskus` with [Homebrew](https://formulae.brew.sh/formula/diskus):\n```\nbrew install diskus\n```\n\nOr with [MacPorts](https://ports.macports.org/port/diskus/summary):\n```\nsudo port install diskus\n```\n\n### On Haiku\n\n``` bash\npkgman install diskus\n```\n\n### On NixOS\n\n```\nnix-env -iA nixos.diskus\n```\n\nOr add it to `environment.systemPackages` in your `configuration.nix`.\n\n### On other systems\n\nCheck out the [release page](https://github.com/sharkdp/diskus/releases) for binary builds.\n\n### Via cargo\n\nIf you have Rust 1.50 or higher, you can install `diskus` from source via `cargo`:\n```\ncargo install diskus\n```\n\n## Windows caveats\n\nWindows-internal tools such as Powershell, Explorer or `dir` are not respecting hardlinks or\njunction points when determining the size of a directory. `diskus` does the same and counts\nsuch entries multiple times (on Unix systems, multiple hardlinks to a single file are counted\njust once).\n\n## License\n\nLicensed under either of\n\n * Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)\n * MIT license ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)\n\nat your option."
}
