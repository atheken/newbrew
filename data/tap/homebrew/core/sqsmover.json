{
  "name": "sqsmover",
  "full_name": "sqsmover",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "AWS SQS Message mover",
  "license": "Apache-2.0",
  "homepage": "https://github.com/mercury2269/sqsmover",
  "versions": {
    "stable": "0.4.0",
    "head": "HEAD",
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/mercury2269/sqsmover/archive/v0.4.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "217203f626399c67649f99af52eff6d6cdd9280ec5e2631e1de057e1bd0cdd0d"
    },
    "head": {
      "url": "https://github.com/mercury2269/sqsmover.git",
      "branch": "master"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sqsmover/blobs/sha256:ed7f54467803a8b532f6980792beda2deed1943b905377386086b99b4343951a",
          "sha256": "ed7f54467803a8b532f6980792beda2deed1943b905377386086b99b4343951a"
        },
        "arm64_monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sqsmover/blobs/sha256:fa8e6b9cc7c8df5f3bd6221092a8b90337e70afb21418b1ac386cbe6c1846dea",
          "sha256": "fa8e6b9cc7c8df5f3bd6221092a8b90337e70afb21418b1ac386cbe6c1846dea"
        },
        "arm64_big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sqsmover/blobs/sha256:070d45a4448af507da69445d83084a38a8ba1d7ecad6d1d7596b2a5cba2d8b14",
          "sha256": "070d45a4448af507da69445d83084a38a8ba1d7ecad6d1d7596b2a5cba2d8b14"
        },
        "ventura": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sqsmover/blobs/sha256:8b8bde4ded805588395c80ab7ad1b9f99c722297c1c74fbede24739548216e3b",
          "sha256": "8b8bde4ded805588395c80ab7ad1b9f99c722297c1c74fbede24739548216e3b"
        },
        "monterey": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sqsmover/blobs/sha256:17d1bb2288e963f9f5e25bf91829c9ad24e72ae4630169002496255ab9514281",
          "sha256": "17d1bb2288e963f9f5e25bf91829c9ad24e72ae4630169002496255ab9514281"
        },
        "big_sur": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sqsmover/blobs/sha256:e92a20b5b57e04747e869551f42d86bba14acb26c0ef88acf1a73f12429f43c3",
          "sha256": "e92a20b5b57e04747e869551f42d86bba14acb26c0ef88acf1a73f12429f43c3"
        },
        "catalina": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sqsmover/blobs/sha256:964183c1530b7ec057849d57a9c63b188c2b5aab4f1bf3fe0db6073d4063c086",
          "sha256": "964183c1530b7ec057849d57a9c63b188c2b5aab4f1bf3fe0db6073d4063c086"
        },
        "mojave": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sqsmover/blobs/sha256:0874e450ddbdfa8b1a4d364ed7467a50d7f79d90ae33e0a147c3f291b055d20e",
          "sha256": "0874e450ddbdfa8b1a4d364ed7467a50d7f79d90ae33e0a147c3f291b055d20e"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/sqsmover/blobs/sha256:3d101d0f696e787fae56b2bf5ae24f85a64411b332fabc938fdd399377436b9e",
          "sha256": "3d101d0f696e787fae56b2bf5ae24f85a64411b332fabc938fdd399377436b9e"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "go"
  ],
  "dependencies": [],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/sqsmover.rb",
  "ruby_source_checksum": {
    "sha256": "d6d50af1dee66b10ba2589fcb3a7c9c7f0ebe23e9ceb3d096ffb5807bda4ca31"
  },
  "date_added": "2021-07-04T03:36:28+00:00",
  "readme": "# SQS Message Mover\n[![Go Report Card](https://goreportcard.com/badge/github.com/mercury2269/sqsmover)](https://goreportcard.com/report/github.com/mercury2269/sqsmover) ![GitHub](https://img.shields.io/github/license/mercury2269/sqsmover)\n\n`sqsmover` is a tool for moving AWS SQS messages from one queue to another. Useful when you need to move deadletter queue messages back into the original queue.\n\n![sqs-mover-intro](https://user-images.githubusercontent.com/159128/75104229-721d7580-55bb-11ea-9b06-437353a174c0.gif)\n\n\n## Features\n\n* Reliable delivery. SQS Mover will only delete messages from the source queue after they were enqueued to the destination.\n* Receives and sends messages in batches for faster processing.\n* Progress indicator.\n* User friendly info and error messages.\n* Queue name resolution. For ease of use, you only need to provide a queue name and not the full `arn` address.\n* Message attributes copy.\n* Support for FIFO queues. MessageGroupId and MessageDeduplicationId are copied over to the destination messages.\n* An optional flag to limit the number of messages to move.\n\n## Installing\n\nSQS Mover is pre-compiled for macOS, Linux, Windows and does not require additional dependencies. You can install\nthe pre-compiled binary (in several different ways) or compile from source.\n\n**Homebrew**:\n```sh\n$ brew install sqsmover\n```\n\n**Chocolatey (Windows)**\n```sh\n$ choco install sqsmover\n```\n\n**Shell script:**\n\nThe following script will install the binary into `/usr/local/bin`\n\n```sh\n$ curl https://raw.githubusercontent.com/mercury2269/sqsmover/master/install.sh | sh\n```\n\nNote that you may need to run the `sudo` version below, or alternatively chown `/usr/local/bin`:\n```sh\n$ curl https://raw.githubusercontent.com/mercury2269/sqsmover/master/install.sh | sudo sh\n```\n\n**From Source**\n\nDownload:\n```sh\ngit clone git@github.com:mercury2269/sqsmover.git && cd sqsmover\n```\n\nRun:\n```sh\nAWS_PROFILE=nbos-ris AWS_REGION=us-west-2 go run main.go --source transactions-dlq --destination transactions\n```\n\n**Manually**:\n\nDownload the pre-compiled binary from the [releases page](https://github.com/mercury2269/sqsmover/releases) and\ncopy to the desired location.\n\n## Set up AWS credentials \n\nSpecifying AWS credentials in either a shared credentials file or environment variables. \n\n### Option 1: Creating the Credentials File\n\nIf you donâ€™t have a shared credentials file (`~/.aws/credentials`), you can use any text editor to create one in your home directory. Add the following content to your credentials file, replacing `<YOUR_ACCESS_KEY_ID>` and `<YOUR_SECRET_ACCESS_KEY>` with your credentials.\n\n```\n[default]\naws_access_key_id = <YOUR_ACCESS_KEY_ID>\naws_secret_access_key = <YOUR_SECRET_ACCESS_KEY>\n```\n\nThe [default] heading defines credentials for the default profile, which the SQSMover will use unless you configure it to use another profile. \n\nOptionally you can configure default region in `~/.aws/config`\n```\n[default]\nregion=us-west-2\n```\n\n### Option 2: Environment variables\n\nAs an alternative, you can setup AWS credentials in the environment variables.\n\nThe following examples show how to configure the environment variables.\n\nLinux, OS X, or Unix\n\n```\nexport AWS_ACCESS_KEY_ID=YOUR_AKID\nexport AWS_SECRET_ACCESS_KEY=YOUR_SECRET_KEY\n```\nWindows\n\n```\nset AWS_ACCESS_KEY_ID=YOUR_AKID\nset AWS_SECRET_ACCESS_KEY=YOUR_SECRET_KEY\n```\n\n## Usage\n\n```bash\nsqsmover --help\n\nusage: sqsmover --source=SOURCE --destination=DESTINATION [<flags>]\n\nFlags:\n  -h, --help                     Show context-sensitive help (also try\n                                 --help-long and --help-man).\n  -s, --source=SOURCE            The source queue name to move messages from.\n  -d, --destination=DESTINATION  The destination queue name to move messages to.\n  -r, --region=\"us-west-2\"       The AWS region for source and destination queues.\n  -e, --endpoint=\"https://...\"   Use a specific endpoint in an AWS region. For more information see https://docs.aws.amazon.com/general/latest/gr/sqs-service.html\n  -p, --profile=\"\"               Use a specific profile from AWS credentials file.\n  -l, --limit=0                  Limits total number of messages moved. No limit is set by default.\n  -b, --batch=10                 The maximum number of messages to move at a time.\n  -v, --version                  Show application version.\n```\n\nExamples:\n\nRegion will default to `us-west-2`, you can also override it with `--region` flag\n\n```\nsqsmover --source=my_source_queue_name --destination=my_destination_queuename\nsqsmover --source=my_source_queue_name --destination=my_destination_queuename --region=eu-west-1\n\n-- shorthand\nsqsmover -s my_source_queue_name -d my_destination_queuename -r eu-west-1\n```\n\nProfile will default to `Default`, you can also override it with `--profile` flag\n\n```\nsqsmover --source=my_source_queue_name --destination=my_destination_queuename --profile=user\n```\n\nLimit number of moved messages to 10\n```\nsqsmover -s my_source_queue_name -d my_destination_queuename -l 10\n```\n\nBy default, `sqsmover` will try to move 10 messages at a time. However, if the total size of messages\nin a batch exceeds 256kb (262,144 bytes) you will receive an error: `Batch requests cannot be longer than 262144 bytes. You have sent x bytes.`\nTo resolve, reduce the batch size by setting `-b` flag.\n```\nsqsmover -s my_source_queue_name -d my_destination_queuename -b 3\n```\n\n## Compiling from source\n\nYou will need to have [Golang installed](https://golang.org/doc/install).\n\n```sh\n# clone it outside GOPATH\ngit clone https://github.com/mercury2269/sqsmover\ncd sqsmover\n\n# get dependencies using go modules (needs go 1.11+)\ngo get ./...\n\n# build\ngo build -o sqsmover .\n\n# check it works\n./sqsmover --version\n```"
}
