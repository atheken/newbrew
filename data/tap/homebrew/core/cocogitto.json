{
  "name": "cocogitto",
  "full_name": "cocogitto",
  "tap": "homebrew/core",
  "oldname": null,
  "oldnames": [],
  "aliases": [],
  "versioned_formulae": [],
  "desc": "Conventional Commits toolbox",
  "license": "MIT",
  "homepage": "https://github.com/cocogitto/cocogitto",
  "versions": {
    "stable": "5.4.0",
    "head": null,
    "bottle": true
  },
  "urls": {
    "stable": {
      "url": "https://github.com/cocogitto/cocogitto/archive/refs/tags/5.4.0.tar.gz",
      "tag": null,
      "revision": null,
      "checksum": "93065217191d3e1739e6bca78b0b6de7d7dd1b5334229702fff9e84162060feb"
    }
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "root_url": "https://ghcr.io/v2/homebrew/core",
      "files": {
        "arm64_ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/cocogitto/blobs/sha256:d0f4ff56482a662d285b666d9030c20488466fdf27383ef8a46285c2a0b460e3",
          "sha256": "d0f4ff56482a662d285b666d9030c20488466fdf27383ef8a46285c2a0b460e3"
        },
        "arm64_monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/cocogitto/blobs/sha256:ce1322bd55e47a79ce7d44f788c4d30f7998a3da705736ed8e0a3053023663fe",
          "sha256": "ce1322bd55e47a79ce7d44f788c4d30f7998a3da705736ed8e0a3053023663fe"
        },
        "arm64_big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/cocogitto/blobs/sha256:3dc3218633779197ee83d3a5b5533b8f4865eef5c9ab2d664d26dfb7b4165171",
          "sha256": "3dc3218633779197ee83d3a5b5533b8f4865eef5c9ab2d664d26dfb7b4165171"
        },
        "ventura": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/cocogitto/blobs/sha256:dc004e3f1d7b8ac3c4483ac4ae265c357943383185af674b34879a33c4a4131f",
          "sha256": "dc004e3f1d7b8ac3c4483ac4ae265c357943383185af674b34879a33c4a4131f"
        },
        "monterey": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/cocogitto/blobs/sha256:6c63e7ef30899de9a20e12957ba90dcb32ac485a5711f4e4efb8ce3b6733d934",
          "sha256": "6c63e7ef30899de9a20e12957ba90dcb32ac485a5711f4e4efb8ce3b6733d934"
        },
        "big_sur": {
          "cellar": ":any",
          "url": "https://ghcr.io/v2/homebrew/core/cocogitto/blobs/sha256:a7aadf2c28eac11ba755aedf12df88c0364d865f0edbbfe7743cb8bcf3e4a615",
          "sha256": "a7aadf2c28eac11ba755aedf12df88c0364d865f0edbbfe7743cb8bcf3e4a615"
        },
        "x86_64_linux": {
          "cellar": ":any_skip_relocation",
          "url": "https://ghcr.io/v2/homebrew/core/cocogitto/blobs/sha256:a5d09607c9674b3f3c8d80edf83eb4bbc2e315278e36f0fd9ddbcc044f7abd55",
          "sha256": "a5d09607c9674b3f3c8d80edf83eb4bbc2e315278e36f0fd9ddbcc044f7abd55"
        }
      }
    }
  },
  "keg_only": false,
  "keg_only_reason": null,
  "options": [],
  "build_dependencies": [
    "pkg-config",
    "rust"
  ],
  "dependencies": [
    "libgit2@1.5"
  ],
  "test_dependencies": [],
  "recommended_dependencies": [],
  "optional_dependencies": [],
  "uses_from_macos": [],
  "uses_from_macos_bounds": [],
  "requirements": [],
  "conflicts_with": [],
  "conflicts_with_reasons": [],
  "link_overwrite": [],
  "caveats": null,
  "installed": [],
  "linked_keg": null,
  "pinned": false,
  "outdated": false,
  "deprecated": false,
  "deprecation_date": null,
  "deprecation_reason": null,
  "disabled": false,
  "disable_date": null,
  "disable_reason": null,
  "post_install_defined": false,
  "service": null,
  "tap_git_head": "4eeae4ea50839e967536ba646d5e0ed6fbcbad7f",
  "ruby_source_path": "Formula/cocogitto.rb",
  "ruby_source_checksum": {
    "sha256": "37d72cd196ff9dfd0ff3570a447e742c59faf0aaee6f297fd3c84e6bd4ae3db3"
  },
  "date_added": "2022-12-08T04:35:36+00:00",
  "readme": "<p align=\"center\">\n  <img\n    width=\"250\"\n    src=\"./docs/logo/COCOGITTO_LP_LOGO_TEXT_72dpi.png\"\n    alt=\"Cocogitto – The conventional commits tool box\"\n  />\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/cocogitto/cocogitto/actions\"\n    ><img\n      src=\"https://github.com/cocogitto/cocogitto/workflows/CI/badge.svg\"\n      alt=\"GitHub Actions workflow status\"\n  /></a>\n  <a href=\"https://codecov.io/gh/cocogitto/cocogitto\"\n    ><img\n      src=\"https://codecov.io/gh/cocogitto/cocogitto/branch/main/graph/badge.svg\"\n      alt=\"Code coverage status\"\n  /></a>\n  <br />\n  <a href=\"https://conventionalcommits.org\"\n    ><img\n      src=\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg\"\n      alt=\"Conventional commits\"\n  /></a>\n  <a href=\"https://github.com/cocogitto/cocogitto/blob/main/LICENSE\"\n    ><img\n      src=\"https://img.shields.io/github/license/cocogitto/cocogitto\"\n      alt=\"Repository license\"\n  /></a>\n  <a href=\"https://discord.gg/951009223121195021\">\n    <img alt=\"Discord logo\" src=\"https://img.shields.io/discord/951009223121195021?color=blue&logo=discord\">\n  </a>\n\n</p>\n\n<p align=\"center\">\n  <a href=\"https://docs.cocogitto.io\">Website</a>\n  ·\n  <a href=\"#installation\">Installation</a>\n  ·\n  <a href=\"https://docs.cocogitto.io/config\">Configuration</a>\n</p>\n\n<h1></h1>\n\n**The Conventional Commits toolbox**\n\n- **Verified commits:** create conventional compliant commits with ease.\n- **Automatic Version bump and changelog:** automatically bump versions and generate changelogs with your own custom steps\n  and workflows.\n- **Release profiles:** your branching model requires different steps for releases, pre-release, hotfixes ? We got you\n  covered !\n- **Depends only on libgit2:** cocogitto has one standalone binary, the only system dependency is libgit2.\n- **Conventional git log:** search your commit history matching Conventional Commits items such as scope and commit type.\n- **GitHub integration:** enforce the conventional commits specification with our GitHub action and bot.\n- **Monorepo support:** Automatic versioning for mono-repositories is supported out of the box.\n\n<p align=\"center\">\n<a href=\"https://docs.cocogitto.io/\"><strong>Explore Cocogitto's docs&nbsp;&nbsp;▶</strong></a>\n</p>\n\n## Foreword\n\n### What is it ?\n\nCocogitto is a CLI and GitOps toolbox for the [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/)\nand [Semver](https://semver.org/) specifications.\n\n### Why ?\n\nThere are plenty of tools listed on\nthe [conventional commits web site](https://www.conventionalcommits.org/en/about/)\nto help you generate changelog, git hooks, commit template etc. Some of them are specifically designed for the\nConventional Commits specification, and some of them are general purpose. \n\n**Cocogitto was designed to help you respect the\nconventional and semver standard and is not intended to be used in any other context.**\n\nIt strives to be a set of simple, modern and fast command line interfaces.\n\n### Goals\n\n- Make using the conventional commits spec easy and fun.\n- Enable people to focus on their work instead of correcting small mistakes and typos.\n- Enforce correctness regarding Semver and Conventional Commits.\n- Automate things when possible (ex: bumping versions).\n\n### Non goals\n\n- Cocogitto is not a `git` replacement. It uses some of libgit2 but only to provide features related to the\n  Conventional Commits specification. Anything else shall be done with `git`.\n- Supporting other commit conventions or git workflows.\n\n## Quick start\n\nThis readme is a quick tour of what you can do with Cocogitto, for an in-depth guide please refer\nto [the documentation](https://docs.cocogitto.io).\n\n## Installation\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/cocogitto.svg)](https://repology.org/project/cocogitto/versions)\n\n#### Archlinux\n\n```shell\npacman -S cocogitto\n```\n\n#### Cargo\n\n```shell\ncargo install --locked cocogitto\n```\n\n#### NixOs\n\n```shell\nnix-env -iA cocogitto\n```\n\n#### Void Linux\n\n```shell\nxbps-install cocogitto\n```\n\n## Conventional commits\n\n**Note: `coco` has been deprecated in favor of the `cog commit` command.**\n\nTo create conventional commits you can use the `cog commit` command.\nIt has subcommands for the default `fix` and `feat` Conventional Commits types\nplus the [angular commit](https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines)\nconventional commit types.\n\n**Example:**\n\n```shell\n# With cog\ncog commit feat \"add awesome feature\"\n\n# With git\ngit commit -m \"feat: add awesome feature\"\n```\n\nSee [User guide -> Conventional commits](https://docs.cocogitto.io/guide/#conventional-commits).\n\n## Auto-bumps\n\nCreating a version with `cog bump` will perform the following actions :\n\n1. Determine a version number according to your commit history.\n2. Perform configuration defined pre-bump commands.\n3. Append the version's changelog to your repository changelog file.\n4. Create a version commit and tag it.\n5. Perform post-bump commands\n\n**Example:**\n\n```shell\n# File: cog.toml\npre_bump_hooks = [\n    \"echo {{version}}\",\n]\n\n\npost_bump_hooks = [\n    \"git push\",\n    \"git push origin {{version}}\",\n]\n\n[changelog]\npath = \"CHANGELOG.md\"\ntemplate = \"remote\"\nremote = \"github.com\"\nrepository = \"cocogitto_bot_playground\"\nowner = \"cocogitto\"\nauthors = [\n  { username = \"oknozor\", signature = \"Paul Delafosse\"}\n]\n```\n\n![cog bump example](./docs/assets/cog-bump-example.png)\n\n## Changelogs\n\n`cog changelog` uses [tera](https://tera.netlify.app/) templates to generate markdown changelogs. It has several built-in\ntemplates, and you can define your own.\n\n**Example:**\n\n```shell\ncog changelog\n```\n\nOutput :\n\n```markdown\n## 1.2.0 - 2021-11-26\n\n#### Bug Fixes\n\n- **(parser)** handle lowercase identifier - (7521015) - *oknozor*\n- handle unknown flag - (e2388dc) - oknozor\n\n#### Features\n\n- **(parser)** simple parser implementation - (0b25eb6) - *oknozor*\n- add a new cli flag - (ff84173) - oknozor\n\n#### Miscellaneous Chores\n\n- **(version)** 1.2.0 - (15d1333) - *oknozor*\n\n#### Refactoring\n\n- **(parser)** use a parser interface instead of concrete impl - (ea24c36) - *oknozor*\n\n#### Tests\n\n- add integration test - (bae629c) - *oknozor*\n```\n\nSee [User guide -> Changelogs](https://docs.cocogitto.io/guide/#changelogs).\n\n## GitHub integration\n\n**GitHub action:**\n\nYou can run cog check and perform automatic releases via GitHub action\nusing [cocogitto-action](https://github.com/cocogitto/cocogitto-action).\n\n**Example:**\n```yaml\n  - name: Semver release\n    uses: cocogitto/cocogitto-action@main\n    with:\n      release: true\n      git-user: 'Cog Bot'\n      git-user-email: 'mycoolproject@org.org'\n```\n\nSee [Github integration -> GitHub action](https://docs.cocogitto.io/ci_cd/#github-action)\n\n**GitHub bot:**\n\n[cocogitto-bot](https://github.com/cocogitto/cocogitto-bot) is a standalone, zero-config bot checking your pull requests\nagainst the Conventional Commits specification.\n\n![cog bot example](./docs/assets/cog-bot-example.png)\n\nSee [Github integration -> GitHub-bot](https://docs.cocogitto.io/ci_cd/#github-bot)\n\n## Similar projects \n\n- [git-cliff](https://github.com/orhun/git-cliff)\n- [convco](https://github.com/convco/convco)\n- [koji](https://github.com/its-danny/koji)\n- [semantic-release](https://semantic-release.gitbook.io)\n- [commitlint](https://github.com/conventional-changelog/commitlint)\n- [cargo-smart-release](https://github.com/byron/gitoxide/tree/a1c68da4b0fa080a383cbbfa50fd54e8bb45330c/cargo-smart-release)\n\n## Contributing\n\nFound a bug, have a suggestion for a new feature? Please read the [contribution guideline](CONTRIBUTING.md) and [submit an issue](https://github.com/cocogitto/cocogitto/issues/new/choose).\n\n## Licence\n\nAll the code in this repository is released under the MIT License, for more information take a look at\nthe [LICENSE](LICENSE) file."
}
